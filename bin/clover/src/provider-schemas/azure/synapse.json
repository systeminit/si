{
  "swagger": "2.0",
  "info": {
    "title": "Azure synapse",
    "version": "2021-06-01",
    "description": "Azure synapse service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/azureADOnlyAuthentications/{azureADOnlyAuthenticationName}": {
      "get": {
        "operationId": "AzureADOnlyAuthentications_Get",
        "summary": "Get Azure Active Directory only authentication property",
        "description": "Gets a Azure Active Directory only authentication property",
        "tags": [
          "WorkspaceAzureADOnlyAuthentications"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "azureADOnlyAuthenticationName",
            "description": "name of the property",
            "required": true,
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "AzureADOnlyAuthenticationName",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "Azure Active Directory Only Authentication Info",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "azureADOnlyAuthentication resource properties",
                  "x-ms-client-flatten": true,
                  "required": [
                    "azureADOnlyAuthentication"
                  ],
                  "type": "object",
                  "properties": {
                    "azureADOnlyAuthentication": {
                      "description": "Azure Active Directory only Authentication enabled.",
                      "type": "boolean"
                    },
                    "state": {
                      "description": "property configuration state",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Consistent",
                        "InConsistent",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "state value",
                        "modelAsString": true
                      }
                    },
                    "creationDate": {
                      "description": "property configuration date",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "AzureADOnlyAuthentications_Create",
        "summary": "Create or Update Azure Active Directory only authentication property",
        "description": "Create or Update a Azure Active Directory only authentication property for the workspaces",
        "tags": [
          "WorkspaceAzureADOnlyAuthentications"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "azureADOnlyAuthenticationName",
            "description": "name of the property",
            "required": true,
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "AzureADOnlyAuthenticationName",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          {
            "schema": {
              "description": "Azure Active Directory Only Authentication Info",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "azureADOnlyAuthentication resource properties",
                  "x-ms-client-flatten": true,
                  "required": [
                    "azureADOnlyAuthentication"
                  ],
                  "type": "object",
                  "properties": {
                    "azureADOnlyAuthentication": {
                      "description": "Azure Active Directory only Authentication enabled.",
                      "type": "boolean"
                    },
                    "state": {
                      "description": "property configuration state",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Consistent",
                        "InConsistent",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "state value",
                        "modelAsString": true
                      }
                    },
                    "creationDate": {
                      "description": "property configuration date",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "AzureADOnlyAuthenticationInfo",
            "description": "Azure Active Directory Property",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "Azure Active Directory Only Authentication Info",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "azureADOnlyAuthentication resource properties",
                  "x-ms-client-flatten": true,
                  "required": [
                    "azureADOnlyAuthentication"
                  ],
                  "type": "object",
                  "properties": {
                    "azureADOnlyAuthentication": {
                      "description": "Azure Active Directory only Authentication enabled.",
                      "type": "boolean"
                    },
                    "state": {
                      "description": "property configuration state",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Consistent",
                        "InConsistent",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "state value",
                        "modelAsString": true
                      }
                    },
                    "creationDate": {
                      "description": "property configuration date",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "schema": {
              "description": "Azure Active Directory Only Authentication Info",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "azureADOnlyAuthentication resource properties",
                  "x-ms-client-flatten": true,
                  "required": [
                    "azureADOnlyAuthentication"
                  ],
                  "type": "object",
                  "properties": {
                    "azureADOnlyAuthentication": {
                      "description": "Azure Active Directory only Authentication enabled.",
                      "type": "boolean"
                    },
                    "state": {
                      "description": "property configuration state",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Consistent",
                        "InConsistent",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "state value",
                        "modelAsString": true
                      }
                    },
                    "creationDate": {
                      "description": "property configuration date",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/azureADOnlyAuthentications": {
      "get": {
        "operationId": "AzureADOnlyAuthentications_List",
        "summary": "Gets a list of Azure Active Directory only authentication property",
        "description": "Gets a list of Azure Active Directory only authentication property for a workspace",
        "tags": [
          "WorkspaceAzureADOnlyAuthentications"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A list of active directory only authentications.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "Azure Active Directory Only Authentication Info",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "azureADOnlyAuthentication resource properties",
                        "x-ms-client-flatten": true,
                        "required": [
                          "azureADOnlyAuthentication"
                        ],
                        "type": "object",
                        "properties": {
                          "azureADOnlyAuthentication": {
                            "description": "Azure Active Directory only Authentication enabled.",
                            "type": "boolean"
                          },
                          "state": {
                            "description": "property configuration state",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Consistent",
                              "InConsistent",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "state value",
                              "modelAsString": true
                            }
                          },
                          "creationDate": {
                            "description": "property configuration date",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "description": "OK"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools/{bigDataPoolName}": {
      "get": {
        "operationId": "BigDataPools_Get",
        "summary": "Get Big Data pool",
        "description": "Get a Big Data pool.",
        "tags": [
          "BigDataPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "bigDataPoolName",
            "description": "Big Data pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "description": "A Big Data pool",
              "title": "Big Data pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Big Data pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "Spark pool properties",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "The state of the Big Data pool."
                    },
                    "autoScale": {
                      "description": "Auto-scaling properties",
                      "type": "object",
                      "title": "Spark pool auto-scaling properties",
                      "properties": {
                        "minNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether automatic scaling is enabled for the Big Data pool."
                        },
                        "maxNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was created.",
                      "readOnly": true
                    },
                    "autoPause": {
                      "description": "Auto-pausing properties",
                      "type": "object",
                      "title": "Spark pool auto-pausing properties",
                      "properties": {
                        "delayInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether auto-pausing is enabled for the Big Data pool."
                        }
                      }
                    },
                    "isComputeIsolationEnabled": {
                      "type": "boolean",
                      "description": "Whether compute isolation is required or not."
                    },
                    "isAutotuneEnabled": {
                      "type": "boolean",
                      "title": "Enable Autotune",
                      "description": "Whether autotune is required or not.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sessionLevelPackagesEnabled": {
                      "type": "boolean",
                      "description": "Whether session level packages enabled."
                    },
                    "cacheSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cache size"
                    },
                    "dynamicExecutorAllocation": {
                      "description": "Dynamic Executor Allocation",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                        },
                        "minExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of executors alloted"
                        },
                        "maxExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of executors alloted"
                        }
                      }
                    },
                    "sparkEventsFolder": {
                      "type": "string",
                      "description": "The Spark events folder",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the Big Data pool.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "libraryRequirements": {
                      "description": "Library version requirements",
                      "type": "object",
                      "title": "Spark pool library version requirements",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the library requirements file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The library requirements."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the library requirements file."
                        }
                      }
                    },
                    "customLibraries": {
                      "description": "List of custom libraries/packages associated with the spark pool.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Library/package information of a Big Data pool powered by Apache Spark",
                        "title": "Information about a library/package created at the workspace level.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the library."
                          },
                          "path": {
                            "type": "string",
                            "description": "Storage blob path of library."
                          },
                          "containerName": {
                            "type": "string",
                            "description": "Storage blob container name."
                          },
                          "uploadedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The last update time of the library.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the library."
                          },
                          "provisioningStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning status of the library/package."
                          },
                          "creatorId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Creator Id of the library/package."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "sparkConfigProperties": {
                      "description": "Spark configuration file to specify additional properties",
                      "type": "object",
                      "title": "Spark pool Config Properties",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the spark config properties file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The spark config properties."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the spark config properties file."
                        },
                        "configurationType": {
                          "enum": [
                            "File",
                            "Artifact"
                          ],
                          "type": "string",
                          "description": "The type of the spark config properties file.",
                          "x-ms-enum": {
                            "name": "ConfigurationType",
                            "modelAsString": true
                          },
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sparkVersion": {
                      "type": "string",
                      "description": "The Apache Spark version."
                    },
                    "defaultSparkLogFolder": {
                      "type": "string",
                      "description": "The default folder where Spark logs will be written."
                    },
                    "nodeSize": {
                      "enum": [
                        "None",
                        "Small",
                        "Medium",
                        "Large",
                        "XLarge",
                        "XXLarge",
                        "XXXLarge"
                      ],
                      "type": "string",
                      "description": "The level of compute power that each node in the Big Data pool has.",
                      "x-ms-enum": {
                        "name": "NodeSize",
                        "modelAsString": true
                      }
                    },
                    "nodeSizeFamily": {
                      "enum": [
                        "None",
                        "MemoryOptimized",
                        "HardwareAcceleratedFPGA",
                        "HardwareAcceleratedGPU"
                      ],
                      "type": "string",
                      "description": "The kind of nodes that the Big Data pool provides.",
                      "x-ms-enum": {
                        "name": "NodeSizeFamily",
                        "modelAsString": true
                      }
                    },
                    "lastSucceededTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was updated successfully.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "operationId": "BigDataPools_Update",
        "summary": "Update a Big Data pool.",
        "description": "Patch a Big Data pool.",
        "tags": [
          "BigDataPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "bigDataPoolName",
            "description": "Big Data pool name",
            "required": true
          },
          {
            "schema": {
              "type": "object",
              "description": "Properties patch for a Big Data pool",
              "title": "Patch for a Big Data pool",
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Updated tags for the Big Data pool",
                  "type": "object"
                }
              }
            },
            "in": "body",
            "name": "bigDataPoolPatchInfo",
            "description": "The updated Big Data pool properties",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "description": "A Big Data pool",
              "title": "Big Data pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Big Data pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "Spark pool properties",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "The state of the Big Data pool."
                    },
                    "autoScale": {
                      "description": "Auto-scaling properties",
                      "type": "object",
                      "title": "Spark pool auto-scaling properties",
                      "properties": {
                        "minNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether automatic scaling is enabled for the Big Data pool."
                        },
                        "maxNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was created.",
                      "readOnly": true
                    },
                    "autoPause": {
                      "description": "Auto-pausing properties",
                      "type": "object",
                      "title": "Spark pool auto-pausing properties",
                      "properties": {
                        "delayInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether auto-pausing is enabled for the Big Data pool."
                        }
                      }
                    },
                    "isComputeIsolationEnabled": {
                      "type": "boolean",
                      "description": "Whether compute isolation is required or not."
                    },
                    "isAutotuneEnabled": {
                      "type": "boolean",
                      "title": "Enable Autotune",
                      "description": "Whether autotune is required or not.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sessionLevelPackagesEnabled": {
                      "type": "boolean",
                      "description": "Whether session level packages enabled."
                    },
                    "cacheSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cache size"
                    },
                    "dynamicExecutorAllocation": {
                      "description": "Dynamic Executor Allocation",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                        },
                        "minExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of executors alloted"
                        },
                        "maxExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of executors alloted"
                        }
                      }
                    },
                    "sparkEventsFolder": {
                      "type": "string",
                      "description": "The Spark events folder",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the Big Data pool.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "libraryRequirements": {
                      "description": "Library version requirements",
                      "type": "object",
                      "title": "Spark pool library version requirements",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the library requirements file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The library requirements."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the library requirements file."
                        }
                      }
                    },
                    "customLibraries": {
                      "description": "List of custom libraries/packages associated with the spark pool.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Library/package information of a Big Data pool powered by Apache Spark",
                        "title": "Information about a library/package created at the workspace level.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the library."
                          },
                          "path": {
                            "type": "string",
                            "description": "Storage blob path of library."
                          },
                          "containerName": {
                            "type": "string",
                            "description": "Storage blob container name."
                          },
                          "uploadedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The last update time of the library.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the library."
                          },
                          "provisioningStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning status of the library/package."
                          },
                          "creatorId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Creator Id of the library/package."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "sparkConfigProperties": {
                      "description": "Spark configuration file to specify additional properties",
                      "type": "object",
                      "title": "Spark pool Config Properties",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the spark config properties file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The spark config properties."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the spark config properties file."
                        },
                        "configurationType": {
                          "enum": [
                            "File",
                            "Artifact"
                          ],
                          "type": "string",
                          "description": "The type of the spark config properties file.",
                          "x-ms-enum": {
                            "name": "ConfigurationType",
                            "modelAsString": true
                          },
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sparkVersion": {
                      "type": "string",
                      "description": "The Apache Spark version."
                    },
                    "defaultSparkLogFolder": {
                      "type": "string",
                      "description": "The default folder where Spark logs will be written."
                    },
                    "nodeSize": {
                      "enum": [
                        "None",
                        "Small",
                        "Medium",
                        "Large",
                        "XLarge",
                        "XXLarge",
                        "XXXLarge"
                      ],
                      "type": "string",
                      "description": "The level of compute power that each node in the Big Data pool has.",
                      "x-ms-enum": {
                        "name": "NodeSize",
                        "modelAsString": true
                      }
                    },
                    "nodeSizeFamily": {
                      "enum": [
                        "None",
                        "MemoryOptimized",
                        "HardwareAcceleratedFPGA",
                        "HardwareAcceleratedGPU"
                      ],
                      "type": "string",
                      "description": "The kind of nodes that the Big Data pool provides.",
                      "x-ms-enum": {
                        "name": "NodeSizeFamily",
                        "modelAsString": true
                      }
                    },
                    "lastSucceededTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was updated successfully.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "BigDataPools_CreateOrUpdate",
        "summary": "Create a Big Data pool.",
        "description": "Create a new Big Data pool.",
        "tags": [
          "BigDataPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "bigDataPoolName",
            "description": "Big Data pool name",
            "required": true
          },
          {
            "name": "force",
            "type": "boolean",
            "in": "query",
            "description": "Whether to stop any running jobs in the Big Data pool",
            "required": false,
            "default": false
          },
          {
            "schema": {
              "type": "object",
              "description": "A Big Data pool",
              "title": "Big Data pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Big Data pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "Spark pool properties",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "The state of the Big Data pool."
                    },
                    "autoScale": {
                      "description": "Auto-scaling properties",
                      "type": "object",
                      "title": "Spark pool auto-scaling properties",
                      "properties": {
                        "minNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether automatic scaling is enabled for the Big Data pool."
                        },
                        "maxNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was created.",
                      "readOnly": true
                    },
                    "autoPause": {
                      "description": "Auto-pausing properties",
                      "type": "object",
                      "title": "Spark pool auto-pausing properties",
                      "properties": {
                        "delayInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether auto-pausing is enabled for the Big Data pool."
                        }
                      }
                    },
                    "isComputeIsolationEnabled": {
                      "type": "boolean",
                      "description": "Whether compute isolation is required or not."
                    },
                    "isAutotuneEnabled": {
                      "type": "boolean",
                      "title": "Enable Autotune",
                      "description": "Whether autotune is required or not.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sessionLevelPackagesEnabled": {
                      "type": "boolean",
                      "description": "Whether session level packages enabled."
                    },
                    "cacheSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cache size"
                    },
                    "dynamicExecutorAllocation": {
                      "description": "Dynamic Executor Allocation",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                        },
                        "minExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of executors alloted"
                        },
                        "maxExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of executors alloted"
                        }
                      }
                    },
                    "sparkEventsFolder": {
                      "type": "string",
                      "description": "The Spark events folder",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the Big Data pool.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "libraryRequirements": {
                      "description": "Library version requirements",
                      "type": "object",
                      "title": "Spark pool library version requirements",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the library requirements file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The library requirements."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the library requirements file."
                        }
                      }
                    },
                    "customLibraries": {
                      "description": "List of custom libraries/packages associated with the spark pool.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Library/package information of a Big Data pool powered by Apache Spark",
                        "title": "Information about a library/package created at the workspace level.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the library."
                          },
                          "path": {
                            "type": "string",
                            "description": "Storage blob path of library."
                          },
                          "containerName": {
                            "type": "string",
                            "description": "Storage blob container name."
                          },
                          "uploadedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The last update time of the library.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the library."
                          },
                          "provisioningStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning status of the library/package."
                          },
                          "creatorId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Creator Id of the library/package."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "sparkConfigProperties": {
                      "description": "Spark configuration file to specify additional properties",
                      "type": "object",
                      "title": "Spark pool Config Properties",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the spark config properties file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The spark config properties."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the spark config properties file."
                        },
                        "configurationType": {
                          "enum": [
                            "File",
                            "Artifact"
                          ],
                          "type": "string",
                          "description": "The type of the spark config properties file.",
                          "x-ms-enum": {
                            "name": "ConfigurationType",
                            "modelAsString": true
                          },
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sparkVersion": {
                      "type": "string",
                      "description": "The Apache Spark version."
                    },
                    "defaultSparkLogFolder": {
                      "type": "string",
                      "description": "The default folder where Spark logs will be written."
                    },
                    "nodeSize": {
                      "enum": [
                        "None",
                        "Small",
                        "Medium",
                        "Large",
                        "XLarge",
                        "XXLarge",
                        "XXXLarge"
                      ],
                      "type": "string",
                      "description": "The level of compute power that each node in the Big Data pool has.",
                      "x-ms-enum": {
                        "name": "NodeSize",
                        "modelAsString": true
                      }
                    },
                    "nodeSizeFamily": {
                      "enum": [
                        "None",
                        "MemoryOptimized",
                        "HardwareAcceleratedFPGA",
                        "HardwareAcceleratedGPU"
                      ],
                      "type": "string",
                      "description": "The kind of nodes that the Big Data pool provides.",
                      "x-ms-enum": {
                        "name": "NodeSizeFamily",
                        "modelAsString": true
                      }
                    },
                    "lastSucceededTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was updated successfully.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "bigDataPoolInfo",
            "description": "The Big Data pool to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "description": "A Big Data pool",
              "title": "Big Data pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Big Data pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "Spark pool properties",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "The state of the Big Data pool."
                    },
                    "autoScale": {
                      "description": "Auto-scaling properties",
                      "type": "object",
                      "title": "Spark pool auto-scaling properties",
                      "properties": {
                        "minNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether automatic scaling is enabled for the Big Data pool."
                        },
                        "maxNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was created.",
                      "readOnly": true
                    },
                    "autoPause": {
                      "description": "Auto-pausing properties",
                      "type": "object",
                      "title": "Spark pool auto-pausing properties",
                      "properties": {
                        "delayInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether auto-pausing is enabled for the Big Data pool."
                        }
                      }
                    },
                    "isComputeIsolationEnabled": {
                      "type": "boolean",
                      "description": "Whether compute isolation is required or not."
                    },
                    "isAutotuneEnabled": {
                      "type": "boolean",
                      "title": "Enable Autotune",
                      "description": "Whether autotune is required or not.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sessionLevelPackagesEnabled": {
                      "type": "boolean",
                      "description": "Whether session level packages enabled."
                    },
                    "cacheSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cache size"
                    },
                    "dynamicExecutorAllocation": {
                      "description": "Dynamic Executor Allocation",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                        },
                        "minExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of executors alloted"
                        },
                        "maxExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of executors alloted"
                        }
                      }
                    },
                    "sparkEventsFolder": {
                      "type": "string",
                      "description": "The Spark events folder",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the Big Data pool.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "libraryRequirements": {
                      "description": "Library version requirements",
                      "type": "object",
                      "title": "Spark pool library version requirements",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the library requirements file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The library requirements."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the library requirements file."
                        }
                      }
                    },
                    "customLibraries": {
                      "description": "List of custom libraries/packages associated with the spark pool.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Library/package information of a Big Data pool powered by Apache Spark",
                        "title": "Information about a library/package created at the workspace level.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the library."
                          },
                          "path": {
                            "type": "string",
                            "description": "Storage blob path of library."
                          },
                          "containerName": {
                            "type": "string",
                            "description": "Storage blob container name."
                          },
                          "uploadedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The last update time of the library.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the library."
                          },
                          "provisioningStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning status of the library/package."
                          },
                          "creatorId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Creator Id of the library/package."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "sparkConfigProperties": {
                      "description": "Spark configuration file to specify additional properties",
                      "type": "object",
                      "title": "Spark pool Config Properties",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the spark config properties file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The spark config properties."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the spark config properties file."
                        },
                        "configurationType": {
                          "enum": [
                            "File",
                            "Artifact"
                          ],
                          "type": "string",
                          "description": "The type of the spark config properties file.",
                          "x-ms-enum": {
                            "name": "ConfigurationType",
                            "modelAsString": true
                          },
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sparkVersion": {
                      "type": "string",
                      "description": "The Apache Spark version."
                    },
                    "defaultSparkLogFolder": {
                      "type": "string",
                      "description": "The default folder where Spark logs will be written."
                    },
                    "nodeSize": {
                      "enum": [
                        "None",
                        "Small",
                        "Medium",
                        "Large",
                        "XLarge",
                        "XXLarge",
                        "XXXLarge"
                      ],
                      "type": "string",
                      "description": "The level of compute power that each node in the Big Data pool has.",
                      "x-ms-enum": {
                        "name": "NodeSize",
                        "modelAsString": true
                      }
                    },
                    "nodeSizeFamily": {
                      "enum": [
                        "None",
                        "MemoryOptimized",
                        "HardwareAcceleratedFPGA",
                        "HardwareAcceleratedGPU"
                      ],
                      "type": "string",
                      "description": "The kind of nodes that the Big Data pool provides.",
                      "x-ms-enum": {
                        "name": "NodeSizeFamily",
                        "modelAsString": true
                      }
                    },
                    "lastSucceededTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was updated successfully.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "schema": {
              "type": "object",
              "description": "A Big Data pool",
              "title": "Big Data pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Big Data pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "Spark pool properties",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "The state of the Big Data pool."
                    },
                    "autoScale": {
                      "description": "Auto-scaling properties",
                      "type": "object",
                      "title": "Spark pool auto-scaling properties",
                      "properties": {
                        "minNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether automatic scaling is enabled for the Big Data pool."
                        },
                        "maxNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was created.",
                      "readOnly": true
                    },
                    "autoPause": {
                      "description": "Auto-pausing properties",
                      "type": "object",
                      "title": "Spark pool auto-pausing properties",
                      "properties": {
                        "delayInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether auto-pausing is enabled for the Big Data pool."
                        }
                      }
                    },
                    "isComputeIsolationEnabled": {
                      "type": "boolean",
                      "description": "Whether compute isolation is required or not."
                    },
                    "isAutotuneEnabled": {
                      "type": "boolean",
                      "title": "Enable Autotune",
                      "description": "Whether autotune is required or not.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sessionLevelPackagesEnabled": {
                      "type": "boolean",
                      "description": "Whether session level packages enabled."
                    },
                    "cacheSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cache size"
                    },
                    "dynamicExecutorAllocation": {
                      "description": "Dynamic Executor Allocation",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                        },
                        "minExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of executors alloted"
                        },
                        "maxExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of executors alloted"
                        }
                      }
                    },
                    "sparkEventsFolder": {
                      "type": "string",
                      "description": "The Spark events folder",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the Big Data pool.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "libraryRequirements": {
                      "description": "Library version requirements",
                      "type": "object",
                      "title": "Spark pool library version requirements",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the library requirements file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The library requirements."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the library requirements file."
                        }
                      }
                    },
                    "customLibraries": {
                      "description": "List of custom libraries/packages associated with the spark pool.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Library/package information of a Big Data pool powered by Apache Spark",
                        "title": "Information about a library/package created at the workspace level.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the library."
                          },
                          "path": {
                            "type": "string",
                            "description": "Storage blob path of library."
                          },
                          "containerName": {
                            "type": "string",
                            "description": "Storage blob container name."
                          },
                          "uploadedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The last update time of the library.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the library."
                          },
                          "provisioningStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning status of the library/package."
                          },
                          "creatorId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Creator Id of the library/package."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "sparkConfigProperties": {
                      "description": "Spark configuration file to specify additional properties",
                      "type": "object",
                      "title": "Spark pool Config Properties",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the spark config properties file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The spark config properties."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the spark config properties file."
                        },
                        "configurationType": {
                          "enum": [
                            "File",
                            "Artifact"
                          ],
                          "type": "string",
                          "description": "The type of the spark config properties file.",
                          "x-ms-enum": {
                            "name": "ConfigurationType",
                            "modelAsString": true
                          },
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sparkVersion": {
                      "type": "string",
                      "description": "The Apache Spark version."
                    },
                    "defaultSparkLogFolder": {
                      "type": "string",
                      "description": "The default folder where Spark logs will be written."
                    },
                    "nodeSize": {
                      "enum": [
                        "None",
                        "Small",
                        "Medium",
                        "Large",
                        "XLarge",
                        "XXLarge",
                        "XXXLarge"
                      ],
                      "type": "string",
                      "description": "The level of compute power that each node in the Big Data pool has.",
                      "x-ms-enum": {
                        "name": "NodeSize",
                        "modelAsString": true
                      }
                    },
                    "nodeSizeFamily": {
                      "enum": [
                        "None",
                        "MemoryOptimized",
                        "HardwareAcceleratedFPGA",
                        "HardwareAcceleratedGPU"
                      ],
                      "type": "string",
                      "description": "The kind of nodes that the Big Data pool provides.",
                      "x-ms-enum": {
                        "name": "NodeSizeFamily",
                        "modelAsString": true
                      }
                    },
                    "lastSucceededTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was updated successfully.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "BigDataPools_Delete",
        "summary": "Delete a Big Data pool.",
        "description": "Delete a Big Data pool from the workspace.",
        "tags": [
          "BigDataPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "bigDataPoolName",
            "description": "Big Data pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "description": "A Big Data pool",
              "title": "Big Data pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Big Data pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "Spark pool properties",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "The state of the Big Data pool."
                    },
                    "autoScale": {
                      "description": "Auto-scaling properties",
                      "type": "object",
                      "title": "Spark pool auto-scaling properties",
                      "properties": {
                        "minNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether automatic scaling is enabled for the Big Data pool."
                        },
                        "maxNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was created.",
                      "readOnly": true
                    },
                    "autoPause": {
                      "description": "Auto-pausing properties",
                      "type": "object",
                      "title": "Spark pool auto-pausing properties",
                      "properties": {
                        "delayInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether auto-pausing is enabled for the Big Data pool."
                        }
                      }
                    },
                    "isComputeIsolationEnabled": {
                      "type": "boolean",
                      "description": "Whether compute isolation is required or not."
                    },
                    "isAutotuneEnabled": {
                      "type": "boolean",
                      "title": "Enable Autotune",
                      "description": "Whether autotune is required or not.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sessionLevelPackagesEnabled": {
                      "type": "boolean",
                      "description": "Whether session level packages enabled."
                    },
                    "cacheSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cache size"
                    },
                    "dynamicExecutorAllocation": {
                      "description": "Dynamic Executor Allocation",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                        },
                        "minExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of executors alloted"
                        },
                        "maxExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of executors alloted"
                        }
                      }
                    },
                    "sparkEventsFolder": {
                      "type": "string",
                      "description": "The Spark events folder",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the Big Data pool.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "libraryRequirements": {
                      "description": "Library version requirements",
                      "type": "object",
                      "title": "Spark pool library version requirements",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the library requirements file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The library requirements."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the library requirements file."
                        }
                      }
                    },
                    "customLibraries": {
                      "description": "List of custom libraries/packages associated with the spark pool.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Library/package information of a Big Data pool powered by Apache Spark",
                        "title": "Information about a library/package created at the workspace level.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the library."
                          },
                          "path": {
                            "type": "string",
                            "description": "Storage blob path of library."
                          },
                          "containerName": {
                            "type": "string",
                            "description": "Storage blob container name."
                          },
                          "uploadedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The last update time of the library.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the library."
                          },
                          "provisioningStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning status of the library/package."
                          },
                          "creatorId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Creator Id of the library/package."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "sparkConfigProperties": {
                      "description": "Spark configuration file to specify additional properties",
                      "type": "object",
                      "title": "Spark pool Config Properties",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the spark config properties file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The spark config properties."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the spark config properties file."
                        },
                        "configurationType": {
                          "enum": [
                            "File",
                            "Artifact"
                          ],
                          "type": "string",
                          "description": "The type of the spark config properties file.",
                          "x-ms-enum": {
                            "name": "ConfigurationType",
                            "modelAsString": true
                          },
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sparkVersion": {
                      "type": "string",
                      "description": "The Apache Spark version."
                    },
                    "defaultSparkLogFolder": {
                      "type": "string",
                      "description": "The default folder where Spark logs will be written."
                    },
                    "nodeSize": {
                      "enum": [
                        "None",
                        "Small",
                        "Medium",
                        "Large",
                        "XLarge",
                        "XXLarge",
                        "XXXLarge"
                      ],
                      "type": "string",
                      "description": "The level of compute power that each node in the Big Data pool has.",
                      "x-ms-enum": {
                        "name": "NodeSize",
                        "modelAsString": true
                      }
                    },
                    "nodeSizeFamily": {
                      "enum": [
                        "None",
                        "MemoryOptimized",
                        "HardwareAcceleratedFPGA",
                        "HardwareAcceleratedGPU"
                      ],
                      "type": "string",
                      "description": "The kind of nodes that the Big Data pool provides.",
                      "x-ms-enum": {
                        "name": "NodeSizeFamily",
                        "modelAsString": true
                      }
                    },
                    "lastSucceededTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was updated successfully.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "schema": {
              "type": "object",
              "description": "A Big Data pool",
              "title": "Big Data pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Big Data pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "Spark pool properties",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "The state of the Big Data pool."
                    },
                    "autoScale": {
                      "description": "Auto-scaling properties",
                      "type": "object",
                      "title": "Spark pool auto-scaling properties",
                      "properties": {
                        "minNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether automatic scaling is enabled for the Big Data pool."
                        },
                        "maxNodeCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of nodes the Big Data pool can support.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was created.",
                      "readOnly": true
                    },
                    "autoPause": {
                      "description": "Auto-pausing properties",
                      "type": "object",
                      "title": "Spark pool auto-pausing properties",
                      "properties": {
                        "delayInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether auto-pausing is enabled for the Big Data pool."
                        }
                      }
                    },
                    "isComputeIsolationEnabled": {
                      "type": "boolean",
                      "description": "Whether compute isolation is required or not."
                    },
                    "isAutotuneEnabled": {
                      "type": "boolean",
                      "title": "Enable Autotune",
                      "description": "Whether autotune is required or not.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sessionLevelPackagesEnabled": {
                      "type": "boolean",
                      "description": "Whether session level packages enabled."
                    },
                    "cacheSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cache size"
                    },
                    "dynamicExecutorAllocation": {
                      "description": "Dynamic Executor Allocation",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                        },
                        "minExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of executors alloted"
                        },
                        "maxExecutors": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of executors alloted"
                        }
                      }
                    },
                    "sparkEventsFolder": {
                      "type": "string",
                      "description": "The Spark events folder",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the Big Data pool.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "libraryRequirements": {
                      "description": "Library version requirements",
                      "type": "object",
                      "title": "Spark pool library version requirements",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the library requirements file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The library requirements."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the library requirements file."
                        }
                      }
                    },
                    "customLibraries": {
                      "description": "List of custom libraries/packages associated with the spark pool.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Library/package information of a Big Data pool powered by Apache Spark",
                        "title": "Information about a library/package created at the workspace level.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the library."
                          },
                          "path": {
                            "type": "string",
                            "description": "Storage blob path of library."
                          },
                          "containerName": {
                            "type": "string",
                            "description": "Storage blob container name."
                          },
                          "uploadedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The last update time of the library.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the library."
                          },
                          "provisioningStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning status of the library/package."
                          },
                          "creatorId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Creator Id of the library/package."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "sparkConfigProperties": {
                      "description": "Spark configuration file to specify additional properties",
                      "type": "object",
                      "title": "Spark pool Config Properties",
                      "properties": {
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The last update time of the spark config properties file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The spark config properties."
                        },
                        "filename": {
                          "type": "string",
                          "description": "The filename of the spark config properties file."
                        },
                        "configurationType": {
                          "enum": [
                            "File",
                            "Artifact"
                          ],
                          "type": "string",
                          "description": "The type of the spark config properties file.",
                          "x-ms-enum": {
                            "name": "ConfigurationType",
                            "modelAsString": true
                          },
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sparkVersion": {
                      "type": "string",
                      "description": "The Apache Spark version."
                    },
                    "defaultSparkLogFolder": {
                      "type": "string",
                      "description": "The default folder where Spark logs will be written."
                    },
                    "nodeSize": {
                      "enum": [
                        "None",
                        "Small",
                        "Medium",
                        "Large",
                        "XLarge",
                        "XXLarge",
                        "XXXLarge"
                      ],
                      "type": "string",
                      "description": "The level of compute power that each node in the Big Data pool has.",
                      "x-ms-enum": {
                        "name": "NodeSize",
                        "modelAsString": true
                      }
                    },
                    "nodeSizeFamily": {
                      "enum": [
                        "None",
                        "MemoryOptimized",
                        "HardwareAcceleratedFPGA",
                        "HardwareAcceleratedGPU"
                      ],
                      "type": "string",
                      "description": "The kind of nodes that the Big Data pool provides.",
                      "x-ms-enum": {
                        "name": "NodeSizeFamily",
                        "modelAsString": true
                      }
                    },
                    "lastSucceededTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the Big Data pool was updated successfully.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools": {
      "get": {
        "operationId": "BigDataPools_ListByWorkspace",
        "summary": "List the Big Data pools in a workspace.",
        "description": "List Big Data pools in a workspace.",
        "tags": [
          "BigDataPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "description": "Collection of Big Data pool information",
              "title": "Collection of Big Data pools",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next page of results"
                },
                "value": {
                  "type": "array",
                  "description": "List of Big Data pools",
                  "items": {
                    "type": "object",
                    "description": "A Big Data pool",
                    "title": "Big Data pool",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "Big Data pool properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "title": "Spark pool properties",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "description": "The state of the Big Data pool."
                          },
                          "autoScale": {
                            "description": "Auto-scaling properties",
                            "type": "object",
                            "title": "Spark pool auto-scaling properties",
                            "properties": {
                              "minNodeCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The minimum number of nodes the Big Data pool can support.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "Whether automatic scaling is enabled for the Big Data pool."
                              },
                              "maxNodeCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum number of nodes the Big Data pool can support.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "creationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time when the Big Data pool was created.",
                            "readOnly": true
                          },
                          "autoPause": {
                            "description": "Auto-pausing properties",
                            "type": "object",
                            "title": "Spark pool auto-pausing properties",
                            "properties": {
                              "delayInMinutes": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "Whether auto-pausing is enabled for the Big Data pool."
                              }
                            }
                          },
                          "isComputeIsolationEnabled": {
                            "type": "boolean",
                            "description": "Whether compute isolation is required or not."
                          },
                          "isAutotuneEnabled": {
                            "type": "boolean",
                            "title": "Enable Autotune",
                            "description": "Whether autotune is required or not.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "sessionLevelPackagesEnabled": {
                            "type": "boolean",
                            "description": "Whether session level packages enabled."
                          },
                          "cacheSize": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The cache size"
                          },
                          "dynamicExecutorAllocation": {
                            "description": "Dynamic Executor Allocation",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                              },
                              "minExecutors": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The minimum number of executors alloted"
                              },
                              "maxExecutors": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum number of executors alloted"
                              }
                            }
                          },
                          "sparkEventsFolder": {
                            "type": "string",
                            "description": "The Spark events folder",
                            "x-ms-mutability": [
                              "create",
                              "read",
                              "update"
                            ]
                          },
                          "nodeCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of nodes in the Big Data pool.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "libraryRequirements": {
                            "description": "Library version requirements",
                            "type": "object",
                            "title": "Spark pool library version requirements",
                            "properties": {
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "description": "The last update time of the library requirements file."
                              },
                              "content": {
                                "type": "string",
                                "description": "The library requirements."
                              },
                              "filename": {
                                "type": "string",
                                "description": "The filename of the library requirements file."
                              }
                            }
                          },
                          "customLibraries": {
                            "description": "List of custom libraries/packages associated with the spark pool.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Library/package information of a Big Data pool powered by Apache Spark",
                              "title": "Information about a library/package created at the workspace level.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the library."
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Storage blob path of library."
                                },
                                "containerName": {
                                  "type": "string",
                                  "description": "Storage blob container name."
                                },
                                "uploadedTimestamp": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The last update time of the library.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of the library."
                                },
                                "provisioningStatus": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Provisioning status of the library/package."
                                },
                                "creatorId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Creator Id of the library/package."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "sparkConfigProperties": {
                            "description": "Spark configuration file to specify additional properties",
                            "type": "object",
                            "title": "Spark pool Config Properties",
                            "properties": {
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "description": "The last update time of the spark config properties file."
                              },
                              "content": {
                                "type": "string",
                                "description": "The spark config properties."
                              },
                              "filename": {
                                "type": "string",
                                "description": "The filename of the spark config properties file."
                              },
                              "configurationType": {
                                "enum": [
                                  "File",
                                  "Artifact"
                                ],
                                "type": "string",
                                "description": "The type of the spark config properties file.",
                                "x-ms-enum": {
                                  "name": "ConfigurationType",
                                  "modelAsString": true
                                },
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "sparkVersion": {
                            "type": "string",
                            "description": "The Apache Spark version."
                          },
                          "defaultSparkLogFolder": {
                            "type": "string",
                            "description": "The default folder where Spark logs will be written."
                          },
                          "nodeSize": {
                            "enum": [
                              "None",
                              "Small",
                              "Medium",
                              "Large",
                              "XLarge",
                              "XXLarge",
                              "XXXLarge"
                            ],
                            "type": "string",
                            "description": "The level of compute power that each node in the Big Data pool has.",
                            "x-ms-enum": {
                              "name": "NodeSize",
                              "modelAsString": true
                            }
                          },
                          "nodeSizeFamily": {
                            "enum": [
                              "None",
                              "MemoryOptimized",
                              "HardwareAcceleratedFPGA",
                              "HardwareAcceleratedGPU"
                            ],
                            "type": "string",
                            "description": "The kind of nodes that the Big Data pool provides.",
                            "x-ms-enum": {
                              "name": "NodeSizeFamily",
                              "modelAsString": true
                            }
                          },
                          "lastSucceededTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time when the Big Data pool was updated successfully.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/checkNameAvailability": {
      "post": {
        "operationId": "Operations_CheckNameAvailability",
        "summary": "Check name availability",
        "description": "Check whether a workspace name is available",
        "tags": [
          "Operations"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "schema": {
              "type": "object",
              "title": "Check name availability request",
              "description": "A request about whether a workspace name is available",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Workspace name"
                },
                "type": {
                  "type": "string",
                  "description": "Type: workspace"
                }
              }
            },
            "in": "body",
            "name": "request",
            "required": true,
            "description": "The check request"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "Check name availability response",
              "description": "A response saying whether the workspace name is available",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Validation message"
                },
                "available": {
                  "type": "boolean",
                  "description": "Whether the workspace name is available"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason the workspace name is or is not available"
                },
                "name": {
                  "type": "string",
                  "description": "Workspace name"
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules": {
      "get": {
        "operationId": "IpFirewallRules_ListByWorkspace",
        "description": "Returns a list of firewall rules",
        "tags": [
          "IpFirewallRules"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "description": "List of IP firewall rules",
              "properties": {
                "nextLink": {
                  "description": "Link to next page of results",
                  "type": "string"
                },
                "value": {
                  "description": "List of IP firewall rules",
                  "type": "array",
                  "items": {
                    "description": "IP firewall rule",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "IP firewall rule properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "endIpAddress": {
                            "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read",
                              "update"
                            ]
                          },
                          "provisioningState": {
                            "description": "Resource provisioning state",
                            "enum": [
                              "Provisioning",
                              "Succeeded",
                              "Deleting",
                              "Failed",
                              "DeleteError"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "startIpAddress": {
                            "description": "The start IP address of the firewall rule. Must be IPv4 format",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read",
                              "update"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules/{ruleName}": {
      "put": {
        "operationId": "IpFirewallRules_CreateOrUpdate",
        "description": "Creates or updates a firewall rule",
        "tags": [
          "IpFirewallRules"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "ruleName",
            "description": "The IP firewall rule name",
            "required": true,
            "x-ms-parameter-location": "method"
          },
          {
            "description": "IP firewall rule properties",
            "schema": {
              "description": "IP firewall rule",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "IP firewall rule properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "endIpAddress": {
                      "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Deleting",
                        "Failed",
                        "DeleteError"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "startIpAddress": {
                      "description": "The start IP address of the firewall rule. Must be IPv4 format",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "ipFirewallRuleInfo",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "IP firewall rule",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "IP firewall rule properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "endIpAddress": {
                      "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Deleting",
                        "Failed",
                        "DeleteError"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "startIpAddress": {
                      "description": "The start IP address of the firewall rule. Must be IPv4 format",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "201": {
            "schema": {
              "description": "IP firewall rule",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "IP firewall rule properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "endIpAddress": {
                      "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Deleting",
                        "Failed",
                        "DeleteError"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "startIpAddress": {
                      "description": "The start IP address of the firewall rule. Must be IPv4 format",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "IpFirewallRules_Delete",
        "description": "Deletes a firewall rule",
        "tags": [
          "IpFirewallRules"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "ruleName",
            "description": "The IP firewall rule name",
            "required": true,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "IP firewall rule",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "IP firewall rule properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "endIpAddress": {
                      "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Deleting",
                        "Failed",
                        "DeleteError"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "startIpAddress": {
                      "description": "The start IP address of the firewall rule. Must be IPv4 format",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "operationId": "IpFirewallRules_Get",
        "description": "Get a firewall rule",
        "tags": [
          "IpFirewallRules"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "ruleName",
            "description": "The IP firewall rule name",
            "required": true,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "IP firewall rule",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "IP firewall rule properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "endIpAddress": {
                      "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "enum": [
                        "Provisioning",
                        "Succeeded",
                        "Deleting",
                        "Failed",
                        "DeleteError"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "startIpAddress": {
                      "description": "The start IP address of the firewall rule. Must be IPv4 format",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Ip Firewall Rule details"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/replaceAllIpFirewallRules": {
      "post": {
        "operationId": "IpFirewallRules_ReplaceAll",
        "description": "Replaces firewall rules",
        "tags": [
          "IpFirewallRules"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Replace all IP firewall rules request",
            "schema": {
              "description": "Replace all IP firewall rules request",
              "type": "object",
              "properties": {
                "ipFirewallRules": {
                  "description": "IP firewall rule properties",
                  "additionalProperties": {
                    "description": "IP firewall rule properties",
                    "type": "object",
                    "properties": {
                      "endIpAddress": {
                        "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read",
                          "update"
                        ]
                      },
                      "provisioningState": {
                        "description": "Resource provisioning state",
                        "enum": [
                          "Provisioning",
                          "Succeeded",
                          "Deleting",
                          "Failed",
                          "DeleteError"
                        ],
                        "type": "string",
                        "readOnly": true,
                        "x-ms-enum": {
                          "name": "ProvisioningState",
                          "modelAsString": true
                        }
                      },
                      "startIpAddress": {
                        "description": "The start IP address of the firewall rule. Must be IPv4 format",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read",
                          "update"
                        ]
                      }
                    }
                  },
                  "type": "object"
                }
              }
            },
            "in": "body",
            "name": "request",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "description": "An existing operation for replacing the firewall rules",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "The operation ID"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}": {
      "patch": {
        "operationId": "IntegrationRuntimes_Update",
        "summary": "Update integration runtime",
        "description": "Update an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateIntegrationRuntimeRequest",
            "description": "The parameters for updating an integration runtime.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Update integration runtime request.",
              "type": "object",
              "properties": {
                "autoUpdate": {
                  "description": "Enables or disables the auto-update feature of the self-hosted integration runtime. See https://go.microsoft.com/fwlink/?linkid=854189.",
                  "type": "string",
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeAutoUpdate",
                    "modelAsString": true
                  },
                  "x-ms-identifiers": []
                },
                "updateDelayOffset": {
                  "description": "The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Integration runtime resource type.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Etag."
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "description": "Integration runtime description.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "operationId": "IntegrationRuntimes_Get",
        "summary": "Get integration runtime",
        "description": "Get an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Integration runtime resource type.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Etag."
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "description": "Integration runtime description.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "IntegrationRuntimes_Create",
        "summary": "Create integration runtime",
        "description": "Create an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the integration runtime entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "integrationRuntime",
            "description": "Integration runtime resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Integration runtime resource type.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Etag."
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "description": "Integration runtime description.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Integration runtime resource type.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Etag."
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "description": "Integration runtime description.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "202": {
            "description": "Accepted."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "IntegrationRuntimes_Delete",
        "summary": "Delete integration runtime",
        "description": "Delete an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "No Content."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress": {
      "post": {
        "operationId": "IntegrationRuntimeNodeIpAddress_Get",
        "summary": "Get integration runtime node IP address",
        "description": "Get the IP address of an integration runtime node",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "nodeName",
            "description": "Integration runtime node name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "The IP address of self-hosted integration runtime node.",
              "properties": {
                "ipAddress": {
                  "description": "The IP address of self-hosted integration runtime node.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/upgrade": {
      "post": {
        "operationId": "IntegrationRuntimes_Upgrade",
        "summary": "Upgrade integration runtime",
        "description": "Upgrade an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata": {
      "post": {
        "operationId": "IntegrationRuntimeObjectMetadata_List",
        "summary": "Get integration runtime object metadata",
        "description": "Get object metadata from an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "getMetadataRequest",
            "description": "The parameters for getting a SSIS object metadata.",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The request payload of get SSIS object metadata.",
              "properties": {
                "metadataPath": {
                  "type": "string",
                  "description": "Metadata path."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "A list of SSIS object metadata.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of SSIS object metadata.",
                  "items": {
                    "type": "object",
                    "description": "SSIS object metadata.",
                    "discriminator": "type",
                    "properties": {
                      "type": {
                        "description": "Type of metadata.",
                        "type": "string",
                        "enum": [
                          "Folder",
                          "Project",
                          "Package",
                          "Environment"
                        ],
                        "x-ms-enum": {
                          "name": "SsisObjectMetadataType",
                          "modelAsString": true
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Metadata id."
                      },
                      "name": {
                        "type": "string",
                        "description": "Metadata name."
                      },
                      "description": {
                        "type": "string",
                        "description": "Metadata description."
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The link to the next page of results, if any remaining results exist."
                }
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}": {
      "get": {
        "operationId": "IntegrationRuntimeNodes_Get",
        "summary": "Get integration runtime node",
        "description": "Get an integration runtime node",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "nodeName",
            "description": "Integration runtime node name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Properties of Self-hosted integration runtime node.",
              "properties": {
                "nodeName": {
                  "description": "Name of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "machineName": {
                  "description": "Machine name of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "hostServiceUri": {
                  "description": "URI for the host machine of the integration runtime.",
                  "type": "string",
                  "readOnly": true
                },
                "status": {
                  "description": "Status of the integration runtime node.",
                  "type": "string",
                  "readOnly": true,
                  "enum": [
                    "NeedRegistration",
                    "Online",
                    "Limited",
                    "Offline",
                    "Upgrading",
                    "Initializing",
                    "InitializeFailed"
                  ],
                  "x-ms-enum": {
                    "name": "SelfHostedIntegrationRuntimeNodeStatus",
                    "modelAsString": true
                  }
                },
                "capabilities": {
                  "description": "The integration runtime capabilities dictionary",
                  "type": "object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "versionStatus": {
                  "description": "Status of the integration runtime node version.",
                  "type": "string",
                  "readOnly": true
                },
                "version": {
                  "description": "Version of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "registerTime": {
                  "description": "The time at which the integration runtime node was registered in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastConnectTime": {
                  "description": "The most recent time at which the integration runtime was connected in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "expiryTime": {
                  "description": "The time at which the integration runtime will expire in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastStartTime": {
                  "description": "The time the node last started up.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastStopTime": {
                  "description": "The integration runtime node last stop time.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastUpdateResult": {
                  "description": "The result of the last integration runtime node update.",
                  "type": "string",
                  "enum": [
                    "None",
                    "Succeed",
                    "Fail"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeUpdateResult",
                    "modelAsString": true
                  },
                  "readOnly": true
                },
                "lastStartUpdateTime": {
                  "description": "The last time for the integration runtime node update start.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastEndUpdateTime": {
                  "description": "The last time for the integration runtime node update end.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "isActiveDispatcher": {
                  "description": "Indicates whether this node is the active dispatcher for integration runtime requests.",
                  "type": "boolean",
                  "readOnly": true
                },
                "concurrentJobsLimit": {
                  "description": "Maximum concurrent jobs on the integration runtime node.",
                  "type": "integer",
                  "format": "int32",
                  "readOnly": true
                },
                "maxConcurrentJobs": {
                  "description": "The maximum concurrent jobs in this integration runtime.",
                  "type": "integer",
                  "format": "int32",
                  "readOnly": true
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "operationId": "IntegrationRuntimeNodes_Update",
        "summary": "Create integration runtime node",
        "description": "Create an integration runtime node",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "nodeName",
            "description": "Integration runtime node name",
            "required": true
          },
          {
            "name": "updateIntegrationRuntimeNodeRequest",
            "description": "The parameters for updating an integration runtime node.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Update integration runtime node request.",
              "type": "object",
              "properties": {
                "concurrentJobsLimit": {
                  "description": "The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Properties of Self-hosted integration runtime node.",
              "properties": {
                "nodeName": {
                  "description": "Name of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "machineName": {
                  "description": "Machine name of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "hostServiceUri": {
                  "description": "URI for the host machine of the integration runtime.",
                  "type": "string",
                  "readOnly": true
                },
                "status": {
                  "description": "Status of the integration runtime node.",
                  "type": "string",
                  "readOnly": true,
                  "enum": [
                    "NeedRegistration",
                    "Online",
                    "Limited",
                    "Offline",
                    "Upgrading",
                    "Initializing",
                    "InitializeFailed"
                  ],
                  "x-ms-enum": {
                    "name": "SelfHostedIntegrationRuntimeNodeStatus",
                    "modelAsString": true
                  }
                },
                "capabilities": {
                  "description": "The integration runtime capabilities dictionary",
                  "type": "object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "versionStatus": {
                  "description": "Status of the integration runtime node version.",
                  "type": "string",
                  "readOnly": true
                },
                "version": {
                  "description": "Version of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "registerTime": {
                  "description": "The time at which the integration runtime node was registered in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastConnectTime": {
                  "description": "The most recent time at which the integration runtime was connected in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "expiryTime": {
                  "description": "The time at which the integration runtime will expire in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastStartTime": {
                  "description": "The time the node last started up.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastStopTime": {
                  "description": "The integration runtime node last stop time.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastUpdateResult": {
                  "description": "The result of the last integration runtime node update.",
                  "type": "string",
                  "enum": [
                    "None",
                    "Succeed",
                    "Fail"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeUpdateResult",
                    "modelAsString": true
                  },
                  "readOnly": true
                },
                "lastStartUpdateTime": {
                  "description": "The last time for the integration runtime node update start.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastEndUpdateTime": {
                  "description": "The last time for the integration runtime node update end.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "isActiveDispatcher": {
                  "description": "Indicates whether this node is the active dispatcher for integration runtime requests.",
                  "type": "boolean",
                  "readOnly": true
                },
                "concurrentJobsLimit": {
                  "description": "Maximum concurrent jobs on the integration runtime node.",
                  "type": "integer",
                  "format": "int32",
                  "readOnly": true
                },
                "maxConcurrentJobs": {
                  "description": "The maximum concurrent jobs in this integration runtime.",
                  "type": "integer",
                  "format": "int32",
                  "readOnly": true
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "IntegrationRuntimeNodes_Delete",
        "summary": "Delete integration runtime node",
        "description": "Delete an integration runtime node",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "nodeName",
            "description": "Integration runtime node name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials": {
      "post": {
        "operationId": "IntegrationRuntimeCredentials_Sync",
        "summary": "Sync integration runtime credentials",
        "description": "Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes": {
      "get": {
        "operationId": "IntegrationRuntimes_ListByWorkspace",
        "summary": "List integration runtimes",
        "description": "List all integration runtimes",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of integration runtime resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of integration runtimes.",
                  "items": {
                    "type": "object",
                    "description": "Integration runtime resource type.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "etag": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource Etag."
                      },
                      "properties": {
                        "description": "Integration runtime properties.",
                        "type": "object",
                        "discriminator": "type",
                        "properties": {
                          "type": {
                            "description": "Type of integration runtime.",
                            "type": "string",
                            "enum": [
                              "Managed",
                              "SelfHosted"
                            ],
                            "x-ms-enum": {
                              "name": "IntegrationRuntimeType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "Integration runtime description.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo": {
      "post": {
        "operationId": "IntegrationRuntimeConnectionInfos_Get",
        "summary": "Get integration runtime connection info",
        "description": "Get connection info for an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Connection information for encrypting the on-premises data source credentials.",
              "type": "object",
              "properties": {
                "serviceToken": {
                  "description": "The token generated in service. Callers use this token to authenticate to integration runtime.",
                  "type": "string",
                  "readOnly": true
                },
                "identityCertThumbprint": {
                  "description": "The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.",
                  "type": "string",
                  "readOnly": true
                },
                "hostServiceUri": {
                  "description": "The on-premises integration runtime host URL.",
                  "type": "string",
                  "readOnly": true
                },
                "version": {
                  "description": "The integration runtime version.",
                  "type": "string",
                  "readOnly": true
                },
                "publicKey": {
                  "description": "The public key for encrypting a credential when transferring the credential to the integration runtime.",
                  "type": "string",
                  "readOnly": true
                },
                "isIdentityCertExprired": {
                  "description": "Whether the identity certificate is expired.",
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/start": {
      "post": {
        "operationId": "IntegrationRuntimes_Start",
        "summary": "Start integration runtime",
        "description": "Start an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Integration runtime status response.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The integration runtime name.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "dataFactoryName": {
                      "description": "The workspace name which the integration runtime belong to.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The state of integration runtime.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Initial",
                        "Stopped",
                        "Started",
                        "Starting",
                        "Stopping",
                        "NeedRegistration",
                        "Online",
                        "Limited",
                        "Offline",
                        "AccessDenied"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeState",
                        "modelAsString": true
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "202": {
            "description": "Accepted."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey": {
      "post": {
        "operationId": "IntegrationRuntimeAuthKeys_Regenerate",
        "summary": "Regenerate integration runtime authentication key",
        "description": "Regenerate the authentication key for an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "regenerateKeyParameters",
            "description": "The parameters for regenerating integration runtime authentication key.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to regenerate the authentication key.",
              "type": "object",
              "properties": {
                "keyName": {
                  "description": "The name of the authentication key to regenerate.",
                  "type": "string",
                  "enum": [
                    "authKey1",
                    "authKey2"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeAuthKeyName",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "The integration runtime authentication keys.",
              "type": "object",
              "properties": {
                "authKey1": {
                  "type": "string",
                  "description": "The primary integration runtime authentication key."
                },
                "authKey2": {
                  "type": "string",
                  "description": "The secondary integration runtime authentication key."
                }
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys": {
      "post": {
        "operationId": "IntegrationRuntimeAuthKeys_List",
        "summary": "List integration runtime authentication keys",
        "description": "List authentication keys in an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "The integration runtime authentication keys.",
              "type": "object",
              "properties": {
                "authKey1": {
                  "type": "string",
                  "description": "The primary integration runtime authentication key."
                },
                "authKey2": {
                  "type": "string",
                  "description": "The secondary integration runtime authentication key."
                }
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/monitoringData": {
      "post": {
        "operationId": "IntegrationRuntimeMonitoringData_List",
        "summary": "Get integration runtime monitoring data",
        "description": "Get monitoring data for an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Get monitoring data response.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Integration runtime name."
                },
                "nodes": {
                  "type": "array",
                  "description": "Integration runtime node monitoring data.",
                  "items": {
                    "description": "Monitoring data for integration runtime node.",
                    "type": "object",
                    "properties": {
                      "nodeName": {
                        "description": "Name of the integration runtime node.",
                        "type": "string",
                        "readOnly": true
                      },
                      "availableMemoryInMB": {
                        "description": "Available memory (MB) on the integration runtime node.",
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                      },
                      "cpuUtilization": {
                        "description": "CPU percentage on the integration runtime node.",
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                      },
                      "concurrentJobsLimit": {
                        "description": "Maximum concurrent jobs on the integration runtime node.",
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                      },
                      "concurrentJobsRunning": {
                        "description": "The number of jobs currently running on the integration runtime node.",
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                      },
                      "maxConcurrentJobs": {
                        "description": "The maximum concurrent jobs in this integration runtime.",
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                      },
                      "sentBytes": {
                        "description": "Sent bytes on the integration runtime node.",
                        "type": "number",
                        "readOnly": true
                      },
                      "receivedBytes": {
                        "description": "Received bytes on the integration runtime node.",
                        "type": "number",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/stop": {
      "post": {
        "operationId": "IntegrationRuntimes_Stop",
        "summary": "Stop integration runtime",
        "description": "Stop an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata": {
      "post": {
        "operationId": "IntegrationRuntimeObjectMetadata_Refresh",
        "summary": "Refresh integration runtime object metadata",
        "description": "Refresh the object metadata in an integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "The status of the operation.",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The status of the operation."
                },
                "name": {
                  "type": "string",
                  "description": "The operation name."
                },
                "properties": {
                  "type": "string",
                  "description": "The operation properties."
                },
                "error": {
                  "type": "string",
                  "description": "The operation error message."
                }
              }
            }
          },
          "202": {
            "description": "Accepted."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/getStatus": {
      "post": {
        "operationId": "IntegrationRuntimeStatus_Get",
        "summary": "Get integration runtime status",
        "description": "Get the integration runtime status",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Integration runtime status response.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The integration runtime name.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "dataFactoryName": {
                      "description": "The workspace name which the integration runtime belong to.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The state of integration runtime.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Initial",
                        "Stopped",
                        "Started",
                        "Starting",
                        "Stopping",
                        "NeedRegistration",
                        "Online",
                        "Limited",
                        "Offline",
                        "AccessDenied"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeState",
                        "modelAsString": true
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_ListOutboundNetworkDependenciesEndpoints",
        "description": "Gets the list of outbound network dependencies for a given Azure-SSIS integration runtime.",
        "summary": "Gets list of outbound network dependencies for a given Azure-SSIS integration runtime.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Azure-SSIS integration runtime outbound network dependency endpoints.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of outbound network dependency endpoints.",
                  "type": "array",
                  "items": {
                    "description": "Azure-SSIS integration runtime outbound network dependency endpoints for one category.",
                    "type": "object",
                    "properties": {
                      "category": {
                        "description": "The category of outbound network dependency.",
                        "type": "string"
                      },
                      "endpoints": {
                        "description": "The endpoints for outbound network dependency.",
                        "type": "array",
                        "items": {
                          "description": "The endpoint for Azure-SSIS integration runtime outbound network dependency.",
                          "type": "object",
                          "properties": {
                            "domainName": {
                              "description": "The domain name of endpoint.",
                              "type": "string"
                            },
                            "endpointDetails": {
                              "description": "The details of endpoint.",
                              "type": "array",
                              "items": {
                                "description": "The details of Azure-SSIS integration runtime outbound network dependency endpoint.",
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "description": "The port of endpoint.",
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/enableInteractiveQuery": {
      "post": {
        "operationId": "IntegrationRuntimes_EnableInteractiveQuery",
        "description": "Enable interactive query in integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/disableInteractiveQuery": {
      "post": {
        "operationId": "IntegrationRuntimes_DisableInteractiveQuery",
        "description": "Disable interactive query in integration runtime",
        "tags": [
          "IntegrationRuntime"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "type": "string",
            "required": true,
            "in": "path",
            "description": "Integration runtime name",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys": {
      "get": {
        "operationId": "Keys_ListByWorkspace",
        "description": "Returns a list of keys in a workspace",
        "tags": [
          "Keys"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "List of keys",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Link to the next page of results",
                  "type": "string"
                },
                "value": {
                  "description": "List of keys",
                  "type": "array",
                  "items": {
                    "description": "A workspace key",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Keys resource properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "isActiveCMK": {
                            "type": "boolean",
                            "description": "Used to activate the workspace after a customer managed key is provided."
                          },
                          "keyVaultUrl": {
                            "type": "string",
                            "description": "The Key Vault Url of the workspace key.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "The list of workspace keys."
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys/{keyName}": {
      "get": {
        "operationId": "Keys_Get",
        "description": "Gets a workspace key",
        "tags": [
          "Keys"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "keyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace key",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A workspace key",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Keys resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "isActiveCMK": {
                      "type": "boolean",
                      "description": "Used to activate the workspace after a customer managed key is provided."
                    },
                    "keyVaultUrl": {
                      "type": "string",
                      "description": "The Key Vault Url of the workspace key.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Workspace Key details"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "Keys_CreateOrUpdate",
        "description": "Creates or updates a workspace key",
        "tags": [
          "Keys"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "keyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace key",
            "x-ms-parameter-location": "method"
          },
          {
            "schema": {
              "description": "A workspace key",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Keys resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "isActiveCMK": {
                      "type": "boolean",
                      "description": "Used to activate the workspace after a customer managed key is provided."
                    },
                    "keyVaultUrl": {
                      "type": "string",
                      "description": "The Key Vault Url of the workspace key.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "keyProperties",
            "required": true,
            "description": "Key put request properties"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A workspace key",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Keys resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "isActiveCMK": {
                      "type": "boolean",
                      "description": "Used to activate the workspace after a customer managed key is provided."
                    },
                    "keyVaultUrl": {
                      "type": "string",
                      "description": "The Key Vault Url of the workspace key.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Workspace Key resource details"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "Keys_Delete",
        "description": "Deletes a workspace key",
        "tags": [
          "Keys"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "keyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the workspace key",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A workspace key",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Keys resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "isActiveCMK": {
                      "type": "boolean",
                      "description": "Used to activate the workspace after a customer managed key is provided."
                    },
                    "keyVaultUrl": {
                      "type": "string",
                      "description": "The Key Vault Url of the workspace key.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Keys resource not found."
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/libraries/{libraryName}": {
      "get": {
        "operationId": "Library_Get",
        "summary": "Get library by name.",
        "description": "Get library by name in a workspace.",
        "tags": [
          "Libraries"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "libraryName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Library name",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Library response details",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Etag."
                },
                "properties": {
                  "description": "Library/package properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "Information about a library/package created at the workspace level.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the library."
                    },
                    "path": {
                      "type": "string",
                      "description": "Storage blob path of library."
                    },
                    "containerName": {
                      "type": "string",
                      "description": "Storage blob container name."
                    },
                    "uploadedTimestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The last update time of the library.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the library."
                    },
                    "provisioningStatus": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning status of the library/package."
                    },
                    "creatorId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Creator Id of the library/package."
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/libraries": {
      "get": {
        "operationId": "Libraries_ListByWorkspace",
        "summary": "List the libraries in a workspace.",
        "description": "List libraries in a workspace.",
        "tags": [
          "Libraries"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of Library resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of Library.",
                  "items": {
                    "description": "Library response details",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "etag": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource Etag."
                      },
                      "properties": {
                        "description": "Library/package properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "title": "Information about a library/package created at the workspace level.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the library."
                          },
                          "path": {
                            "type": "string",
                            "description": "Storage blob path of library."
                          },
                          "containerName": {
                            "type": "string",
                            "description": "Storage blob container name."
                          },
                          "uploadedTimestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The last update time of the library.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the library."
                          },
                          "provisioningStatus": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning status of the library/package."
                          },
                          "creatorId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Creator Id of the library/package."
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/providers/Microsoft.Synapse/operations": {
      "get": {
        "operationId": "Operations_List",
        "summary": "All operations",
        "description": "Get all available operations",
        "tags": [
          "Operations"
        ],
        "deprecated": false,
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "An operation that is available in this resource provider",
                "properties": {
                  "display": {
                    "description": "Display properties of the operation",
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Operation description"
                      },
                      "resource": {
                        "type": "string",
                        "description": "Resource type"
                      },
                      "provider": {
                        "type": "string",
                        "description": "Resource provider name"
                      },
                      "operation": {
                        "type": "string",
                        "description": "Operation name"
                      }
                    }
                  },
                  "isDataAction": {
                    "type": "string",
                    "description": "Whether this operation is a data action"
                  },
                  "name": {
                    "type": "string",
                    "description": "Operation name"
                  },
                  "properties": {
                    "description": "Operation properties",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "serviceSpecification": {
                        "description": "Operation service specification",
                        "type": "object",
                        "properties": {
                          "metricSpecifications": {
                            "type": "array",
                            "description": "Service metric specifications",
                            "items": {
                              "type": "object",
                              "description": "What is this?",
                              "properties": {
                                "sourceMdmNamespace": {
                                  "type": "string",
                                  "description": "The source MDM namespace"
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "Metric display name"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Metric unique name"
                                },
                                "aggregationType": {
                                  "type": "string",
                                  "description": "Metric aggregation type"
                                },
                                "displayDescription": {
                                  "type": "string",
                                  "description": "Metric description"
                                },
                                "sourceMdmAccount": {
                                  "type": "string",
                                  "description": "The source MDM account"
                                },
                                "enableRegionalMdmAccount": {
                                  "type": "boolean",
                                  "description": "Whether the regional MDM account is enabled"
                                },
                                "unit": {
                                  "type": "string",
                                  "description": "Metric units"
                                },
                                "dimensions": {
                                  "type": "array",
                                  "description": "Metric dimensions",
                                  "items": {
                                    "type": "object",
                                    "description": "What is this?",
                                    "properties": {
                                      "displayName": {
                                        "type": "string",
                                        "description": "Dimension display name"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Dimension unique name"
                                      },
                                      "toBeExportedForShoebox": {
                                        "type": "boolean",
                                        "description": "Whether this metric should be exported for Shoebox"
                                      }
                                    }
                                  }
                                },
                                "supportsInstanceLevelAggregation": {
                                  "type": "boolean",
                                  "description": "Whether the metric supports instance-level aggregation"
                                },
                                "metricFilterPattern": {
                                  "type": "string",
                                  "description": "Metric filter"
                                }
                              }
                            }
                          },
                          "logSpecifications": {
                            "type": "array",
                            "description": "Service log specifications",
                            "items": {
                              "type": "object",
                              "description": "What is this?",
                              "properties": {
                                "displayName": {
                                  "type": "string",
                                  "description": "Log display name"
                                },
                                "blobDuration": {
                                  "type": "string",
                                  "description": "Time range the log covers"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Log unique name"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "origin": {
                    "type": "string",
                    "description": "Operation origin"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/operationResults/{operationId}": {
      "get": {
        "operationId": "Operations_GetLocationHeaderResult",
        "summary": "Get operation result",
        "description": "Get the result of an operation",
        "tags": [
          "Operations"
        ],
        "deprecated": false,
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "operationId",
            "description": "Operation ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "201": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/operationStatuses/{operationId}": {
      "get": {
        "operationId": "Operations_GetAzureAsyncHeaderResult",
        "summary": "Get operation status",
        "description": "Get the status of an operation",
        "tags": [
          "Operations"
        ],
        "deprecated": false,
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "operationId",
            "description": "Operation ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/OperationResource"
            },
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for this operation.",
          "minLength": 1
        },
        {
          "name": "subscriptionId",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The ID of the target subscription.",
          "minLength": 1
        },
        {
          "name": "resourceGroupName",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The name of the resource group. The name is case insensitive.",
          "minLength": 1,
          "maxLength": 90,
          "x-ms-parameter-location": "method"
        },
        {
          "name": "workspaceName",
          "in": "path",
          "description": "The name of the workspace.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "privateEndpointConnectionName",
          "in": "path",
          "description": "The name of the private endpoint connection.",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Private endpoint connection properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Resource id of the private endpoint.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "x-ms-azure-resource": true
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection state of the private endpoint connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The private link service connection status.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The private link service connection description.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "The actions required for private link service connection.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the private endpoint connection.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "Private endpoint connection"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approve or reject a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Create",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Request body of private endpoint connection to create.",
            "required": true,
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Private endpoint connection properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Resource id of the private endpoint.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "x-ms-azure-resource": true
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection state of the private endpoint connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The private link service connection status.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The private link service connection description.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "The actions required for private link service connection.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the private endpoint connection.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Private endpoint connection properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Resource id of the private endpoint.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "x-ms-azure-resource": true
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection state of the private endpoint connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The private link service connection status.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The private link service connection description.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "The actions required for private link service connection.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the private endpoint connection.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "Private endpoint connection"
          },
          "201": {
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Private endpoint connection properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Resource id of the private endpoint.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "x-ms-azure-resource": true
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection state of the private endpoint connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The private link service connection status.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The private link service connection description.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "The actions required for private link service connection.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the private endpoint connection.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "Private endpoint connection"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Delete a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "schema": {
              "$ref": "../../../../common/v1/types.json#/definitions/OperationResource"
            },
            "description": "Operation details"
          },
          "204": {
            "description": "Deletion completed"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Lists private endpoint connection in workspace.",
        "operationId": "PrivateEndpointConnections_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A list of private endpoint connections",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A private endpoint connection",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Private endpoint connection properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "The private endpoint which the connection belongs to.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Resource id of the private endpoint.",
                                "type": "string",
                                "readOnly": true
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "Connection state of the private endpoint connection.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "The private link service connection status.",
                                "type": "string"
                              },
                              "description": {
                                "description": "The private link service connection description.",
                                "type": "string"
                              },
                              "actionsRequired": {
                                "description": "The actions required for private link service connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the private endpoint connection.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "description": "Private endpoint connection"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_List",
        "summary": "Private Link Resources",
        "description": "Get all private link resources for a workspaces",
        "tags": [
          "PrivateLinkResources"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A list of private link resources",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A private link resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "The private link resource properties.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true,
                            "description": "Required DNS zone names of the the private link resource."
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "description": "List of private link resources"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateLinkResources/{privateLinkResourceName}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "summary": "Get Private Link Resource",
        "description": "Get private link resource in workspace",
        "tags": [
          "PrivateLinkResources"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateLinkResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link resource",
            "x-ms-parameter-location": "method"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A private link resource",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "The private link resource properties.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "description": "The private link resource group id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "description": "The private link resource required member names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Required DNS zone names of the the private link resource."
                    }
                  }
                }
              }
            },
            "description": "Private link resource details"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkHubPrivateLinkResources_List",
        "summary": "Private Link Resources",
        "description": "Get all private link resources for a private link hub",
        "tags": [
          "PrivateLinkHubPrivateLinkResources"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateLinkHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link hub",
            "x-ms-parameter-location": "method"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A list of private link resources",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A private link resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "The private link resource properties.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true,
                            "description": "Required DNS zone names of the the private link resource."
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "description": "List of private link resources"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}/privateLinkResources/{privateLinkResourceName}": {
      "get": {
        "operationId": "PrivateLinkHubPrivateLinkResources_Get",
        "summary": "Get Private Link Hub Private Link Resource",
        "description": "Get private link resource in private link hub",
        "tags": [
          "PrivateLinkHubPrivateLinkResources"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateLinkHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link hub",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateLinkResourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private link resource",
            "x-ms-parameter-location": "method"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A private link resource",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "The private link resource properties.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "description": "The private link resource group id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "description": "The private link resource required member names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Required DNS zone names of the the private link resource."
                    }
                  }
                }
              }
            },
            "description": "Private link resource details"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for this operation.",
          "minLength": 1
        },
        {
          "name": "subscriptionId",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The ID of the target subscription.",
          "minLength": 1
        },
        {
          "name": "resourceGroupName",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The name of the resource group. The name is case insensitive.",
          "minLength": 1,
          "maxLength": 90,
          "x-ms-parameter-location": "method"
        }
      ],
      "get": {
        "operationId": "PrivateLinkHubs_ListByResourceGroup",
        "description": "Returns a list of privateLinkHubs in a resource group",
        "tags": [
          "PrivateLinkHubs"
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "schema": {
              "description": "List of privateLinkHubs",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Link to the next page of results",
                  "type": "string"
                },
                "value": {
                  "description": "List of privateLinkHubs",
                  "type": "array",
                  "items": {
                    "description": "A privateLinkHub",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "PrivateLinkHub resource properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "PrivateLinkHub provisioning state",
                            "type": "string"
                          },
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Private Endpoint Connection For Private Link Hub - Basic",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "identifier",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of private endpoint connection for private link hub",
                                  "type": "object",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The private endpoint which the connection belongs to.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Resource id of the private endpoint.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      },
                                      "x-ms-azure-resource": true
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection state of the private endpoint connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The private link service connection status.",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "The private link service connection description.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "The actions required for private link service connection.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the private endpoint connection.",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for this operation.",
          "minLength": 1
        },
        {
          "name": "subscriptionId",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The ID of the target subscription.",
          "minLength": 1
        },
        {
          "name": "resourceGroupName",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The name of the resource group. The name is case insensitive.",
          "minLength": 1,
          "maxLength": 90,
          "x-ms-parameter-location": "method"
        },
        {
          "name": "privateLinkHubName",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Name of the privateLinkHub",
          "x-ms-parameter-location": "method"
        }
      ],
      "get": {
        "operationId": "PrivateLinkHubs_Get",
        "description": "Gets a privateLinkHub",
        "tags": [
          "PrivateLinkHubs"
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "schema": {
              "description": "A privateLinkHub",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "PrivateLinkHub resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "PrivateLinkHub provisioning state",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Private Endpoint Connection For Private Link Hub - Basic",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "identifier",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of private endpoint connection for private link hub",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "PrivateLinkHub resource details"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "operationId": "PrivateLinkHubs_Update",
        "description": "Updates a privateLinkHub",
        "tags": [
          "PrivateLinkHubs"
        ],
        "deprecated": false,
        "parameters": [
          {
            "schema": {
              "description": "PrivateLinkHub patch details",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Resource tags",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              }
            },
            "in": "body",
            "name": "privateLinkHubPatchInfo",
            "required": true,
            "description": "PrivateLinkHub patch request properties"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A privateLinkHub",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "PrivateLinkHub resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "PrivateLinkHub provisioning state",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Private Endpoint Connection For Private Link Hub - Basic",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "identifier",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of private endpoint connection for private link hub",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "PrivateLinkHub resource details"
          },
          "201": {
            "schema": {
              "description": "A privateLinkHub",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "PrivateLinkHub resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "PrivateLinkHub provisioning state",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Private Endpoint Connection For Private Link Hub - Basic",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "identifier",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of private endpoint connection for private link hub",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "PrivateLinkHub resource details"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "PrivateLinkHubs_CreateOrUpdate",
        "description": "Creates or updates a privateLinkHub",
        "tags": [
          "PrivateLinkHubs"
        ],
        "deprecated": false,
        "parameters": [
          {
            "description": "PrivateLinkHub create or update request properties",
            "schema": {
              "description": "A privateLinkHub",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "PrivateLinkHub resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "PrivateLinkHub provisioning state",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Private Endpoint Connection For Private Link Hub - Basic",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "identifier",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of private endpoint connection for private link hub",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "privateLinkHubInfo",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A privateLinkHub",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "PrivateLinkHub resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "PrivateLinkHub provisioning state",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Private Endpoint Connection For Private Link Hub - Basic",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "identifier",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of private endpoint connection for private link hub",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "PrivateLinkHub resource details"
          },
          "201": {
            "schema": {
              "description": "A privateLinkHub",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "PrivateLinkHub resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "PrivateLinkHub provisioning state",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Private Endpoint Connection For Private Link Hub - Basic",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "identifier",
                            "type": "string",
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Properties of private endpoint connection for private link hub",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "PrivateLinkHub resource details"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "PrivateLinkHubs_Delete",
        "description": "Deletes a privateLinkHub",
        "tags": [
          "PrivateLinkHubs"
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "PrivateLinkHub resource not found."
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/privateLinkHubs": {
      "get": {
        "operationId": "PrivateLinkHubs_List",
        "description": "Returns a list of privateLinkHubs in a subscription",
        "tags": [
          "PrivateLinkHubs"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "List of privateLinkHubs",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Link to the next page of results",
                  "type": "string"
                },
                "value": {
                  "description": "List of privateLinkHubs",
                  "type": "array",
                  "items": {
                    "description": "A privateLinkHub",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "PrivateLinkHub resource properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "PrivateLinkHub provisioning state",
                            "type": "string"
                          },
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Private Endpoint Connection For Private Link Hub - Basic",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "identifier",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Properties of private endpoint connection for private link hub",
                                  "type": "object",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The private endpoint which the connection belongs to.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Resource id of the private endpoint.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      },
                                      "x-ms-azure-resource": true
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection state of the private endpoint connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The private link service connection status.",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "The private link service connection description.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "The actions required for private link service connection.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the private endpoint connection.",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "PrivateLinkHub resource details"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}/privateEndpointConnections": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for this operation.",
          "minLength": 1
        },
        {
          "name": "subscriptionId",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The ID of the target subscription.",
          "minLength": 1
        },
        {
          "name": "resourceGroupName",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The name of the resource group. The name is case insensitive.",
          "minLength": 1,
          "maxLength": 90,
          "x-ms-parameter-location": "method"
        },
        {
          "name": "privateLinkHubName",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Name of the privateLinkHub",
          "x-ms-parameter-location": "method"
        }
      ],
      "get": {
        "operationId": "PrivateEndpointConnectionsPrivateLinkHub_List",
        "description": "Get all PrivateEndpointConnections in the PrivateLinkHub",
        "tags": [
          "PrivateLinkHubs",
          "PrivateEndpointConnections"
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Properties of a private endpoint connection.",
                        "properties": {
                          "privateEndpoint": {
                            "description": "The private endpoint which the connection belongs to.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Resource id of the private endpoint.",
                                "type": "string",
                                "readOnly": true
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "Connection state of the private endpoint connection.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "The private link service connection status.",
                                "type": "string"
                              },
                              "description": {
                                "description": "The private link service connection description.",
                                "type": "string"
                              },
                              "actionsRequired": {
                                "description": "The actions required for private link service connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the private endpoint connection.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              }
            },
            "description": "List of PrivateEndpointConnections in PrivateLinkHub"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for this operation.",
          "minLength": 1
        },
        {
          "name": "subscriptionId",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The ID of the target subscription.",
          "minLength": 1
        },
        {
          "name": "resourceGroupName",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "The name of the resource group. The name is case insensitive.",
          "minLength": 1,
          "maxLength": 90,
          "x-ms-parameter-location": "method"
        },
        {
          "name": "privateLinkHubName",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Name of the privateLinkHub",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "privateEndpointConnectionName",
          "in": "path",
          "required": true,
          "type": "string",
          "description": "Name of the privateEndpointConnection",
          "x-ms-parameter-location": "method"
        }
      ],
      "get": {
        "operationId": "PrivateEndpointConnectionsPrivateLinkHub_Get",
        "description": "Get all PrivateEndpointConnection in the PrivateLinkHub by name",
        "tags": [
          "PrivateLinkHubs",
          "PrivateEndpointConnections"
        ],
        "deprecated": false,
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "properties": {
                  "type": "object",
                  "description": "Properties of a private endpoint connection.",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Resource id of the private endpoint.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "x-ms-azure-resource": true
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection state of the private endpoint connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The private link service connection status.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The private link service connection description.",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "The actions required for private link service connection.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the private endpoint connection.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "description": "PrivateEndpointConnection in PrivateLinkHub"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}": {
      "get": {
        "operationId": "SqlPools_Get",
        "summary": "Get SQL pool",
        "description": "Get SQL pool properties",
        "tags": [
          "SqlPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "operationId": "SqlPools_Update",
        "summary": "Update SQL pool",
        "description": "Apply a partial update to a SQL pool",
        "tags": [
          "SqlPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "schema": {
              "type": "object",
              "title": "SQL pool patch info",
              "description": "A SQL Analytics pool patch info",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "sqlPoolInfo",
            "description": "The updated SQL pool properties",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "SqlPools_Create",
        "summary": "Create SQL pool",
        "description": "Create a SQL pool",
        "tags": [
          "SqlPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "sqlPoolInfo",
            "description": "The SQL pool to create",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "SqlPools_Delete",
        "summary": "Delete SQL pool",
        "description": "Delete a SQL pool",
        "tags": [
          "SqlPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Accepted"
          },
          "204": {
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools": {
      "get": {
        "operationId": "SqlPools_ListByWorkspace",
        "summary": "List SQL pools",
        "description": "List all SQL pools",
        "tags": [
          "SqlPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "SQL pool collection",
              "description": "List of SQL pools",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next page of results"
                },
                "value": {
                  "type": "array",
                  "description": "List of SQL pools",
                  "items": {
                    "type": "object",
                    "title": "SQL pool",
                    "description": "A SQL Analytics pool",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "sku": {
                        "description": "SQL pool SKU",
                        "type": "object",
                        "title": "Sku",
                        "properties": {
                          "tier": {
                            "type": "string",
                            "description": "The service tier",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The SKU name"
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                            "x-ms-mutability": [
                              "create",
                              "read",
                              "update"
                            ]
                          }
                        }
                      },
                      "properties": {
                        "description": "SQL pool properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "title": "SQL pool properties",
                        "properties": {
                          "maxSizeBytes": {
                            "type": "integer",
                            "description": "Maximum size in bytes",
                            "format": "int64"
                          },
                          "collation": {
                            "type": "string",
                            "description": "Collation mode",
                            "default": "",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "sourceDatabaseId": {
                            "type": "string",
                            "description": "Source database to create from",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "recoverableDatabaseId": {
                            "type": "string",
                            "description": "Backup database to restore from"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Resource state"
                          },
                          "status": {
                            "type": "string",
                            "description": "Resource status",
                            "readOnly": true
                          },
                          "restorePointInTime": {
                            "type": "string",
                            "description": "Snapshot time to restore",
                            "format": "date-time",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "createMode": {
                            "type": "string",
                            "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                            "enum": [
                              "Default",
                              "PointInTimeRestore",
                              "Recovery",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "createMode",
                              "modelAsString": true
                            },
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "creationDate": {
                            "type": "string",
                            "description": "Date the SQL pool was created",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "storageAccountType": {
                            "description": "The storage account type used to store backups for this sql pool.",
                            "enum": [
                              "GRS",
                              "LRS"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "StorageAccountType",
                              "modelAsString": true
                            },
                            "default": "GRS"
                          },
                          "sourceDatabaseDeletionDate": {
                            "type": "string",
                            "description": "Specifies the time that the sql pool was deleted",
                            "format": "date-time",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/pause": {
      "post": {
        "operationId": "SqlPools_Pause",
        "summary": "Pause SQL pool",
        "description": "Pause a SQL pool",
        "tags": [
          "SqlPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Accepted"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/resume": {
      "post": {
        "operationId": "SqlPools_Resume",
        "summary": "Resume SQL pool",
        "description": "Resume a SQL pool",
        "tags": [
          "SqlPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Accepted"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/metadataSync/config": {
      "get": {
        "operationId": "SqlPoolMetadataSyncConfigs_Get",
        "summary": "Get SQL pool metadata sync config",
        "description": "Get the metadata sync configuration for a SQL pool",
        "tags": [
          "SqlPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "Metadata sync configuration",
              "description": "Configuration for metadata sync",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "title": "Metadata Sync Config properties",
                  "description": "Metadata Sync Config properties",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Indicates whether the metadata sync is enabled or disabled"
                    },
                    "syncIntervalInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The Sync Interval in minutes."
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "SqlPoolMetadataSyncConfigs_Create",
        "summary": "Set SQL pool metadata sync config",
        "description": "Set the metadata sync configuration for a SQL pool",
        "tags": [
          "SqlPools"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "description": "Metadata sync configuration",
            "schema": {
              "type": "object",
              "title": "Metadata sync configuration",
              "description": "Configuration for metadata sync",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "title": "Metadata Sync Config properties",
                  "description": "Metadata Sync Config properties",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Indicates whether the metadata sync is enabled or disabled"
                    },
                    "syncIntervalInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The Sync Interval in minutes."
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            },
            "in": "body",
            "name": "metadataSyncConfiguration",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "Metadata sync configuration",
              "description": "Configuration for metadata sync",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "title": "Metadata Sync Config properties",
                  "description": "Metadata Sync Config properties",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Indicates whether the metadata sync is enabled or disabled"
                    },
                    "syncIntervalInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The Sync Interval in minutes."
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/operationResults/{operationId}": {
      "get": {
        "operationId": "SqlPoolOperationResults_GetLocationHeaderResult",
        "summary": "Get SQL pool operation status",
        "description": "Get the status of a SQL pool operation",
        "tags": [
          "Operations"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "type": "string",
            "in": "path",
            "name": "operationId",
            "description": "Operation ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "202": {
            "schema": {
              "type": "object",
              "title": "SQL pool",
              "description": "A SQL Analytics pool",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "SQL pool SKU",
                  "type": "object",
                  "title": "Sku",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The service tier",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The SKU name"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    }
                  }
                },
                "properties": {
                  "description": "SQL pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "title": "SQL pool properties",
                  "properties": {
                    "maxSizeBytes": {
                      "type": "integer",
                      "description": "Maximum size in bytes",
                      "format": "int64"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation mode",
                      "default": "",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sourceDatabaseId": {
                      "type": "string",
                      "description": "Source database to create from",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recoverableDatabaseId": {
                      "type": "string",
                      "description": "Backup database to restore from"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Resource state"
                    },
                    "status": {
                      "type": "string",
                      "description": "Resource status",
                      "readOnly": true
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "description": "Snapshot time to restore",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Recovery",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "createMode",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "creationDate": {
                      "type": "string",
                      "description": "Date the SQL pool was created",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "storageAccountType": {
                      "description": "The storage account type used to store backups for this sql pool.",
                      "enum": [
                        "GRS",
                        "LRS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageAccountType",
                        "modelAsString": true
                      },
                      "default": "GRS"
                    },
                    "sourceDatabaseDeletionDate": {
                      "type": "string",
                      "description": "Specifies the time that the sql pool was deleted",
                      "format": "date-time",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Accepted"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/geoBackupPolicies": {
      "get": {
        "operationId": "SqlPoolGeoBackupPolicies_List",
        "summary": "List SQL pool geo backup policies",
        "description": "Get list of SQL pool geo backup policies",
        "tags": [
          "SqlPools, GeoBackupPolicies"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "The properties of the geo backup policy.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "state": {
                            "type": "string",
                            "description": "The state of the geo backup policy.",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "GeoBackupPolicyState"
                            }
                          },
                          "storageType": {
                            "type": "string",
                            "description": "The storage type of the geo backup policy.",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "state"
                        ]
                      },
                      "kind": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Kind of geo backup policy.  This is metadata used for the Azure portal experience."
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Backup policy location."
                      }
                    },
                    "required": [
                      "properties"
                    ],
                    "description": "A database geo backup policy."
                  },
                  "description": "The list of geo backup policies."
                }
              },
              "description": "The response to a list geo backup policies request."
            },
            "description": "OK"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/geoBackupPolicies/{geoBackupPolicyName}": {
      "put": {
        "tags": [
          "SqlPools, GeoBackupPolicies"
        ],
        "deprecated": false,
        "operationId": "SqlPoolGeoBackupPolicies_CreateOrUpdate",
        "description": "Updates a SQL Pool geo backup policy.",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "geoBackupPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "description": "The name of the geo backup policy.",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "GeoBackupPolicyName"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "The properties of the geo backup policy.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "The state of the geo backup policy.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "GeoBackupPolicyState"
                      }
                    },
                    "storageType": {
                      "type": "string",
                      "description": "The storage type of the geo backup policy.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "state"
                  ]
                },
                "kind": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Kind of geo backup policy.  This is metadata used for the Azure portal experience."
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Backup policy location."
                }
              },
              "required": [
                "properties"
              ],
              "description": "A database geo backup policy."
            },
            "description": "The required parameters for creating or updating the geo backup policy."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "The properties of the geo backup policy.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "The state of the geo backup policy.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "GeoBackupPolicyState"
                      }
                    },
                    "storageType": {
                      "type": "string",
                      "description": "The storage type of the geo backup policy.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "state"
                  ]
                },
                "kind": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Kind of geo backup policy.  This is metadata used for the Azure portal experience."
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Backup policy location."
                }
              },
              "required": [
                "properties"
              ],
              "description": "A database geo backup policy."
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "The properties of the geo backup policy.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "The state of the geo backup policy.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "GeoBackupPolicyState"
                      }
                    },
                    "storageType": {
                      "type": "string",
                      "description": "The storage type of the geo backup policy.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "state"
                  ]
                },
                "kind": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Kind of geo backup policy.  This is metadata used for the Azure portal experience."
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Backup policy location."
                }
              },
              "required": [
                "properties"
              ],
              "description": "A database geo backup policy."
            }
          }
        }
      },
      "get": {
        "operationId": "SqlPoolGeoBackupPolicies_Get",
        "summary": "Get a SQL pool geo backup policy",
        "description": "Get the specified SQL pool geo backup policy",
        "tags": [
          "SqlPools, GeoBackupPolicies"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "geoBackupPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "description": "The name of the geo backup policy.",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "GeoBackupPolicyName"
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "The properties of the geo backup policy.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "The state of the geo backup policy.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "GeoBackupPolicyState"
                      }
                    },
                    "storageType": {
                      "type": "string",
                      "description": "The storage type of the geo backup policy.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "state"
                  ]
                },
                "kind": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Kind of geo backup policy.  This is metadata used for the Azure portal experience."
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Backup policy location."
                }
              },
              "required": [
                "properties"
              ],
              "description": "A database geo backup policy."
            },
            "description": "OK"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataWarehouseUserActivities/{dataWarehouseUserActivityName}": {
      "get": {
        "operationId": "SqlPoolDataWarehouseUserActivities_Get",
        "summary": "Get SQL pool user activities",
        "description": "Gets the user activities of a SQL pool which includes running and suspended queries",
        "tags": [
          "SqlPools, SqlPoolUserActivities"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "dataWarehouseUserActivityName",
            "in": "path",
            "description": "The activity name of the Sql pool. ",
            "required": true,
            "type": "string",
            "enum": [
              "current"
            ],
            "x-ms-enum": {
              "name": "DataWarehouseUserActivityName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "User activities of a data warehouse",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "activeQueriesCount": {
                      "format": "int32",
                      "description": "Count of running and suspended queries.",
                      "type": "integer",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/restorePoints": {
      "get": {
        "operationId": "SqlPoolRestorePoints_List",
        "summary": "Get SQL pool backup",
        "description": "Get SQL pool backup information",
        "tags": [
          "SqlPools, Backup"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A list of long term retention backups.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "Database restore points.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "description": "Resource location.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "restorePointType": {
                            "description": "The type of restore point",
                            "enum": [
                              "CONTINUOUS",
                              "DISCRETE"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "RestorePointType",
                              "modelAsString": false
                            }
                          },
                          "earliestRestoreDate": {
                            "format": "date-time",
                            "description": "The earliest time to which this database can be restored",
                            "type": "string",
                            "readOnly": true
                          },
                          "restorePointCreationDate": {
                            "format": "date-time",
                            "description": "The time the backup was taken",
                            "type": "string",
                            "readOnly": true
                          },
                          "restorePointLabel": {
                            "description": "The label of restore point for backup request by user",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "description": "OK"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "SqlPools, RestorePoints"
        ],
        "description": "Creates a restore point for a data warehouse.",
        "operationId": "SqlPoolRestorePoints_Create",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The definition for creating the restore point of this Sql pool.",
            "required": true,
            "schema": {
              "description": "Contains the information necessary to perform a create Sql pool restore point operation.",
              "required": [
                "restorePointLabel"
              ],
              "type": "object",
              "properties": {
                "restorePointLabel": {
                  "description": "The restore point label to apply",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the restore point request.",
            "schema": {
              "description": "Database restore points.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "description": "Resource location.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "restorePointType": {
                      "description": "The type of restore point",
                      "enum": [
                        "CONTINUOUS",
                        "DISCRETE"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "RestorePointType",
                        "modelAsString": false
                      }
                    },
                    "earliestRestoreDate": {
                      "format": "date-time",
                      "description": "The earliest time to which this database can be restored",
                      "type": "string",
                      "readOnly": true
                    },
                    "restorePointCreationDate": {
                      "format": "date-time",
                      "description": "The time the backup was taken",
                      "type": "string",
                      "readOnly": true
                    },
                    "restorePointLabel": {
                      "description": "The label of restore point for backup request by user",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successfully created the restore point request.",
            "schema": {
              "description": "Database restore points.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "description": "Resource location.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "restorePointType": {
                      "description": "The type of restore point",
                      "enum": [
                        "CONTINUOUS",
                        "DISCRETE"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "RestorePointType",
                        "modelAsString": false
                      }
                    },
                    "earliestRestoreDate": {
                      "format": "date-time",
                      "description": "The earliest time to which this database can be restored",
                      "type": "string",
                      "readOnly": true
                    },
                    "restorePointCreationDate": {
                      "format": "date-time",
                      "description": "The time the backup was taken",
                      "type": "string",
                      "readOnly": true
                    },
                    "restorePointLabel": {
                      "description": "The label of restore point for backup request by user",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/replicationLinks": {
      "get": {
        "operationId": "SqlPoolReplicationLinks_List",
        "summary": "Get SQL pool replication links",
        "description": "Lists a Sql pool's replication links.",
        "tags": [
          "SqlPools, ReplicationLinks"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of resource this is.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the workspace that contains this firewall rule.",
                        "readOnly": true
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties representing the resource.",
                        "type": "object",
                        "properties": {
                          "isTerminationAllowed": {
                            "readOnly": true,
                            "type": "boolean",
                            "description": "Legacy value indicating whether termination is allowed.  Currently always returns true."
                          },
                          "replicationMode": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Replication mode of this replication link."
                          },
                          "partnerServer": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the workspace hosting the partner Sql pool."
                          },
                          "partnerDatabase": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the partner Sql pool."
                          },
                          "partnerLocation": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The Azure Region of the partner Sql pool."
                          },
                          "role": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The role of the Sql pool in the replication link.",
                            "enum": [
                              "Primary",
                              "Secondary",
                              "NonReadableSecondary",
                              "Source",
                              "Copy"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationRole"
                            }
                          },
                          "partnerRole": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The role of the partner Sql pool in the replication link.",
                            "enum": [
                              "Primary",
                              "Secondary",
                              "NonReadableSecondary",
                              "Source",
                              "Copy"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationRole"
                            }
                          },
                          "startTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The start time for the replication link."
                          },
                          "percentComplete": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32",
                            "description": "The percentage of seeding complete for the replication link."
                          },
                          "replicationState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The replication state for the replication link.",
                            "enum": [
                              "PENDING",
                              "SEEDING",
                              "CATCH_UP",
                              "SUSPENDED"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationState",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "description": "Represents a Sql pool replication link."
                  },
                  "description": "The list of Sql pool replication links housed in the Sql pool."
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "description": "Represents the response to a List Sql pool replication link request."
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/replicationLinks/{linkId}": {
      "get": {
        "operationId": "SqlPoolReplicationLinks_GetByName",
        "summary": "Get SQL pool replication link by name",
        "description": "Get SQL pool replication link by name.",
        "tags": [
          "SqlPools, ReplicationLinks"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "linkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the replication link."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "type": "string",
                  "description": "Type of resource this is.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Location of the workspace that contains this firewall rule.",
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties representing the resource.",
                  "type": "object",
                  "properties": {
                    "isTerminationAllowed": {
                      "readOnly": true,
                      "type": "boolean",
                      "description": "Legacy value indicating whether termination is allowed.  Currently always returns true."
                    },
                    "replicationMode": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Replication mode of this replication link."
                    },
                    "partnerServer": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the workspace hosting the partner Sql pool."
                    },
                    "partnerDatabase": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the partner Sql pool."
                    },
                    "partnerLocation": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The Azure Region of the partner Sql pool."
                    },
                    "role": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The role of the Sql pool in the replication link.",
                      "enum": [
                        "Primary",
                        "Secondary",
                        "NonReadableSecondary",
                        "Source",
                        "Copy"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole"
                      }
                    },
                    "partnerRole": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The role of the partner Sql pool in the replication link.",
                      "enum": [
                        "Primary",
                        "Secondary",
                        "NonReadableSecondary",
                        "Source",
                        "Copy"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole"
                      }
                    },
                    "startTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time for the replication link."
                    },
                    "percentComplete": {
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32",
                      "description": "The percentage of seeding complete for the replication link."
                    },
                    "replicationState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The replication state for the replication link.",
                      "enum": [
                        "PENDING",
                        "SEEDING",
                        "CATCH_UP",
                        "SUSPENDED"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Represents a Sql pool replication link."
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/maintenancewindows/current": {
      "get": {
        "operationId": "SqlPoolMaintenanceWindows_Get",
        "summary": "Get a SQL pool's Maintenance Windows.",
        "description": "Get a SQL pool's Maintenance Windows.",
        "tags": [
          "SqlPools, MaintenanceWindows"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "maintenanceWindowName",
            "in": "query",
            "description": "Maintenance window name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Maintenance windows.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "timeRanges": {
                      "type": "array",
                      "items": {
                        "description": "Maintenance window time range.",
                        "type": "object",
                        "properties": {
                          "dayOfWeek": {
                            "description": "Day of maintenance window.",
                            "enum": [
                              "Sunday",
                              "Monday",
                              "Tuesday",
                              "Wednesday",
                              "Thursday",
                              "Friday",
                              "Saturday"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "DayOfWeek",
                              "modelAsString": true
                            }
                          },
                          "startTime": {
                            "description": "Start time minutes offset from 12am.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of maintenance window in minutes.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "SqlPoolMaintenanceWindows_CreateOrUpdate",
        "summary": "Creates or updates a Sql pool's maintenance windows settings.",
        "description": "Creates or updates a Sql pool's maintenance windows settings.",
        "tags": [
          "SqlPools, MaintenanceWindows"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "maintenanceWindowName",
            "in": "query",
            "description": "Maintenance window name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Maintenance windows.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "timeRanges": {
                      "type": "array",
                      "items": {
                        "description": "Maintenance window time range.",
                        "type": "object",
                        "properties": {
                          "dayOfWeek": {
                            "description": "Day of maintenance window.",
                            "enum": [
                              "Sunday",
                              "Monday",
                              "Tuesday",
                              "Wednesday",
                              "Thursday",
                              "Friday",
                              "Saturday"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "DayOfWeek",
                              "modelAsString": true
                            }
                          },
                          "startTime": {
                            "description": "Start time minutes offset from 12am.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of maintenance window in minutes.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            },
            "description": "The required parameters for creating or updating Maintenance Windows settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully set maintenance windows settings."
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/maintenanceWindowOptions/current": {
      "get": {
        "operationId": "SqlPoolMaintenanceWindowOptions_Get",
        "summary": "SQL pool's available maintenance windows.",
        "description": "Get list of SQL pool's available maintenance windows.",
        "tags": [
          "SqlPools, MaintenanceWindowOptions"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "maintenanceWindowOptionsName",
            "in": "query",
            "description": "Maintenance window options name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of maintenance windows options.",
            "schema": {
              "description": "Maintenance window options.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "isEnabled": {
                      "description": "Whether maintenance windows are enabled for the database.",
                      "type": "boolean"
                    },
                    "maintenanceWindowCycles": {
                      "description": "Available maintenance cycles e.g. {Saturday, 0, 48*60}, {Wednesday, 0, 24*60}.",
                      "type": "array",
                      "items": {
                        "description": "Maintenance window time range.",
                        "type": "object",
                        "properties": {
                          "dayOfWeek": {
                            "description": "Day of maintenance window.",
                            "enum": [
                              "Sunday",
                              "Monday",
                              "Tuesday",
                              "Wednesday",
                              "Thursday",
                              "Friday",
                              "Saturday"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "DayOfWeek",
                              "modelAsString": true
                            }
                          },
                          "startTime": {
                            "description": "Start time minutes offset from 12am.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration of maintenance window in minutes.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "minDurationInMinutes": {
                      "format": "int32",
                      "description": "Minimum duration of maintenance window.",
                      "type": "integer"
                    },
                    "defaultDurationInMinutes": {
                      "format": "int32",
                      "description": "Default duration for maintenance window.",
                      "type": "integer"
                    },
                    "minCycles": {
                      "format": "int32",
                      "description": "Minimum number of maintenance windows cycles to be set on the database.",
                      "type": "integer"
                    },
                    "timeGranularityInMinutes": {
                      "format": "int32",
                      "description": "Time granularity in minutes for maintenance windows.",
                      "type": "integer"
                    },
                    "allowMultipleMaintenanceWindowsPerCycle": {
                      "description": "Whether we allow multiple maintenance windows per cycle.",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/transparentDataEncryption/{transparentDataEncryptionName}": {
      "get": {
        "operationId": "SqlPoolTransparentDataEncryptions_Get",
        "summary": "Get a SQL pool's transparent data encryption configuration",
        "description": "Get a SQL pool's transparent data encryption configuration.",
        "tags": [
          "SqlPools, TransparentDataEncryption"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "transparentDataEncryptionName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "current"
            ],
            "description": "The name of the transparent data encryption configuration.",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TransparentDataEncryptionName"
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource location."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Represents the properties of the resource.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the database transparent data encryption.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "TransparentDataEncryptionStatus"
                      }
                    }
                  }
                }
              },
              "description": "Represents a Sql pool transparent data encryption configuration."
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "SqlPoolTransparentDataEncryptions_CreateOrUpdate",
        "summary": "Creates or updates a Sql pool's transparent data encryption configuration",
        "description": "Creates or updates a Sql pool's transparent data encryption configuration.",
        "tags": [
          "SqlPools, TransparentDataEncryption"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "transparentDataEncryptionName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "current"
            ],
            "description": "The name of the transparent data encryption configuration.",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TransparentDataEncryptionName"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource location."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Represents the properties of the resource.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the database transparent data encryption.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "TransparentDataEncryptionStatus"
                      }
                    }
                  }
                }
              },
              "description": "Represents a Sql pool transparent data encryption configuration."
            },
            "description": "The required parameters for creating or updating transparent data encryption."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource location."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Represents the properties of the resource.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the database transparent data encryption.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "TransparentDataEncryptionStatus"
                      }
                    }
                  }
                }
              },
              "description": "Represents a Sql pool transparent data encryption configuration."
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource location."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Represents the properties of the resource.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the database transparent data encryption.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "TransparentDataEncryptionStatus"
                      }
                    }
                  }
                }
              },
              "description": "Represents a Sql pool transparent data encryption configuration."
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/transparentDataEncryption": {
      "get": {
        "operationId": "SqlPoolTransparentDataEncryptions_List",
        "summary": "SQL pool's transparent data encryption configurations",
        "description": "Get list of SQL pool's transparent data encryption configurations.",
        "tags": [
          "SqlPools, TransparentDataEncryption"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A list of transparent data encryption configurations.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource location."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Represents the properties of the resource.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the database transparent data encryption.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "TransparentDataEncryptionStatus"
                            }
                          }
                        }
                      }
                    },
                    "description": "Represents a Sql pool transparent data encryption configuration."
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/auditingSettings/{blobAuditingPolicyName}": {
      "get": {
        "operationId": "SqlPoolBlobAuditingPolicies_Get",
        "summary": "Get a SQL pool's blob auditing policy",
        "description": "Get a SQL pool's blob auditing policy.",
        "tags": [
          "SqlPools, BlobAuditing"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "blobAuditingPolicyName",
            "in": "path",
            "description": "The name of the blob auditing policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobAuditingPolicyName",
              "modelAsString": false
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A Sql pool blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "kind": {
                  "description": "Resource kind.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "SqlPoolBlobAuditingPolicies_CreateOrUpdate",
        "summary": "Creates or updates a SQL pool's blob auditing policy",
        "description": "Creates or updates a SQL pool's blob auditing policy.",
        "tags": [
          "SqlPools, BlobAuditing"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "blobAuditingPolicyName",
            "in": "path",
            "description": "The name of the blob auditing policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobAuditingPolicyName",
              "modelAsString": false
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The database blob auditing policy.",
            "required": true,
            "schema": {
              "description": "A Sql pool blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "kind": {
                  "description": "Resource kind.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully set the Sql pool blob auditing policy",
            "schema": {
              "description": "A Sql pool blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "kind": {
                  "description": "Resource kind.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successfully created the Sql pool blob auditing policy.",
            "schema": {
              "description": "A Sql pool blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "kind": {
                  "description": "Resource kind.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/operations": {
      "get": {
        "operationId": "SqlPoolOperations_List",
        "summary": "Gets a list of operations performed on the SQL pool",
        "description": "Gets a list of operations performed on the SQL pool.",
        "tags": [
          "SqlPools, Operations"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The response to a list Sql pool operations request",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A Sql pool operation.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "databaseName": {
                            "description": "The name of the Sql pool the operation is being performed on.",
                            "type": "string",
                            "readOnly": true
                          },
                          "operation": {
                            "description": "The name of operation.",
                            "type": "string",
                            "readOnly": true
                          },
                          "operationFriendlyName": {
                            "description": "The friendly name of operation.",
                            "type": "string",
                            "readOnly": true
                          },
                          "percentComplete": {
                            "format": "int32",
                            "description": "The percentage of the operation completed.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "serverName": {
                            "description": "The name of the server.",
                            "type": "string",
                            "readOnly": true
                          },
                          "startTime": {
                            "format": "date-time",
                            "description": "The operation start time.",
                            "type": "string",
                            "readOnly": true
                          },
                          "state": {
                            "description": "The operation state.",
                            "enum": [
                              "Pending",
                              "InProgress",
                              "Succeeded",
                              "Failed",
                              "CancelInProgress",
                              "Cancelled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ManagementOperationState",
                              "modelAsString": true
                            }
                          },
                          "errorCode": {
                            "format": "int32",
                            "description": "The operation error code.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "errorDescription": {
                            "description": "The operation error description.",
                            "type": "string",
                            "readOnly": true
                          },
                          "errorSeverity": {
                            "format": "int32",
                            "description": "The operation error severity.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "isUserError": {
                            "description": "Whether or not the error is a user error.",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "estimatedCompletionTime": {
                            "format": "date-time",
                            "description": "The estimated completion time of the operation.",
                            "type": "string",
                            "readOnly": true
                          },
                          "description": {
                            "description": "The operation description.",
                            "type": "string",
                            "readOnly": true
                          },
                          "isCancellable": {
                            "description": "Whether the operation can be cancelled.",
                            "type": "boolean",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/usages": {
      "get": {
        "operationId": "SqlPoolUsages_List",
        "summary": "Gets SQL pool usages",
        "description": "Gets SQL pool usages.",
        "tags": [
          "SqlPools, Usages"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the usage metric."
                      },
                      "resourceName": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource."
                      },
                      "displayName": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The usage metric display name."
                      },
                      "currentValue": {
                        "readOnly": true,
                        "type": "number",
                        "format": "double",
                        "description": "The current value of the usage metric."
                      },
                      "limit": {
                        "readOnly": true,
                        "type": "number",
                        "format": "double",
                        "description": "The current limit of the usage metric."
                      },
                      "unit": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The units of the usage metric."
                      },
                      "nextResetTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The next reset time for the usage metric (ISO8601 format)."
                      }
                    },
                    "description": "The Sql pool usages."
                  },
                  "description": "The list of usages for the Sql pool.",
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ],
              "description": "The response to a list Sql pool usages request."
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/currentSensitivityLabels": {
      "get": {
        "operationId": "SqlPoolSensitivityLabels_ListCurrent",
        "summary": "Gets SQL pool sensitivity labels",
        "description": "Gets SQL pool sensitivity labels.",
        "tags": [
          "SqlPools, SensitivityLabels"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that filters elements in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A list of sensitivity labels.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A sensitivity label.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "schemaName": {
                            "description": "The schema name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "tableName": {
                            "description": "The table name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "columnName": {
                            "description": "The column name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "labelName": {
                            "description": "The label name.",
                            "type": "string"
                          },
                          "labelId": {
                            "description": "The label ID.",
                            "type": "string"
                          },
                          "informationType": {
                            "description": "The information type.",
                            "type": "string"
                          },
                          "informationTypeId": {
                            "description": "The information type ID.",
                            "type": "string"
                          },
                          "isDisabled": {
                            "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "rank": {
                            "enum": [
                              "None",
                              "Low",
                              "Medium",
                              "High",
                              "Critical"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SensitivityLabelRank",
                              "modelAsString": false
                            }
                          }
                        }
                      },
                      "managedBy": {
                        "type": "string",
                        "readOnly": true,
                        "description": "managed by"
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "x-ms-odata": "#/definitions/SensitivityLabel"
      },
      "patch": {
        "tags": [
          "SqlPools, SensitivityLabels"
        ],
        "description": "Update sensitivity labels of a given SQL Pool using an operations batch.",
        "operationId": "SqlPoolSensitivityLabels_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A list of sensitivity label update operations.",
              "type": "object",
              "properties": {
                "operations": {
                  "type": "array",
                  "items": {
                    "description": "A sensitivity label update operation.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "op",
                          "schema",
                          "table",
                          "column"
                        ],
                        "type": "object",
                        "properties": {
                          "op": {
                            "enum": [
                              "set",
                              "remove"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SensitivityLabelUpdateKind",
                              "modelAsString": false
                            }
                          },
                          "schema": {
                            "description": "Schema name of the column to update.",
                            "type": "string"
                          },
                          "table": {
                            "description": "Table name of the column to update.",
                            "type": "string"
                          },
                          "column": {
                            "description": "Column name to update.",
                            "type": "string"
                          },
                          "sensitivityLabel": {
                            "description": "A sensitivity label.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "readOnly": true,
                                "type": "string",
                                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                              },
                              "name": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The name of the resource"
                              },
                              "type": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                              },
                              "properties": {
                                "description": "Resource properties.",
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "schemaName": {
                                    "description": "The schema name.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "tableName": {
                                    "description": "The table name.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "columnName": {
                                    "description": "The column name.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "labelName": {
                                    "description": "The label name.",
                                    "type": "string"
                                  },
                                  "labelId": {
                                    "description": "The label ID.",
                                    "type": "string"
                                  },
                                  "informationType": {
                                    "description": "The information type.",
                                    "type": "string"
                                  },
                                  "informationTypeId": {
                                    "description": "The information type ID.",
                                    "type": "string"
                                  },
                                  "isDisabled": {
                                    "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                                    "type": "boolean",
                                    "readOnly": true
                                  },
                                  "rank": {
                                    "enum": [
                                      "None",
                                      "Low",
                                      "Medium",
                                      "High",
                                      "Critical"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "SensitivityLabelRank",
                                      "modelAsString": false
                                    }
                                  }
                                }
                              },
                              "managedBy": {
                                "type": "string",
                                "readOnly": true,
                                "description": "managed by"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated sensitivity labels."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/recommendedSensitivityLabels": {
      "get": {
        "operationId": "SqlPoolSensitivityLabels_ListRecommended",
        "summary": "Gets sensitivity labels of a given SQL pool",
        "description": "Gets sensitivity labels of a given SQL pool.",
        "tags": [
          "SqlPools, SensitivityLabels"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "includeDisabledRecommendations",
            "in": "query",
            "description": "Specifies whether to include disabled recommendations or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "An OData query option to indicate how many elements to skip in the collection.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that filters elements in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A list of sensitivity labels.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A sensitivity label.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "schemaName": {
                            "description": "The schema name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "tableName": {
                            "description": "The table name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "columnName": {
                            "description": "The column name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "labelName": {
                            "description": "The label name.",
                            "type": "string"
                          },
                          "labelId": {
                            "description": "The label ID.",
                            "type": "string"
                          },
                          "informationType": {
                            "description": "The information type.",
                            "type": "string"
                          },
                          "informationTypeId": {
                            "description": "The information type ID.",
                            "type": "string"
                          },
                          "isDisabled": {
                            "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "rank": {
                            "enum": [
                              "None",
                              "Low",
                              "Medium",
                              "High",
                              "Critical"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SensitivityLabelRank",
                              "modelAsString": false
                            }
                          }
                        }
                      },
                      "managedBy": {
                        "type": "string",
                        "readOnly": true,
                        "description": "managed by"
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "x-ms-odata": "#/definitions/SensitivityLabel"
      },
      "patch": {
        "tags": [
          "SqlPools, SensitivityLabels"
        ],
        "description": "Update recommended sensitivity labels states of a given SQL Pool using an operations batch.",
        "operationId": "SqlPoolRecommendedSensitivityLabels_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A list of recommended sensitivity label update operations.",
              "type": "object",
              "properties": {
                "operations": {
                  "type": "array",
                  "items": {
                    "description": "A recommended sensitivity label update operation.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "op",
                          "schema",
                          "table",
                          "column"
                        ],
                        "type": "object",
                        "properties": {
                          "op": {
                            "enum": [
                              "enable",
                              "disable"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "RecommendedSensitivityLabelUpdateKind",
                              "modelAsString": false
                            }
                          },
                          "schema": {
                            "description": "Schema name of the column to update.",
                            "type": "string"
                          },
                          "table": {
                            "description": "Table name of the column to update.",
                            "type": "string"
                          },
                          "column": {
                            "description": "Column name to update.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated recommended sensitivity labels."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}": {
      "put": {
        "tags": [
          "SqlPools, SensitivityLabels"
        ],
        "description": "Creates or updates the sensitivity label of a given column in a Sql pool",
        "operationId": "SqlPoolSensitivityLabels_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "The name of the table.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "The name of the column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sensitivityLabelSource",
            "in": "path",
            "description": "The source of the sensitivity label.",
            "required": true,
            "type": "string",
            "enum": [
              "current"
            ],
            "x-ms-enum": {
              "name": "WritableSensitivityLabelSource",
              "modelAsString": false
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The column sensitivity label resource.",
            "required": true,
            "schema": {
              "description": "A sensitivity label.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "schemaName": {
                      "description": "The schema name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "tableName": {
                      "description": "The table name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "columnName": {
                      "description": "The column name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "labelName": {
                      "description": "The label name.",
                      "type": "string"
                    },
                    "labelId": {
                      "description": "The label ID.",
                      "type": "string"
                    },
                    "informationType": {
                      "description": "The information type.",
                      "type": "string"
                    },
                    "informationTypeId": {
                      "description": "The information type ID.",
                      "type": "string"
                    },
                    "isDisabled": {
                      "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "rank": {
                      "enum": [
                        "None",
                        "Low",
                        "Medium",
                        "High",
                        "Critical"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SensitivityLabelRank",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "managedBy": {
                  "type": "string",
                  "readOnly": true,
                  "description": "managed by"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the sensitivity label.",
            "schema": {
              "description": "A sensitivity label.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "schemaName": {
                      "description": "The schema name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "tableName": {
                      "description": "The table name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "columnName": {
                      "description": "The column name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "labelName": {
                      "description": "The label name.",
                      "type": "string"
                    },
                    "labelId": {
                      "description": "The label ID.",
                      "type": "string"
                    },
                    "informationType": {
                      "description": "The information type.",
                      "type": "string"
                    },
                    "informationTypeId": {
                      "description": "The information type ID.",
                      "type": "string"
                    },
                    "isDisabled": {
                      "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "rank": {
                      "enum": [
                        "None",
                        "Low",
                        "Medium",
                        "High",
                        "Critical"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SensitivityLabelRank",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "managedBy": {
                  "type": "string",
                  "readOnly": true,
                  "description": "managed by"
                }
              }
            }
          },
          "201": {
            "description": "Successfully created the sensitivity label.",
            "schema": {
              "description": "A sensitivity label.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "schemaName": {
                      "description": "The schema name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "tableName": {
                      "description": "The table name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "columnName": {
                      "description": "The column name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "labelName": {
                      "description": "The label name.",
                      "type": "string"
                    },
                    "labelId": {
                      "description": "The label ID.",
                      "type": "string"
                    },
                    "informationType": {
                      "description": "The information type.",
                      "type": "string"
                    },
                    "informationTypeId": {
                      "description": "The information type ID.",
                      "type": "string"
                    },
                    "isDisabled": {
                      "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "rank": {
                      "enum": [
                        "None",
                        "Low",
                        "Medium",
                        "High",
                        "Critical"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SensitivityLabelRank",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "managedBy": {
                  "type": "string",
                  "readOnly": true,
                  "description": "managed by"
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "SqlPools, SensitivityLabels"
        ],
        "description": "Deletes the sensitivity label of a given column in a Sql pool",
        "operationId": "SqlPoolSensitivityLabels_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "The name of the table.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "The name of the column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sensitivityLabelSource",
            "in": "path",
            "description": "The source of the sensitivity label.",
            "required": true,
            "type": "string",
            "enum": [
              "current"
            ],
            "x-ms-enum": {
              "name": "WritableSensitivityLabelSource",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the sensitivity label."
          },
          "204": {
            "description": "No content"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "SqlPools, SensitivityLabels"
        ],
        "description": "Gets the sensitivity label of a given column",
        "operationId": "SqlPoolSensitivityLabels_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "The name of the table.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "The name of the column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sensitivityLabelSource",
            "in": "path",
            "description": "The source of the sensitivity label.",
            "required": true,
            "type": "string",
            "enum": [
              "current",
              "recommended"
            ],
            "x-ms-enum": {
              "name": "SensitivityLabelSource",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the sensitivity label.",
            "schema": {
              "description": "A sensitivity label.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "schemaName": {
                      "description": "The schema name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "tableName": {
                      "description": "The table name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "columnName": {
                      "description": "The column name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "labelName": {
                      "description": "The label name.",
                      "type": "string"
                    },
                    "labelId": {
                      "description": "The label ID.",
                      "type": "string"
                    },
                    "informationType": {
                      "description": "The information type.",
                      "type": "string"
                    },
                    "informationTypeId": {
                      "description": "The information type ID.",
                      "type": "string"
                    },
                    "isDisabled": {
                      "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "rank": {
                      "enum": [
                        "None",
                        "Low",
                        "Medium",
                        "High",
                        "Critical"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SensitivityLabelRank",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "managedBy": {
                  "type": "string",
                  "readOnly": true,
                  "description": "managed by"
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/enable": {
      "post": {
        "tags": [
          "SensitivityLabels"
        ],
        "description": "Enables sensitivity recommendations on a given column (recommendations are enabled by default on all columns)",
        "operationId": "SqlPoolSensitivityLabels_EnableRecommendation",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "The name of the table.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "The name of the column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sensitivityLabelSource",
            "in": "path",
            "description": "The source of the sensitivity label.",
            "required": true,
            "type": "string",
            "enum": [
              "recommended"
            ],
            "x-ms-enum": {
              "name": "WritableSensitivityLabelSource",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully enabled the sensitivity recommendations on the given column."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/disable": {
      "post": {
        "tags": [
          "SensitivityLabels"
        ],
        "description": "Disables sensitivity recommendations on a given column",
        "operationId": "SqlPoolSensitivityLabels_DisableRecommendation",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "The name of the table.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "The name of the column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sensitivityLabelSource",
            "in": "path",
            "description": "The source of the sensitivity label.",
            "required": true,
            "type": "string",
            "enum": [
              "recommended"
            ],
            "x-ms-enum": {
              "name": "WritableSensitivityLabelSource",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled the sensitivity recommendation on the given column."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas": {
      "get": {
        "operationId": "SqlPoolSchemas_List",
        "summary": "Gets schemas of a given SQL pool",
        "description": "Gets schemas of a given SQL pool.",
        "tags": [
          "SqlPools, Schemas"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that filters elements in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A list of Sql pool schemas.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A Sql pool schema resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "x-ms-odata": "#/definitions/SqlPoolSchema"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables": {
      "get": {
        "operationId": "SqlPoolTables_ListBySchema",
        "summary": "Gets tables of a given schema in a SQL pool",
        "description": "Gets tables of a given schema in a SQL pool.",
        "tags": [
          "SqlPools, Tables"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that filters elements in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A list of Sql pool tables.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A Sql pool table resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "x-ms-odata": "#/definitions/SqlPoolTable"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns": {
      "get": {
        "operationId": "SqlPoolTableColumns_ListByTableName",
        "summary": "Gets columns in a given table in a SQL pool",
        "description": "Gets columns in a given table in a SQL pool.",
        "tags": [
          "SqlPools, Tables"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "The name of the table.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that filters elements in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A list of Sql pool columns.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A Sql pool column resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "columnType": {
                            "description": "The column data type.",
                            "enum": [
                              "image",
                              "text",
                              "uniqueidentifier",
                              "date",
                              "time",
                              "datetime2",
                              "datetimeoffset",
                              "tinyint",
                              "smallint",
                              "int",
                              "smalldatetime",
                              "real",
                              "money",
                              "datetime",
                              "float",
                              "sql_variant",
                              "ntext",
                              "bit",
                              "decimal",
                              "numeric",
                              "smallmoney",
                              "bigint",
                              "hierarchyid",
                              "geometry",
                              "geography",
                              "varbinary",
                              "varchar",
                              "binary",
                              "char",
                              "timestamp",
                              "nvarchar",
                              "nchar",
                              "xml",
                              "sysname"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ColumnDataType",
                              "modelAsString": true
                            }
                          },
                          "isComputed": {
                            "type": "boolean",
                            "description": "Indicates whether column value is computed or not",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "x-ms-odata": "#/definitions/SqlPoolColumn"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/connectionPolicies/{connectionPolicyName}": {
      "get": {
        "operationId": "SqlPoolConnectionPolicies_Get",
        "summary": "Get a Sql pool's connection policy, which is used with table auditing",
        "description": "Get a Sql pool's connection policy, which is used with table auditing.",
        "tags": [
          "SqlPools, ConnectionPolicies"
        ],
        "deprecated": true,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "connectionPolicyName",
            "in": "path",
            "description": "The name of the connection policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "ConnectionPolicyName",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A Sql pool connection policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "kind": {
                  "description": "Resource kind.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource location."
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "securityEnabledAccess": {
                      "description": "The state of security access.",
                      "type": "string"
                    },
                    "proxyDnsName": {
                      "description": "The fully qualified host name of the auditing proxy.",
                      "type": "string"
                    },
                    "proxyPort": {
                      "description": "The port number of the auditing proxy.",
                      "type": "string"
                    },
                    "visibility": {
                      "description": "The visibility of the auditing proxy.",
                      "type": "string"
                    },
                    "useServerDefault": {
                      "description": "Whether server default is enabled or disabled.",
                      "type": "string"
                    },
                    "redirectionState": {
                      "description": "The state of proxy redirection.",
                      "type": "string"
                    },
                    "state": {
                      "description": "The connection policy state.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments": {
      "get": {
        "operationId": "SqlPoolVulnerabilityAssessments_List",
        "summary": "Lists the vulnerability assessment policies associated with a SQL pool",
        "description": "Lists the vulnerability assessment policies associated with a SQL pool.",
        "tags": [
          "SqlPools, Schemas"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A list of the Sql pool's vulnerability assessments.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A Sql pool vulnerability assessment.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "storageContainerPath": {
                            "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update",
                              "read"
                            ]
                          },
                          "storageContainerSasKey": {
                            "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "storageAccountAccessKey": {
                            "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "recurringScans": {
                            "description": "The recurring scans settings",
                            "type": "object",
                            "properties": {
                              "isEnabled": {
                                "description": "Recurring scans state.",
                                "type": "boolean",
                                "x-ms-mutability": [
                                  "create",
                                  "read",
                                  "update"
                                ]
                              },
                              "emailSubscriptionAdmins": {
                                "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                                "default": true,
                                "type": "boolean"
                              },
                              "emails": {
                                "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans": {
      "get": {
        "operationId": "SqlPoolVulnerabilityAssessmentScans_List",
        "summary": "Lists the vulnerability assessment scans of a SQL pool",
        "description": "Lists the vulnerability assessment scans of a SQL pool.",
        "tags": [
          "SqlPools, Schemas"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A list of vulnerability assessment scan records.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A vulnerability assessment scan record.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "scanId": {
                            "description": "The scan ID.",
                            "type": "string",
                            "readOnly": true
                          },
                          "triggerType": {
                            "description": "The scan trigger type.",
                            "enum": [
                              "OnDemand",
                              "Recurring"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "VulnerabilityAssessmentScanTriggerType",
                              "modelAsString": true
                            }
                          },
                          "state": {
                            "description": "The scan status.",
                            "enum": [
                              "Passed",
                              "Failed",
                              "FailedToRun",
                              "InProgress"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "VulnerabilityAssessmentScanState",
                              "modelAsString": true
                            }
                          },
                          "startTime": {
                            "format": "date-time",
                            "description": "The scan start time (UTC).",
                            "type": "string",
                            "readOnly": true
                          },
                          "endTime": {
                            "format": "date-time",
                            "description": "The scan end time (UTC).",
                            "type": "string",
                            "readOnly": true
                          },
                          "errors": {
                            "description": "The scan errors.",
                            "type": "array",
                            "items": {
                              "description": "Properties of a vulnerability assessment scan error.",
                              "type": "object",
                              "properties": {
                                "code": {
                                  "description": "The error code.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "The error message.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "storageContainerPath": {
                            "description": "The scan results storage container path.",
                            "type": "string",
                            "readOnly": true
                          },
                          "numberOfFailedSecurityChecks": {
                            "format": "int32",
                            "description": "The number of failed security checks.",
                            "type": "integer",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/initiateScan": {
      "post": {
        "tags": [
          "SqlPools, VulnerabilityAssessmentScansExecute"
        ],
        "description": "Executes a Vulnerability Assessment database scan.",
        "operationId": "SqlPoolVulnerabilityAssessmentScans_InitiateScan",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "description": "The vulnerability assessment scan Id of the scan to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully executed a Vulnerability Assessment scan."
          },
          "202": {
            "description": "Successfully started a Vulnerability Assessment scan."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export": {
      "post": {
        "tags": [
          "SqlPools, VulnerabilityAssessmentScansExport"
        ],
        "description": "Convert an existing scan result to a human readable format. If already exists nothing happens",
        "operationId": "SqlPoolVulnerabilityAssessmentScans_Export",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "description": "The vulnerability assessment scan Id of the scan to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Scan result was converted successfully.",
            "schema": {
              "description": "A Sql pool Vulnerability Assessment scan export resource.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "exportedReportLocation": {
                      "description": "Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Scan result was converted successfully.",
            "schema": {
              "description": "A Sql pool Vulnerability Assessment scan export resource.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "exportedReportLocation": {
                      "description": "Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/securityAlertPolicies": {
      "get": {
        "operationId": "SqlPoolSecurityAlertPolicies_List",
        "summary": "List Sql pool's security alert policies",
        "description": "Get a list of Sql pool's security alert policies.",
        "tags": [
          "SqlPools, SecurityAlertPolicies"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A list of SQL pool security alert policies.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A Sql pool security alert policy.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "state"
                        ],
                        "type": "object",
                        "properties": {
                          "state": {
                            "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
                            "enum": [
                              "New",
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SecurityAlertPolicyState",
                              "modelAsString": false
                            }
                          },
                          "disabledAlerts": {
                            "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "emailAddresses": {
                            "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "emailAccountAdmins": {
                            "description": "Specifies that the alert is sent to the account administrators.",
                            "type": "boolean"
                          },
                          "storageEndpoint": {
                            "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                            "type": "string"
                          },
                          "storageAccountAccessKey": {
                            "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                            "type": "string"
                          },
                          "retentionDays": {
                            "format": "int32",
                            "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                            "type": "integer"
                          },
                          "creationTime": {
                            "format": "date-time",
                            "description": "Specifies the UTC creation time of the policy.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/securityAlertPolicies/{securityAlertPolicyName}": {
      "get": {
        "operationId": "SqlPoolSecurityAlertPolicies_Get",
        "summary": "Get a Sql pool's security alert policy",
        "description": "Get a Sql pool's security alert policy.",
        "tags": [
          "SqlPools, SecurityAlertPolicies"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "securityAlertPolicyName",
            "in": "path",
            "description": "The name of the security alert policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "SecurityAlertPolicyName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A Sql pool security alert policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
                      "enum": [
                        "New",
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SecurityAlertPolicyState",
                        "modelAsString": false
                      }
                    },
                    "disabledAlerts": {
                      "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAddresses": {
                      "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAccountAdmins": {
                      "description": "Specifies that the alert is sent to the account administrators.",
                      "type": "boolean"
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                      "type": "string"
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                      "type": "integer"
                    },
                    "creationTime": {
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "SqlPoolSecurityAlertPolicies_CreateOrUpdate",
        "summary": "Create or update a Sql pool's security alert policy",
        "description": "Create or update a Sql pool's security alert policy.",
        "tags": [
          "SqlPools, SecurityAlertPolicies"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "securityAlertPolicyName",
            "in": "path",
            "description": "The name of the security alert policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "SecurityAlertPolicyName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The Sql pool security alert policy.",
            "required": true,
            "schema": {
              "description": "A Sql pool security alert policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
                      "enum": [
                        "New",
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SecurityAlertPolicyState",
                        "modelAsString": false
                      }
                    },
                    "disabledAlerts": {
                      "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAddresses": {
                      "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAccountAdmins": {
                      "description": "Specifies that the alert is sent to the account administrators.",
                      "type": "boolean"
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                      "type": "string"
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                      "type": "integer"
                    },
                    "creationTime": {
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully set the Sql pool security alert policy",
            "schema": {
              "description": "A Sql pool security alert policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
                      "enum": [
                        "New",
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SecurityAlertPolicyState",
                        "modelAsString": false
                      }
                    },
                    "disabledAlerts": {
                      "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAddresses": {
                      "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAccountAdmins": {
                      "description": "Specifies that the alert is sent to the account administrators.",
                      "type": "boolean"
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                      "type": "string"
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                      "type": "integer"
                    },
                    "creationTime": {
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successfully created the Sql pool security alert policy.",
            "schema": {
              "description": "A Sql pool security alert policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
                      "enum": [
                        "New",
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SecurityAlertPolicyState",
                        "modelAsString": false
                      }
                    },
                    "disabledAlerts": {
                      "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAddresses": {
                      "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAccountAdmins": {
                      "description": "Specifies that the alert is sent to the account administrators.",
                      "type": "boolean"
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                      "type": "string"
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                      "type": "integer"
                    },
                    "creationTime": {
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}": {
      "put": {
        "tags": [
          "SqlPools, DatabaseVulnerabilityAssesmentRuleBaselines"
        ],
        "description": "Creates or updates a Sql pool's vulnerability assessment rule baseline.",
        "operationId": "SqlPoolVulnerabilityAssessmentRuleBaselines_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "The vulnerability assessment rule ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "baselineName",
            "in": "path",
            "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a Sql pool level rule and master for workspace level rule).",
            "required": true,
            "type": "string",
            "enum": [
              "master",
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentPolicyBaselineName",
              "modelAsString": false
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The requested rule baseline resource.",
            "required": true,
            "schema": {
              "description": "A Sql pool vulnerability assessment rule baseline.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "baselineResults"
                  ],
                  "type": "object",
                  "properties": {
                    "baselineResults": {
                      "description": "The rule baseline result",
                      "type": "array",
                      "items": {
                        "description": "Properties for an Sql pool vulnerability assessment rule baseline's result.",
                        "required": [
                          "result"
                        ],
                        "type": "object",
                        "properties": {
                          "result": {
                            "description": "The rule baseline result",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully set the vulnerability assessment rule baseline.",
            "schema": {
              "description": "A Sql pool vulnerability assessment rule baseline.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "baselineResults"
                  ],
                  "type": "object",
                  "properties": {
                    "baselineResults": {
                      "description": "The rule baseline result",
                      "type": "array",
                      "items": {
                        "description": "Properties for an Sql pool vulnerability assessment rule baseline's result.",
                        "required": [
                          "result"
                        ],
                        "type": "object",
                        "properties": {
                          "result": {
                            "description": "The rule baseline result",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "DatabaseVulnerabilityAssesmentRuleBaselines"
        ],
        "description": "Removes the database's vulnerability assessment rule baseline.",
        "operationId": "SqlPoolVulnerabilityAssessmentRuleBaselines_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "The vulnerability assessment rule ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "baselineName",
            "in": "path",
            "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a Sql pool level rule and master for workspace level rule).",
            "required": true,
            "type": "string",
            "enum": [
              "master",
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentPolicyBaselineName",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed the database vulnerability assessment rule baseline."
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "get": {
        "tags": [
          "SqlPools, SqlPoolVulnerabilityAssesmentRuleBaselines"
        ],
        "description": "Gets a SqlPool's vulnerability assessment rule baseline.",
        "operationId": "SqlPoolVulnerabilityAssessmentRuleBaselines_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "The vulnerability assessment rule ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "baselineName",
            "in": "path",
            "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a Sql pool level rule and master for server level rule).",
            "required": true,
            "type": "string",
            "enum": [
              "master",
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentPolicyBaselineName",
              "modelAsString": false
            }
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully got the vulnerability assessment rule baseline.",
            "schema": {
              "description": "A Sql pool vulnerability assessment rule baseline.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "baselineResults"
                  ],
                  "type": "object",
                  "properties": {
                    "baselineResults": {
                      "description": "The rule baseline result",
                      "type": "array",
                      "items": {
                        "description": "Properties for an Sql pool vulnerability assessment rule baseline's result.",
                        "required": [
                          "result"
                        ],
                        "type": "object",
                        "properties": {
                          "result": {
                            "description": "The rule baseline result",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}": {
      "get": {
        "tags": [
          "SqlPools, VulnerabilityAssessments"
        ],
        "summary": "Gets the Sql pool's vulnerability assessment",
        "description": "Gets the Sql pool's vulnerability assessment.",
        "operationId": "SqlPoolVulnerabilityAssessments_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Sql pool vulnerability assessment.",
            "schema": {
              "description": "A Sql pool vulnerability assessment.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storageContainerPath": {
                      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    },
                    "storageContainerSasKey": {
                      "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recurringScans": {
                      "description": "The recurring scans settings",
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "description": "Recurring scans state.",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "emailSubscriptionAdmins": {
                          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                          "default": true,
                          "type": "boolean"
                        },
                        "emails": {
                          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "SqlPools, VulnerabilityAssessments"
        ],
        "summary": "Creates or updates the Sql pool vulnerability assessment",
        "description": "Creates or updates the Sql pool vulnerability assessment.",
        "operationId": "SqlPoolVulnerabilityAssessments_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The requested resource.",
            "required": true,
            "schema": {
              "description": "A Sql pool vulnerability assessment.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storageContainerPath": {
                      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    },
                    "storageContainerSasKey": {
                      "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recurringScans": {
                      "description": "The recurring scans settings",
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "description": "Recurring scans state.",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "emailSubscriptionAdmins": {
                          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                          "default": true,
                          "type": "boolean"
                        },
                        "emails": {
                          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully set the  Sql pool vulnerability assessment.",
            "schema": {
              "description": "A Sql pool vulnerability assessment.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storageContainerPath": {
                      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    },
                    "storageContainerSasKey": {
                      "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recurringScans": {
                      "description": "The recurring scans settings",
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "description": "Recurring scans state.",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "emailSubscriptionAdmins": {
                          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                          "default": true,
                          "type": "boolean"
                        },
                        "emails": {
                          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successfully created the vulnerability assessment.",
            "schema": {
              "description": "A Sql pool vulnerability assessment.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storageContainerPath": {
                      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    },
                    "storageContainerSasKey": {
                      "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recurringScans": {
                      "description": "The recurring scans settings",
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "description": "Recurring scans state.",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "emailSubscriptionAdmins": {
                          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                          "default": true,
                          "type": "boolean"
                        },
                        "emails": {
                          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "SqlPools, VulnerabilityAssessments"
        ],
        "summary": "Removes the database's vulnerability assessment",
        "description": "Removes the database's vulnerability assessment.",
        "operationId": "SqlPoolVulnerabilityAssessments_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed the Sql pool vulnerability assessment."
          },
          "204": {
            "description": "No content"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/extendedAuditingSettings/{blobAuditingPolicyName}": {
      "get": {
        "tags": [
          "SqlPools, BlobAuditing"
        ],
        "description": "Gets an extended Sql pool's blob auditing policy.",
        "operationId": "ExtendedSqlPoolBlobAuditingPolicies_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "blobAuditingPolicyName",
            "in": "path",
            "description": "The name of the blob auditing policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobAuditingPolicyName",
              "modelAsString": false
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the extended Sql pool blob auditing policy.",
            "schema": {
              "description": "An extended Sql pool blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "predicateExpression": {
                      "description": "Specifies condition of where clause when creating an audit.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer"
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string"
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "SqlPools, BlobAuditing"
        ],
        "description": "Creates or updates an extended Sql pool's blob auditing policy.",
        "operationId": "ExtendedSqlPoolBlobAuditingPolicies_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "blobAuditingPolicyName",
            "in": "path",
            "description": "The name of the blob auditing policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobAuditingPolicyName",
              "modelAsString": false
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The extended Sql pool blob auditing policy.",
            "required": true,
            "schema": {
              "description": "An extended Sql pool blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "predicateExpression": {
                      "description": "Specifies condition of where clause when creating an audit.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer"
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string"
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully set the extended Sql pool blob auditing policy.",
            "schema": {
              "description": "An extended Sql pool blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "predicateExpression": {
                      "description": "Specifies condition of where clause when creating an audit.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer"
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string"
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successfully created the extended database blob auditing policy.",
            "schema": {
              "description": "An extended Sql pool blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "predicateExpression": {
                      "description": "Specifies condition of where clause when creating an audit.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer"
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string"
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/extendedAuditingSettings": {
      "get": {
        "tags": [
          "SqlPools,BlobAuditing"
        ],
        "description": "Lists extended auditing settings of a Sql pool.",
        "operationId": "ExtendedSqlPoolBlobAuditingPolicies_ListBySqlPool",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the database extended auditing settings.",
            "schema": {
              "description": "A list of sql pool extended auditing settings.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "An extended Sql pool blob auditing policy.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "state"
                        ],
                        "type": "object",
                        "properties": {
                          "predicateExpression": {
                            "description": "Specifies condition of where clause when creating an audit.",
                            "type": "string"
                          },
                          "state": {
                            "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "BlobAuditingPolicyState",
                              "modelAsString": false
                            }
                          },
                          "storageEndpoint": {
                            "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                            "type": "string"
                          },
                          "storageAccountAccessKey": {
                            "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "retentionDays": {
                            "format": "int32",
                            "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                            "type": "integer"
                          },
                          "auditActionsAndGroups": {
                            "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "storageAccountSubscriptionId": {
                            "format": "uuid",
                            "description": "Specifies the blob storage subscription Id.",
                            "type": "string"
                          },
                          "isStorageSecondaryKeyInUse": {
                            "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                            "type": "boolean"
                          },
                          "isAzureMonitorTargetEnabled": {
                            "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                            "type": "boolean"
                          },
                          "queueDelayMs": {
                            "format": "int32",
                            "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataMaskingPolicies/{dataMaskingPolicyName}": {
      "put": {
        "tags": [
          "SqlPools, DataMaskingPolicies"
        ],
        "operationId": "DataMaskingPolicies_CreateOrUpdate",
        "description": "Creates or updates a Sql pool data masking policy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "dataMaskingPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataMaskingPolicyName"
            },
            "description": "The name of the data masking policy for which the masking rule applies.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the data masking policy.",
                  "type": "object",
                  "properties": {
                    "dataMaskingState": {
                      "type": "string",
                      "description": "The state of the data masking policy.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingState"
                      }
                    },
                    "exemptPrincipals": {
                      "type": "string",
                      "description": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries."
                    },
                    "applicationPrincipals": {
                      "type": "string",
                      "description": "The list of the application principals. This is a legacy parameter and is no longer used.",
                      "readOnly": true
                    },
                    "maskingLevel": {
                      "type": "string",
                      "description": "The masking level. This is a legacy parameter and is no longer used.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "dataMaskingState"
                  ]
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The location of the data masking policy."
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The kind of data masking policy. Metadata, used for Azure portal."
                },
                "managedBy": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Fully qualified resource ID of the sql pool"
                }
              }
            },
            "description": "Parameters for creating or updating a data masking policy."
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the data masking policy.",
                  "type": "object",
                  "properties": {
                    "dataMaskingState": {
                      "type": "string",
                      "description": "The state of the data masking policy.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingState"
                      }
                    },
                    "exemptPrincipals": {
                      "type": "string",
                      "description": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries."
                    },
                    "applicationPrincipals": {
                      "type": "string",
                      "description": "The list of the application principals. This is a legacy parameter and is no longer used.",
                      "readOnly": true
                    },
                    "maskingLevel": {
                      "type": "string",
                      "description": "The masking level. This is a legacy parameter and is no longer used.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "dataMaskingState"
                  ]
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The location of the data masking policy."
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The kind of data masking policy. Metadata, used for Azure portal."
                },
                "managedBy": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Fully qualified resource ID of the sql pool"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SqlPools, DataMaskingPolicies"
        ],
        "operationId": "DataMaskingPolicies_Get",
        "description": "Gets a Sql pool data masking policy.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "dataMaskingPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataMaskingPolicyName"
            },
            "description": "The name of the data masking policy for which the masking rule applies.",
            "x-ms-parameter-location": "method"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the data masking policy.",
                  "type": "object",
                  "properties": {
                    "dataMaskingState": {
                      "type": "string",
                      "description": "The state of the data masking policy.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingState"
                      }
                    },
                    "exemptPrincipals": {
                      "type": "string",
                      "description": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries."
                    },
                    "applicationPrincipals": {
                      "type": "string",
                      "description": "The list of the application principals. This is a legacy parameter and is no longer used.",
                      "readOnly": true
                    },
                    "maskingLevel": {
                      "type": "string",
                      "description": "The masking level. This is a legacy parameter and is no longer used.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "dataMaskingState"
                  ]
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The location of the data masking policy."
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The kind of data masking policy. Metadata, used for Azure portal."
                },
                "managedBy": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Fully qualified resource ID of the sql pool"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules/{dataMaskingRuleName}": {
      "put": {
        "tags": [
          "SqlPools, DataMaskingRules"
        ],
        "operationId": "DataMaskingRules_CreateOrUpdate",
        "description": "Creates or updates a Sql pool data masking rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "dataMaskingPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataMaskingPolicyName"
            },
            "description": "The name of the data masking policy for which the masking rule applies.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dataMaskingRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the data masking rule."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the resource.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The rule Id.",
                      "readOnly": true
                    },
                    "aliasName": {
                      "type": "string",
                      "description": "The alias name. This is a legacy parameter and is no longer used."
                    },
                    "ruleState": {
                      "type": "string",
                      "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingRuleState"
                      }
                    },
                    "schemaName": {
                      "type": "string",
                      "description": "The schema name on which the data masking rule is applied."
                    },
                    "tableName": {
                      "type": "string",
                      "description": "The table name on which the data masking rule is applied."
                    },
                    "columnName": {
                      "type": "string",
                      "description": "The column name on which the data masking rule is applied."
                    },
                    "maskingFunction": {
                      "type": "string",
                      "description": "The masking function that is used for the data masking rule.",
                      "enum": [
                        "Default",
                        "CCN",
                        "Email",
                        "Number",
                        "SSN",
                        "Text"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingFunction"
                      }
                    },
                    "numberFrom": {
                      "type": "string",
                      "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                    },
                    "numberTo": {
                      "type": "string",
                      "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                    },
                    "prefixSize": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored."
                    },
                    "suffixSize": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored."
                    },
                    "replacementString": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored."
                    }
                  },
                  "required": [
                    "maskingFunction",
                    "schemaName",
                    "tableName",
                    "columnName"
                  ]
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The location of the data masking rule."
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The kind of Data Masking Rule. Metadata, used for Azure portal."
                }
              },
              "description": "Represents a Sql pool data masking rule."
            },
            "description": "The required parameters for creating or updating a data masking rule."
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the resource.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The rule Id.",
                      "readOnly": true
                    },
                    "aliasName": {
                      "type": "string",
                      "description": "The alias name. This is a legacy parameter and is no longer used."
                    },
                    "ruleState": {
                      "type": "string",
                      "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingRuleState"
                      }
                    },
                    "schemaName": {
                      "type": "string",
                      "description": "The schema name on which the data masking rule is applied."
                    },
                    "tableName": {
                      "type": "string",
                      "description": "The table name on which the data masking rule is applied."
                    },
                    "columnName": {
                      "type": "string",
                      "description": "The column name on which the data masking rule is applied."
                    },
                    "maskingFunction": {
                      "type": "string",
                      "description": "The masking function that is used for the data masking rule.",
                      "enum": [
                        "Default",
                        "CCN",
                        "Email",
                        "Number",
                        "SSN",
                        "Text"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingFunction"
                      }
                    },
                    "numberFrom": {
                      "type": "string",
                      "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                    },
                    "numberTo": {
                      "type": "string",
                      "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                    },
                    "prefixSize": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored."
                    },
                    "suffixSize": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored."
                    },
                    "replacementString": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored."
                    }
                  },
                  "required": [
                    "maskingFunction",
                    "schemaName",
                    "tableName",
                    "columnName"
                  ]
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The location of the data masking rule."
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The kind of Data Masking Rule. Metadata, used for Azure portal."
                }
              },
              "description": "Represents a Sql pool data masking rule."
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the resource.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The rule Id.",
                      "readOnly": true
                    },
                    "aliasName": {
                      "type": "string",
                      "description": "The alias name. This is a legacy parameter and is no longer used."
                    },
                    "ruleState": {
                      "type": "string",
                      "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingRuleState"
                      }
                    },
                    "schemaName": {
                      "type": "string",
                      "description": "The schema name on which the data masking rule is applied."
                    },
                    "tableName": {
                      "type": "string",
                      "description": "The table name on which the data masking rule is applied."
                    },
                    "columnName": {
                      "type": "string",
                      "description": "The column name on which the data masking rule is applied."
                    },
                    "maskingFunction": {
                      "type": "string",
                      "description": "The masking function that is used for the data masking rule.",
                      "enum": [
                        "Default",
                        "CCN",
                        "Email",
                        "Number",
                        "SSN",
                        "Text"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingFunction"
                      }
                    },
                    "numberFrom": {
                      "type": "string",
                      "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                    },
                    "numberTo": {
                      "type": "string",
                      "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                    },
                    "prefixSize": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored."
                    },
                    "suffixSize": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored."
                    },
                    "replacementString": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored."
                    }
                  },
                  "required": [
                    "maskingFunction",
                    "schemaName",
                    "tableName",
                    "columnName"
                  ]
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The location of the data masking rule."
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The kind of Data Masking Rule. Metadata, used for Azure portal."
                }
              },
              "description": "Represents a Sql pool data masking rule."
            }
          }
        }
      },
      "get": {
        "tags": [
          "SqlPools, DataMaskingRules"
        ],
        "operationId": "DataMaskingRules_Get",
        "description": "Gets the specific Sql pool data masking rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "dataMaskingPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataMaskingPolicyName"
            },
            "description": "The name of the data masking policy for which the masking rule applies.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dataMaskingRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the data masking rule."
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the resource.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The rule Id.",
                      "readOnly": true
                    },
                    "aliasName": {
                      "type": "string",
                      "description": "The alias name. This is a legacy parameter and is no longer used."
                    },
                    "ruleState": {
                      "type": "string",
                      "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingRuleState"
                      }
                    },
                    "schemaName": {
                      "type": "string",
                      "description": "The schema name on which the data masking rule is applied."
                    },
                    "tableName": {
                      "type": "string",
                      "description": "The table name on which the data masking rule is applied."
                    },
                    "columnName": {
                      "type": "string",
                      "description": "The column name on which the data masking rule is applied."
                    },
                    "maskingFunction": {
                      "type": "string",
                      "description": "The masking function that is used for the data masking rule.",
                      "enum": [
                        "Default",
                        "CCN",
                        "Email",
                        "Number",
                        "SSN",
                        "Text"
                      ],
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "DataMaskingFunction"
                      }
                    },
                    "numberFrom": {
                      "type": "string",
                      "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                    },
                    "numberTo": {
                      "type": "string",
                      "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                    },
                    "prefixSize": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored."
                    },
                    "suffixSize": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored."
                    },
                    "replacementString": {
                      "type": "string",
                      "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored."
                    }
                  },
                  "required": [
                    "maskingFunction",
                    "schemaName",
                    "tableName",
                    "columnName"
                  ]
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The location of the data masking rule."
                },
                "kind": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The kind of Data Masking Rule. Metadata, used for Azure portal."
                }
              },
              "description": "Represents a Sql pool data masking rule."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules": {
      "get": {
        "tags": [
          "SqlPools, DataMaskingRules"
        ],
        "operationId": "DataMaskingRules_ListBySqlPool",
        "description": "Gets a list of Sql pool data masking rules.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "dataMaskingPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataMaskingPolicyName"
            },
            "description": "The name of the data masking policy for which the masking rule applies.",
            "x-ms-parameter-location": "method"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of the resource.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The rule Id.",
                            "readOnly": true
                          },
                          "aliasName": {
                            "type": "string",
                            "description": "The alias name. This is a legacy parameter and is no longer used."
                          },
                          "ruleState": {
                            "type": "string",
                            "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "DataMaskingRuleState"
                            }
                          },
                          "schemaName": {
                            "type": "string",
                            "description": "The schema name on which the data masking rule is applied."
                          },
                          "tableName": {
                            "type": "string",
                            "description": "The table name on which the data masking rule is applied."
                          },
                          "columnName": {
                            "type": "string",
                            "description": "The column name on which the data masking rule is applied."
                          },
                          "maskingFunction": {
                            "type": "string",
                            "description": "The masking function that is used for the data masking rule.",
                            "enum": [
                              "Default",
                              "CCN",
                              "Email",
                              "Number",
                              "SSN",
                              "Text"
                            ],
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "DataMaskingFunction"
                            }
                          },
                          "numberFrom": {
                            "type": "string",
                            "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                          },
                          "numberTo": {
                            "type": "string",
                            "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                          },
                          "prefixSize": {
                            "type": "string",
                            "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored."
                          },
                          "suffixSize": {
                            "type": "string",
                            "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored."
                          },
                          "replacementString": {
                            "type": "string",
                            "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored."
                          }
                        },
                        "required": [
                          "maskingFunction",
                          "schemaName",
                          "tableName",
                          "columnName"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The location of the data masking rule."
                      },
                      "kind": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The kind of Data Masking Rule. Metadata, used for Azure portal."
                      }
                    },
                    "description": "Represents a Sql pool data masking rule."
                  },
                  "description": "The list of Sql pool data masking rules."
                }
              },
              "description": "The response to a list data masking rules request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/auditingSettings": {
      "get": {
        "tags": [
          "SqlPools, BlobAuditing"
        ],
        "description": "Lists auditing settings of a Sql pool.",
        "operationId": "SqlPoolBlobAuditingPolicies_ListBySqlPool",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Sql pool auditing settings.",
            "schema": {
              "description": "A list of Sql pool auditing settings.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A Sql pool blob auditing policy.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "kind": {
                        "description": "Resource kind.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "state"
                        ],
                        "type": "object",
                        "properties": {
                          "state": {
                            "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "BlobAuditingPolicyState",
                              "modelAsString": false
                            }
                          },
                          "storageEndpoint": {
                            "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
                            "type": "string"
                          },
                          "storageAccountAccessKey": {
                            "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "retentionDays": {
                            "format": "int32",
                            "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                            "type": "integer",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "auditActionsAndGroups": {
                            "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "read"
                              ]
                            }
                          },
                          "storageAccountSubscriptionId": {
                            "format": "uuid",
                            "description": "Specifies the blob storage subscription Id.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "isStorageSecondaryKeyInUse": {
                            "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                            "type": "boolean"
                          },
                          "isAzureMonitorTargetEnabled": {
                            "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}": {
      "get": {
        "tags": [
          "SqlPools, SqlPoolSchemas"
        ],
        "description": "Get Sql Pool schema",
        "operationId": "SqlPoolSchemas_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Sql Pool schema.",
            "schema": {
              "description": "A Sql pool schema resource.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}": {
      "get": {
        "tags": [
          "SqlPools, SqlPoolTables"
        ],
        "description": "Get Sql pool table",
        "operationId": "SqlPoolTables_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "The name of the table.",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Sql pool's table.",
            "schema": {
              "description": "A Sql pool table resource.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}": {
      "get": {
        "tags": [
          "SqlPools, SqlPoolColumns"
        ],
        "description": "Get Sql pool column",
        "operationId": "SqlPoolColumns_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The name of the schema.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "The name of the table.",
            "required": true,
            "type": "string"
          },
          {
            "name": "columnName",
            "in": "path",
            "description": "The name of the column.",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Sql pool column.",
            "schema": {
              "description": "A Sql pool column resource.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "columnType": {
                      "description": "The column data type.",
                      "enum": [
                        "image",
                        "text",
                        "uniqueidentifier",
                        "date",
                        "time",
                        "datetime2",
                        "datetimeoffset",
                        "tinyint",
                        "smallint",
                        "int",
                        "smalldatetime",
                        "real",
                        "money",
                        "datetime",
                        "float",
                        "sql_variant",
                        "ntext",
                        "bit",
                        "decimal",
                        "numeric",
                        "smallmoney",
                        "bigint",
                        "hierarchyid",
                        "geometry",
                        "geography",
                        "varbinary",
                        "varchar",
                        "binary",
                        "char",
                        "timestamp",
                        "nvarchar",
                        "nchar",
                        "xml",
                        "sysname"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ColumnDataType",
                        "modelAsString": true
                      }
                    },
                    "isComputed": {
                      "type": "boolean",
                      "description": "Indicates whether column value is computed or not",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}": {
      "get": {
        "tags": [
          "SqlPools,SqlPoolVulnerabilityAssessmentScans"
        ],
        "description": "Gets a vulnerability assessment scan record of a Sql pool.",
        "operationId": "SqlPoolVulnerabilityAssessmentScans_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          },
          {
            "name": "scanId",
            "in": "path",
            "description": "The vulnerability assessment scan Id of the scan to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Sql pool vulnerability assessment scan record.",
            "schema": {
              "description": "A vulnerability assessment scan record.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "scanId": {
                      "description": "The scan ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "triggerType": {
                      "description": "The scan trigger type.",
                      "enum": [
                        "OnDemand",
                        "Recurring"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "VulnerabilityAssessmentScanTriggerType",
                        "modelAsString": true
                      }
                    },
                    "state": {
                      "description": "The scan status.",
                      "enum": [
                        "Passed",
                        "Failed",
                        "FailedToRun",
                        "InProgress"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "VulnerabilityAssessmentScanState",
                        "modelAsString": true
                      }
                    },
                    "startTime": {
                      "format": "date-time",
                      "description": "The scan start time (UTC).",
                      "type": "string",
                      "readOnly": true
                    },
                    "endTime": {
                      "format": "date-time",
                      "description": "The scan end time (UTC).",
                      "type": "string",
                      "readOnly": true
                    },
                    "errors": {
                      "description": "The scan errors.",
                      "type": "array",
                      "items": {
                        "description": "Properties of a vulnerability assessment scan error.",
                        "type": "object",
                        "properties": {
                          "code": {
                            "description": "The error code.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "The error message.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "storageContainerPath": {
                      "description": "The scan results storage container path.",
                      "type": "string",
                      "readOnly": true
                    },
                    "numberOfFailedSecurityChecks": {
                      "format": "int32",
                      "description": "The number of failed security checks.",
                      "type": "integer",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/restorePoints/{restorePointName}": {
      "get": {
        "tags": [
          "SqlPools, RestorePoints"
        ],
        "description": "Gets a restore point.",
        "operationId": "SqlPoolRestorePoints_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "restorePointName",
            "in": "path",
            "description": "The name of the restore point.",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully returned the restore point.",
            "schema": {
              "description": "Database restore points.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "description": "Resource location.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "restorePointType": {
                      "description": "The type of restore point",
                      "enum": [
                        "CONTINUOUS",
                        "DISCRETE"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "RestorePointType",
                        "modelAsString": false
                      }
                    },
                    "earliestRestoreDate": {
                      "format": "date-time",
                      "description": "The earliest time to which this database can be restored",
                      "type": "string",
                      "readOnly": true
                    },
                    "restorePointCreationDate": {
                      "format": "date-time",
                      "description": "The time the backup was taken",
                      "type": "string",
                      "readOnly": true
                    },
                    "restorePointLabel": {
                      "description": "The label of restore point for backup request by user",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SqlPools, RestorePoints"
        ],
        "description": "Deletes a restore point.",
        "operationId": "SqlPoolRestorePoints_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "restorePointName",
            "in": "path",
            "description": "The name of the restore point.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the restore point."
          },
          "204": {
            "description": "The specified restore point does not exist."
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}": {
      "get": {
        "operationId": "SqlPoolWorkloadGroup_Get",
        "summary": "Sql pool's workload group",
        "description": "Get a Sql pool's workload group.",
        "tags": [
          "SqlPools, WorkloadGroups"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "workloadGroupName",
            "in": "path",
            "description": "The name of the workload group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specifies workload group.",
            "schema": {
              "description": "Workload group operations for a sql pool",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "minResourcePercent",
                    "maxResourcePercent",
                    "minResourcePercentPerRequest"
                  ],
                  "type": "object",
                  "properties": {
                    "minResourcePercent": {
                      "format": "int32",
                      "description": "The workload group minimum percentage resource.",
                      "type": "integer"
                    },
                    "maxResourcePercent": {
                      "format": "int32",
                      "description": "The workload group cap percentage resource.",
                      "type": "integer"
                    },
                    "minResourcePercentPerRequest": {
                      "format": "double",
                      "description": "The workload group request minimum grant percentage.",
                      "type": "number"
                    },
                    "maxResourcePercentPerRequest": {
                      "format": "double",
                      "description": "The workload group request maximum grant percentage.",
                      "type": "number"
                    },
                    "importance": {
                      "description": "The workload group importance level.",
                      "type": "string"
                    },
                    "queryExecutionTimeout": {
                      "format": "int32",
                      "description": "The workload group query execution timeout.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "SqlPoolWorkloadGroup_CreateOrUpdate",
        "summary": "Create Or Update workload group",
        "description": "Create Or Update a Sql pool's workload group.",
        "tags": [
          "SqlPools, WorkloadGroups"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "workloadGroupName",
            "in": "path",
            "description": "The name of the workload group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The requested workload group state.",
            "required": true,
            "schema": {
              "description": "Workload group operations for a sql pool",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "minResourcePercent",
                    "maxResourcePercent",
                    "minResourcePercentPerRequest"
                  ],
                  "type": "object",
                  "properties": {
                    "minResourcePercent": {
                      "format": "int32",
                      "description": "The workload group minimum percentage resource.",
                      "type": "integer"
                    },
                    "maxResourcePercent": {
                      "format": "int32",
                      "description": "The workload group cap percentage resource.",
                      "type": "integer"
                    },
                    "minResourcePercentPerRequest": {
                      "format": "double",
                      "description": "The workload group request minimum grant percentage.",
                      "type": "number"
                    },
                    "maxResourcePercentPerRequest": {
                      "format": "double",
                      "description": "The workload group request maximum grant percentage.",
                      "type": "number"
                    },
                    "importance": {
                      "description": "The workload group importance level.",
                      "type": "string"
                    },
                    "queryExecutionTimeout": {
                      "format": "int32",
                      "description": "The workload group query execution timeout.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the workload group.",
            "schema": {
              "description": "Workload group operations for a sql pool",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "minResourcePercent",
                    "maxResourcePercent",
                    "minResourcePercentPerRequest"
                  ],
                  "type": "object",
                  "properties": {
                    "minResourcePercent": {
                      "format": "int32",
                      "description": "The workload group minimum percentage resource.",
                      "type": "integer"
                    },
                    "maxResourcePercent": {
                      "format": "int32",
                      "description": "The workload group cap percentage resource.",
                      "type": "integer"
                    },
                    "minResourcePercentPerRequest": {
                      "format": "double",
                      "description": "The workload group request minimum grant percentage.",
                      "type": "number"
                    },
                    "maxResourcePercentPerRequest": {
                      "format": "double",
                      "description": "The workload group request maximum grant percentage.",
                      "type": "number"
                    },
                    "importance": {
                      "description": "The workload group importance level.",
                      "type": "string"
                    },
                    "queryExecutionTimeout": {
                      "format": "int32",
                      "description": "The workload group query execution timeout.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successfully created the workload group.",
            "schema": {
              "description": "Workload group operations for a sql pool",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "minResourcePercent",
                    "maxResourcePercent",
                    "minResourcePercentPerRequest"
                  ],
                  "type": "object",
                  "properties": {
                    "minResourcePercent": {
                      "format": "int32",
                      "description": "The workload group minimum percentage resource.",
                      "type": "integer"
                    },
                    "maxResourcePercent": {
                      "format": "int32",
                      "description": "The workload group cap percentage resource.",
                      "type": "integer"
                    },
                    "minResourcePercentPerRequest": {
                      "format": "double",
                      "description": "The workload group request minimum grant percentage.",
                      "type": "number"
                    },
                    "maxResourcePercentPerRequest": {
                      "format": "double",
                      "description": "The workload group request maximum grant percentage.",
                      "type": "number"
                    },
                    "importance": {
                      "description": "The workload group importance level.",
                      "type": "string"
                    },
                    "queryExecutionTimeout": {
                      "format": "int32",
                      "description": "The workload group query execution timeout.",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Create or update for the workload group accepted."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "SqlPoolWorkloadGroup_Delete",
        "summary": "Remove workload group",
        "description": "Remove Sql pool's workload group.",
        "tags": [
          "SqlPools, WorkloadGroups"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "workloadGroupName",
            "in": "path",
            "description": "The name of the workload group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the workload group."
          },
          "202": {
            "description": "Deleting the workload group is in progress."
          },
          "204": {
            "description": "The specified workload group does not exist."
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups": {
      "get": {
        "operationId": "SqlPoolWorkloadGroup_List",
        "summary": "Sql pool's workload groups",
        "description": "Get list of  Sql pool's workload groups.",
        "tags": [
          "SqlPools, WorkloadGroups"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of workload groups.",
            "schema": {
              "description": "A list of workload groups.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "Workload group operations for a sql pool",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "minResourcePercent",
                          "maxResourcePercent",
                          "minResourcePercentPerRequest"
                        ],
                        "type": "object",
                        "properties": {
                          "minResourcePercent": {
                            "format": "int32",
                            "description": "The workload group minimum percentage resource.",
                            "type": "integer"
                          },
                          "maxResourcePercent": {
                            "format": "int32",
                            "description": "The workload group cap percentage resource.",
                            "type": "integer"
                          },
                          "minResourcePercentPerRequest": {
                            "format": "double",
                            "description": "The workload group request minimum grant percentage.",
                            "type": "number"
                          },
                          "maxResourcePercentPerRequest": {
                            "format": "double",
                            "description": "The workload group request maximum grant percentage.",
                            "type": "number"
                          },
                          "importance": {
                            "description": "The workload group importance level.",
                            "type": "string"
                          },
                          "queryExecutionTimeout": {
                            "format": "int32",
                            "description": "The workload group query execution timeout.",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}/workloadClassifiers/{workloadClassifierName}": {
      "get": {
        "operationId": "SqlPoolWorkloadClassifier_Get",
        "summary": "Get workload classifier",
        "description": "Get a workload classifier of Sql pool's workload group.",
        "tags": [
          "SqlPools, WorkloadClassifiers"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "workloadGroupName",
            "in": "path",
            "description": "The name of the workload group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadClassifierName",
            "in": "path",
            "description": "The name of the workload classifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specifies workload classifier.",
            "schema": {
              "description": "Workload classifier operations for a data warehouse",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "memberName"
                  ],
                  "type": "object",
                  "properties": {
                    "memberName": {
                      "description": "The workload classifier member name.",
                      "type": "string"
                    },
                    "label": {
                      "description": "The workload classifier label.",
                      "type": "string"
                    },
                    "context": {
                      "description": "The workload classifier context.",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "The workload classifier start time for classification.",
                      "type": "string"
                    },
                    "endTime": {
                      "description": "The workload classifier end time for classification.",
                      "type": "string"
                    },
                    "importance": {
                      "description": "The workload classifier importance.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "SqlPoolWorkloadClassifier_CreateOrUpdate",
        "summary": "Create Or Update workload classifier",
        "description": "Create Or Update workload classifier for a Sql pool's workload group.",
        "tags": [
          "SqlPools, WorkloadClassifiers"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "workloadGroupName",
            "in": "path",
            "description": "The name of the workload group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadClassifierName",
            "in": "path",
            "description": "The name of the workload classifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The properties of the workload classifier.",
            "required": true,
            "schema": {
              "description": "Workload classifier operations for a data warehouse",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "memberName"
                  ],
                  "type": "object",
                  "properties": {
                    "memberName": {
                      "description": "The workload classifier member name.",
                      "type": "string"
                    },
                    "label": {
                      "description": "The workload classifier label.",
                      "type": "string"
                    },
                    "context": {
                      "description": "The workload classifier context.",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "The workload classifier start time for classification.",
                      "type": "string"
                    },
                    "endTime": {
                      "description": "The workload classifier end time for classification.",
                      "type": "string"
                    },
                    "importance": {
                      "description": "The workload classifier importance.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the workload classifier.",
            "schema": {
              "description": "Workload classifier operations for a data warehouse",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "memberName"
                  ],
                  "type": "object",
                  "properties": {
                    "memberName": {
                      "description": "The workload classifier member name.",
                      "type": "string"
                    },
                    "label": {
                      "description": "The workload classifier label.",
                      "type": "string"
                    },
                    "context": {
                      "description": "The workload classifier context.",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "The workload classifier start time for classification.",
                      "type": "string"
                    },
                    "endTime": {
                      "description": "The workload classifier end time for classification.",
                      "type": "string"
                    },
                    "importance": {
                      "description": "The workload classifier importance.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successfully created the workload classifier.",
            "schema": {
              "description": "Workload classifier operations for a data warehouse",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "memberName"
                  ],
                  "type": "object",
                  "properties": {
                    "memberName": {
                      "description": "The workload classifier member name.",
                      "type": "string"
                    },
                    "label": {
                      "description": "The workload classifier label.",
                      "type": "string"
                    },
                    "context": {
                      "description": "The workload classifier context.",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "The workload classifier start time for classification.",
                      "type": "string"
                    },
                    "endTime": {
                      "description": "The workload classifier end time for classification.",
                      "type": "string"
                    },
                    "importance": {
                      "description": "The workload classifier importance.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Create or update for the workload classifier is in progress."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "SqlPoolWorkloadClassifier_Delete",
        "summary": "Remove workload classifier",
        "description": "Remove workload classifier of a Sql pool's workload group.",
        "tags": [
          "SqlPools, WorkloadClassifiers"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "workloadGroupName",
            "in": "path",
            "description": "The name of the workload group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workloadClassifierName",
            "in": "path",
            "description": "The name of the workload classifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the workload classifier."
          },
          "202": {
            "description": "Deleting the workload classifier is in progress."
          },
          "204": {
            "description": "The specified workload classifier does not exist."
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}/workloadClassifiers": {
      "get": {
        "operationId": "SqlPoolWorkloadClassifier_List",
        "summary": "Sql pool's workload classifier",
        "description": "Get list of  Sql pool's workload classifier for workload groups.",
        "tags": [
          "SqlPools, WorkloadClassifiers"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "type": "string",
            "in": "path",
            "name": "sqlPoolName",
            "description": "SQL pool name",
            "required": true
          },
          {
            "name": "workloadGroupName",
            "in": "path",
            "description": "The name of the workload group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of workload groups.",
            "schema": {
              "description": "A list of workload classifiers for a workload group.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "Workload classifier operations for a data warehouse",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "memberName"
                        ],
                        "type": "object",
                        "properties": {
                          "memberName": {
                            "description": "The workload classifier member name.",
                            "type": "string"
                          },
                          "label": {
                            "description": "The workload classifier label.",
                            "type": "string"
                          },
                          "context": {
                            "description": "The workload classifier context.",
                            "type": "string"
                          },
                          "startTime": {
                            "description": "The workload classifier start time for classification.",
                            "type": "string"
                          },
                          "endTime": {
                            "description": "The workload classifier end time for classification.",
                            "type": "string"
                          },
                          "importance": {
                            "description": "The workload classifier importance.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/auditingSettings/{blobAuditingPolicyName}": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerBlobAuditingPolicies_Get",
        "summary": "Get server's blob auditing policy.",
        "description": "Get a workspace managed sql server's blob auditing policy.",
        "tags": [
          "WorkspaceManagedSqlServer, BlobAuditing"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "blobAuditingPolicyName",
            "in": "path",
            "description": "The name of the blob auditing policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobAuditingPolicyName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workspace managed sql server's blob auditing policy.",
            "schema": {
              "description": "A server blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    },
                    "isDevopsAuditEnabled": {
                      "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "WorkspaceManagedSqlServerBlobAuditingPolicies_CreateOrUpdate",
        "summary": "Create or Update server's blob auditing policy.",
        "description": "Create or Update a workspace managed sql server's blob auditing policy.",
        "tags": [
          "WorkspaceManagedSqlServer, BlobAuditing"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "blobAuditingPolicyName",
            "in": "path",
            "description": "The name of the blob auditing policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobAuditingPolicyName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Properties of extended blob auditing policy.",
            "required": true,
            "schema": {
              "description": "A server blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    },
                    "isDevopsAuditEnabled": {
                      "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the auditing settings.",
            "schema": {
              "description": "A server blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    },
                    "isDevopsAuditEnabled": {
                      "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/auditingSettings": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerBlobAuditingPolicies_ListByWorkspace",
        "summary": "List workspace server's blob auditing policies.",
        "description": "List workspace managed sql server's blob auditing policies.",
        "tags": [
          "WorkspaceManagedSqlServer, BlobAuditing"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved auditing settings.",
            "schema": {
              "description": "A list of server auditing settings.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A server blob auditing policy.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "state"
                        ],
                        "type": "object",
                        "properties": {
                          "state": {
                            "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "BlobAuditingPolicyState",
                              "modelAsString": false
                            }
                          },
                          "storageEndpoint": {
                            "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                            "type": "string"
                          },
                          "storageAccountAccessKey": {
                            "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "retentionDays": {
                            "format": "int32",
                            "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                            "type": "integer",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "auditActionsAndGroups": {
                            "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "storageAccountSubscriptionId": {
                            "format": "uuid",
                            "description": "Specifies the blob storage subscription Id.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "isStorageSecondaryKeyInUse": {
                            "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                            "type": "boolean"
                          },
                          "isAzureMonitorTargetEnabled": {
                            "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                            "type": "boolean"
                          },
                          "queueDelayMs": {
                            "format": "int32",
                            "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                            "type": "integer"
                          },
                          "isDevopsAuditEnabled": {
                            "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/extendedAuditingSettings/{blobAuditingPolicyName}": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerExtendedBlobAuditingPolicies_Get",
        "summary": "Get server's extended blob auditing policy.",
        "description": "Get a workspace SQL server's extended blob auditing policy.",
        "tags": [
          "WorkspaceManagedSqlServer, BlobAuditing"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "blobAuditingPolicyName",
            "in": "path",
            "description": "The name of the blob auditing policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobAuditingPolicyName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved extended auditing settings.",
            "schema": {
              "description": "An extended server blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "predicateExpression": {
                      "description": "Specifies condition of where clause when creating an audit.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    },
                    "isDevopsAuditEnabled": {
                      "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "WorkspaceManagedSqlServerExtendedBlobAuditingPolicies_CreateOrUpdate",
        "summary": "Create or Update server's extended blob auditing policy.",
        "description": "Create or Update a workspace managed sql server's extended blob auditing policy.",
        "tags": [
          "WorkspaceManagedSqlServer, BlobAuditing"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "blobAuditingPolicyName",
            "in": "path",
            "description": "The name of the blob auditing policy.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "BlobAuditingPolicyName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Properties of extended blob auditing policy.",
            "required": true,
            "schema": {
              "description": "An extended server blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "predicateExpression": {
                      "description": "Specifies condition of where clause when creating an audit.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    },
                    "isDevopsAuditEnabled": {
                      "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the extended auditing settings.",
            "schema": {
              "description": "An extended server blob auditing policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "predicateExpression": {
                      "description": "Specifies condition of where clause when creating an audit.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "BlobAuditingPolicyState",
                        "modelAsString": false
                      }
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                      "type": "string"
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "auditActionsAndGroups": {
                      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storageAccountSubscriptionId": {
                      "format": "uuid",
                      "description": "Specifies the blob storage subscription Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "isStorageSecondaryKeyInUse": {
                      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                      "type": "boolean"
                    },
                    "isAzureMonitorTargetEnabled": {
                      "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    },
                    "queueDelayMs": {
                      "format": "int32",
                      "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                      "type": "integer"
                    },
                    "isDevopsAuditEnabled": {
                      "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/extendedAuditingSettings": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerExtendedBlobAuditingPolicies_ListByWorkspace",
        "summary": "List server's extended blob auditing policies.",
        "description": "List workspace managed sql server's extended blob auditing policies.",
        "tags": [
          "WorkspaceManagedSqlServer, BlobAuditing"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved extended auditing settings.",
            "schema": {
              "description": "A list of server extended auditing settings.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "An extended server blob auditing policy.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "state"
                        ],
                        "type": "object",
                        "properties": {
                          "predicateExpression": {
                            "description": "Specifies condition of where clause when creating an audit.",
                            "type": "string"
                          },
                          "state": {
                            "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "BlobAuditingPolicyState",
                              "modelAsString": false
                            }
                          },
                          "storageEndpoint": {
                            "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                            "type": "string"
                          },
                          "storageAccountAccessKey": {
                            "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "retentionDays": {
                            "format": "int32",
                            "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                            "type": "integer",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "auditActionsAndGroups": {
                            "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "storageAccountSubscriptionId": {
                            "format": "uuid",
                            "description": "Specifies the blob storage subscription Id.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "isStorageSecondaryKeyInUse": {
                            "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                            "type": "boolean"
                          },
                          "isAzureMonitorTargetEnabled": {
                            "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                            "type": "boolean"
                          },
                          "queueDelayMs": {
                            "format": "int32",
                            "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                            "type": "integer"
                          },
                          "isDevopsAuditEnabled": {
                            "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/securityAlertPolicies/{securityAlertPolicyName}": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerSecurityAlertPolicy_Get",
        "summary": "Get server's security alert policy.",
        "description": "Get a workspace managed sql server's security alert policy.",
        "tags": [
          "WorkspaceManagedSqlServer, SecurityAlertPolicies"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "securityAlertPolicyName",
            "in": "path",
            "description": "The name of the security alert policy.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "SecurityAlertPolicyName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved security alert policy.",
            "schema": {
              "description": "Workspace managed Sql server security alert policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server",
                      "enum": [
                        "New",
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SecurityAlertPolicyState",
                        "modelAsString": false
                      }
                    },
                    "disabledAlerts": {
                      "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAddresses": {
                      "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAccountAdmins": {
                      "description": "Specifies that the alert is sent to the account administrators.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                      "type": "string"
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "creationTime": {
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "WorkspaceManagedSqlServerSecurityAlertPolicy_CreateOrUpdate",
        "summary": "Create or Update server's threat detection policy.",
        "description": "Create or Update a workspace managed sql server's threat detection policy.",
        "tags": [
          "WorkspaceManagedSqlServer, SecurityAlertPolicies"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "securityAlertPolicyName",
            "in": "path",
            "description": "The name of the security alert policy.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "SecurityAlertPolicyName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The workspace managed sql server security alert policy.",
            "required": true,
            "schema": {
              "description": "Workspace managed Sql server security alert policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server",
                      "enum": [
                        "New",
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SecurityAlertPolicyState",
                        "modelAsString": false
                      }
                    },
                    "disabledAlerts": {
                      "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAddresses": {
                      "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAccountAdmins": {
                      "description": "Specifies that the alert is sent to the account administrators.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                      "type": "string"
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "creationTime": {
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated threat detection policy.",
            "schema": {
              "description": "Workspace managed Sql server security alert policy.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server",
                      "enum": [
                        "New",
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SecurityAlertPolicyState",
                        "modelAsString": false
                      }
                    },
                    "disabledAlerts": {
                      "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAddresses": {
                      "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "emailAccountAdmins": {
                      "description": "Specifies that the alert is sent to the account administrators.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageEndpoint": {
                      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                      "type": "string"
                    },
                    "retentionDays": {
                      "format": "int32",
                      "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                      "type": "integer",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "creationTime": {
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted."
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/securityAlertPolicies": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerSecurityAlertPolicy_List",
        "summary": "Get server's threat detection policies.",
        "description": "Get workspace managed sql server's threat detection policies.",
        "tags": [
          "WorkspaceManagedSqlServer, SecurityAlertPolicies"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved threat detection policies.",
            "schema": {
              "description": "A list of the workspace managed sql server's security alert policies.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "Workspace managed Sql server security alert policy.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "state"
                        ],
                        "type": "object",
                        "properties": {
                          "state": {
                            "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server",
                            "enum": [
                              "New",
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SecurityAlertPolicyState",
                              "modelAsString": false
                            }
                          },
                          "disabledAlerts": {
                            "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "emailAddresses": {
                            "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "emailAccountAdmins": {
                            "description": "Specifies that the alert is sent to the account administrators.",
                            "type": "boolean",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "storageEndpoint": {
                            "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "storageAccountAccessKey": {
                            "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                            "type": "string"
                          },
                          "retentionDays": {
                            "format": "int32",
                            "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                            "type": "integer",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "creationTime": {
                            "format": "date-time",
                            "description": "Specifies the UTC creation time of the policy.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerVulnerabilityAssessments_Get",
        "summary": "Get server's vulnerability assessment.",
        "description": "Get workspace managed sql server's vulnerability assessment.",
        "tags": [
          "WorkspaceManagedSqlServer, ServerVulnerabilityAssessments"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved vulnerability assessment.",
            "schema": {
              "description": "A server vulnerability assessment.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "storageContainerPath"
                  ],
                  "properties": {
                    "storageContainerPath": {
                      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageContainerSasKey": {
                      "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recurringScans": {
                      "description": "The recurring scans settings",
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "description": "Recurring scans state.",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "emailSubscriptionAdmins": {
                          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                          "default": true,
                          "type": "boolean"
                        },
                        "emails": {
                          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "WorkspaceManagedSqlServerVulnerabilityAssessments_CreateOrUpdate",
        "summary": "Create or Update server's vulnerability assessment.",
        "description": "Create or Update workspace managed sql server's vulnerability assessment.",
        "tags": [
          "WorkspaceManagedSqlServer, ServerVulnerabilityAssessments"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Properties for vulnerability assessment.",
            "required": true,
            "schema": {
              "description": "A server vulnerability assessment.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "storageContainerPath"
                  ],
                  "properties": {
                    "storageContainerPath": {
                      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageContainerSasKey": {
                      "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recurringScans": {
                      "description": "The recurring scans settings",
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "description": "Recurring scans state.",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "emailSubscriptionAdmins": {
                          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                          "default": true,
                          "type": "boolean"
                        },
                        "emails": {
                          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created vulnerability assessment.",
            "schema": {
              "description": "A server vulnerability assessment.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "storageContainerPath"
                  ],
                  "properties": {
                    "storageContainerPath": {
                      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageContainerSasKey": {
                      "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recurringScans": {
                      "description": "The recurring scans settings",
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "description": "Recurring scans state.",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "emailSubscriptionAdmins": {
                          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                          "default": true,
                          "type": "boolean"
                        },
                        "emails": {
                          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successfully created the vulnerability assessment.",
            "schema": {
              "description": "A server vulnerability assessment.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "storageContainerPath"
                  ],
                  "properties": {
                    "storageContainerPath": {
                      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "storageContainerSasKey": {
                      "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "storageAccountAccessKey": {
                      "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "recurringScans": {
                      "description": "The recurring scans settings",
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "description": "Recurring scans state.",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "emailSubscriptionAdmins": {
                          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                          "default": true,
                          "type": "boolean"
                        },
                        "emails": {
                          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "WorkspaceManagedSqlServerVulnerabilityAssessments_Delete",
        "summary": "Remove server's vulnerability assessment.",
        "description": "Remove workspace managed sql server's vulnerability assessment.",
        "tags": [
          "WorkspaceManagedSqlServer, ServerVulnerabilityAssessments"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vulnerabilityAssessmentName",
            "in": "path",
            "description": "The name of the vulnerability assessment.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "VulnerabilityAssessmentName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed vulnerability assessment."
          },
          "204": {
            "description": "Specified vulnerability assessment policy does not exists."
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerVulnerabilityAssessments_List",
        "summary": "Lists the vulnerability assessment policies associated with a server.",
        "description": "Lists the vulnerability assessment policies associated with a workspace managed sql server.",
        "tags": [
          "WorkspaceManagedSqlServer, ServerVulnerabilityAssessments"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved vulnerability assessment policies.",
            "schema": {
              "description": "A list of the server's vulnerability assessments.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "A server vulnerability assessment.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "required": [
                          "storageContainerPath"
                        ],
                        "properties": {
                          "storageContainerPath": {
                            "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "storageContainerSasKey": {
                            "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "storageAccountAccessKey": {
                            "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "recurringScans": {
                            "description": "The recurring scans settings",
                            "type": "object",
                            "properties": {
                              "isEnabled": {
                                "description": "Recurring scans state.",
                                "type": "boolean",
                                "x-ms-mutability": [
                                  "create",
                                  "read",
                                  "update"
                                ]
                              },
                              "emailSubscriptionAdmins": {
                                "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                                "default": true,
                                "type": "boolean"
                              },
                              "emails": {
                                "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector/{encryptionProtectorName}": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerEncryptionProtector_Get",
        "summary": "Get workspace server's encryption protector.",
        "description": "Get workspace managed sql server's encryption protector.",
        "tags": [
          "WorkspaceManagedSqlServer, ServerEncryptionProtector"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "encryptionProtectorName",
            "in": "path",
            "description": "The name of the encryption protector.",
            "required": true,
            "type": "string",
            "enum": [
              "current"
            ],
            "x-ms-enum": {
              "name": "EncryptionProtectorName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved encryption protector.",
            "schema": {
              "description": "The server encryption protector.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "kind": {
                  "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Resource location.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "serverKeyType"
                  ],
                  "type": "object",
                  "properties": {
                    "subregion": {
                      "description": "Subregion of the encryption protector.",
                      "type": "string",
                      "readOnly": true
                    },
                    "serverKeyName": {
                      "description": "The name of the server key.",
                      "type": "string"
                    },
                    "serverKeyType": {
                      "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
                      "enum": [
                        "ServiceManaged",
                        "AzureKeyVault"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ServerKeyType",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "description": "The URI of the server key.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Thumbprint of the server key.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "WorkspaceManagedSqlServerEncryptionProtector_CreateOrUpdate",
        "summary": "Updates workspace server's encryption protector.",
        "description": "Updates workspace managed sql server's encryption protector.",
        "tags": [
          "WorkspaceManagedSqlServer, ServerEncryptionProtector"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "encryptionProtectorName",
            "in": "path",
            "description": "The name of the encryption protector.",
            "required": true,
            "type": "string",
            "enum": [
              "current"
            ],
            "x-ms-enum": {
              "name": "EncryptionProtectorName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The requested encryption protector resource state.",
            "required": true,
            "schema": {
              "description": "The server encryption protector.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "kind": {
                  "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Resource location.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "serverKeyType"
                  ],
                  "type": "object",
                  "properties": {
                    "subregion": {
                      "description": "Subregion of the encryption protector.",
                      "type": "string",
                      "readOnly": true
                    },
                    "serverKeyName": {
                      "description": "The name of the server key.",
                      "type": "string"
                    },
                    "serverKeyType": {
                      "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
                      "enum": [
                        "ServiceManaged",
                        "AzureKeyVault"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ServerKeyType",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "description": "The URI of the server key.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Thumbprint of the server key.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved encryption protector.",
            "schema": {
              "description": "The server encryption protector.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "kind": {
                  "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Resource location.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "serverKeyType"
                  ],
                  "type": "object",
                  "properties": {
                    "subregion": {
                      "description": "Subregion of the encryption protector.",
                      "type": "string",
                      "readOnly": true
                    },
                    "serverKeyName": {
                      "description": "The name of the server key.",
                      "type": "string"
                    },
                    "serverKeyType": {
                      "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
                      "enum": [
                        "ServiceManaged",
                        "AzureKeyVault"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ServerKeyType",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "description": "The URI of the server key.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Thumbprint of the server key.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerEncryptionProtector_List",
        "summary": "Get list of encryption protectors for the server.",
        "description": "Get list of encryption protectors for workspace managed sql server.",
        "tags": [
          "WorkspaceManagedSqlServer, ServerEncryptionProtector"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved encryption protectors.",
            "schema": {
              "description": "A list of server encryption protectors.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "The server encryption protector.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "kind": {
                        "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Resource location.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "serverKeyType"
                        ],
                        "type": "object",
                        "properties": {
                          "subregion": {
                            "description": "Subregion of the encryption protector.",
                            "type": "string",
                            "readOnly": true
                          },
                          "serverKeyName": {
                            "description": "The name of the server key.",
                            "type": "string"
                          },
                          "serverKeyType": {
                            "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
                            "enum": [
                              "ServiceManaged",
                              "AzureKeyVault"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ServerKeyType",
                              "modelAsString": true
                            }
                          },
                          "uri": {
                            "description": "The URI of the server key.",
                            "type": "string",
                            "readOnly": true
                          },
                          "thumbprint": {
                            "description": "Thumbprint of the server key.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector/{encryptionProtectorName}/revalidate": {
      "post": {
        "operationId": "WorkspaceManagedSqlServerEncryptionProtector_Revalidate",
        "summary": "Revalidates server's existing encryption protector.",
        "description": "Revalidates workspace managed sql server's existing encryption protector.",
        "tags": [
          "WorkspaceManagedSqlServer, ServerEncryptionProtector"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "encryptionProtectorName",
            "in": "path",
            "description": "The name of the encryption protector.",
            "required": true,
            "type": "string",
            "enum": [
              "current"
            ],
            "x-ms-enum": {
              "name": "EncryptionProtectorName",
              "modelAsString": true
            }
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully revalidated the encryption protector."
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlUsages": {
      "get": {
        "tags": [
          "WorkspaceManagedSqlServer, sqlUsages"
        ],
        "operationId": "WorkspaceManagedSqlServerUsages_List",
        "summary": "Get list of usages metric for the server.",
        "description": "Get list of server usages metric for workspace managed sql server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Name of the server usage metric."
                      },
                      "resourceName": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource."
                      },
                      "displayName": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The metric display name."
                      },
                      "currentValue": {
                        "readOnly": true,
                        "type": "number",
                        "format": "double",
                        "description": "The current value of the metric."
                      },
                      "limit": {
                        "readOnly": true,
                        "type": "number",
                        "format": "double",
                        "description": "The current limit of the metric."
                      },
                      "unit": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The units of the metric."
                      },
                      "nextResetTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The next reset time for the metric (ISO8601 format)."
                      }
                    },
                    "description": "Represents server metrics."
                  },
                  "description": "The list of server metrics for the server.",
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ],
              "description": "Represents the response to a list server metrics request."
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/recoverableSqlPools": {
      "get": {
        "tags": [
          "WorkspaceManagedSqlServer",
          "recoverableSqlPools"
        ],
        "operationId": "WorkspaceManagedSqlServerRecoverableSqlPools_List",
        "summary": "Get list of recoverable sql pools for the server.",
        "description": "Get list of recoverable sql pools for workspace managed sql server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The response to a list recoverable sql pools request",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of recoverable sql pool",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "The properties of a recoverable sql pool",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "edition": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The edition of the database"
                          },
                          "serviceLevelObjective": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The service level objective name of the database"
                          },
                          "elasticPoolName": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The elastic pool name of the database"
                          },
                          "lastAvailableBackupDate": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The last available backup date of the database (ISO8601 format)"
                          }
                        }
                      }
                    },
                    "description": "A recoverable sql pool"
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/recoverableSqlPools/{sqlPoolName}": {
      "get": {
        "tags": [
          "WorkspaceManagedSqlServer",
          "recoverableSqlPools"
        ],
        "operationId": "WorkspaceManagedSqlServerRecoverableSqlPools_Get",
        "summary": "Get recoverable sql pools for the server.",
        "description": "Get recoverable sql pools for workspace managed sql server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sqlPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the sql pool"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "The properties of a recoverable sql pool",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "edition": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The edition of the database"
                    },
                    "serviceLevelObjective": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The service level objective name of the database"
                    },
                    "elasticPoolName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The elastic pool name of the database"
                    },
                    "lastAvailableBackupDate": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The last available backup date of the database (ISO8601 format)"
                    }
                  }
                }
              },
              "description": "A recoverable sql pool"
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/dedicatedSQLminimalTlsSettings/{dedicatedSQLminimalTlsSettingsName}": {
      "put": {
        "operationId": "WorkspaceManagedSqlServerDedicatedSQLMinimalTlsSettings_Update",
        "summary": "Update server's tls settings.",
        "description": "Update workspace managed sql server's minimal tls settings.",
        "tags": [
          "WorkspaceManagedSqlServer, DedicatedSQLminimalTlsSettings"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dedicatedSQLminimalTlsSettingsName",
            "in": "path",
            "description": "The name of the dedicated sql minimal tls settings.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "DedicatedSQLMinimalTlsSettingsName",
              "modelAsString": true
            }
          },
          {
            "schema": {
              "description": "Dedicated Sql Minimal Tls Settings Info",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "description": "Resource location.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "minimalTlsVersion": {
                      "type": "string",
                      "description": "The minimal tls version of the sql server."
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "parameters",
            "description": "minimal tls settings",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated dedicated sql minimal tls settings.",
            "schema": {
              "description": "Dedicated Sql Minimal Tls Settings Info",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "description": "Resource location.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "minimalTlsVersion": {
                      "type": "string",
                      "description": "The minimal tls version of the sql server."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "operationId": "WorkspaceManagedSqlServerDedicatedSQLMinimalTlsSettings_Get",
        "summary": "Get server's minimal tls settings.",
        "description": "Get workspace managed sql server's minimal tls settings.",
        "tags": [
          "WorkspaceManagedSqlServer, DedicatedSQLminimalTlsSettings"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dedicatedSQLminimalTlsSettingsName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the dedicated sql minimal tls settings."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved dedicated sql minimal tls settings.",
            "schema": {
              "description": "Dedicated Sql Minimal Tls Settings Info",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "description": "Resource location.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "minimalTlsVersion": {
                      "type": "string",
                      "description": "The minimal tls version of the sql server."
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/dedicatedSQLminimalTlsSettings": {
      "get": {
        "operationId": "WorkspaceManagedSqlServerDedicatedSQLMinimalTlsSettings_List",
        "summary": "List workspace server's minimal tls settings.",
        "description": "List workspace managed sql server's minimal tls settings.",
        "tags": [
          "WorkspaceManagedSqlServer, DedicatedSQLminimalTlsSettings"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved dedicated sql minimal tls settings.",
            "schema": {
              "description": "A list of the server's dedicated sql minimal tls settings.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "Dedicated Sql Minimal Tls Settings Info",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "description": "Resource location.",
                        "type": "string",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "minimalTlsVersion": {
                            "type": "string",
                            "description": "The minimal tls version of the sql server."
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces": {
      "get": {
        "operationId": "Workspaces_ListByResourceGroup",
        "description": "Returns a list of workspaces in a resource group",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "List of workspaces",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Link to the next page of results",
                  "type": "string"
                },
                "value": {
                  "description": "List of workspaces",
                  "type": "array",
                  "items": {
                    "description": "A workspace",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "Workspace resource properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "defaultDataLakeStorage": {
                            "description": "Workspace default data lake storage account details",
                            "type": "object",
                            "properties": {
                              "accountUrl": {
                                "description": "Account URL",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "filesystem": {
                                "description": "Filesystem name",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "resourceId": {
                                "description": "ARM resource Id of this storage account",
                                "type": "string"
                              },
                              "createManagedPrivateEndpoint": {
                                "description": "Create managed private endpoint to this storage account or not",
                                "type": "boolean",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "sqlAdministratorLoginPassword": {
                            "description": "SQL administrator login password",
                            "type": "string"
                          },
                          "managedResourceGroupName": {
                            "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "provisioningState": {
                            "description": "Resource provisioning state",
                            "type": "string",
                            "readOnly": true
                          },
                          "sqlAdministratorLogin": {
                            "description": "Login for workspace SQL active directory administrator",
                            "type": "string"
                          },
                          "virtualNetworkProfile": {
                            "description": "Virtual Network profile",
                            "type": "object",
                            "properties": {
                              "computeSubnetId": {
                                "description": "Subnet ID used for computes in workspace",
                                "type": "string"
                              }
                            }
                          },
                          "connectivityEndpoints": {
                            "description": "Connectivity endpoints",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object",
                            "readOnly": true
                          },
                          "managedVirtualNetwork": {
                            "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                            "type": "string"
                          },
                          "privateEndpointConnections": {
                            "description": "Private endpoint connections to the workspace",
                            "type": "array",
                            "items": {
                              "description": "A private endpoint connection",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "description": "Private endpoint connection properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The private endpoint which the connection belongs to.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Resource id of the private endpoint.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      },
                                      "x-ms-azure-resource": true
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection state of the private endpoint connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The private link service connection status.",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "The private link service connection description.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "The actions required for private link service connection.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the private endpoint connection.",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "encryption": {
                            "description": "The encryption details of the workspace",
                            "type": "object",
                            "properties": {
                              "doubleEncryptionEnabled": {
                                "description": "Double Encryption enabled",
                                "type": "boolean",
                                "readOnly": true
                              },
                              "cmk": {
                                "description": "Customer Managed Key Details",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The customer managed key status on the workspace",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "key": {
                                    "description": "The key object of the workspace",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Workspace Key sub-resource name",
                                        "type": "string"
                                      },
                                      "keyVaultUrl": {
                                        "description": "Workspace Key sub-resource key vault url",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "kekIdentity": {
                                    "description": "Key encryption key",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "description": "User assigned identity resource Id",
                                        "type": "string"
                                      },
                                      "useSystemAssignedIdentity": {
                                        "description": "Boolean specifying whether to use system assigned identity or not"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "workspaceUID": {
                            "description": "The workspace unique identifier",
                            "type": "string",
                            "readOnly": true,
                            "format": "uuid"
                          },
                          "extraProperties": {
                            "description": "Workspace level configs and feature flags",
                            "type": "object",
                            "readOnly": true
                          },
                          "managedVirtualNetworkSettings": {
                            "description": "Managed Virtual Network Settings",
                            "type": "object",
                            "properties": {
                              "preventDataExfiltration": {
                                "description": "Prevent Data Exfiltration",
                                "type": "boolean"
                              },
                              "linkedAccessCheckOnTargetResource": {
                                "description": "Linked Access Check On Target Resource",
                                "type": "boolean",
                                "x-ms-mutability": [
                                  "create",
                                  "read",
                                  "update"
                                ]
                              },
                              "allowedAadTenantIdsForLinking": {
                                "description": "Allowed Aad Tenant Ids For Linking",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Tenant Id"
                                }
                              }
                            }
                          },
                          "workspaceRepositoryConfiguration": {
                            "description": "Git integration settings",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                                "type": "string"
                              },
                              "hostName": {
                                "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                                "type": "string"
                              },
                              "accountName": {
                                "description": "Account name",
                                "type": "string"
                              },
                              "projectName": {
                                "description": "VSTS project name",
                                "type": "string"
                              },
                              "repositoryName": {
                                "description": "Repository name",
                                "type": "string"
                              },
                              "collaborationBranch": {
                                "description": "Collaboration branch",
                                "type": "string"
                              },
                              "rootFolder": {
                                "description": "Root folder to use in the repository",
                                "type": "string"
                              },
                              "lastCommitId": {
                                "description": "The last commit ID",
                                "type": "string"
                              },
                              "tenantId": {
                                "description": "The VSTS tenant ID",
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          "purviewConfiguration": {
                            "description": "Purview Configuration",
                            "type": "object",
                            "properties": {
                              "purviewResourceId": {
                                "description": "Purview Resource ID",
                                "type": "string"
                              }
                            }
                          },
                          "adlaResourceId": {
                            "description": "The ADLA resource ID.",
                            "type": "string",
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "description": "Enable or Disable public network access to workspace",
                            "default": "Enabled",
                            "type": "string",
                            "x-ms-enum": {
                              "name": "WorkspacePublicNetworkAccess",
                              "modelAsString": true
                            }
                          },
                          "cspWorkspaceAdminProperties": {
                            "description": "Initial workspace AAD admin properties for a CSP subscription",
                            "type": "object",
                            "properties": {
                              "initialWorkspaceAdminObjectId": {
                                "description": "AAD object ID of initial workspace admin",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "settings": {
                            "description": "Workspace settings",
                            "additionalProperties": {
                              "type": "object"
                            },
                            "type": "object",
                            "readOnly": true
                          },
                          "azureADOnlyAuthentication": {
                            "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                            "type": "boolean",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "trustedServiceBypassEnabled": {
                            "description": "Is trustedServiceBypassEnabled for the workspace",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity of the workspace",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the workspace managed identity",
                            "type": "string",
                            "readOnly": true
                          },
                          "tenantId": {
                            "description": "The tenant ID of the workspace managed identity",
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "type": {
                            "description": "The type of managed identity for the workspace",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "description": "The user assigned managed identities.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "User Assigned Managed Identity",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID.",
                                  "readOnly": true,
                                  "x-nullable": true
                                },
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID.",
                                  "readOnly": true,
                                  "x-nullable": true
                                }
                              },
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "description": "Gets a workspace",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A workspace",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Workspace resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultDataLakeStorage": {
                      "description": "Workspace default data lake storage account details",
                      "type": "object",
                      "properties": {
                        "accountUrl": {
                          "description": "Account URL",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "filesystem": {
                          "description": "Filesystem name",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "resourceId": {
                          "description": "ARM resource Id of this storage account",
                          "type": "string"
                        },
                        "createManagedPrivateEndpoint": {
                          "description": "Create managed private endpoint to this storage account or not",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sqlAdministratorLoginPassword": {
                      "description": "SQL administrator login password",
                      "type": "string"
                    },
                    "managedResourceGroupName": {
                      "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "type": "string",
                      "readOnly": true
                    },
                    "sqlAdministratorLogin": {
                      "description": "Login for workspace SQL active directory administrator",
                      "type": "string"
                    },
                    "virtualNetworkProfile": {
                      "description": "Virtual Network profile",
                      "type": "object",
                      "properties": {
                        "computeSubnetId": {
                          "description": "Subnet ID used for computes in workspace",
                          "type": "string"
                        }
                      }
                    },
                    "connectivityEndpoints": {
                      "description": "Connectivity endpoints",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetwork": {
                      "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the workspace",
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Private endpoint connection properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption details of the workspace",
                      "type": "object",
                      "properties": {
                        "doubleEncryptionEnabled": {
                          "description": "Double Encryption enabled",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cmk": {
                          "description": "Customer Managed Key Details",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The customer managed key status on the workspace",
                              "type": "string",
                              "readOnly": true
                            },
                            "key": {
                              "description": "The key object of the workspace",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workspace Key sub-resource name",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Workspace Key sub-resource key vault url",
                                  "type": "string"
                                }
                              }
                            },
                            "kekIdentity": {
                              "description": "Key encryption key",
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "description": "User assigned identity resource Id",
                                  "type": "string"
                                },
                                "useSystemAssignedIdentity": {
                                  "description": "Boolean specifying whether to use system assigned identity or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "workspaceUID": {
                      "description": "The workspace unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "format": "uuid"
                    },
                    "extraProperties": {
                      "description": "Workspace level configs and feature flags",
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetworkSettings": {
                      "description": "Managed Virtual Network Settings",
                      "type": "object",
                      "properties": {
                        "preventDataExfiltration": {
                          "description": "Prevent Data Exfiltration",
                          "type": "boolean"
                        },
                        "linkedAccessCheckOnTargetResource": {
                          "description": "Linked Access Check On Target Resource",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "allowedAadTenantIdsForLinking": {
                          "description": "Allowed Aad Tenant Ids For Linking",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Tenant Id"
                          }
                        }
                      }
                    },
                    "workspaceRepositoryConfiguration": {
                      "description": "Git integration settings",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                          "type": "string"
                        },
                        "hostName": {
                          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account name",
                          "type": "string"
                        },
                        "projectName": {
                          "description": "VSTS project name",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder to use in the repository",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "The last commit ID",
                          "type": "string"
                        },
                        "tenantId": {
                          "description": "The VSTS tenant ID",
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "purviewConfiguration": {
                      "description": "Purview Configuration",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview Resource ID",
                          "type": "string"
                        }
                      }
                    },
                    "adlaResourceId": {
                      "description": "The ADLA resource ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enable or Disable public network access to workspace",
                      "default": "Enabled",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "WorkspacePublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "cspWorkspaceAdminProperties": {
                      "description": "Initial workspace AAD admin properties for a CSP subscription",
                      "type": "object",
                      "properties": {
                        "initialWorkspaceAdminObjectId": {
                          "description": "AAD object ID of initial workspace admin",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "settings": {
                      "description": "Workspace settings",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "azureADOnlyAuthentication": {
                      "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "trustedServiceBypassEnabled": {
                      "description": "Is trustedServiceBypassEnabled for the workspace",
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "identity": {
                  "description": "Identity of the workspace",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "The principal ID of the workspace managed identity",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "The tenant ID of the workspace managed identity",
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity for the workspace",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "The user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User Assigned Managed Identity",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "operationId": "Workspaces_Update",
        "description": "Updates a workspace",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "schema": {
              "description": "Workspace patch details",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Resource tags",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "identity": {
                  "description": "The identity of the workspace",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "The principal ID of the workspace managed identity",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "The tenant ID of the workspace managed identity",
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity for the workspace",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "The user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User Assigned Managed Identity",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                },
                "properties": {
                  "description": "Workspace patch properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "sqlAdministratorLoginPassword": {
                      "description": "SQL administrator login password",
                      "type": "string"
                    },
                    "managedVirtualNetworkSettings": {
                      "description": "Managed Virtual Network Settings",
                      "type": "object",
                      "properties": {
                        "preventDataExfiltration": {
                          "description": "Prevent Data Exfiltration",
                          "type": "boolean"
                        },
                        "linkedAccessCheckOnTargetResource": {
                          "description": "Linked Access Check On Target Resource",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "allowedAadTenantIdsForLinking": {
                          "description": "Allowed Aad Tenant Ids For Linking",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Tenant Id"
                          }
                        }
                      }
                    },
                    "workspaceRepositoryConfiguration": {
                      "description": "Git integration settings",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                          "type": "string"
                        },
                        "hostName": {
                          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account name",
                          "type": "string"
                        },
                        "projectName": {
                          "description": "VSTS project name",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder to use in the repository",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "The last commit ID",
                          "type": "string"
                        },
                        "tenantId": {
                          "description": "The VSTS tenant ID",
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "purviewConfiguration": {
                      "description": "Purview Configuration",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview Resource ID",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "type": "string",
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The encryption details of the workspace",
                      "type": "object",
                      "properties": {
                        "doubleEncryptionEnabled": {
                          "description": "Double Encryption enabled",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cmk": {
                          "description": "Customer Managed Key Details",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The customer managed key status on the workspace",
                              "type": "string",
                              "readOnly": true
                            },
                            "key": {
                              "description": "The key object of the workspace",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workspace Key sub-resource name",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Workspace Key sub-resource key vault url",
                                  "type": "string"
                                }
                              }
                            },
                            "kekIdentity": {
                              "description": "Key encryption key",
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "description": "User assigned identity resource Id",
                                  "type": "string"
                                },
                                "useSystemAssignedIdentity": {
                                  "description": "Boolean specifying whether to use system assigned identity or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enable or Disable public network access to workspace",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "WorkspacePublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "workspacePatchInfo",
            "required": true,
            "description": "Workspace patch request properties"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A workspace",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Workspace resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultDataLakeStorage": {
                      "description": "Workspace default data lake storage account details",
                      "type": "object",
                      "properties": {
                        "accountUrl": {
                          "description": "Account URL",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "filesystem": {
                          "description": "Filesystem name",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "resourceId": {
                          "description": "ARM resource Id of this storage account",
                          "type": "string"
                        },
                        "createManagedPrivateEndpoint": {
                          "description": "Create managed private endpoint to this storage account or not",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sqlAdministratorLoginPassword": {
                      "description": "SQL administrator login password",
                      "type": "string"
                    },
                    "managedResourceGroupName": {
                      "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "type": "string",
                      "readOnly": true
                    },
                    "sqlAdministratorLogin": {
                      "description": "Login for workspace SQL active directory administrator",
                      "type": "string"
                    },
                    "virtualNetworkProfile": {
                      "description": "Virtual Network profile",
                      "type": "object",
                      "properties": {
                        "computeSubnetId": {
                          "description": "Subnet ID used for computes in workspace",
                          "type": "string"
                        }
                      }
                    },
                    "connectivityEndpoints": {
                      "description": "Connectivity endpoints",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetwork": {
                      "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the workspace",
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Private endpoint connection properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption details of the workspace",
                      "type": "object",
                      "properties": {
                        "doubleEncryptionEnabled": {
                          "description": "Double Encryption enabled",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cmk": {
                          "description": "Customer Managed Key Details",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The customer managed key status on the workspace",
                              "type": "string",
                              "readOnly": true
                            },
                            "key": {
                              "description": "The key object of the workspace",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workspace Key sub-resource name",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Workspace Key sub-resource key vault url",
                                  "type": "string"
                                }
                              }
                            },
                            "kekIdentity": {
                              "description": "Key encryption key",
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "description": "User assigned identity resource Id",
                                  "type": "string"
                                },
                                "useSystemAssignedIdentity": {
                                  "description": "Boolean specifying whether to use system assigned identity or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "workspaceUID": {
                      "description": "The workspace unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "format": "uuid"
                    },
                    "extraProperties": {
                      "description": "Workspace level configs and feature flags",
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetworkSettings": {
                      "description": "Managed Virtual Network Settings",
                      "type": "object",
                      "properties": {
                        "preventDataExfiltration": {
                          "description": "Prevent Data Exfiltration",
                          "type": "boolean"
                        },
                        "linkedAccessCheckOnTargetResource": {
                          "description": "Linked Access Check On Target Resource",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "allowedAadTenantIdsForLinking": {
                          "description": "Allowed Aad Tenant Ids For Linking",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Tenant Id"
                          }
                        }
                      }
                    },
                    "workspaceRepositoryConfiguration": {
                      "description": "Git integration settings",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                          "type": "string"
                        },
                        "hostName": {
                          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account name",
                          "type": "string"
                        },
                        "projectName": {
                          "description": "VSTS project name",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder to use in the repository",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "The last commit ID",
                          "type": "string"
                        },
                        "tenantId": {
                          "description": "The VSTS tenant ID",
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "purviewConfiguration": {
                      "description": "Purview Configuration",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview Resource ID",
                          "type": "string"
                        }
                      }
                    },
                    "adlaResourceId": {
                      "description": "The ADLA resource ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enable or Disable public network access to workspace",
                      "default": "Enabled",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "WorkspacePublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "cspWorkspaceAdminProperties": {
                      "description": "Initial workspace AAD admin properties for a CSP subscription",
                      "type": "object",
                      "properties": {
                        "initialWorkspaceAdminObjectId": {
                          "description": "AAD object ID of initial workspace admin",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "settings": {
                      "description": "Workspace settings",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "azureADOnlyAuthentication": {
                      "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "trustedServiceBypassEnabled": {
                      "description": "Is trustedServiceBypassEnabled for the workspace",
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "identity": {
                  "description": "Identity of the workspace",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "The principal ID of the workspace managed identity",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "The tenant ID of the workspace managed identity",
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity for the workspace",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "The user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User Assigned Managed Identity",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "201": {
            "schema": {
              "description": "A workspace",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Workspace resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultDataLakeStorage": {
                      "description": "Workspace default data lake storage account details",
                      "type": "object",
                      "properties": {
                        "accountUrl": {
                          "description": "Account URL",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "filesystem": {
                          "description": "Filesystem name",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "resourceId": {
                          "description": "ARM resource Id of this storage account",
                          "type": "string"
                        },
                        "createManagedPrivateEndpoint": {
                          "description": "Create managed private endpoint to this storage account or not",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sqlAdministratorLoginPassword": {
                      "description": "SQL administrator login password",
                      "type": "string"
                    },
                    "managedResourceGroupName": {
                      "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "type": "string",
                      "readOnly": true
                    },
                    "sqlAdministratorLogin": {
                      "description": "Login for workspace SQL active directory administrator",
                      "type": "string"
                    },
                    "virtualNetworkProfile": {
                      "description": "Virtual Network profile",
                      "type": "object",
                      "properties": {
                        "computeSubnetId": {
                          "description": "Subnet ID used for computes in workspace",
                          "type": "string"
                        }
                      }
                    },
                    "connectivityEndpoints": {
                      "description": "Connectivity endpoints",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetwork": {
                      "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the workspace",
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Private endpoint connection properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption details of the workspace",
                      "type": "object",
                      "properties": {
                        "doubleEncryptionEnabled": {
                          "description": "Double Encryption enabled",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cmk": {
                          "description": "Customer Managed Key Details",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The customer managed key status on the workspace",
                              "type": "string",
                              "readOnly": true
                            },
                            "key": {
                              "description": "The key object of the workspace",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workspace Key sub-resource name",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Workspace Key sub-resource key vault url",
                                  "type": "string"
                                }
                              }
                            },
                            "kekIdentity": {
                              "description": "Key encryption key",
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "description": "User assigned identity resource Id",
                                  "type": "string"
                                },
                                "useSystemAssignedIdentity": {
                                  "description": "Boolean specifying whether to use system assigned identity or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "workspaceUID": {
                      "description": "The workspace unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "format": "uuid"
                    },
                    "extraProperties": {
                      "description": "Workspace level configs and feature flags",
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetworkSettings": {
                      "description": "Managed Virtual Network Settings",
                      "type": "object",
                      "properties": {
                        "preventDataExfiltration": {
                          "description": "Prevent Data Exfiltration",
                          "type": "boolean"
                        },
                        "linkedAccessCheckOnTargetResource": {
                          "description": "Linked Access Check On Target Resource",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "allowedAadTenantIdsForLinking": {
                          "description": "Allowed Aad Tenant Ids For Linking",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Tenant Id"
                          }
                        }
                      }
                    },
                    "workspaceRepositoryConfiguration": {
                      "description": "Git integration settings",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                          "type": "string"
                        },
                        "hostName": {
                          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account name",
                          "type": "string"
                        },
                        "projectName": {
                          "description": "VSTS project name",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder to use in the repository",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "The last commit ID",
                          "type": "string"
                        },
                        "tenantId": {
                          "description": "The VSTS tenant ID",
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "purviewConfiguration": {
                      "description": "Purview Configuration",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview Resource ID",
                          "type": "string"
                        }
                      }
                    },
                    "adlaResourceId": {
                      "description": "The ADLA resource ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enable or Disable public network access to workspace",
                      "default": "Enabled",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "WorkspacePublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "cspWorkspaceAdminProperties": {
                      "description": "Initial workspace AAD admin properties for a CSP subscription",
                      "type": "object",
                      "properties": {
                        "initialWorkspaceAdminObjectId": {
                          "description": "AAD object ID of initial workspace admin",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "settings": {
                      "description": "Workspace settings",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "azureADOnlyAuthentication": {
                      "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "trustedServiceBypassEnabled": {
                      "description": "Is trustedServiceBypassEnabled for the workspace",
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "identity": {
                  "description": "Identity of the workspace",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "The principal ID of the workspace managed identity",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "The tenant ID of the workspace managed identity",
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity for the workspace",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "The user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User Assigned Managed Identity",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "Workspaces_CreateOrUpdate",
        "description": "Creates or updates a workspace",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Workspace create or update request properties",
            "schema": {
              "description": "A workspace",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Workspace resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultDataLakeStorage": {
                      "description": "Workspace default data lake storage account details",
                      "type": "object",
                      "properties": {
                        "accountUrl": {
                          "description": "Account URL",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "filesystem": {
                          "description": "Filesystem name",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "resourceId": {
                          "description": "ARM resource Id of this storage account",
                          "type": "string"
                        },
                        "createManagedPrivateEndpoint": {
                          "description": "Create managed private endpoint to this storage account or not",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sqlAdministratorLoginPassword": {
                      "description": "SQL administrator login password",
                      "type": "string"
                    },
                    "managedResourceGroupName": {
                      "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "type": "string",
                      "readOnly": true
                    },
                    "sqlAdministratorLogin": {
                      "description": "Login for workspace SQL active directory administrator",
                      "type": "string"
                    },
                    "virtualNetworkProfile": {
                      "description": "Virtual Network profile",
                      "type": "object",
                      "properties": {
                        "computeSubnetId": {
                          "description": "Subnet ID used for computes in workspace",
                          "type": "string"
                        }
                      }
                    },
                    "connectivityEndpoints": {
                      "description": "Connectivity endpoints",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetwork": {
                      "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the workspace",
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Private endpoint connection properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption details of the workspace",
                      "type": "object",
                      "properties": {
                        "doubleEncryptionEnabled": {
                          "description": "Double Encryption enabled",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cmk": {
                          "description": "Customer Managed Key Details",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The customer managed key status on the workspace",
                              "type": "string",
                              "readOnly": true
                            },
                            "key": {
                              "description": "The key object of the workspace",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workspace Key sub-resource name",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Workspace Key sub-resource key vault url",
                                  "type": "string"
                                }
                              }
                            },
                            "kekIdentity": {
                              "description": "Key encryption key",
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "description": "User assigned identity resource Id",
                                  "type": "string"
                                },
                                "useSystemAssignedIdentity": {
                                  "description": "Boolean specifying whether to use system assigned identity or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "workspaceUID": {
                      "description": "The workspace unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "format": "uuid"
                    },
                    "extraProperties": {
                      "description": "Workspace level configs and feature flags",
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetworkSettings": {
                      "description": "Managed Virtual Network Settings",
                      "type": "object",
                      "properties": {
                        "preventDataExfiltration": {
                          "description": "Prevent Data Exfiltration",
                          "type": "boolean"
                        },
                        "linkedAccessCheckOnTargetResource": {
                          "description": "Linked Access Check On Target Resource",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "allowedAadTenantIdsForLinking": {
                          "description": "Allowed Aad Tenant Ids For Linking",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Tenant Id"
                          }
                        }
                      }
                    },
                    "workspaceRepositoryConfiguration": {
                      "description": "Git integration settings",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                          "type": "string"
                        },
                        "hostName": {
                          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account name",
                          "type": "string"
                        },
                        "projectName": {
                          "description": "VSTS project name",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder to use in the repository",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "The last commit ID",
                          "type": "string"
                        },
                        "tenantId": {
                          "description": "The VSTS tenant ID",
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "purviewConfiguration": {
                      "description": "Purview Configuration",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview Resource ID",
                          "type": "string"
                        }
                      }
                    },
                    "adlaResourceId": {
                      "description": "The ADLA resource ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enable or Disable public network access to workspace",
                      "default": "Enabled",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "WorkspacePublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "cspWorkspaceAdminProperties": {
                      "description": "Initial workspace AAD admin properties for a CSP subscription",
                      "type": "object",
                      "properties": {
                        "initialWorkspaceAdminObjectId": {
                          "description": "AAD object ID of initial workspace admin",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "settings": {
                      "description": "Workspace settings",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "azureADOnlyAuthentication": {
                      "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "trustedServiceBypassEnabled": {
                      "description": "Is trustedServiceBypassEnabled for the workspace",
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "identity": {
                  "description": "Identity of the workspace",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "The principal ID of the workspace managed identity",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "The tenant ID of the workspace managed identity",
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity for the workspace",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "The user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User Assigned Managed Identity",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "workspaceInfo",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A workspace",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Workspace resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultDataLakeStorage": {
                      "description": "Workspace default data lake storage account details",
                      "type": "object",
                      "properties": {
                        "accountUrl": {
                          "description": "Account URL",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "filesystem": {
                          "description": "Filesystem name",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "resourceId": {
                          "description": "ARM resource Id of this storage account",
                          "type": "string"
                        },
                        "createManagedPrivateEndpoint": {
                          "description": "Create managed private endpoint to this storage account or not",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sqlAdministratorLoginPassword": {
                      "description": "SQL administrator login password",
                      "type": "string"
                    },
                    "managedResourceGroupName": {
                      "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "type": "string",
                      "readOnly": true
                    },
                    "sqlAdministratorLogin": {
                      "description": "Login for workspace SQL active directory administrator",
                      "type": "string"
                    },
                    "virtualNetworkProfile": {
                      "description": "Virtual Network profile",
                      "type": "object",
                      "properties": {
                        "computeSubnetId": {
                          "description": "Subnet ID used for computes in workspace",
                          "type": "string"
                        }
                      }
                    },
                    "connectivityEndpoints": {
                      "description": "Connectivity endpoints",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetwork": {
                      "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the workspace",
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Private endpoint connection properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption details of the workspace",
                      "type": "object",
                      "properties": {
                        "doubleEncryptionEnabled": {
                          "description": "Double Encryption enabled",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cmk": {
                          "description": "Customer Managed Key Details",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The customer managed key status on the workspace",
                              "type": "string",
                              "readOnly": true
                            },
                            "key": {
                              "description": "The key object of the workspace",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workspace Key sub-resource name",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Workspace Key sub-resource key vault url",
                                  "type": "string"
                                }
                              }
                            },
                            "kekIdentity": {
                              "description": "Key encryption key",
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "description": "User assigned identity resource Id",
                                  "type": "string"
                                },
                                "useSystemAssignedIdentity": {
                                  "description": "Boolean specifying whether to use system assigned identity or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "workspaceUID": {
                      "description": "The workspace unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "format": "uuid"
                    },
                    "extraProperties": {
                      "description": "Workspace level configs and feature flags",
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetworkSettings": {
                      "description": "Managed Virtual Network Settings",
                      "type": "object",
                      "properties": {
                        "preventDataExfiltration": {
                          "description": "Prevent Data Exfiltration",
                          "type": "boolean"
                        },
                        "linkedAccessCheckOnTargetResource": {
                          "description": "Linked Access Check On Target Resource",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "allowedAadTenantIdsForLinking": {
                          "description": "Allowed Aad Tenant Ids For Linking",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Tenant Id"
                          }
                        }
                      }
                    },
                    "workspaceRepositoryConfiguration": {
                      "description": "Git integration settings",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                          "type": "string"
                        },
                        "hostName": {
                          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account name",
                          "type": "string"
                        },
                        "projectName": {
                          "description": "VSTS project name",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder to use in the repository",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "The last commit ID",
                          "type": "string"
                        },
                        "tenantId": {
                          "description": "The VSTS tenant ID",
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "purviewConfiguration": {
                      "description": "Purview Configuration",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview Resource ID",
                          "type": "string"
                        }
                      }
                    },
                    "adlaResourceId": {
                      "description": "The ADLA resource ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enable or Disable public network access to workspace",
                      "default": "Enabled",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "WorkspacePublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "cspWorkspaceAdminProperties": {
                      "description": "Initial workspace AAD admin properties for a CSP subscription",
                      "type": "object",
                      "properties": {
                        "initialWorkspaceAdminObjectId": {
                          "description": "AAD object ID of initial workspace admin",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "settings": {
                      "description": "Workspace settings",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "azureADOnlyAuthentication": {
                      "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "trustedServiceBypassEnabled": {
                      "description": "Is trustedServiceBypassEnabled for the workspace",
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "identity": {
                  "description": "Identity of the workspace",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "The principal ID of the workspace managed identity",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "The tenant ID of the workspace managed identity",
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity for the workspace",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "The user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User Assigned Managed Identity",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "201": {
            "schema": {
              "description": "A workspace",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Workspace resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultDataLakeStorage": {
                      "description": "Workspace default data lake storage account details",
                      "type": "object",
                      "properties": {
                        "accountUrl": {
                          "description": "Account URL",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "filesystem": {
                          "description": "Filesystem name",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "resourceId": {
                          "description": "ARM resource Id of this storage account",
                          "type": "string"
                        },
                        "createManagedPrivateEndpoint": {
                          "description": "Create managed private endpoint to this storage account or not",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sqlAdministratorLoginPassword": {
                      "description": "SQL administrator login password",
                      "type": "string"
                    },
                    "managedResourceGroupName": {
                      "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "type": "string",
                      "readOnly": true
                    },
                    "sqlAdministratorLogin": {
                      "description": "Login for workspace SQL active directory administrator",
                      "type": "string"
                    },
                    "virtualNetworkProfile": {
                      "description": "Virtual Network profile",
                      "type": "object",
                      "properties": {
                        "computeSubnetId": {
                          "description": "Subnet ID used for computes in workspace",
                          "type": "string"
                        }
                      }
                    },
                    "connectivityEndpoints": {
                      "description": "Connectivity endpoints",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetwork": {
                      "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the workspace",
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Private endpoint connection properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption details of the workspace",
                      "type": "object",
                      "properties": {
                        "doubleEncryptionEnabled": {
                          "description": "Double Encryption enabled",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cmk": {
                          "description": "Customer Managed Key Details",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The customer managed key status on the workspace",
                              "type": "string",
                              "readOnly": true
                            },
                            "key": {
                              "description": "The key object of the workspace",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workspace Key sub-resource name",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Workspace Key sub-resource key vault url",
                                  "type": "string"
                                }
                              }
                            },
                            "kekIdentity": {
                              "description": "Key encryption key",
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "description": "User assigned identity resource Id",
                                  "type": "string"
                                },
                                "useSystemAssignedIdentity": {
                                  "description": "Boolean specifying whether to use system assigned identity or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "workspaceUID": {
                      "description": "The workspace unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "format": "uuid"
                    },
                    "extraProperties": {
                      "description": "Workspace level configs and feature flags",
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetworkSettings": {
                      "description": "Managed Virtual Network Settings",
                      "type": "object",
                      "properties": {
                        "preventDataExfiltration": {
                          "description": "Prevent Data Exfiltration",
                          "type": "boolean"
                        },
                        "linkedAccessCheckOnTargetResource": {
                          "description": "Linked Access Check On Target Resource",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "allowedAadTenantIdsForLinking": {
                          "description": "Allowed Aad Tenant Ids For Linking",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Tenant Id"
                          }
                        }
                      }
                    },
                    "workspaceRepositoryConfiguration": {
                      "description": "Git integration settings",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                          "type": "string"
                        },
                        "hostName": {
                          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account name",
                          "type": "string"
                        },
                        "projectName": {
                          "description": "VSTS project name",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder to use in the repository",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "The last commit ID",
                          "type": "string"
                        },
                        "tenantId": {
                          "description": "The VSTS tenant ID",
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "purviewConfiguration": {
                      "description": "Purview Configuration",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview Resource ID",
                          "type": "string"
                        }
                      }
                    },
                    "adlaResourceId": {
                      "description": "The ADLA resource ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enable or Disable public network access to workspace",
                      "default": "Enabled",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "WorkspacePublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "cspWorkspaceAdminProperties": {
                      "description": "Initial workspace AAD admin properties for a CSP subscription",
                      "type": "object",
                      "properties": {
                        "initialWorkspaceAdminObjectId": {
                          "description": "AAD object ID of initial workspace admin",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "settings": {
                      "description": "Workspace settings",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "azureADOnlyAuthentication": {
                      "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "trustedServiceBypassEnabled": {
                      "description": "Is trustedServiceBypassEnabled for the workspace",
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "identity": {
                  "description": "Identity of the workspace",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "The principal ID of the workspace managed identity",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "The tenant ID of the workspace managed identity",
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity for the workspace",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "The user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User Assigned Managed Identity",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "description": "Deletes a workspace",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A workspace",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Workspace resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultDataLakeStorage": {
                      "description": "Workspace default data lake storage account details",
                      "type": "object",
                      "properties": {
                        "accountUrl": {
                          "description": "Account URL",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "filesystem": {
                          "description": "Filesystem name",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "resourceId": {
                          "description": "ARM resource Id of this storage account",
                          "type": "string"
                        },
                        "createManagedPrivateEndpoint": {
                          "description": "Create managed private endpoint to this storage account or not",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sqlAdministratorLoginPassword": {
                      "description": "SQL administrator login password",
                      "type": "string"
                    },
                    "managedResourceGroupName": {
                      "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "type": "string",
                      "readOnly": true
                    },
                    "sqlAdministratorLogin": {
                      "description": "Login for workspace SQL active directory administrator",
                      "type": "string"
                    },
                    "virtualNetworkProfile": {
                      "description": "Virtual Network profile",
                      "type": "object",
                      "properties": {
                        "computeSubnetId": {
                          "description": "Subnet ID used for computes in workspace",
                          "type": "string"
                        }
                      }
                    },
                    "connectivityEndpoints": {
                      "description": "Connectivity endpoints",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetwork": {
                      "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the workspace",
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Private endpoint connection properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption details of the workspace",
                      "type": "object",
                      "properties": {
                        "doubleEncryptionEnabled": {
                          "description": "Double Encryption enabled",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cmk": {
                          "description": "Customer Managed Key Details",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The customer managed key status on the workspace",
                              "type": "string",
                              "readOnly": true
                            },
                            "key": {
                              "description": "The key object of the workspace",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workspace Key sub-resource name",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Workspace Key sub-resource key vault url",
                                  "type": "string"
                                }
                              }
                            },
                            "kekIdentity": {
                              "description": "Key encryption key",
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "description": "User assigned identity resource Id",
                                  "type": "string"
                                },
                                "useSystemAssignedIdentity": {
                                  "description": "Boolean specifying whether to use system assigned identity or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "workspaceUID": {
                      "description": "The workspace unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "format": "uuid"
                    },
                    "extraProperties": {
                      "description": "Workspace level configs and feature flags",
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetworkSettings": {
                      "description": "Managed Virtual Network Settings",
                      "type": "object",
                      "properties": {
                        "preventDataExfiltration": {
                          "description": "Prevent Data Exfiltration",
                          "type": "boolean"
                        },
                        "linkedAccessCheckOnTargetResource": {
                          "description": "Linked Access Check On Target Resource",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "allowedAadTenantIdsForLinking": {
                          "description": "Allowed Aad Tenant Ids For Linking",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Tenant Id"
                          }
                        }
                      }
                    },
                    "workspaceRepositoryConfiguration": {
                      "description": "Git integration settings",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                          "type": "string"
                        },
                        "hostName": {
                          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account name",
                          "type": "string"
                        },
                        "projectName": {
                          "description": "VSTS project name",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder to use in the repository",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "The last commit ID",
                          "type": "string"
                        },
                        "tenantId": {
                          "description": "The VSTS tenant ID",
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "purviewConfiguration": {
                      "description": "Purview Configuration",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview Resource ID",
                          "type": "string"
                        }
                      }
                    },
                    "adlaResourceId": {
                      "description": "The ADLA resource ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enable or Disable public network access to workspace",
                      "default": "Enabled",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "WorkspacePublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "cspWorkspaceAdminProperties": {
                      "description": "Initial workspace AAD admin properties for a CSP subscription",
                      "type": "object",
                      "properties": {
                        "initialWorkspaceAdminObjectId": {
                          "description": "AAD object ID of initial workspace admin",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "settings": {
                      "description": "Workspace settings",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "azureADOnlyAuthentication": {
                      "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "trustedServiceBypassEnabled": {
                      "description": "Is trustedServiceBypassEnabled for the workspace",
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "identity": {
                  "description": "Identity of the workspace",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "The principal ID of the workspace managed identity",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "The tenant ID of the workspace managed identity",
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity for the workspace",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "The user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User Assigned Managed Identity",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "schema": {
              "description": "A workspace",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Workspace resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultDataLakeStorage": {
                      "description": "Workspace default data lake storage account details",
                      "type": "object",
                      "properties": {
                        "accountUrl": {
                          "description": "Account URL",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "filesystem": {
                          "description": "Filesystem name",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "resourceId": {
                          "description": "ARM resource Id of this storage account",
                          "type": "string"
                        },
                        "createManagedPrivateEndpoint": {
                          "description": "Create managed private endpoint to this storage account or not",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "sqlAdministratorLoginPassword": {
                      "description": "SQL administrator login password",
                      "type": "string"
                    },
                    "managedResourceGroupName": {
                      "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provisioning state",
                      "type": "string",
                      "readOnly": true
                    },
                    "sqlAdministratorLogin": {
                      "description": "Login for workspace SQL active directory administrator",
                      "type": "string"
                    },
                    "virtualNetworkProfile": {
                      "description": "Virtual Network profile",
                      "type": "object",
                      "properties": {
                        "computeSubnetId": {
                          "description": "Subnet ID used for computes in workspace",
                          "type": "string"
                        }
                      }
                    },
                    "connectivityEndpoints": {
                      "description": "Connectivity endpoints",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetwork": {
                      "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                      "type": "string"
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the workspace",
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Private endpoint connection properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Resource id of the private endpoint.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                },
                                "x-ms-azure-resource": true
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection state of the private endpoint connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The private link service connection status.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The private link service connection description.",
                                    "type": "string"
                                  },
                                  "actionsRequired": {
                                    "description": "The actions required for private link service connection.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the private endpoint connection.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption details of the workspace",
                      "type": "object",
                      "properties": {
                        "doubleEncryptionEnabled": {
                          "description": "Double Encryption enabled",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cmk": {
                          "description": "Customer Managed Key Details",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The customer managed key status on the workspace",
                              "type": "string",
                              "readOnly": true
                            },
                            "key": {
                              "description": "The key object of the workspace",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workspace Key sub-resource name",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Workspace Key sub-resource key vault url",
                                  "type": "string"
                                }
                              }
                            },
                            "kekIdentity": {
                              "description": "Key encryption key",
                              "type": "object",
                              "properties": {
                                "userAssignedIdentity": {
                                  "description": "User assigned identity resource Id",
                                  "type": "string"
                                },
                                "useSystemAssignedIdentity": {
                                  "description": "Boolean specifying whether to use system assigned identity or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "workspaceUID": {
                      "description": "The workspace unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "format": "uuid"
                    },
                    "extraProperties": {
                      "description": "Workspace level configs and feature flags",
                      "type": "object",
                      "readOnly": true
                    },
                    "managedVirtualNetworkSettings": {
                      "description": "Managed Virtual Network Settings",
                      "type": "object",
                      "properties": {
                        "preventDataExfiltration": {
                          "description": "Prevent Data Exfiltration",
                          "type": "boolean"
                        },
                        "linkedAccessCheckOnTargetResource": {
                          "description": "Linked Access Check On Target Resource",
                          "type": "boolean",
                          "x-ms-mutability": [
                            "create",
                            "read",
                            "update"
                          ]
                        },
                        "allowedAadTenantIdsForLinking": {
                          "description": "Allowed Aad Tenant Ids For Linking",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Tenant Id"
                          }
                        }
                      }
                    },
                    "workspaceRepositoryConfiguration": {
                      "description": "Git integration settings",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                          "type": "string"
                        },
                        "hostName": {
                          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account name",
                          "type": "string"
                        },
                        "projectName": {
                          "description": "VSTS project name",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder to use in the repository",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "The last commit ID",
                          "type": "string"
                        },
                        "tenantId": {
                          "description": "The VSTS tenant ID",
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "purviewConfiguration": {
                      "description": "Purview Configuration",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview Resource ID",
                          "type": "string"
                        }
                      }
                    },
                    "adlaResourceId": {
                      "description": "The ADLA resource ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Enable or Disable public network access to workspace",
                      "default": "Enabled",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "WorkspacePublicNetworkAccess",
                        "modelAsString": true
                      }
                    },
                    "cspWorkspaceAdminProperties": {
                      "description": "Initial workspace AAD admin properties for a CSP subscription",
                      "type": "object",
                      "properties": {
                        "initialWorkspaceAdminObjectId": {
                          "description": "AAD object ID of initial workspace admin",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "settings": {
                      "description": "Workspace settings",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "type": "object",
                      "readOnly": true
                    },
                    "azureADOnlyAuthentication": {
                      "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "trustedServiceBypassEnabled": {
                      "description": "Is trustedServiceBypassEnabled for the workspace",
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "identity": {
                  "description": "Identity of the workspace",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "The principal ID of the workspace managed identity",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "The tenant ID of the workspace managed identity",
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of managed identity for the workspace",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "description": "The user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User Assigned Managed Identity",
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/workspaces": {
      "get": {
        "operationId": "Workspaces_List",
        "description": "Returns a list of workspaces in a subscription",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "List of workspaces",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Link to the next page of results",
                  "type": "string"
                },
                "value": {
                  "description": "List of workspaces",
                  "type": "array",
                  "items": {
                    "description": "A workspace",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "Workspace resource properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "defaultDataLakeStorage": {
                            "description": "Workspace default data lake storage account details",
                            "type": "object",
                            "properties": {
                              "accountUrl": {
                                "description": "Account URL",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "filesystem": {
                                "description": "Filesystem name",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "resourceId": {
                                "description": "ARM resource Id of this storage account",
                                "type": "string"
                              },
                              "createManagedPrivateEndpoint": {
                                "description": "Create managed private endpoint to this storage account or not",
                                "type": "boolean",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "sqlAdministratorLoginPassword": {
                            "description": "SQL administrator login password",
                            "type": "string"
                          },
                          "managedResourceGroupName": {
                            "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "provisioningState": {
                            "description": "Resource provisioning state",
                            "type": "string",
                            "readOnly": true
                          },
                          "sqlAdministratorLogin": {
                            "description": "Login for workspace SQL active directory administrator",
                            "type": "string"
                          },
                          "virtualNetworkProfile": {
                            "description": "Virtual Network profile",
                            "type": "object",
                            "properties": {
                              "computeSubnetId": {
                                "description": "Subnet ID used for computes in workspace",
                                "type": "string"
                              }
                            }
                          },
                          "connectivityEndpoints": {
                            "description": "Connectivity endpoints",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object",
                            "readOnly": true
                          },
                          "managedVirtualNetwork": {
                            "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                            "type": "string"
                          },
                          "privateEndpointConnections": {
                            "description": "Private endpoint connections to the workspace",
                            "type": "array",
                            "items": {
                              "description": "A private endpoint connection",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "description": "Private endpoint connection properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The private endpoint which the connection belongs to.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Resource id of the private endpoint.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      },
                                      "x-ms-azure-resource": true
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection state of the private endpoint connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The private link service connection status.",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "The private link service connection description.",
                                          "type": "string"
                                        },
                                        "actionsRequired": {
                                          "description": "The actions required for private link service connection.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the private endpoint connection.",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "encryption": {
                            "description": "The encryption details of the workspace",
                            "type": "object",
                            "properties": {
                              "doubleEncryptionEnabled": {
                                "description": "Double Encryption enabled",
                                "type": "boolean",
                                "readOnly": true
                              },
                              "cmk": {
                                "description": "Customer Managed Key Details",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The customer managed key status on the workspace",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "key": {
                                    "description": "The key object of the workspace",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Workspace Key sub-resource name",
                                        "type": "string"
                                      },
                                      "keyVaultUrl": {
                                        "description": "Workspace Key sub-resource key vault url",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "kekIdentity": {
                                    "description": "Key encryption key",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "description": "User assigned identity resource Id",
                                        "type": "string"
                                      },
                                      "useSystemAssignedIdentity": {
                                        "description": "Boolean specifying whether to use system assigned identity or not"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "workspaceUID": {
                            "description": "The workspace unique identifier",
                            "type": "string",
                            "readOnly": true,
                            "format": "uuid"
                          },
                          "extraProperties": {
                            "description": "Workspace level configs and feature flags",
                            "type": "object",
                            "readOnly": true
                          },
                          "managedVirtualNetworkSettings": {
                            "description": "Managed Virtual Network Settings",
                            "type": "object",
                            "properties": {
                              "preventDataExfiltration": {
                                "description": "Prevent Data Exfiltration",
                                "type": "boolean"
                              },
                              "linkedAccessCheckOnTargetResource": {
                                "description": "Linked Access Check On Target Resource",
                                "type": "boolean",
                                "x-ms-mutability": [
                                  "create",
                                  "read",
                                  "update"
                                ]
                              },
                              "allowedAadTenantIdsForLinking": {
                                "description": "Allowed Aad Tenant Ids For Linking",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Tenant Id"
                                }
                              }
                            }
                          },
                          "workspaceRepositoryConfiguration": {
                            "description": "Git integration settings",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                                "type": "string"
                              },
                              "hostName": {
                                "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                                "type": "string"
                              },
                              "accountName": {
                                "description": "Account name",
                                "type": "string"
                              },
                              "projectName": {
                                "description": "VSTS project name",
                                "type": "string"
                              },
                              "repositoryName": {
                                "description": "Repository name",
                                "type": "string"
                              },
                              "collaborationBranch": {
                                "description": "Collaboration branch",
                                "type": "string"
                              },
                              "rootFolder": {
                                "description": "Root folder to use in the repository",
                                "type": "string"
                              },
                              "lastCommitId": {
                                "description": "The last commit ID",
                                "type": "string"
                              },
                              "tenantId": {
                                "description": "The VSTS tenant ID",
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          "purviewConfiguration": {
                            "description": "Purview Configuration",
                            "type": "object",
                            "properties": {
                              "purviewResourceId": {
                                "description": "Purview Resource ID",
                                "type": "string"
                              }
                            }
                          },
                          "adlaResourceId": {
                            "description": "The ADLA resource ID.",
                            "type": "string",
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "description": "Enable or Disable public network access to workspace",
                            "default": "Enabled",
                            "type": "string",
                            "x-ms-enum": {
                              "name": "WorkspacePublicNetworkAccess",
                              "modelAsString": true
                            }
                          },
                          "cspWorkspaceAdminProperties": {
                            "description": "Initial workspace AAD admin properties for a CSP subscription",
                            "type": "object",
                            "properties": {
                              "initialWorkspaceAdminObjectId": {
                                "description": "AAD object ID of initial workspace admin",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "settings": {
                            "description": "Workspace settings",
                            "additionalProperties": {
                              "type": "object"
                            },
                            "type": "object",
                            "readOnly": true
                          },
                          "azureADOnlyAuthentication": {
                            "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                            "type": "boolean",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "trustedServiceBypassEnabled": {
                            "description": "Is trustedServiceBypassEnabled for the workspace",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity of the workspace",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "The principal ID of the workspace managed identity",
                            "type": "string",
                            "readOnly": true
                          },
                          "tenantId": {
                            "description": "The tenant ID of the workspace managed identity",
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true
                          },
                          "type": {
                            "description": "The type of managed identity for the workspace",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "description": "The user assigned managed identities.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "User Assigned Managed Identity",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID.",
                                  "readOnly": true,
                                  "x-nullable": true
                                },
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID.",
                                  "readOnly": true,
                                  "x-nullable": true
                                }
                              },
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/administrators/activeDirectory": {
      "get": {
        "operationId": "WorkspaceAadAdmins_Get",
        "description": "Gets a workspace active directory admin",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "Workspace active directory administrator",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Workspace active directory administrator properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "description": "Tenant ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "login": {
                      "description": "Login of the workspace active directory administrator",
                      "type": "string"
                    },
                    "administratorType": {
                      "description": "Workspace active directory administrator type",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sid": {
                      "description": "Object ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "WorkspaceAadAdmins_CreateOrUpdate",
        "description": "Creates or updates a workspace active directory admin",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Workspace active directory administrator properties",
            "schema": {
              "description": "Workspace active directory administrator",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Workspace active directory administrator properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "description": "Tenant ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "login": {
                      "description": "Login of the workspace active directory administrator",
                      "type": "string"
                    },
                    "administratorType": {
                      "description": "Workspace active directory administrator type",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sid": {
                      "description": "Object ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "aadAdminInfo",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Workspace active directory administrator",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Workspace active directory administrator properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "description": "Tenant ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "login": {
                      "description": "Login of the workspace active directory administrator",
                      "type": "string"
                    },
                    "administratorType": {
                      "description": "Workspace active directory administrator type",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sid": {
                      "description": "Object ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "",
            "schema": {
              "description": "Workspace active directory administrator",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Workspace active directory administrator properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "description": "Tenant ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "login": {
                      "description": "Login of the workspace active directory administrator",
                      "type": "string"
                    },
                    "administratorType": {
                      "description": "Workspace active directory administrator type",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sid": {
                      "description": "Object ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "WorkspaceAadAdmins_Delete",
        "description": "Deletes a workspace active directory admin",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "204": {
            "description": "Accepted"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlAdministrators/activeDirectory": {
      "get": {
        "operationId": "WorkspaceSqlAadAdmins_Get",
        "description": "Gets a workspace SQL active directory admin",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "Workspace active directory administrator",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Workspace active directory administrator properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "description": "Tenant ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "login": {
                      "description": "Login of the workspace active directory administrator",
                      "type": "string"
                    },
                    "administratorType": {
                      "description": "Workspace active directory administrator type",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sid": {
                      "description": "Object ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "WorkspaceSqlAadAdmins_CreateOrUpdate",
        "description": "Creates or updates a workspace SQL active directory admin",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Workspace active directory administrator properties",
            "schema": {
              "description": "Workspace active directory administrator",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Workspace active directory administrator properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "description": "Tenant ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "login": {
                      "description": "Login of the workspace active directory administrator",
                      "type": "string"
                    },
                    "administratorType": {
                      "description": "Workspace active directory administrator type",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sid": {
                      "description": "Object ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            },
            "in": "body",
            "name": "aadAdminInfo",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Workspace active directory administrator",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Workspace active directory administrator properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "description": "Tenant ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "login": {
                      "description": "Login of the workspace active directory administrator",
                      "type": "string"
                    },
                    "administratorType": {
                      "description": "Workspace active directory administrator type",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sid": {
                      "description": "Object ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "",
            "schema": {
              "description": "Workspace active directory administrator",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Workspace active directory administrator properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "description": "Tenant ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "login": {
                      "description": "Login of the workspace active directory administrator",
                      "type": "string"
                    },
                    "administratorType": {
                      "description": "Workspace active directory administrator type",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "sid": {
                      "description": "Object ID of the workspace active directory administrator",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "WorkspaceSqlAadAdmins_Delete",
        "description": "Deletes a workspace SQL active directory admin",
        "tags": [
          "Workspaces"
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "204": {
            "description": "Accepted"
          }
        },
        "consumes": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/managedIdentitySqlControlSettings/default": {
      "get": {
        "operationId": "WorkspaceManagedIdentitySqlControlSettings_Get",
        "summary": "Get Managed Identity Sql Control Settings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "Managed Identity Sql Control Settings",
              "description": "Sql Control Settings for workspace managed identity",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "type": "object",
                  "title": "Managed Identity Sql Control Settings",
                  "description": "Sql Control Settings for workspace managed identity",
                  "properties": {
                    "grantSqlControlToManagedIdentity": {
                      "type": "object",
                      "description": "Grant sql control to managed identity",
                      "properties": {
                        "desiredState": {
                          "description": "Desired state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DesiredState",
                            "modelAsString": false
                          }
                        },
                        "actualState": {
                          "description": "Actual state",
                          "type": "string",
                          "enum": [
                            "Enabling",
                            "Enabled",
                            "Disabling",
                            "Disabled",
                            "Unknown"
                          ],
                          "x-ms-enum": {
                            "name": "ActualState",
                            "modelAsString": false
                          },
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "WorkspaceManagedIdentitySqlControlSettings_CreateOrUpdate",
        "summary": "Create or update Managed Identity Sql Control Settings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Managed Identity Sql Control Settings",
            "schema": {
              "type": "object",
              "title": "Managed Identity Sql Control Settings",
              "description": "Sql Control Settings for workspace managed identity",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "type": "object",
                  "title": "Managed Identity Sql Control Settings",
                  "description": "Sql Control Settings for workspace managed identity",
                  "properties": {
                    "grantSqlControlToManagedIdentity": {
                      "type": "object",
                      "description": "Grant sql control to managed identity",
                      "properties": {
                        "desiredState": {
                          "description": "Desired state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DesiredState",
                            "modelAsString": false
                          }
                        },
                        "actualState": {
                          "description": "Actual state",
                          "type": "string",
                          "enum": [
                            "Enabling",
                            "Enabled",
                            "Disabling",
                            "Disabled",
                            "Unknown"
                          ],
                          "x-ms-enum": {
                            "name": "ActualState",
                            "modelAsString": false
                          },
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            },
            "in": "body",
            "name": "managedIdentitySqlControlSettings",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "Managed Identity Sql Control Settings",
              "description": "Sql Control Settings for workspace managed identity",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "type": "object",
                  "title": "Managed Identity Sql Control Settings",
                  "description": "Sql Control Settings for workspace managed identity",
                  "properties": {
                    "grantSqlControlToManagedIdentity": {
                      "type": "object",
                      "description": "Grant sql control to managed identity",
                      "properties": {
                        "desiredState": {
                          "description": "Desired state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DesiredState",
                            "modelAsString": false
                          }
                        },
                        "actualState": {
                          "description": "Actual state",
                          "type": "string",
                          "enum": [
                            "Enabling",
                            "Enabled",
                            "Disabling",
                            "Disabled",
                            "Unknown"
                          ],
                          "x-ms-enum": {
                            "name": "ActualState",
                            "modelAsString": false
                          },
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "schema": {
              "type": "object",
              "title": "Managed Identity Sql Control Settings",
              "description": "Sql Control Settings for workspace managed identity",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "type": "object",
                  "title": "Managed Identity Sql Control Settings",
                  "description": "Sql Control Settings for workspace managed identity",
                  "properties": {
                    "grantSqlControlToManagedIdentity": {
                      "type": "object",
                      "description": "Grant sql control to managed identity",
                      "properties": {
                        "desiredState": {
                          "description": "Desired state",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DesiredState",
                            "modelAsString": false
                          }
                        },
                        "actualState": {
                          "description": "Actual state",
                          "type": "string",
                          "enum": [
                            "Enabling",
                            "Enabled",
                            "Disabling",
                            "Disabled",
                            "Unknown"
                          ],
                          "x-ms-enum": {
                            "name": "ActualState",
                            "modelAsString": false
                          },
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            },
            "description": "Created"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/restorableDroppedSqlPools/{restorableDroppedSqlPoolId}": {
      "get": {
        "tags": [
          "RestorableDroppedSqlPools"
        ],
        "operationId": "RestorableDroppedSqlPools_Get",
        "description": "Gets a deleted sql pool that can be restored",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "restorableDroppedSqlPoolId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id of the deleted Sql Pool in the form of sqlPoolName,deletionTimeInFileTimeFormat"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "The properties of a restorable dropped Sql pool",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the database"
                    },
                    "edition": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The edition of the database"
                    },
                    "maxSizeBytes": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The max size in bytes of the database"
                    },
                    "serviceLevelObjective": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The service level objective name of the database"
                    },
                    "elasticPoolName": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The elastic pool name of the database"
                    },
                    "creationDate": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the database (ISO8601 format)"
                    },
                    "deletionDate": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The deletion date of the database (ISO8601 format)"
                    },
                    "earliestRestoreDate": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The earliest restore date of the database (ISO8601 format)"
                    }
                  }
                }
              },
              "description": "A restorable dropped Sql pool"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/restorableDroppedSqlPools": {
      "get": {
        "tags": [
          "RestorableDroppedSqlPools"
        ],
        "operationId": "RestorableDroppedSqlPools_ListByWorkspace",
        "description": "Gets a list of deleted Sql pools that can be restored",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "The properties of a restorable dropped Sql pool",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "databaseName": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the database"
                          },
                          "edition": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The edition of the database"
                          },
                          "maxSizeBytes": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The max size in bytes of the database"
                          },
                          "serviceLevelObjective": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The service level objective name of the database"
                          },
                          "elasticPoolName": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The elastic pool name of the database"
                          },
                          "creationDate": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the database (ISO8601 format)"
                          },
                          "deletionDate": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The deletion date of the database (ISO8601 format)"
                          },
                          "earliestRestoreDate": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The earliest restore date of the database (ISO8601 format)"
                          }
                        }
                      }
                    },
                    "description": "A restorable dropped Sql pool"
                  },
                  "description": "A list of restorable dropped Sql pools"
                }
              },
              "required": [
                "value"
              ],
              "description": "The response to a list restorable dropped Sql pools request"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AzureADOnlyAuthenticationProperties": {
      "description": "Properties of a active directory only authentication.",
      "required": [
        "azureADOnlyAuthentication"
      ],
      "type": "object",
      "properties": {
        "azureADOnlyAuthentication": {
          "description": "Azure Active Directory only Authentication enabled.",
          "type": "boolean"
        },
        "state": {
          "description": "property configuration state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Consistent",
            "InConsistent",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "state value",
            "modelAsString": true
          }
        },
        "creationDate": {
          "description": "property configuration date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "AzureADOnlyAuthentication": {
      "description": "Azure Active Directory Only Authentication Info",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "azureADOnlyAuthentication resource properties",
          "x-ms-client-flatten": true,
          "required": [
            "azureADOnlyAuthentication"
          ],
          "type": "object",
          "properties": {
            "azureADOnlyAuthentication": {
              "description": "Azure Active Directory only Authentication enabled.",
              "type": "boolean"
            },
            "state": {
              "description": "property configuration state",
              "type": "string",
              "readOnly": true,
              "enum": [
                "Consistent",
                "InConsistent",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "state value",
                "modelAsString": true
              }
            },
            "creationDate": {
              "description": "property configuration date",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            }
          }
        }
      }
    },
    "AzureADOnlyAuthenticationListResult": {
      "description": "A list of active directory only authentications.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "Azure Active Directory Only Authentication Info",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "azureADOnlyAuthentication resource properties",
                "x-ms-client-flatten": true,
                "required": [
                  "azureADOnlyAuthentication"
                ],
                "type": "object",
                "properties": {
                  "azureADOnlyAuthentication": {
                    "description": "Azure Active Directory only Authentication enabled.",
                    "type": "boolean"
                  },
                  "state": {
                    "description": "property configuration state",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Consistent",
                      "InConsistent",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "state value",
                      "modelAsString": true
                    }
                  },
                  "creationDate": {
                    "description": "property configuration date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BigDataPoolResourceInfoListResult": {
      "type": "object",
      "description": "Collection of Big Data pool information",
      "title": "Collection of Big Data pools",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results"
        },
        "value": {
          "type": "array",
          "description": "List of Big Data pools",
          "items": {
            "type": "object",
            "description": "A Big Data pool",
            "title": "Big Data pool",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "Big Data pool properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "title": "Spark pool properties",
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "description": "The state of the Big Data pool."
                  },
                  "autoScale": {
                    "description": "Auto-scaling properties",
                    "type": "object",
                    "title": "Spark pool auto-scaling properties",
                    "properties": {
                      "minNodeCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum number of nodes the Big Data pool can support.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether automatic scaling is enabled for the Big Data pool."
                      },
                      "maxNodeCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum number of nodes the Big Data pool can support.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    }
                  },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when the Big Data pool was created.",
                    "readOnly": true
                  },
                  "autoPause": {
                    "description": "Auto-pausing properties",
                    "type": "object",
                    "title": "Spark pool auto-pausing properties",
                    "properties": {
                      "delayInMinutes": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether auto-pausing is enabled for the Big Data pool."
                      }
                    }
                  },
                  "isComputeIsolationEnabled": {
                    "type": "boolean",
                    "description": "Whether compute isolation is required or not."
                  },
                  "isAutotuneEnabled": {
                    "type": "boolean",
                    "title": "Enable Autotune",
                    "description": "Whether autotune is required or not.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "sessionLevelPackagesEnabled": {
                    "type": "boolean",
                    "description": "Whether session level packages enabled."
                  },
                  "cacheSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The cache size"
                  },
                  "dynamicExecutorAllocation": {
                    "description": "Dynamic Executor Allocation",
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                      },
                      "minExecutors": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum number of executors alloted"
                      },
                      "maxExecutors": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum number of executors alloted"
                      }
                    }
                  },
                  "sparkEventsFolder": {
                    "type": "string",
                    "description": "The Spark events folder",
                    "x-ms-mutability": [
                      "create",
                      "read",
                      "update"
                    ]
                  },
                  "nodeCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of nodes in the Big Data pool.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "libraryRequirements": {
                    "description": "Library version requirements",
                    "type": "object",
                    "title": "Spark pool library version requirements",
                    "properties": {
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The last update time of the library requirements file."
                      },
                      "content": {
                        "type": "string",
                        "description": "The library requirements."
                      },
                      "filename": {
                        "type": "string",
                        "description": "The filename of the library requirements file."
                      }
                    }
                  },
                  "customLibraries": {
                    "description": "List of custom libraries/packages associated with the spark pool.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Library/package information of a Big Data pool powered by Apache Spark",
                      "title": "Information about a library/package created at the workspace level.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the library."
                        },
                        "path": {
                          "type": "string",
                          "description": "Storage blob path of library."
                        },
                        "containerName": {
                          "type": "string",
                          "description": "Storage blob container name."
                        },
                        "uploadedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The last update time of the library.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of the library."
                        },
                        "provisioningStatus": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Provisioning status of the library/package."
                        },
                        "creatorId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Creator Id of the library/package."
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "sparkConfigProperties": {
                    "description": "Spark configuration file to specify additional properties",
                    "type": "object",
                    "title": "Spark pool Config Properties",
                    "properties": {
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The last update time of the spark config properties file."
                      },
                      "content": {
                        "type": "string",
                        "description": "The spark config properties."
                      },
                      "filename": {
                        "type": "string",
                        "description": "The filename of the spark config properties file."
                      },
                      "configurationType": {
                        "enum": [
                          "File",
                          "Artifact"
                        ],
                        "type": "string",
                        "description": "The type of the spark config properties file.",
                        "x-ms-enum": {
                          "name": "ConfigurationType",
                          "modelAsString": true
                        },
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    }
                  },
                  "sparkVersion": {
                    "type": "string",
                    "description": "The Apache Spark version."
                  },
                  "defaultSparkLogFolder": {
                    "type": "string",
                    "description": "The default folder where Spark logs will be written."
                  },
                  "nodeSize": {
                    "enum": [
                      "None",
                      "Small",
                      "Medium",
                      "Large",
                      "XLarge",
                      "XXLarge",
                      "XXXLarge"
                    ],
                    "type": "string",
                    "description": "The level of compute power that each node in the Big Data pool has.",
                    "x-ms-enum": {
                      "name": "NodeSize",
                      "modelAsString": true
                    }
                  },
                  "nodeSizeFamily": {
                    "enum": [
                      "None",
                      "MemoryOptimized",
                      "HardwareAcceleratedFPGA",
                      "HardwareAcceleratedGPU"
                    ],
                    "type": "string",
                    "description": "The kind of nodes that the Big Data pool provides.",
                    "x-ms-enum": {
                      "name": "NodeSizeFamily",
                      "modelAsString": true
                    }
                  },
                  "lastSucceededTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time when the Big Data pool was updated successfully.",
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "BigDataPoolPatchInfo": {
      "type": "object",
      "description": "Properties patch for a Big Data pool",
      "title": "Patch for a Big Data pool",
      "properties": {
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Updated tags for the Big Data pool",
          "type": "object"
        }
      }
    },
    "BigDataPoolResourceInfo": {
      "type": "object",
      "description": "A Big Data pool",
      "title": "Big Data pool",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Big Data pool properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "title": "Spark pool properties",
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "The state of the Big Data pool."
            },
            "autoScale": {
              "description": "Auto-scaling properties",
              "type": "object",
              "title": "Spark pool auto-scaling properties",
              "properties": {
                "minNodeCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The minimum number of nodes the Big Data pool can support.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether automatic scaling is enabled for the Big Data pool."
                },
                "maxNodeCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of nodes the Big Data pool can support.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                }
              }
            },
            "creationDate": {
              "type": "string",
              "format": "date-time",
              "description": "The time when the Big Data pool was created.",
              "readOnly": true
            },
            "autoPause": {
              "description": "Auto-pausing properties",
              "type": "object",
              "title": "Spark pool auto-pausing properties",
              "properties": {
                "delayInMinutes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether auto-pausing is enabled for the Big Data pool."
                }
              }
            },
            "isComputeIsolationEnabled": {
              "type": "boolean",
              "description": "Whether compute isolation is required or not."
            },
            "isAutotuneEnabled": {
              "type": "boolean",
              "title": "Enable Autotune",
              "description": "Whether autotune is required or not.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sessionLevelPackagesEnabled": {
              "type": "boolean",
              "description": "Whether session level packages enabled."
            },
            "cacheSize": {
              "type": "integer",
              "format": "int32",
              "description": "The cache size"
            },
            "dynamicExecutorAllocation": {
              "description": "Dynamic Executor Allocation",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
                },
                "minExecutors": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The minimum number of executors alloted"
                },
                "maxExecutors": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of executors alloted"
                }
              }
            },
            "sparkEventsFolder": {
              "type": "string",
              "description": "The Spark events folder",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            },
            "nodeCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of nodes in the Big Data pool.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "libraryRequirements": {
              "description": "Library version requirements",
              "type": "object",
              "title": "Spark pool library version requirements",
              "properties": {
                "time": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "description": "The last update time of the library requirements file."
                },
                "content": {
                  "type": "string",
                  "description": "The library requirements."
                },
                "filename": {
                  "type": "string",
                  "description": "The filename of the library requirements file."
                }
              }
            },
            "customLibraries": {
              "description": "List of custom libraries/packages associated with the spark pool.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Library/package information of a Big Data pool powered by Apache Spark",
                "title": "Information about a library/package created at the workspace level.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the library."
                  },
                  "path": {
                    "type": "string",
                    "description": "Storage blob path of library."
                  },
                  "containerName": {
                    "type": "string",
                    "description": "Storage blob container name."
                  },
                  "uploadedTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last update time of the library.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the library."
                  },
                  "provisioningStatus": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Provisioning status of the library/package."
                  },
                  "creatorId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Creator Id of the library/package."
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "sparkConfigProperties": {
              "description": "Spark configuration file to specify additional properties",
              "type": "object",
              "title": "Spark pool Config Properties",
              "properties": {
                "time": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "description": "The last update time of the spark config properties file."
                },
                "content": {
                  "type": "string",
                  "description": "The spark config properties."
                },
                "filename": {
                  "type": "string",
                  "description": "The filename of the spark config properties file."
                },
                "configurationType": {
                  "enum": [
                    "File",
                    "Artifact"
                  ],
                  "type": "string",
                  "description": "The type of the spark config properties file.",
                  "x-ms-enum": {
                    "name": "ConfigurationType",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                }
              }
            },
            "sparkVersion": {
              "type": "string",
              "description": "The Apache Spark version."
            },
            "defaultSparkLogFolder": {
              "type": "string",
              "description": "The default folder where Spark logs will be written."
            },
            "nodeSize": {
              "enum": [
                "None",
                "Small",
                "Medium",
                "Large",
                "XLarge",
                "XXLarge",
                "XXXLarge"
              ],
              "type": "string",
              "description": "The level of compute power that each node in the Big Data pool has.",
              "x-ms-enum": {
                "name": "NodeSize",
                "modelAsString": true
              }
            },
            "nodeSizeFamily": {
              "enum": [
                "None",
                "MemoryOptimized",
                "HardwareAcceleratedFPGA",
                "HardwareAcceleratedGPU"
              ],
              "type": "string",
              "description": "The kind of nodes that the Big Data pool provides.",
              "x-ms-enum": {
                "name": "NodeSizeFamily",
                "modelAsString": true
              }
            },
            "lastSucceededTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "The time when the Big Data pool was updated successfully.",
              "readOnly": true
            }
          }
        }
      }
    },
    "BigDataPoolResourceProperties": {
      "type": "object",
      "description": "Properties of a Big Data pool powered by Apache Spark",
      "title": "Spark pool properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The state of the Big Data pool."
        },
        "autoScale": {
          "description": "Auto-scaling properties",
          "type": "object",
          "title": "Spark pool auto-scaling properties",
          "properties": {
            "minNodeCount": {
              "type": "integer",
              "format": "int32",
              "description": "The minimum number of nodes the Big Data pool can support.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether automatic scaling is enabled for the Big Data pool."
            },
            "maxNodeCount": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of nodes the Big Data pool can support.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the Big Data pool was created.",
          "readOnly": true
        },
        "autoPause": {
          "description": "Auto-pausing properties",
          "type": "object",
          "title": "Spark pool auto-pausing properties",
          "properties": {
            "delayInMinutes": {
              "type": "integer",
              "format": "int32",
              "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether auto-pausing is enabled for the Big Data pool."
            }
          }
        },
        "isComputeIsolationEnabled": {
          "type": "boolean",
          "description": "Whether compute isolation is required or not."
        },
        "isAutotuneEnabled": {
          "type": "boolean",
          "title": "Enable Autotune",
          "description": "Whether autotune is required or not.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "sessionLevelPackagesEnabled": {
          "type": "boolean",
          "description": "Whether session level packages enabled."
        },
        "cacheSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cache size"
        },
        "dynamicExecutorAllocation": {
          "description": "Dynamic Executor Allocation",
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
            },
            "minExecutors": {
              "type": "integer",
              "format": "int32",
              "description": "The minimum number of executors alloted"
            },
            "maxExecutors": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of executors alloted"
            }
          }
        },
        "sparkEventsFolder": {
          "type": "string",
          "description": "The Spark events folder",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the Big Data pool.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "libraryRequirements": {
          "description": "Library version requirements",
          "type": "object",
          "title": "Spark pool library version requirements",
          "properties": {
            "time": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The last update time of the library requirements file."
            },
            "content": {
              "type": "string",
              "description": "The library requirements."
            },
            "filename": {
              "type": "string",
              "description": "The filename of the library requirements file."
            }
          }
        },
        "customLibraries": {
          "description": "List of custom libraries/packages associated with the spark pool.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Library/package information of a Big Data pool powered by Apache Spark",
            "title": "Information about a library/package created at the workspace level.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the library."
              },
              "path": {
                "type": "string",
                "description": "Storage blob path of library."
              },
              "containerName": {
                "type": "string",
                "description": "Storage blob container name."
              },
              "uploadedTimestamp": {
                "type": "string",
                "format": "date-time",
                "description": "The last update time of the library.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Type of the library."
              },
              "provisioningStatus": {
                "readOnly": true,
                "type": "string",
                "description": "Provisioning status of the library/package."
              },
              "creatorId": {
                "readOnly": true,
                "type": "string",
                "description": "Creator Id of the library/package."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "sparkConfigProperties": {
          "description": "Spark configuration file to specify additional properties",
          "type": "object",
          "title": "Spark pool Config Properties",
          "properties": {
            "time": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The last update time of the spark config properties file."
            },
            "content": {
              "type": "string",
              "description": "The spark config properties."
            },
            "filename": {
              "type": "string",
              "description": "The filename of the spark config properties file."
            },
            "configurationType": {
              "enum": [
                "File",
                "Artifact"
              ],
              "type": "string",
              "description": "The type of the spark config properties file.",
              "x-ms-enum": {
                "name": "ConfigurationType",
                "modelAsString": true
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        },
        "sparkVersion": {
          "type": "string",
          "description": "The Apache Spark version."
        },
        "defaultSparkLogFolder": {
          "type": "string",
          "description": "The default folder where Spark logs will be written."
        },
        "nodeSize": {
          "enum": [
            "None",
            "Small",
            "Medium",
            "Large",
            "XLarge",
            "XXLarge",
            "XXXLarge"
          ],
          "type": "string",
          "description": "The level of compute power that each node in the Big Data pool has.",
          "x-ms-enum": {
            "name": "NodeSize",
            "modelAsString": true
          }
        },
        "nodeSizeFamily": {
          "enum": [
            "None",
            "MemoryOptimized",
            "HardwareAcceleratedFPGA",
            "HardwareAcceleratedGPU"
          ],
          "type": "string",
          "description": "The kind of nodes that the Big Data pool provides.",
          "x-ms-enum": {
            "name": "NodeSizeFamily",
            "modelAsString": true
          }
        },
        "lastSucceededTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the Big Data pool was updated successfully.",
          "readOnly": true
        }
      }
    },
    "AutoScaleProperties": {
      "type": "object",
      "description": "Auto-scaling properties of a Big Data pool powered by Apache Spark",
      "title": "Spark pool auto-scaling properties",
      "properties": {
        "minNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of nodes the Big Data pool can support.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether automatic scaling is enabled for the Big Data pool."
        },
        "maxNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of nodes the Big Data pool can support.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "AutoPauseProperties": {
      "type": "object",
      "description": "Auto-pausing properties of a Big Data pool powered by Apache Spark",
      "title": "Spark pool auto-pausing properties",
      "properties": {
        "delayInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Number of minutes of idle time before the Big Data pool is automatically paused."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether auto-pausing is enabled for the Big Data pool."
        }
      }
    },
    "DynamicExecutorAllocation": {
      "type": "object",
      "description": "Dynamic Executor Allocation Properties",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether Dynamic Executor Allocation is enabled or not."
        },
        "minExecutors": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of executors alloted"
        },
        "maxExecutors": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of executors alloted"
        }
      }
    },
    "LibraryRequirements": {
      "type": "object",
      "description": "Library requirements for a Big Data pool powered by Apache Spark",
      "title": "Spark pool library version requirements",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The last update time of the library requirements file."
        },
        "content": {
          "type": "string",
          "description": "The library requirements."
        },
        "filename": {
          "type": "string",
          "description": "The filename of the library requirements file."
        }
      }
    },
    "SparkConfigProperties": {
      "type": "object",
      "description": "SparkConfig Properties for a Big Data pool powered by Apache Spark",
      "title": "Spark pool Config Properties",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The last update time of the spark config properties file."
        },
        "content": {
          "type": "string",
          "description": "The spark config properties."
        },
        "filename": {
          "type": "string",
          "description": "The filename of the spark config properties file."
        },
        "configurationType": {
          "enum": [
            "File",
            "Artifact"
          ],
          "type": "string",
          "description": "The type of the spark config properties file.",
          "x-ms-enum": {
            "name": "ConfigurationType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "title": "Check name availability request",
      "description": "A request about whether a workspace name is available",
      "properties": {
        "name": {
          "type": "string",
          "description": "Workspace name"
        },
        "type": {
          "type": "string",
          "description": "Type: workspace"
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "title": "Check name availability response",
      "description": "A response saying whether the workspace name is available",
      "properties": {
        "message": {
          "type": "string",
          "description": "Validation message"
        },
        "available": {
          "type": "boolean",
          "description": "Whether the workspace name is available"
        },
        "reason": {
          "type": "string",
          "description": "Reason the workspace name is or is not available"
        },
        "name": {
          "type": "string",
          "description": "Workspace name"
        }
      }
    },
    "IpFirewallRuleInfo": {
      "description": "IP firewall rule",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "IP firewall rule properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "endIpAddress": {
              "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            },
            "provisioningState": {
              "description": "Resource provisioning state",
              "enum": [
                "Provisioning",
                "Succeeded",
                "Deleting",
                "Failed",
                "DeleteError"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "startIpAddress": {
              "description": "The start IP address of the firewall rule. Must be IPv4 format",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            }
          }
        }
      }
    },
    "ReplaceAllIpFirewallRulesRequest": {
      "description": "Replace all IP firewall rules request",
      "type": "object",
      "properties": {
        "ipFirewallRules": {
          "description": "IP firewall rule properties",
          "additionalProperties": {
            "description": "IP firewall rule properties",
            "type": "object",
            "properties": {
              "endIpAddress": {
                "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read",
                  "update"
                ]
              },
              "provisioningState": {
                "description": "Resource provisioning state",
                "enum": [
                  "Provisioning",
                  "Succeeded",
                  "Deleting",
                  "Failed",
                  "DeleteError"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-enum": {
                  "name": "ProvisioningState",
                  "modelAsString": true
                }
              },
              "startIpAddress": {
                "description": "The start IP address of the firewall rule. Must be IPv4 format",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read",
                  "update"
                ]
              }
            }
          },
          "type": "object"
        }
      }
    },
    "IpFirewallRuleProperties": {
      "description": "IP firewall rule properties",
      "type": "object",
      "properties": {
        "endIpAddress": {
          "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "provisioningState": {
          "description": "Resource provisioning state",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Deleting",
            "Failed",
            "DeleteError"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "startIpAddress": {
          "description": "The start IP address of the firewall rule. Must be IPv4 format",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "IpFirewallRuleInfoListResult": {
      "type": "object",
      "description": "List of IP firewall rules",
      "properties": {
        "nextLink": {
          "description": "Link to next page of results",
          "type": "string"
        },
        "value": {
          "description": "List of IP firewall rules",
          "type": "array",
          "items": {
            "description": "IP firewall rule",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "IP firewall rule properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "endIpAddress": {
                    "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read",
                      "update"
                    ]
                  },
                  "provisioningState": {
                    "description": "Resource provisioning state",
                    "enum": [
                      "Provisioning",
                      "Succeeded",
                      "Deleting",
                      "Failed",
                      "DeleteError"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "startIpAddress": {
                    "description": "The start IP address of the firewall rule. Must be IPv4 format",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read",
                      "update"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "ReplaceAllFirewallRulesOperationResponse": {
      "type": "object",
      "description": "An existing operation for replacing the firewall rules",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The operation ID"
        }
      }
    },
    "SubResource": {
      "description": "Azure Synapse nested resource, which belongs to a workspace.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        }
      }
    },
    "IntegrationRuntime": {
      "description": "Azure Synapse nested object which serves as a compute resource for activities.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "description": "Type of integration runtime.",
          "type": "string",
          "enum": [
            "Managed",
            "SelfHosted"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeType",
            "modelAsString": true
          }
        },
        "description": {
          "description": "Integration runtime description.",
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "IntegrationRuntimeType": {
      "description": "The type of integration runtime.",
      "type": "string",
      "enum": [
        "Managed",
        "SelfHosted"
      ],
      "x-ms-enum": {
        "name": "IntegrationRuntimeType",
        "modelAsString": true
      }
    },
    "ManagedIntegrationRuntime": {
      "x-ms-discriminator-value": "Managed",
      "description": "Managed integration runtime, including managed elastic and managed dedicated integration runtimes.",
      "type": "object",
      "allOf": [
        {
          "description": "Azure Synapse nested object which serves as a compute resource for activities.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of integration runtime.",
              "type": "string",
              "enum": [
                "Managed",
                "SelfHosted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeType",
                "modelAsString": true
              }
            },
            "description": {
              "description": "Integration runtime description.",
              "type": "string"
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "Integration runtime state, only valid for managed dedicated integration runtime.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Initial",
            "Stopped",
            "Started",
            "Starting",
            "Stopping",
            "NeedRegistration",
            "Online",
            "Limited",
            "Offline",
            "AccessDenied"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeState",
            "modelAsString": true
          }
        },
        "typeProperties": {
          "description": "Managed integration runtime properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "computeProperties": {
              "description": "The compute resource for managed integration runtime.",
              "type": "object",
              "properties": {
                "location": {
                  "description": "The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities",
                  "type": "string"
                },
                "nodeSize": {
                  "description": "The node size requirement to managed integration runtime.",
                  "type": "string"
                },
                "numberOfNodes": {
                  "description": "The required number of nodes for managed integration runtime.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "maxParallelExecutionsPerNode": {
                  "description": "Maximum parallel executions count per node for managed integration runtime.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "dataFlowProperties": {
                  "description": "Data flow properties for managed integration runtime.",
                  "type": "object",
                  "properties": {
                    "computeType": {
                      "description": "Compute type of the cluster which will execute data flow job.",
                      "type": "string",
                      "enum": [
                        "General",
                        "MemoryOptimized",
                        "ComputeOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "DataFlowComputeType",
                        "modelAsString": true
                      }
                    },
                    "coreCount": {
                      "description": "Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "timeToLive": {
                      "description": "Time to live (in minutes) setting of the cluster which will execute data flow job.",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "vNetProperties": {
                  "description": "VNet properties for managed integration runtime.",
                  "type": "object",
                  "properties": {
                    "vNetId": {
                      "description": "The ID of the VNet that this integration runtime will join.",
                      "type": "string"
                    },
                    "subnet": {
                      "description": "The name of the subnet this integration runtime will join.",
                      "type": "string"
                    },
                    "publicIPs": {
                      "description": "Resource IDs of the public IP addresses that this integration runtime will use.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "The ID of the public IP address."
                      }
                    },
                    "subnetId": {
                      "description": "The ID of subnet, to which this Azure-SSIS integration runtime will be joined.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            },
            "ssisProperties": {
              "description": "SSIS properties for managed integration runtime.",
              "type": "object",
              "properties": {
                "catalogInfo": {
                  "description": "Catalog information for managed dedicated integration runtime.",
                  "type": "object",
                  "properties": {
                    "catalogServerEndpoint": {
                      "description": "The catalog database server URL.",
                      "type": "string"
                    },
                    "catalogAdminUserName": {
                      "description": "The administrator user name of catalog database.",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 128
                    },
                    "catalogAdminPassword": {
                      "description": "The password of the administrator user account of the catalog database.",
                      "x-ms-discriminator-value": "SecureString",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of the secret."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of secure string."
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "catalogPricingTier": {
                      "description": "The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium",
                        "PremiumRS"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeSsisCatalogPricingTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "licenseType": {
                  "description": "License type for bringing your own license scenario.",
                  "type": "string",
                  "enum": [
                    "BasePrice",
                    "LicenseIncluded"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeLicenseType",
                    "modelAsString": true
                  }
                },
                "customSetupScriptProperties": {
                  "description": "Custom setup script properties for a managed dedicated integration runtime.",
                  "type": "object",
                  "properties": {
                    "blobContainerUri": {
                      "description": "The URI of the Azure blob container that contains the custom setup script.",
                      "type": "string"
                    },
                    "sasToken": {
                      "description": "The SAS token of the Azure blob container.",
                      "x-ms-discriminator-value": "SecureString",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of the secret."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of secure string."
                        }
                      },
                      "required": [
                        "value"
                      ]
                    }
                  }
                },
                "dataProxyProperties": {
                  "description": "Data proxy properties for a managed dedicated integration runtime.",
                  "type": "object",
                  "properties": {
                    "connectVia": {
                      "description": "The self-hosted integration runtime reference.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of this referenced entity.",
                          "type": "string",
                          "enum": [
                            "IntegrationRuntimeReference",
                            "LinkedServiceReference"
                          ],
                          "x-ms-enum": {
                            "name": "IntegrationRuntimeEntityReferenceType",
                            "modelAsString": true
                          }
                        },
                        "referenceName": {
                          "description": "The name of this referenced entity.",
                          "type": "string"
                        }
                      }
                    },
                    "stagingLinkedService": {
                      "description": "The staging linked service reference.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of this referenced entity.",
                          "type": "string",
                          "enum": [
                            "IntegrationRuntimeReference",
                            "LinkedServiceReference"
                          ],
                          "x-ms-enum": {
                            "name": "IntegrationRuntimeEntityReferenceType",
                            "modelAsString": true
                          }
                        },
                        "referenceName": {
                          "description": "The name of this referenced entity.",
                          "type": "string"
                        }
                      }
                    },
                    "path": {
                      "description": "The path to contain the staged data in the Blob storage.",
                      "type": "string"
                    }
                  }
                },
                "edition": {
                  "description": "The edition for the SSIS Integration Runtime",
                  "type": "string",
                  "enum": [
                    "Standard",
                    "Enterprise"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeEdition",
                    "modelAsString": true
                  }
                },
                "expressCustomSetupProperties": {
                  "description": "Custom setup without script properties for a SSIS integration runtime.",
                  "type": "array",
                  "items": {
                    "description": "The base definition of the custom setup.",
                    "type": "object",
                    "discriminator": "type",
                    "properties": {
                      "type": {
                        "description": "The type of custom setup.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            },
            "customerVirtualNetwork": {
              "description": "The name of virtual network to which Azure-SSIS integration runtime will join",
              "type": "object",
              "properties": {
                "subnetId": {
                  "description": "The ID of subnet to which Azure-SSIS integration runtime will join.",
                  "type": "string"
                }
              }
            }
          }
        },
        "managedVirtualNetwork": {
          "description": "Managed integration runtime managed virtual network.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "referenceName": {
              "description": "The reference name of the managed virtual network",
              "type": "string"
            },
            "type": {
              "description": "The type of the managed virtual network.",
              "type": "string"
            },
            "id": {
              "description": "The id of the managed virtual network.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ManagedIntegrationRuntimeTypeProperties": {
      "description": "Managed integration runtime type properties.",
      "type": "object",
      "properties": {
        "computeProperties": {
          "description": "The compute resource for managed integration runtime.",
          "type": "object",
          "properties": {
            "location": {
              "description": "The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities",
              "type": "string"
            },
            "nodeSize": {
              "description": "The node size requirement to managed integration runtime.",
              "type": "string"
            },
            "numberOfNodes": {
              "description": "The required number of nodes for managed integration runtime.",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "maxParallelExecutionsPerNode": {
              "description": "Maximum parallel executions count per node for managed integration runtime.",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "dataFlowProperties": {
              "description": "Data flow properties for managed integration runtime.",
              "type": "object",
              "properties": {
                "computeType": {
                  "description": "Compute type of the cluster which will execute data flow job.",
                  "type": "string",
                  "enum": [
                    "General",
                    "MemoryOptimized",
                    "ComputeOptimized"
                  ],
                  "x-ms-enum": {
                    "name": "DataFlowComputeType",
                    "modelAsString": true
                  }
                },
                "coreCount": {
                  "description": "Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.",
                  "type": "integer",
                  "format": "int32"
                },
                "timeToLive": {
                  "description": "Time to live (in minutes) setting of the cluster which will execute data flow job.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            },
            "vNetProperties": {
              "description": "VNet properties for managed integration runtime.",
              "type": "object",
              "properties": {
                "vNetId": {
                  "description": "The ID of the VNet that this integration runtime will join.",
                  "type": "string"
                },
                "subnet": {
                  "description": "The name of the subnet this integration runtime will join.",
                  "type": "string"
                },
                "publicIPs": {
                  "description": "Resource IDs of the public IP addresses that this integration runtime will use.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The ID of the public IP address."
                  }
                },
                "subnetId": {
                  "description": "The ID of subnet, to which this Azure-SSIS integration runtime will be joined.",
                  "type": "string"
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        },
        "ssisProperties": {
          "description": "SSIS properties for managed integration runtime.",
          "type": "object",
          "properties": {
            "catalogInfo": {
              "description": "Catalog information for managed dedicated integration runtime.",
              "type": "object",
              "properties": {
                "catalogServerEndpoint": {
                  "description": "The catalog database server URL.",
                  "type": "string"
                },
                "catalogAdminUserName": {
                  "description": "The administrator user name of catalog database.",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                },
                "catalogAdminPassword": {
                  "description": "The password of the administrator user account of the catalog database.",
                  "x-ms-discriminator-value": "SecureString",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the secret."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of secure string."
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "catalogPricingTier": {
                  "description": "The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/",
                  "type": "string",
                  "enum": [
                    "Basic",
                    "Standard",
                    "Premium",
                    "PremiumRS"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeSsisCatalogPricingTier",
                    "modelAsString": true
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            },
            "licenseType": {
              "description": "License type for bringing your own license scenario.",
              "type": "string",
              "enum": [
                "BasePrice",
                "LicenseIncluded"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeLicenseType",
                "modelAsString": true
              }
            },
            "customSetupScriptProperties": {
              "description": "Custom setup script properties for a managed dedicated integration runtime.",
              "type": "object",
              "properties": {
                "blobContainerUri": {
                  "description": "The URI of the Azure blob container that contains the custom setup script.",
                  "type": "string"
                },
                "sasToken": {
                  "description": "The SAS token of the Azure blob container.",
                  "x-ms-discriminator-value": "SecureString",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the secret."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value of secure string."
                    }
                  },
                  "required": [
                    "value"
                  ]
                }
              }
            },
            "dataProxyProperties": {
              "description": "Data proxy properties for a managed dedicated integration runtime.",
              "type": "object",
              "properties": {
                "connectVia": {
                  "description": "The self-hosted integration runtime reference.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of this referenced entity.",
                      "type": "string",
                      "enum": [
                        "IntegrationRuntimeReference",
                        "LinkedServiceReference"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeEntityReferenceType",
                        "modelAsString": true
                      }
                    },
                    "referenceName": {
                      "description": "The name of this referenced entity.",
                      "type": "string"
                    }
                  }
                },
                "stagingLinkedService": {
                  "description": "The staging linked service reference.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of this referenced entity.",
                      "type": "string",
                      "enum": [
                        "IntegrationRuntimeReference",
                        "LinkedServiceReference"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeEntityReferenceType",
                        "modelAsString": true
                      }
                    },
                    "referenceName": {
                      "description": "The name of this referenced entity.",
                      "type": "string"
                    }
                  }
                },
                "path": {
                  "description": "The path to contain the staged data in the Blob storage.",
                  "type": "string"
                }
              }
            },
            "edition": {
              "description": "The edition for the SSIS Integration Runtime",
              "type": "string",
              "enum": [
                "Standard",
                "Enterprise"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeEdition",
                "modelAsString": true
              }
            },
            "expressCustomSetupProperties": {
              "description": "Custom setup without script properties for a SSIS integration runtime.",
              "type": "array",
              "items": {
                "description": "The base definition of the custom setup.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "description": "The type of custom setup.",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              },
              "x-ms-identifiers": []
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        },
        "customerVirtualNetwork": {
          "description": "The name of virtual network to which Azure-SSIS integration runtime will join",
          "type": "object",
          "properties": {
            "subnetId": {
              "description": "The ID of subnet to which Azure-SSIS integration runtime will join.",
              "type": "string"
            }
          }
        }
      }
    },
    "ManagedIntegrationRuntimeManagedVirtualNetworkReference": {
      "description": "Managed integration runtime managed virtual network reference.",
      "type": "object",
      "properties": {
        "referenceName": {
          "description": "The reference name of the managed virtual network",
          "type": "string"
        },
        "type": {
          "description": "The type of the managed virtual network.",
          "type": "string"
        },
        "id": {
          "description": "The id of the managed virtual network.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "IntegrationRuntimeComputeProperties": {
      "description": "The compute resource properties for managed integration runtime.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities",
          "type": "string"
        },
        "nodeSize": {
          "description": "The node size requirement to managed integration runtime.",
          "type": "string"
        },
        "numberOfNodes": {
          "description": "The required number of nodes for managed integration runtime.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "maxParallelExecutionsPerNode": {
          "description": "Maximum parallel executions count per node for managed integration runtime.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "dataFlowProperties": {
          "description": "Data flow properties for managed integration runtime.",
          "type": "object",
          "properties": {
            "computeType": {
              "description": "Compute type of the cluster which will execute data flow job.",
              "type": "string",
              "enum": [
                "General",
                "MemoryOptimized",
                "ComputeOptimized"
              ],
              "x-ms-enum": {
                "name": "DataFlowComputeType",
                "modelAsString": true
              }
            },
            "coreCount": {
              "description": "Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.",
              "type": "integer",
              "format": "int32"
            },
            "timeToLive": {
              "description": "Time to live (in minutes) setting of the cluster which will execute data flow job.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        },
        "vNetProperties": {
          "description": "VNet properties for managed integration runtime.",
          "type": "object",
          "properties": {
            "vNetId": {
              "description": "The ID of the VNet that this integration runtime will join.",
              "type": "string"
            },
            "subnet": {
              "description": "The name of the subnet this integration runtime will join.",
              "type": "string"
            },
            "publicIPs": {
              "description": "Resource IDs of the public IP addresses that this integration runtime will use.",
              "type": "array",
              "items": {
                "type": "string",
                "description": "The ID of the public IP address."
              }
            },
            "subnetId": {
              "description": "The ID of subnet, to which this Azure-SSIS integration runtime will be joined.",
              "type": "string"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "IntegrationRuntimeDataFlowProperties": {
      "description": "Data flow properties for managed integration runtime.",
      "type": "object",
      "properties": {
        "computeType": {
          "description": "Compute type of the cluster which will execute data flow job.",
          "type": "string",
          "enum": [
            "General",
            "MemoryOptimized",
            "ComputeOptimized"
          ],
          "x-ms-enum": {
            "name": "DataFlowComputeType",
            "modelAsString": true
          }
        },
        "coreCount": {
          "description": "Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.",
          "type": "integer",
          "format": "int32"
        },
        "timeToLive": {
          "description": "Time to live (in minutes) setting of the cluster which will execute data flow job.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "IntegrationRuntimeVNetProperties": {
      "description": "VNet properties for managed integration runtime.",
      "type": "object",
      "properties": {
        "vNetId": {
          "description": "The ID of the VNet that this integration runtime will join.",
          "type": "string"
        },
        "subnet": {
          "description": "The name of the subnet this integration runtime will join.",
          "type": "string"
        },
        "publicIPs": {
          "description": "Resource IDs of the public IP addresses that this integration runtime will use.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "The ID of the public IP address."
          }
        },
        "subnetId": {
          "description": "The ID of subnet, to which this Azure-SSIS integration runtime will be joined.",
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "IntegrationRuntimeSsisProperties": {
      "description": "SSIS properties for managed integration runtime.",
      "type": "object",
      "properties": {
        "catalogInfo": {
          "description": "Catalog information for managed dedicated integration runtime.",
          "type": "object",
          "properties": {
            "catalogServerEndpoint": {
              "description": "The catalog database server URL.",
              "type": "string"
            },
            "catalogAdminUserName": {
              "description": "The administrator user name of catalog database.",
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "catalogAdminPassword": {
              "description": "The password of the administrator user account of the catalog database.",
              "x-ms-discriminator-value": "SecureString",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the secret."
                },
                "value": {
                  "type": "string",
                  "description": "Value of secure string."
                }
              },
              "required": [
                "value"
              ]
            },
            "catalogPricingTier": {
              "description": "The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/",
              "type": "string",
              "enum": [
                "Basic",
                "Standard",
                "Premium",
                "PremiumRS"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeSsisCatalogPricingTier",
                "modelAsString": true
              }
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        },
        "licenseType": {
          "description": "License type for bringing your own license scenario.",
          "type": "string",
          "enum": [
            "BasePrice",
            "LicenseIncluded"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeLicenseType",
            "modelAsString": true
          }
        },
        "customSetupScriptProperties": {
          "description": "Custom setup script properties for a managed dedicated integration runtime.",
          "type": "object",
          "properties": {
            "blobContainerUri": {
              "description": "The URI of the Azure blob container that contains the custom setup script.",
              "type": "string"
            },
            "sasToken": {
              "description": "The SAS token of the Azure blob container.",
              "x-ms-discriminator-value": "SecureString",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the secret."
                },
                "value": {
                  "type": "string",
                  "description": "Value of secure string."
                }
              },
              "required": [
                "value"
              ]
            }
          }
        },
        "dataProxyProperties": {
          "description": "Data proxy properties for a managed dedicated integration runtime.",
          "type": "object",
          "properties": {
            "connectVia": {
              "description": "The self-hosted integration runtime reference.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of this referenced entity.",
                  "type": "string",
                  "enum": [
                    "IntegrationRuntimeReference",
                    "LinkedServiceReference"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeEntityReferenceType",
                    "modelAsString": true
                  }
                },
                "referenceName": {
                  "description": "The name of this referenced entity.",
                  "type": "string"
                }
              }
            },
            "stagingLinkedService": {
              "description": "The staging linked service reference.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of this referenced entity.",
                  "type": "string",
                  "enum": [
                    "IntegrationRuntimeReference",
                    "LinkedServiceReference"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeEntityReferenceType",
                    "modelAsString": true
                  }
                },
                "referenceName": {
                  "description": "The name of this referenced entity.",
                  "type": "string"
                }
              }
            },
            "path": {
              "description": "The path to contain the staged data in the Blob storage.",
              "type": "string"
            }
          }
        },
        "edition": {
          "description": "The edition for the SSIS Integration Runtime",
          "type": "string",
          "enum": [
            "Standard",
            "Enterprise"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeEdition",
            "modelAsString": true
          }
        },
        "expressCustomSetupProperties": {
          "description": "Custom setup without script properties for a SSIS integration runtime.",
          "type": "array",
          "items": {
            "description": "The base definition of the custom setup.",
            "type": "object",
            "discriminator": "type",
            "properties": {
              "type": {
                "description": "The type of custom setup.",
                "type": "string"
              }
            },
            "required": [
              "type"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "IntegrationRuntimeCustomerVirtualNetwork": {
      "description": "The definition and properties of virtual network to which Azure-SSIS integration runtime will join.",
      "type": "object",
      "properties": {
        "subnetId": {
          "description": "The ID of subnet to which Azure-SSIS integration runtime will join.",
          "type": "string"
        }
      }
    },
    "SecretBase": {
      "description": "The base definition of a secret type.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the secret."
        }
      },
      "required": [
        "type"
      ]
    },
    "SecureString": {
      "x-ms-discriminator-value": "SecureString",
      "description": "Azure Synapse secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.",
      "type": "object",
      "allOf": [
        {
          "description": "The base definition of a secret type.",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the secret."
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of secure string."
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationRuntimeSsisCatalogInfo": {
      "description": "Catalog information for managed dedicated integration runtime.",
      "type": "object",
      "properties": {
        "catalogServerEndpoint": {
          "description": "The catalog database server URL.",
          "type": "string"
        },
        "catalogAdminUserName": {
          "description": "The administrator user name of catalog database.",
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        },
        "catalogAdminPassword": {
          "description": "The password of the administrator user account of the catalog database.",
          "x-ms-discriminator-value": "SecureString",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the secret."
            },
            "value": {
              "type": "string",
              "description": "Value of secure string."
            }
          },
          "required": [
            "value"
          ]
        },
        "catalogPricingTier": {
          "description": "The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/",
          "type": "string",
          "enum": [
            "Basic",
            "Standard",
            "Premium",
            "PremiumRS"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeSsisCatalogPricingTier",
            "modelAsString": true
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "IntegrationRuntimeCustomSetupScriptProperties": {
      "description": "Custom setup script properties for a managed dedicated integration runtime.",
      "type": "object",
      "properties": {
        "blobContainerUri": {
          "description": "The URI of the Azure blob container that contains the custom setup script.",
          "type": "string"
        },
        "sasToken": {
          "description": "The SAS token of the Azure blob container.",
          "x-ms-discriminator-value": "SecureString",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the secret."
            },
            "value": {
              "type": "string",
              "description": "Value of secure string."
            }
          },
          "required": [
            "value"
          ]
        }
      }
    },
    "IntegrationRuntimeDataProxyProperties": {
      "description": "Data proxy properties for a managed dedicated integration runtime.",
      "type": "object",
      "properties": {
        "connectVia": {
          "description": "The self-hosted integration runtime reference.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of this referenced entity.",
              "type": "string",
              "enum": [
                "IntegrationRuntimeReference",
                "LinkedServiceReference"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeEntityReferenceType",
                "modelAsString": true
              }
            },
            "referenceName": {
              "description": "The name of this referenced entity.",
              "type": "string"
            }
          }
        },
        "stagingLinkedService": {
          "description": "The staging linked service reference.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of this referenced entity.",
              "type": "string",
              "enum": [
                "IntegrationRuntimeReference",
                "LinkedServiceReference"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeEntityReferenceType",
                "modelAsString": true
              }
            },
            "referenceName": {
              "description": "The name of this referenced entity.",
              "type": "string"
            }
          }
        },
        "path": {
          "description": "The path to contain the staged data in the Blob storage.",
          "type": "string"
        }
      }
    },
    "CustomSetupBase": {
      "description": "The base definition of the custom setup.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "description": "The type of custom setup.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "CmdkeySetup": {
      "description": "The custom setup of running cmdkey commands.",
      "type": "object",
      "allOf": [
        {
          "description": "The base definition of the custom setup.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "The type of custom setup.",
              "type": "string"
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Cmdkey command custom setup type properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "targetName": {
              "description": "The server name of data source access.",
              "type": "object"
            },
            "userName": {
              "description": "The user name of data source access.",
              "type": "object"
            },
            "password": {
              "description": "The base definition of a secret type.",
              "discriminator": "type",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the secret."
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "required": [
            "targetName",
            "userName",
            "password"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CmdkeySetupTypeProperties": {
      "description": "Cmdkey command custom setup type properties.",
      "type": "object",
      "properties": {
        "targetName": {
          "description": "The server name of data source access.",
          "type": "object"
        },
        "userName": {
          "description": "The user name of data source access.",
          "type": "object"
        },
        "password": {
          "description": "The base definition of a secret type.",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the secret."
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "targetName",
        "userName",
        "password"
      ]
    },
    "EnvironmentVariableSetup": {
      "description": "The custom setup of setting environment variable.",
      "type": "object",
      "allOf": [
        {
          "description": "The base definition of the custom setup.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "The type of custom setup.",
              "type": "string"
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Add environment variable type properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "variableName": {
              "description": "The name of the environment variable.",
              "type": "string"
            },
            "variableValue": {
              "description": "The value of the environment variable.",
              "type": "string"
            }
          },
          "required": [
            "variableName",
            "variableValue"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "EnvironmentVariableSetupTypeProperties": {
      "description": "Environment variable custom setup type properties.",
      "type": "object",
      "properties": {
        "variableName": {
          "description": "The name of the environment variable.",
          "type": "string"
        },
        "variableValue": {
          "description": "The value of the environment variable.",
          "type": "string"
        }
      },
      "required": [
        "variableName",
        "variableValue"
      ]
    },
    "ComponentSetup": {
      "description": "The custom setup of installing 3rd party components.",
      "type": "object",
      "allOf": [
        {
          "description": "The base definition of the custom setup.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "The type of custom setup.",
              "type": "string"
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Install 3rd party component type properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "componentName": {
              "description": "The name of the 3rd party component.",
              "type": "string"
            },
            "licenseKey": {
              "description": "The base definition of a secret type.",
              "discriminator": "type",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of the secret."
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "required": [
            "componentName"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "LicensedComponentSetupTypeProperties": {
      "description": "Installation of licensed component setup type properties.",
      "type": "object",
      "properties": {
        "componentName": {
          "description": "The name of the 3rd party component.",
          "type": "string"
        },
        "licenseKey": {
          "description": "The base definition of a secret type.",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the secret."
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "componentName"
      ]
    },
    "EntityReference": {
      "description": "The entity reference.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of this referenced entity.",
          "type": "string",
          "enum": [
            "IntegrationRuntimeReference",
            "LinkedServiceReference"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeEntityReferenceType",
            "modelAsString": true
          }
        },
        "referenceName": {
          "description": "The name of this referenced entity.",
          "type": "string"
        }
      }
    },
    "SelfHostedIntegrationRuntime": {
      "x-ms-discriminator-value": "SelfHosted",
      "description": "Self-hosted integration runtime.",
      "type": "object",
      "allOf": [
        {
          "description": "Azure Synapse nested object which serves as a compute resource for activities.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of integration runtime.",
              "type": "string",
              "enum": [
                "Managed",
                "SelfHosted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeType",
                "modelAsString": true
              }
            },
            "description": {
              "description": "Integration runtime description.",
              "type": "string"
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "When this property is not null, means this is a linked integration runtime. The property is used to access original integration runtime.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "linkedInfo": {
              "description": "Linked integration runtime type from data factory",
              "discriminator": "authorizationType",
              "type": "object",
              "properties": {
                "authorizationType": {
                  "type": "string",
                  "description": "The authorization type for integration runtime sharing."
                }
              },
              "required": [
                "authorizationType"
              ]
            }
          }
        }
      }
    },
    "SelfHostedIntegrationRuntimeTypeProperties": {
      "description": "The self-hosted integration runtime properties.",
      "type": "object",
      "properties": {
        "linkedInfo": {
          "description": "Linked integration runtime type from data factory",
          "discriminator": "authorizationType",
          "type": "object",
          "properties": {
            "authorizationType": {
              "type": "string",
              "description": "The authorization type for integration runtime sharing."
            }
          },
          "required": [
            "authorizationType"
          ]
        }
      }
    },
    "LinkedIntegrationRuntimeType": {
      "description": "The base definition of a linked integration runtime.",
      "discriminator": "authorizationType",
      "type": "object",
      "properties": {
        "authorizationType": {
          "type": "string",
          "description": "The authorization type for integration runtime sharing."
        }
      },
      "required": [
        "authorizationType"
      ]
    },
    "LinkedIntegrationRuntimeKeyAuthorization": {
      "x-ms-discriminator-value": "Key",
      "description": "The key authorization type integration runtime.",
      "type": "object",
      "allOf": [
        {
          "description": "The base definition of a linked integration runtime.",
          "discriminator": "authorizationType",
          "type": "object",
          "properties": {
            "authorizationType": {
              "type": "string",
              "description": "The authorization type for integration runtime sharing."
            }
          },
          "required": [
            "authorizationType"
          ]
        }
      ],
      "properties": {
        "key": {
          "description": "The key used for authorization.",
          "x-ms-discriminator-value": "SecureString",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the secret."
            },
            "value": {
              "type": "string",
              "description": "Value of secure string."
            }
          },
          "required": [
            "value"
          ]
        }
      },
      "required": [
        "key"
      ]
    },
    "LinkedIntegrationRuntimeRbacAuthorization": {
      "x-ms-discriminator-value": "RBAC",
      "description": "The role based access control (RBAC) authorization type integration runtime.",
      "type": "object",
      "allOf": [
        {
          "description": "The base definition of a linked integration runtime.",
          "discriminator": "authorizationType",
          "type": "object",
          "properties": {
            "authorizationType": {
              "type": "string",
              "description": "The authorization type for integration runtime sharing."
            }
          },
          "required": [
            "authorizationType"
          ]
        }
      ],
      "properties": {
        "resourceId": {
          "description": "The resource identifier of the integration runtime to be shared.",
          "type": "string"
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "IntegrationRuntimeStatus": {
      "description": "Integration runtime status.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "description": "Type of integration runtime.",
          "type": "string",
          "enum": [
            "Managed",
            "SelfHosted"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeType",
            "modelAsString": true
          }
        },
        "dataFactoryName": {
          "description": "The workspace name which the integration runtime belong to.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "The state of integration runtime.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Initial",
            "Stopped",
            "Started",
            "Starting",
            "Stopping",
            "NeedRegistration",
            "Online",
            "Limited",
            "Offline",
            "AccessDenied"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeState",
            "modelAsString": true
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "IntegrationRuntimeState": {
      "description": "The state of integration runtime.",
      "type": "string",
      "readOnly": true,
      "enum": [
        "Initial",
        "Stopped",
        "Started",
        "Starting",
        "Stopping",
        "NeedRegistration",
        "Online",
        "Limited",
        "Offline",
        "AccessDenied"
      ],
      "x-ms-enum": {
        "name": "IntegrationRuntimeState",
        "modelAsString": true
      }
    },
    "ManagedIntegrationRuntimeStatus": {
      "x-ms-discriminator-value": "Managed",
      "description": "Managed integration runtime status.",
      "type": "object",
      "allOf": [
        {
          "description": "Integration runtime status.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of integration runtime.",
              "type": "string",
              "enum": [
                "Managed",
                "SelfHosted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeType",
                "modelAsString": true
              }
            },
            "dataFactoryName": {
              "description": "The workspace name which the integration runtime belong to.",
              "type": "string",
              "readOnly": true
            },
            "state": {
              "description": "The state of integration runtime.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Initial",
                "Stopped",
                "Started",
                "Starting",
                "Stopping",
                "NeedRegistration",
                "Online",
                "Limited",
                "Offline",
                "AccessDenied"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeState",
                "modelAsString": true
              }
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Managed integration runtime status type properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "createTime": {
              "description": "The time at which the integration runtime was created, in ISO8601 format.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "nodes": {
              "description": "The list of nodes for managed integration runtime.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Properties of integration runtime node.",
                "properties": {
                  "nodeId": {
                    "description": "The managed integration runtime node id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "The managed integration runtime node status.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Starting",
                      "Available",
                      "Recycling",
                      "Unavailable"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedIntegrationRuntimeNodeStatus",
                      "modelAsString": true
                    },
                    "x-ms-identifiers": []
                  },
                  "errors": {
                    "description": "The errors that occurred on this integration runtime node.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Error definition for managed integration runtime.",
                      "properties": {
                        "time": {
                          "description": "The time when the error occurred.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "code": {
                          "description": "Error code.",
                          "type": "string",
                          "readOnly": true
                        },
                        "parameters": {
                          "description": "Managed integration runtime error parameters.",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Error message parameters."
                          },
                          "readOnly": true
                        },
                        "message": {
                          "description": "Error message.",
                          "type": "string",
                          "readOnly": true
                        }
                      },
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "x-ms-identifiers": []
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "otherErrors": {
              "description": "The errors that occurred on this integration runtime.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Error definition for managed integration runtime.",
                "properties": {
                  "time": {
                    "description": "The time when the error occurred.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "code": {
                    "description": "Error code.",
                    "type": "string",
                    "readOnly": true
                  },
                  "parameters": {
                    "description": "Managed integration runtime error parameters.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Error message parameters."
                    },
                    "readOnly": true
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "lastOperation": {
              "description": "The last operation result that occurred on this integration runtime.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "type": {
                  "description": "The operation type. Could be start or stop.",
                  "type": "string",
                  "readOnly": true
                },
                "startTime": {
                  "description": "The start time of the operation.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "result": {
                  "description": "The operation result.",
                  "type": "string",
                  "readOnly": true
                },
                "errorCode": {
                  "description": "The error code.",
                  "type": "string",
                  "readOnly": true
                },
                "parameters": {
                  "description": "Managed integration runtime error parameters.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Error message parameters."
                  },
                  "readOnly": true
                },
                "activityId": {
                  "description": "The activity id for the operation request.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ManagedIntegrationRuntimeStatusTypeProperties": {
      "description": "Managed integration runtime status type properties.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time at which the integration runtime was created, in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "nodes": {
          "description": "The list of nodes for managed integration runtime.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Properties of integration runtime node.",
            "properties": {
              "nodeId": {
                "description": "The managed integration runtime node id.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "The managed integration runtime node status.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Starting",
                  "Available",
                  "Recycling",
                  "Unavailable"
                ],
                "x-ms-enum": {
                  "name": "ManagedIntegrationRuntimeNodeStatus",
                  "modelAsString": true
                },
                "x-ms-identifiers": []
              },
              "errors": {
                "description": "The errors that occurred on this integration runtime node.",
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Error definition for managed integration runtime.",
                  "properties": {
                    "time": {
                      "description": "The time when the error occurred.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "code": {
                      "description": "Error code.",
                      "type": "string",
                      "readOnly": true
                    },
                    "parameters": {
                      "description": "Managed integration runtime error parameters.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Error message parameters."
                      },
                      "readOnly": true
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "x-ms-identifiers": []
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "otherErrors": {
          "description": "The errors that occurred on this integration runtime.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Error definition for managed integration runtime.",
            "properties": {
              "time": {
                "description": "The time when the error occurred.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "code": {
                "description": "Error code.",
                "type": "string",
                "readOnly": true
              },
              "parameters": {
                "description": "Managed integration runtime error parameters.",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Error message parameters."
                },
                "readOnly": true
              },
              "message": {
                "description": "Error message.",
                "type": "string",
                "readOnly": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "lastOperation": {
          "description": "The last operation result that occurred on this integration runtime.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "type": {
              "description": "The operation type. Could be start or stop.",
              "type": "string",
              "readOnly": true
            },
            "startTime": {
              "description": "The start time of the operation.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "result": {
              "description": "The operation result.",
              "type": "string",
              "readOnly": true
            },
            "errorCode": {
              "description": "The error code.",
              "type": "string",
              "readOnly": true
            },
            "parameters": {
              "description": "Managed integration runtime error parameters.",
              "type": "array",
              "items": {
                "type": "string",
                "description": "Error message parameters."
              },
              "readOnly": true
            },
            "activityId": {
              "description": "The activity id for the operation request.",
              "type": "string",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ManagedIntegrationRuntimeOperationResult": {
      "type": "object",
      "description": "Properties of managed integration runtime operation result.",
      "properties": {
        "type": {
          "description": "The operation type. Could be start or stop.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "The start time of the operation.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "result": {
          "description": "The operation result.",
          "type": "string",
          "readOnly": true
        },
        "errorCode": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "Managed integration runtime error parameters.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Error message parameters."
          },
          "readOnly": true
        },
        "activityId": {
          "description": "The activity id for the operation request.",
          "type": "string",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "ManagedIntegrationRuntimeNode": {
      "type": "object",
      "description": "Properties of integration runtime node.",
      "properties": {
        "nodeId": {
          "description": "The managed integration runtime node id.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The managed integration runtime node status.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Starting",
            "Available",
            "Recycling",
            "Unavailable"
          ],
          "x-ms-enum": {
            "name": "ManagedIntegrationRuntimeNodeStatus",
            "modelAsString": true
          },
          "x-ms-identifiers": []
        },
        "errors": {
          "description": "The errors that occurred on this integration runtime node.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Error definition for managed integration runtime.",
            "properties": {
              "time": {
                "description": "The time when the error occurred.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "code": {
                "description": "Error code.",
                "type": "string",
                "readOnly": true
              },
              "parameters": {
                "description": "Managed integration runtime error parameters.",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Error message parameters."
                },
                "readOnly": true
              },
              "message": {
                "description": "Error message.",
                "type": "string",
                "readOnly": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": []
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "ManagedIntegrationRuntimeError": {
      "type": "object",
      "description": "Error definition for managed integration runtime.",
      "properties": {
        "time": {
          "description": "The time when the error occurred.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "code": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "Managed integration runtime error parameters.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Error message parameters."
          },
          "readOnly": true
        },
        "message": {
          "description": "Error message.",
          "type": "string",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "SelfHostedIntegrationRuntimeStatus": {
      "x-ms-discriminator-value": "SelfHosted",
      "description": "Self-hosted integration runtime status.",
      "type": "object",
      "allOf": [
        {
          "description": "Integration runtime status.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of integration runtime.",
              "type": "string",
              "enum": [
                "Managed",
                "SelfHosted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeType",
                "modelAsString": true
              }
            },
            "dataFactoryName": {
              "description": "The workspace name which the integration runtime belong to.",
              "type": "string",
              "readOnly": true
            },
            "state": {
              "description": "The state of integration runtime.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Initial",
                "Stopped",
                "Started",
                "Starting",
                "Stopping",
                "NeedRegistration",
                "Online",
                "Limited",
                "Offline",
                "AccessDenied"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeState",
                "modelAsString": true
              }
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Self-hosted integration runtime status type properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "createTime": {
              "description": "The time at which the integration runtime was created, in ISO8601 format.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "taskQueueId": {
              "description": "The task queue id of the integration runtime.",
              "type": "string",
              "readOnly": true
            },
            "nodeCommunicationChannelEncryptionMode": {
              "description": "The node communication Channel encryption mode",
              "type": "string",
              "readOnly": true
            },
            "internalChannelEncryption": {
              "description": "It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).",
              "type": "string",
              "readOnly": true,
              "enum": [
                "NotSet",
                "SslEncrypted",
                "NotEncrypted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeInternalChannelEncryptionMode",
                "modelAsString": true
              },
              "x-ms-identifiers": []
            },
            "version": {
              "description": "Version of the integration runtime.",
              "type": "string",
              "readOnly": true
            },
            "nodes": {
              "description": "The list of nodes for this integration runtime.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Properties of Self-hosted integration runtime node.",
                "properties": {
                  "nodeName": {
                    "description": "Name of the integration runtime node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "machineName": {
                    "description": "Machine name of the integration runtime node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "hostServiceUri": {
                    "description": "URI for the host machine of the integration runtime.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the integration runtime node.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "NeedRegistration",
                      "Online",
                      "Limited",
                      "Offline",
                      "Upgrading",
                      "Initializing",
                      "InitializeFailed"
                    ],
                    "x-ms-enum": {
                      "name": "SelfHostedIntegrationRuntimeNodeStatus",
                      "modelAsString": true
                    }
                  },
                  "capabilities": {
                    "description": "The integration runtime capabilities dictionary",
                    "type": "object",
                    "readOnly": true,
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "versionStatus": {
                    "description": "Status of the integration runtime node version.",
                    "type": "string",
                    "readOnly": true
                  },
                  "version": {
                    "description": "Version of the integration runtime node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "registerTime": {
                    "description": "The time at which the integration runtime node was registered in ISO8601 format.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "lastConnectTime": {
                    "description": "The most recent time at which the integration runtime was connected in ISO8601 format.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "expiryTime": {
                    "description": "The time at which the integration runtime will expire in ISO8601 format.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "lastStartTime": {
                    "description": "The time the node last started up.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "lastStopTime": {
                    "description": "The integration runtime node last stop time.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "lastUpdateResult": {
                    "description": "The result of the last integration runtime node update.",
                    "type": "string",
                    "enum": [
                      "None",
                      "Succeed",
                      "Fail"
                    ],
                    "x-ms-enum": {
                      "name": "IntegrationRuntimeUpdateResult",
                      "modelAsString": true
                    },
                    "readOnly": true
                  },
                  "lastStartUpdateTime": {
                    "description": "The last time for the integration runtime node update start.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "lastEndUpdateTime": {
                    "description": "The last time for the integration runtime node update end.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "isActiveDispatcher": {
                    "description": "Indicates whether this node is the active dispatcher for integration runtime requests.",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "concurrentJobsLimit": {
                    "description": "Maximum concurrent jobs on the integration runtime node.",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  },
                  "maxConcurrentJobs": {
                    "description": "The maximum concurrent jobs in this integration runtime.",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              },
              "x-ms-identifiers": []
            },
            "scheduledUpdateDate": {
              "description": "The date at which the integration runtime will be scheduled to update, in ISO8601 format.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updateDelayOffset": {
              "description": "The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours",
              "type": "string",
              "readOnly": true
            },
            "localTimeZoneOffset": {
              "description": "The local time zone offset in hours.",
              "type": "string",
              "readOnly": true
            },
            "capabilities": {
              "description": "Object with additional information about integration runtime capabilities.",
              "type": "object",
              "readOnly": true,
              "additionalProperties": {
                "type": "string"
              }
            },
            "serviceUrls": {
              "description": "The URLs for the services used in integration runtime backend service.",
              "type": "array",
              "items": {
                "description": "The service URL",
                "type": "string"
              },
              "readOnly": true
            },
            "autoUpdate": {
              "description": "Whether Self-hosted integration runtime auto update has been turned on.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "On",
                "Off"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeAutoUpdate",
                "modelAsString": true
              },
              "x-ms-identifiers": []
            },
            "versionStatus": {
              "description": "Status of the integration runtime version.",
              "type": "string",
              "readOnly": true
            },
            "links": {
              "description": "The list of linked integration runtimes that are created to share with this integration runtime.",
              "type": "array",
              "items": {
                "description": "The linked integration runtime information.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the linked integration runtime.",
                    "type": "string",
                    "readOnly": true
                  },
                  "subscriptionId": {
                    "description": "The subscription ID for which the linked integration runtime belong to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "dataFactoryName": {
                    "description": "The name of the workspace for which the linked integration runtime belong to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "dataFactoryLocation": {
                    "description": "The location of the workspace for which the linked integration runtime belong to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "createTime": {
                    "description": "The creating time of the linked integration runtime.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "pushedVersion": {
              "description": "The version that the integration runtime is going to update to.",
              "type": "string",
              "readOnly": true
            },
            "latestVersion": {
              "description": "The latest version on download center.",
              "type": "string",
              "readOnly": true
            },
            "autoUpdateETA": {
              "description": "The estimated time when the self-hosted integration runtime will be updated.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SelfHostedIntegrationRuntimeStatusTypeProperties": {
      "description": "Self-hosted integration runtime status type properties.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time at which the integration runtime was created, in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "taskQueueId": {
          "description": "The task queue id of the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "nodeCommunicationChannelEncryptionMode": {
          "description": "The node communication Channel encryption mode",
          "type": "string",
          "readOnly": true
        },
        "internalChannelEncryption": {
          "description": "It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).",
          "type": "string",
          "readOnly": true,
          "enum": [
            "NotSet",
            "SslEncrypted",
            "NotEncrypted"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeInternalChannelEncryptionMode",
            "modelAsString": true
          },
          "x-ms-identifiers": []
        },
        "version": {
          "description": "Version of the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "nodes": {
          "description": "The list of nodes for this integration runtime.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Properties of Self-hosted integration runtime node.",
            "properties": {
              "nodeName": {
                "description": "Name of the integration runtime node.",
                "type": "string",
                "readOnly": true
              },
              "machineName": {
                "description": "Machine name of the integration runtime node.",
                "type": "string",
                "readOnly": true
              },
              "hostServiceUri": {
                "description": "URI for the host machine of the integration runtime.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the integration runtime node.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "NeedRegistration",
                  "Online",
                  "Limited",
                  "Offline",
                  "Upgrading",
                  "Initializing",
                  "InitializeFailed"
                ],
                "x-ms-enum": {
                  "name": "SelfHostedIntegrationRuntimeNodeStatus",
                  "modelAsString": true
                }
              },
              "capabilities": {
                "description": "The integration runtime capabilities dictionary",
                "type": "object",
                "readOnly": true,
                "additionalProperties": {
                  "type": "string"
                }
              },
              "versionStatus": {
                "description": "Status of the integration runtime node version.",
                "type": "string",
                "readOnly": true
              },
              "version": {
                "description": "Version of the integration runtime node.",
                "type": "string",
                "readOnly": true
              },
              "registerTime": {
                "description": "The time at which the integration runtime node was registered in ISO8601 format.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "lastConnectTime": {
                "description": "The most recent time at which the integration runtime was connected in ISO8601 format.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "expiryTime": {
                "description": "The time at which the integration runtime will expire in ISO8601 format.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "lastStartTime": {
                "description": "The time the node last started up.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "lastStopTime": {
                "description": "The integration runtime node last stop time.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "lastUpdateResult": {
                "description": "The result of the last integration runtime node update.",
                "type": "string",
                "enum": [
                  "None",
                  "Succeed",
                  "Fail"
                ],
                "x-ms-enum": {
                  "name": "IntegrationRuntimeUpdateResult",
                  "modelAsString": true
                },
                "readOnly": true
              },
              "lastStartUpdateTime": {
                "description": "The last time for the integration runtime node update start.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "lastEndUpdateTime": {
                "description": "The last time for the integration runtime node update end.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "isActiveDispatcher": {
                "description": "Indicates whether this node is the active dispatcher for integration runtime requests.",
                "type": "boolean",
                "readOnly": true
              },
              "concurrentJobsLimit": {
                "description": "Maximum concurrent jobs on the integration runtime node.",
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "maxConcurrentJobs": {
                "description": "The maximum concurrent jobs in this integration runtime.",
                "type": "integer",
                "format": "int32",
                "readOnly": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": []
        },
        "scheduledUpdateDate": {
          "description": "The date at which the integration runtime will be scheduled to update, in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updateDelayOffset": {
          "description": "The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours",
          "type": "string",
          "readOnly": true
        },
        "localTimeZoneOffset": {
          "description": "The local time zone offset in hours.",
          "type": "string",
          "readOnly": true
        },
        "capabilities": {
          "description": "Object with additional information about integration runtime capabilities.",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "serviceUrls": {
          "description": "The URLs for the services used in integration runtime backend service.",
          "type": "array",
          "items": {
            "description": "The service URL",
            "type": "string"
          },
          "readOnly": true
        },
        "autoUpdate": {
          "description": "Whether Self-hosted integration runtime auto update has been turned on.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeAutoUpdate",
            "modelAsString": true
          },
          "x-ms-identifiers": []
        },
        "versionStatus": {
          "description": "Status of the integration runtime version.",
          "type": "string",
          "readOnly": true
        },
        "links": {
          "description": "The list of linked integration runtimes that are created to share with this integration runtime.",
          "type": "array",
          "items": {
            "description": "The linked integration runtime information.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the linked integration runtime.",
                "type": "string",
                "readOnly": true
              },
              "subscriptionId": {
                "description": "The subscription ID for which the linked integration runtime belong to.",
                "type": "string",
                "readOnly": true
              },
              "dataFactoryName": {
                "description": "The name of the workspace for which the linked integration runtime belong to.",
                "type": "string",
                "readOnly": true
              },
              "dataFactoryLocation": {
                "description": "The location of the workspace for which the linked integration runtime belong to.",
                "type": "string",
                "readOnly": true
              },
              "createTime": {
                "description": "The creating time of the linked integration runtime.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": []
        },
        "pushedVersion": {
          "description": "The version that the integration runtime is going to update to.",
          "type": "string",
          "readOnly": true
        },
        "latestVersion": {
          "description": "The latest version on download center.",
          "type": "string",
          "readOnly": true
        },
        "autoUpdateETA": {
          "description": "The estimated time when the self-hosted integration runtime will be updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "IntegrationRuntimeAutoUpdate": {
      "description": "The state of integration runtime auto update.",
      "type": "string",
      "enum": [
        "On",
        "Off"
      ],
      "x-ms-enum": {
        "name": "IntegrationRuntimeAutoUpdate",
        "modelAsString": true
      },
      "x-ms-identifiers": []
    },
    "LinkedIntegrationRuntime": {
      "description": "The linked integration runtime information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the linked integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "The subscription ID for which the linked integration runtime belong to.",
          "type": "string",
          "readOnly": true
        },
        "dataFactoryName": {
          "description": "The name of the workspace for which the linked integration runtime belong to.",
          "type": "string",
          "readOnly": true
        },
        "dataFactoryLocation": {
          "description": "The location of the workspace for which the linked integration runtime belong to.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "The creating time of the linked integration runtime.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "SelfHostedIntegrationRuntimeNode": {
      "type": "object",
      "description": "Properties of Self-hosted integration runtime node.",
      "properties": {
        "nodeName": {
          "description": "Name of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "machineName": {
          "description": "Machine name of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "hostServiceUri": {
          "description": "URI for the host machine of the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the integration runtime node.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "NeedRegistration",
            "Online",
            "Limited",
            "Offline",
            "Upgrading",
            "Initializing",
            "InitializeFailed"
          ],
          "x-ms-enum": {
            "name": "SelfHostedIntegrationRuntimeNodeStatus",
            "modelAsString": true
          }
        },
        "capabilities": {
          "description": "The integration runtime capabilities dictionary",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "versionStatus": {
          "description": "Status of the integration runtime node version.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Version of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "registerTime": {
          "description": "The time at which the integration runtime node was registered in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastConnectTime": {
          "description": "The most recent time at which the integration runtime was connected in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "expiryTime": {
          "description": "The time at which the integration runtime will expire in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastStartTime": {
          "description": "The time the node last started up.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastStopTime": {
          "description": "The integration runtime node last stop time.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastUpdateResult": {
          "description": "The result of the last integration runtime node update.",
          "type": "string",
          "enum": [
            "None",
            "Succeed",
            "Fail"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeUpdateResult",
            "modelAsString": true
          },
          "readOnly": true
        },
        "lastStartUpdateTime": {
          "description": "The last time for the integration runtime node update start.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastEndUpdateTime": {
          "description": "The last time for the integration runtime node update end.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "isActiveDispatcher": {
          "description": "Indicates whether this node is the active dispatcher for integration runtime requests.",
          "type": "boolean",
          "readOnly": true
        },
        "concurrentJobsLimit": {
          "description": "Maximum concurrent jobs on the integration runtime node.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "maxConcurrentJobs": {
          "description": "The maximum concurrent jobs in this integration runtime.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "IntegrationRuntimeConnectionInfo": {
      "description": "Connection information for encrypting the on-premises data source credentials.",
      "type": "object",
      "properties": {
        "serviceToken": {
          "description": "The token generated in service. Callers use this token to authenticate to integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "identityCertThumbprint": {
          "description": "The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.",
          "type": "string",
          "readOnly": true
        },
        "hostServiceUri": {
          "description": "The on-premises integration runtime host URL.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "The integration runtime version.",
          "type": "string",
          "readOnly": true
        },
        "publicKey": {
          "description": "The public key for encrypting a credential when transferring the credential to the integration runtime.",
          "type": "string",
          "readOnly": true
        },
        "isIdentityCertExprired": {
          "description": "Whether the identity certificate is expired.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "IntegrationRuntimeRegenerateKeyParameters": {
      "description": "Parameters to regenerate the authentication key.",
      "type": "object",
      "properties": {
        "keyName": {
          "description": "The name of the authentication key to regenerate.",
          "type": "string",
          "enum": [
            "authKey1",
            "authKey2"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeAuthKeyName",
            "modelAsString": true
          }
        }
      }
    },
    "IntegrationRuntimeAuthKeys": {
      "description": "The integration runtime authentication keys.",
      "type": "object",
      "properties": {
        "authKey1": {
          "type": "string",
          "description": "The primary integration runtime authentication key."
        },
        "authKey2": {
          "type": "string",
          "description": "The secondary integration runtime authentication key."
        }
      }
    },
    "IntegrationRuntimeMonitoringData": {
      "description": "Get monitoring data response.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Integration runtime name."
        },
        "nodes": {
          "type": "array",
          "description": "Integration runtime node monitoring data.",
          "items": {
            "description": "Monitoring data for integration runtime node.",
            "type": "object",
            "properties": {
              "nodeName": {
                "description": "Name of the integration runtime node.",
                "type": "string",
                "readOnly": true
              },
              "availableMemoryInMB": {
                "description": "Available memory (MB) on the integration runtime node.",
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "cpuUtilization": {
                "description": "CPU percentage on the integration runtime node.",
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "concurrentJobsLimit": {
                "description": "Maximum concurrent jobs on the integration runtime node.",
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "concurrentJobsRunning": {
                "description": "The number of jobs currently running on the integration runtime node.",
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "maxConcurrentJobs": {
                "description": "The maximum concurrent jobs in this integration runtime.",
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "sentBytes": {
                "description": "Sent bytes on the integration runtime node.",
                "type": "number",
                "readOnly": true
              },
              "receivedBytes": {
                "description": "Received bytes on the integration runtime node.",
                "type": "number",
                "readOnly": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IntegrationRuntimeNodeMonitoringData": {
      "description": "Monitoring data for integration runtime node.",
      "type": "object",
      "properties": {
        "nodeName": {
          "description": "Name of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "availableMemoryInMB": {
          "description": "Available memory (MB) on the integration runtime node.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "cpuUtilization": {
          "description": "CPU percentage on the integration runtime node.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "concurrentJobsLimit": {
          "description": "Maximum concurrent jobs on the integration runtime node.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "concurrentJobsRunning": {
          "description": "The number of jobs currently running on the integration runtime node.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "maxConcurrentJobs": {
          "description": "The maximum concurrent jobs in this integration runtime.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "sentBytes": {
          "description": "Sent bytes on the integration runtime node.",
          "type": "number",
          "readOnly": true
        },
        "receivedBytes": {
          "description": "Received bytes on the integration runtime node.",
          "type": "number",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "IntegrationRuntimeNodeIpAddress": {
      "type": "object",
      "description": "The IP address of self-hosted integration runtime node.",
      "properties": {
        "ipAddress": {
          "description": "The IP address of self-hosted integration runtime node.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SsisObjectMetadataListResponse": {
      "type": "object",
      "description": "A list of SSIS object metadata.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of SSIS object metadata.",
          "items": {
            "type": "object",
            "description": "SSIS object metadata.",
            "discriminator": "type",
            "properties": {
              "type": {
                "description": "Type of metadata.",
                "type": "string",
                "enum": [
                  "Folder",
                  "Project",
                  "Package",
                  "Environment"
                ],
                "x-ms-enum": {
                  "name": "SsisObjectMetadataType",
                  "modelAsString": true
                }
              },
              "id": {
                "type": "integer",
                "format": "int64",
                "description": "Metadata id."
              },
              "name": {
                "type": "string",
                "description": "Metadata name."
              },
              "description": {
                "type": "string",
                "description": "Metadata description."
              }
            },
            "required": [
              "type"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of results, if any remaining results exist."
        }
      }
    },
    "SsisObjectMetadata": {
      "type": "object",
      "description": "SSIS object metadata.",
      "discriminator": "type",
      "properties": {
        "type": {
          "description": "Type of metadata.",
          "type": "string",
          "enum": [
            "Folder",
            "Project",
            "Package",
            "Environment"
          ],
          "x-ms-enum": {
            "name": "SsisObjectMetadataType",
            "modelAsString": true
          }
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Metadata id."
        },
        "name": {
          "type": "string",
          "description": "Metadata name."
        },
        "description": {
          "type": "string",
          "description": "Metadata description."
        }
      },
      "required": [
        "type"
      ]
    },
    "SsisObjectMetadataType": {
      "description": "The type of SSIS object metadata.",
      "type": "string",
      "enum": [
        "Folder",
        "Project",
        "Package",
        "Environment"
      ],
      "x-ms-enum": {
        "name": "SsisObjectMetadataType",
        "modelAsString": true
      }
    },
    "SsisFolder": {
      "x-ms-discriminator-value": "Folder",
      "type": "object",
      "description": "Ssis folder.",
      "allOf": [
        {
          "type": "object",
          "description": "SSIS object metadata.",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of metadata.",
              "type": "string",
              "enum": [
                "Folder",
                "Project",
                "Package",
                "Environment"
              ],
              "x-ms-enum": {
                "name": "SsisObjectMetadataType",
                "modelAsString": true
              }
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Metadata id."
            },
            "name": {
              "type": "string",
              "description": "Metadata name."
            },
            "description": {
              "type": "string",
              "description": "Metadata description."
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "SsisProject": {
      "x-ms-discriminator-value": "Project",
      "type": "object",
      "description": "Ssis project.",
      "allOf": [
        {
          "type": "object",
          "description": "SSIS object metadata.",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of metadata.",
              "type": "string",
              "enum": [
                "Folder",
                "Project",
                "Package",
                "Environment"
              ],
              "x-ms-enum": {
                "name": "SsisObjectMetadataType",
                "modelAsString": true
              }
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Metadata id."
            },
            "name": {
              "type": "string",
              "description": "Metadata name."
            },
            "description": {
              "type": "string",
              "description": "Metadata description."
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "folderId": {
          "type": "integer",
          "format": "int64",
          "description": "Folder id which contains project."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "Project version."
        },
        "environmentRefs": {
          "type": "array",
          "description": "Environment reference in project",
          "items": {
            "type": "object",
            "description": "Ssis environment reference.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64",
                "description": "Environment reference id."
              },
              "environmentFolderName": {
                "type": "string",
                "description": "Environment folder name."
              },
              "environmentName": {
                "type": "string",
                "description": "Environment name."
              },
              "referenceType": {
                "type": "string",
                "description": "Reference type"
              }
            }
          }
        },
        "parameters": {
          "type": "array",
          "description": "Parameters in project",
          "items": {
            "type": "object",
            "description": "Ssis parameter.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64",
                "description": "Parameter id."
              },
              "name": {
                "type": "string",
                "description": "Parameter name."
              },
              "description": {
                "type": "string",
                "description": "Parameter description."
              },
              "dataType": {
                "type": "string",
                "description": "Parameter type."
              },
              "required": {
                "type": "boolean",
                "description": "Whether parameter is required."
              },
              "sensitive": {
                "type": "boolean",
                "description": "Whether parameter is sensitive."
              },
              "designDefaultValue": {
                "type": "string",
                "description": "Design default value of parameter."
              },
              "defaultValue": {
                "type": "string",
                "description": "Default value of parameter."
              },
              "sensitiveDefaultValue": {
                "type": "string",
                "description": "Default sensitive value of parameter."
              },
              "valueType": {
                "type": "string",
                "description": "Parameter value type."
              },
              "valueSet": {
                "type": "boolean",
                "description": "Parameter value set."
              },
              "variable": {
                "type": "string",
                "description": "Parameter reference variable."
              }
            }
          }
        }
      }
    },
    "SsisPackage": {
      "x-ms-discriminator-value": "Package",
      "type": "object",
      "description": "Ssis Package.",
      "allOf": [
        {
          "type": "object",
          "description": "SSIS object metadata.",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of metadata.",
              "type": "string",
              "enum": [
                "Folder",
                "Project",
                "Package",
                "Environment"
              ],
              "x-ms-enum": {
                "name": "SsisObjectMetadataType",
                "modelAsString": true
              }
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Metadata id."
            },
            "name": {
              "type": "string",
              "description": "Metadata name."
            },
            "description": {
              "type": "string",
              "description": "Metadata description."
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "folderId": {
          "type": "integer",
          "format": "int64",
          "description": "Folder id which contains package."
        },
        "projectVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Project version which contains package."
        },
        "projectId": {
          "type": "integer",
          "format": "int64",
          "description": "Project id which contains package."
        },
        "parameters": {
          "type": "array",
          "description": "Parameters in package",
          "items": {
            "type": "object",
            "description": "Ssis parameter.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64",
                "description": "Parameter id."
              },
              "name": {
                "type": "string",
                "description": "Parameter name."
              },
              "description": {
                "type": "string",
                "description": "Parameter description."
              },
              "dataType": {
                "type": "string",
                "description": "Parameter type."
              },
              "required": {
                "type": "boolean",
                "description": "Whether parameter is required."
              },
              "sensitive": {
                "type": "boolean",
                "description": "Whether parameter is sensitive."
              },
              "designDefaultValue": {
                "type": "string",
                "description": "Design default value of parameter."
              },
              "defaultValue": {
                "type": "string",
                "description": "Default value of parameter."
              },
              "sensitiveDefaultValue": {
                "type": "string",
                "description": "Default sensitive value of parameter."
              },
              "valueType": {
                "type": "string",
                "description": "Parameter value type."
              },
              "valueSet": {
                "type": "boolean",
                "description": "Parameter value set."
              },
              "variable": {
                "type": "string",
                "description": "Parameter reference variable."
              }
            }
          }
        }
      }
    },
    "SsisEnvironment": {
      "x-ms-discriminator-value": "Environment",
      "type": "object",
      "description": "Ssis environment.",
      "allOf": [
        {
          "type": "object",
          "description": "SSIS object metadata.",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of metadata.",
              "type": "string",
              "enum": [
                "Folder",
                "Project",
                "Package",
                "Environment"
              ],
              "x-ms-enum": {
                "name": "SsisObjectMetadataType",
                "modelAsString": true
              }
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Metadata id."
            },
            "name": {
              "type": "string",
              "description": "Metadata name."
            },
            "description": {
              "type": "string",
              "description": "Metadata description."
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "folderId": {
          "type": "integer",
          "format": "int64",
          "description": "Folder id which contains environment."
        },
        "variables": {
          "type": "array",
          "description": "Variable in environment",
          "items": {
            "type": "object",
            "description": "Ssis variable.",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64",
                "description": "Variable id."
              },
              "name": {
                "type": "string",
                "description": "Variable name."
              },
              "description": {
                "type": "string",
                "description": "Variable description."
              },
              "dataType": {
                "type": "string",
                "description": "Variable type."
              },
              "sensitive": {
                "type": "boolean",
                "description": "Whether variable is sensitive."
              },
              "value": {
                "type": "string",
                "description": "Variable value."
              },
              "sensitiveValue": {
                "type": "string",
                "description": "Variable sensitive value."
              }
            }
          }
        }
      }
    },
    "SsisParameter": {
      "type": "object",
      "description": "Ssis parameter.",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Parameter id."
        },
        "name": {
          "type": "string",
          "description": "Parameter name."
        },
        "description": {
          "type": "string",
          "description": "Parameter description."
        },
        "dataType": {
          "type": "string",
          "description": "Parameter type."
        },
        "required": {
          "type": "boolean",
          "description": "Whether parameter is required."
        },
        "sensitive": {
          "type": "boolean",
          "description": "Whether parameter is sensitive."
        },
        "designDefaultValue": {
          "type": "string",
          "description": "Design default value of parameter."
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value of parameter."
        },
        "sensitiveDefaultValue": {
          "type": "string",
          "description": "Default sensitive value of parameter."
        },
        "valueType": {
          "type": "string",
          "description": "Parameter value type."
        },
        "valueSet": {
          "type": "boolean",
          "description": "Parameter value set."
        },
        "variable": {
          "type": "string",
          "description": "Parameter reference variable."
        }
      }
    },
    "SsisVariable": {
      "type": "object",
      "description": "Ssis variable.",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Variable id."
        },
        "name": {
          "type": "string",
          "description": "Variable name."
        },
        "description": {
          "type": "string",
          "description": "Variable description."
        },
        "dataType": {
          "type": "string",
          "description": "Variable type."
        },
        "sensitive": {
          "type": "boolean",
          "description": "Whether variable is sensitive."
        },
        "value": {
          "type": "string",
          "description": "Variable value."
        },
        "sensitiveValue": {
          "type": "string",
          "description": "Variable sensitive value."
        }
      }
    },
    "SsisEnvironmentReference": {
      "type": "object",
      "description": "Ssis environment reference.",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Environment reference id."
        },
        "environmentFolderName": {
          "type": "string",
          "description": "Environment folder name."
        },
        "environmentName": {
          "type": "string",
          "description": "Environment name."
        },
        "referenceType": {
          "type": "string",
          "description": "Reference type"
        }
      }
    },
    "UpdateIntegrationRuntimeRequest": {
      "description": "Update integration runtime request.",
      "type": "object",
      "properties": {
        "autoUpdate": {
          "description": "Enables or disables the auto-update feature of the self-hosted integration runtime. See https://go.microsoft.com/fwlink/?linkid=854189.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeAutoUpdate",
            "modelAsString": true
          },
          "x-ms-identifiers": []
        },
        "updateDelayOffset": {
          "description": "The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeResource": {
      "type": "object",
      "description": "Integration runtime resource type.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        },
        "properties": {
          "description": "Integration runtime properties.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of integration runtime.",
              "type": "string",
              "enum": [
                "Managed",
                "SelfHosted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeType",
                "modelAsString": true
              }
            },
            "description": {
              "description": "Integration runtime description.",
              "type": "string"
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "GetSsisObjectMetadataRequest": {
      "type": "object",
      "description": "The request payload of get SSIS object metadata.",
      "properties": {
        "metadataPath": {
          "type": "string",
          "description": "Metadata path."
        }
      }
    },
    "UpdateIntegrationRuntimeNodeRequest": {
      "description": "Update integration runtime node request.",
      "type": "object",
      "properties": {
        "concurrentJobsLimit": {
          "description": "The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        }
      }
    },
    "IntegrationRuntimeListResponse": {
      "description": "A list of integration runtime resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of integration runtimes.",
          "items": {
            "type": "object",
            "description": "Integration runtime resource type.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "etag": {
                "type": "string",
                "readOnly": true,
                "description": "Resource Etag."
              },
              "properties": {
                "description": "Integration runtime properties.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "description": "Type of integration runtime.",
                    "type": "string",
                    "enum": [
                      "Managed",
                      "SelfHosted"
                    ],
                    "x-ms-enum": {
                      "name": "IntegrationRuntimeType",
                      "modelAsString": true
                    }
                  },
                  "description": {
                    "description": "Integration runtime description.",
                    "type": "string"
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeStatusResponse": {
      "type": "object",
      "description": "Integration runtime status response.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The integration runtime name.",
          "readOnly": true
        },
        "properties": {
          "description": "Integration runtime properties.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of integration runtime.",
              "type": "string",
              "enum": [
                "Managed",
                "SelfHosted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeType",
                "modelAsString": true
              }
            },
            "dataFactoryName": {
              "description": "The workspace name which the integration runtime belong to.",
              "type": "string",
              "readOnly": true
            },
            "state": {
              "description": "The state of integration runtime.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Initial",
                "Stopped",
                "Started",
                "Starting",
                "Stopping",
                "NeedRegistration",
                "Online",
                "Limited",
                "Offline",
                "AccessDenied"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeState",
                "modelAsString": true
              }
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "SsisObjectMetadataStatusResponse": {
      "type": "object",
      "description": "The status of the operation.",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "name": {
          "type": "string",
          "description": "The operation name."
        },
        "properties": {
          "type": "string",
          "description": "The operation properties."
        },
        "error": {
          "type": "string",
          "description": "The operation error message."
        }
      }
    },
    "IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse": {
      "description": "Azure-SSIS integration runtime outbound network dependency endpoints.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of outbound network dependency endpoints.",
          "type": "array",
          "items": {
            "description": "Azure-SSIS integration runtime outbound network dependency endpoints for one category.",
            "type": "object",
            "properties": {
              "category": {
                "description": "The category of outbound network dependency.",
                "type": "string"
              },
              "endpoints": {
                "description": "The endpoints for outbound network dependency.",
                "type": "array",
                "items": {
                  "description": "The endpoint for Azure-SSIS integration runtime outbound network dependency.",
                  "type": "object",
                  "properties": {
                    "domainName": {
                      "description": "The domain name of endpoint.",
                      "type": "string"
                    },
                    "endpointDetails": {
                      "description": "The details of endpoint.",
                      "type": "array",
                      "items": {
                        "description": "The details of Azure-SSIS integration runtime outbound network dependency endpoint.",
                        "type": "object",
                        "properties": {
                          "port": {
                            "description": "The port of endpoint.",
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "x-ms-identifiers": []
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint": {
      "description": "Azure-SSIS integration runtime outbound network dependency endpoints for one category.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The category of outbound network dependency.",
          "type": "string"
        },
        "endpoints": {
          "description": "The endpoints for outbound network dependency.",
          "type": "array",
          "items": {
            "description": "The endpoint for Azure-SSIS integration runtime outbound network dependency.",
            "type": "object",
            "properties": {
              "domainName": {
                "description": "The domain name of endpoint.",
                "type": "string"
              },
              "endpointDetails": {
                "description": "The details of endpoint.",
                "type": "array",
                "items": {
                  "description": "The details of Azure-SSIS integration runtime outbound network dependency endpoint.",
                  "type": "object",
                  "properties": {
                    "port": {
                      "description": "The port of endpoint.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "x-ms-identifiers": []
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IntegrationRuntimeOutboundNetworkDependenciesEndpoint": {
      "description": "The endpoint for Azure-SSIS integration runtime outbound network dependency.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name of endpoint.",
          "type": "string"
        },
        "endpointDetails": {
          "description": "The details of endpoint.",
          "type": "array",
          "items": {
            "description": "The details of Azure-SSIS integration runtime outbound network dependency endpoint.",
            "type": "object",
            "properties": {
              "port": {
                "description": "The port of endpoint.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IntegrationRuntimeOutboundNetworkDependenciesEndpointDetails": {
      "description": "The details of Azure-SSIS integration runtime outbound network dependency endpoint.",
      "type": "object",
      "properties": {
        "port": {
          "description": "The port of endpoint.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "KeyInfoListResult": {
      "description": "List of keys",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link to the next page of results",
          "type": "string"
        },
        "value": {
          "description": "List of keys",
          "type": "array",
          "items": {
            "description": "A workspace key",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Keys resource properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "isActiveCMK": {
                    "type": "boolean",
                    "description": "Used to activate the workspace after a customer managed key is provided."
                  },
                  "keyVaultUrl": {
                    "type": "string",
                    "description": "The Key Vault Url of the workspace key.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "Key": {
      "description": "A workspace key",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Keys resource properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "isActiveCMK": {
              "type": "boolean",
              "description": "Used to activate the workspace after a customer managed key is provided."
            },
            "keyVaultUrl": {
              "type": "string",
              "description": "The Key Vault Url of the workspace key.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        }
      }
    },
    "KeyProperties": {
      "description": "Key properties",
      "type": "object",
      "properties": {
        "isActiveCMK": {
          "type": "boolean",
          "description": "Used to activate the workspace after a customer managed key is provided."
        },
        "keyVaultUrl": {
          "type": "string",
          "description": "The Key Vault Url of the workspace key.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "LibraryListResponse": {
      "description": "A list of Library resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Library.",
          "items": {
            "description": "Library response details",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "etag": {
                "type": "string",
                "readOnly": true,
                "description": "Resource Etag."
              },
              "properties": {
                "description": "Library/package properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "title": "Information about a library/package created at the workspace level.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the library."
                  },
                  "path": {
                    "type": "string",
                    "description": "Storage blob path of library."
                  },
                  "containerName": {
                    "type": "string",
                    "description": "Storage blob container name."
                  },
                  "uploadedTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last update time of the library.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the library."
                  },
                  "provisioningStatus": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Provisioning status of the library/package."
                  },
                  "creatorId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Creator Id of the library/package."
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "LibraryResource": {
      "description": "Library response details",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        },
        "properties": {
          "description": "Library/package properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "title": "Information about a library/package created at the workspace level.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the library."
            },
            "path": {
              "type": "string",
              "description": "Storage blob path of library."
            },
            "containerName": {
              "type": "string",
              "description": "Storage blob container name."
            },
            "uploadedTimestamp": {
              "type": "string",
              "format": "date-time",
              "description": "The last update time of the library.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of the library."
            },
            "provisioningStatus": {
              "readOnly": true,
              "type": "string",
              "description": "Provisioning status of the library/package."
            },
            "creatorId": {
              "readOnly": true,
              "type": "string",
              "description": "Creator Id of the library/package."
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "AvailableRpOperation": {
      "type": "object",
      "description": "An operation that is available in this resource provider",
      "properties": {
        "display": {
          "description": "Display properties of the operation",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Operation description"
            },
            "resource": {
              "type": "string",
              "description": "Resource type"
            },
            "provider": {
              "type": "string",
              "description": "Resource provider name"
            },
            "operation": {
              "type": "string",
              "description": "Operation name"
            }
          }
        },
        "isDataAction": {
          "type": "string",
          "description": "Whether this operation is a data action"
        },
        "name": {
          "type": "string",
          "description": "Operation name"
        },
        "properties": {
          "description": "Operation properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "serviceSpecification": {
              "description": "Operation service specification",
              "type": "object",
              "properties": {
                "metricSpecifications": {
                  "type": "array",
                  "description": "Service metric specifications",
                  "items": {
                    "type": "object",
                    "description": "What is this?",
                    "properties": {
                      "sourceMdmNamespace": {
                        "type": "string",
                        "description": "The source MDM namespace"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Metric display name"
                      },
                      "name": {
                        "type": "string",
                        "description": "Metric unique name"
                      },
                      "aggregationType": {
                        "type": "string",
                        "description": "Metric aggregation type"
                      },
                      "displayDescription": {
                        "type": "string",
                        "description": "Metric description"
                      },
                      "sourceMdmAccount": {
                        "type": "string",
                        "description": "The source MDM account"
                      },
                      "enableRegionalMdmAccount": {
                        "type": "boolean",
                        "description": "Whether the regional MDM account is enabled"
                      },
                      "unit": {
                        "type": "string",
                        "description": "Metric units"
                      },
                      "dimensions": {
                        "type": "array",
                        "description": "Metric dimensions",
                        "items": {
                          "type": "object",
                          "description": "What is this?",
                          "properties": {
                            "displayName": {
                              "type": "string",
                              "description": "Dimension display name"
                            },
                            "name": {
                              "type": "string",
                              "description": "Dimension unique name"
                            },
                            "toBeExportedForShoebox": {
                              "type": "boolean",
                              "description": "Whether this metric should be exported for Shoebox"
                            }
                          }
                        }
                      },
                      "supportsInstanceLevelAggregation": {
                        "type": "boolean",
                        "description": "Whether the metric supports instance-level aggregation"
                      },
                      "metricFilterPattern": {
                        "type": "string",
                        "description": "Metric filter"
                      }
                    }
                  }
                },
                "logSpecifications": {
                  "type": "array",
                  "description": "Service log specifications",
                  "items": {
                    "type": "object",
                    "description": "What is this?",
                    "properties": {
                      "displayName": {
                        "type": "string",
                        "description": "Log display name"
                      },
                      "blobDuration": {
                        "type": "string",
                        "description": "Time range the log covers"
                      },
                      "name": {
                        "type": "string",
                        "description": "Log unique name"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "Operation origin"
        }
      }
    },
    "AvailableRpOperationDisplayInfo": {
      "type": "object",
      "description": "Description of an available operation",
      "properties": {
        "description": {
          "type": "string",
          "description": "Operation description"
        },
        "resource": {
          "type": "string",
          "description": "Resource type"
        },
        "provider": {
          "type": "string",
          "description": "Resource provider name"
        },
        "operation": {
          "type": "string",
          "description": "Operation name"
        }
      }
    },
    "OperationMetaPropertyInfo": {
      "type": "object",
      "description": "What is this?",
      "properties": {
        "serviceSpecification": {
          "description": "Operation service specification",
          "type": "object",
          "properties": {
            "metricSpecifications": {
              "type": "array",
              "description": "Service metric specifications",
              "items": {
                "type": "object",
                "description": "What is this?",
                "properties": {
                  "sourceMdmNamespace": {
                    "type": "string",
                    "description": "The source MDM namespace"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Metric display name"
                  },
                  "name": {
                    "type": "string",
                    "description": "Metric unique name"
                  },
                  "aggregationType": {
                    "type": "string",
                    "description": "Metric aggregation type"
                  },
                  "displayDescription": {
                    "type": "string",
                    "description": "Metric description"
                  },
                  "sourceMdmAccount": {
                    "type": "string",
                    "description": "The source MDM account"
                  },
                  "enableRegionalMdmAccount": {
                    "type": "boolean",
                    "description": "Whether the regional MDM account is enabled"
                  },
                  "unit": {
                    "type": "string",
                    "description": "Metric units"
                  },
                  "dimensions": {
                    "type": "array",
                    "description": "Metric dimensions",
                    "items": {
                      "type": "object",
                      "description": "What is this?",
                      "properties": {
                        "displayName": {
                          "type": "string",
                          "description": "Dimension display name"
                        },
                        "name": {
                          "type": "string",
                          "description": "Dimension unique name"
                        },
                        "toBeExportedForShoebox": {
                          "type": "boolean",
                          "description": "Whether this metric should be exported for Shoebox"
                        }
                      }
                    }
                  },
                  "supportsInstanceLevelAggregation": {
                    "type": "boolean",
                    "description": "Whether the metric supports instance-level aggregation"
                  },
                  "metricFilterPattern": {
                    "type": "string",
                    "description": "Metric filter"
                  }
                }
              }
            },
            "logSpecifications": {
              "type": "array",
              "description": "Service log specifications",
              "items": {
                "type": "object",
                "description": "What is this?",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Log display name"
                  },
                  "blobDuration": {
                    "type": "string",
                    "description": "Time range the log covers"
                  },
                  "name": {
                    "type": "string",
                    "description": "Log unique name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "OperationMetaServiceSpecification": {
      "type": "object",
      "description": "What is this?",
      "properties": {
        "metricSpecifications": {
          "type": "array",
          "description": "Service metric specifications",
          "items": {
            "type": "object",
            "description": "What is this?",
            "properties": {
              "sourceMdmNamespace": {
                "type": "string",
                "description": "The source MDM namespace"
              },
              "displayName": {
                "type": "string",
                "description": "Metric display name"
              },
              "name": {
                "type": "string",
                "description": "Metric unique name"
              },
              "aggregationType": {
                "type": "string",
                "description": "Metric aggregation type"
              },
              "displayDescription": {
                "type": "string",
                "description": "Metric description"
              },
              "sourceMdmAccount": {
                "type": "string",
                "description": "The source MDM account"
              },
              "enableRegionalMdmAccount": {
                "type": "boolean",
                "description": "Whether the regional MDM account is enabled"
              },
              "unit": {
                "type": "string",
                "description": "Metric units"
              },
              "dimensions": {
                "type": "array",
                "description": "Metric dimensions",
                "items": {
                  "type": "object",
                  "description": "What is this?",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Dimension display name"
                    },
                    "name": {
                      "type": "string",
                      "description": "Dimension unique name"
                    },
                    "toBeExportedForShoebox": {
                      "type": "boolean",
                      "description": "Whether this metric should be exported for Shoebox"
                    }
                  }
                }
              },
              "supportsInstanceLevelAggregation": {
                "type": "boolean",
                "description": "Whether the metric supports instance-level aggregation"
              },
              "metricFilterPattern": {
                "type": "string",
                "description": "Metric filter"
              }
            }
          }
        },
        "logSpecifications": {
          "type": "array",
          "description": "Service log specifications",
          "items": {
            "type": "object",
            "description": "What is this?",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Log display name"
              },
              "blobDuration": {
                "type": "string",
                "description": "Time range the log covers"
              },
              "name": {
                "type": "string",
                "description": "Log unique name"
              }
            }
          }
        }
      }
    },
    "OperationMetaMetricSpecification": {
      "type": "object",
      "description": "What is this?",
      "properties": {
        "sourceMdmNamespace": {
          "type": "string",
          "description": "The source MDM namespace"
        },
        "displayName": {
          "type": "string",
          "description": "Metric display name"
        },
        "name": {
          "type": "string",
          "description": "Metric unique name"
        },
        "aggregationType": {
          "type": "string",
          "description": "Metric aggregation type"
        },
        "displayDescription": {
          "type": "string",
          "description": "Metric description"
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "The source MDM account"
        },
        "enableRegionalMdmAccount": {
          "type": "boolean",
          "description": "Whether the regional MDM account is enabled"
        },
        "unit": {
          "type": "string",
          "description": "Metric units"
        },
        "dimensions": {
          "type": "array",
          "description": "Metric dimensions",
          "items": {
            "type": "object",
            "description": "What is this?",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Dimension display name"
              },
              "name": {
                "type": "string",
                "description": "Dimension unique name"
              },
              "toBeExportedForShoebox": {
                "type": "boolean",
                "description": "Whether this metric should be exported for Shoebox"
              }
            }
          }
        },
        "supportsInstanceLevelAggregation": {
          "type": "boolean",
          "description": "Whether the metric supports instance-level aggregation"
        },
        "metricFilterPattern": {
          "type": "string",
          "description": "Metric filter"
        }
      }
    },
    "OperationMetaLogSpecification": {
      "type": "object",
      "description": "What is this?",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Log display name"
        },
        "blobDuration": {
          "type": "string",
          "description": "Time range the log covers"
        },
        "name": {
          "type": "string",
          "description": "Log unique name"
        }
      }
    },
    "OperationMetaMetricDimensionSpecification": {
      "type": "object",
      "description": "What is this?",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Dimension display name"
        },
        "name": {
          "type": "string",
          "description": "Dimension unique name"
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "Whether this metric should be exported for Shoebox"
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "description": "A list of private link resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A private link resource",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "The private link resource properties.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "groupId": {
                    "description": "The private link resource group id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "requiredMembers": {
                    "description": "The private link resource required member names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "requiredZoneNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true,
                    "description": "Required DNS zone names of the the private link resource."
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "The private link resource properties.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "groupId": {
              "description": "The private link resource group id.",
              "type": "string",
              "readOnly": true
            },
            "requiredMembers": {
              "description": "The private link resource required member names.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "requiredZoneNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Required DNS zone names of the the private link resource."
            }
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of a private link resource.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Required DNS zone names of the the private link resource."
        }
      }
    },
    "PrivateLinkHubInfoListResult": {
      "description": "List of privateLinkHubs",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link to the next page of results",
          "type": "string"
        },
        "value": {
          "description": "List of privateLinkHubs",
          "type": "array",
          "items": {
            "description": "A privateLinkHub",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "PrivateLinkHub resource properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "PrivateLinkHub provisioning state",
                    "type": "string"
                  },
                  "privateEndpointConnections": {
                    "description": "List of private endpoint connections",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "Private Endpoint Connection For Private Link Hub - Basic",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "identifier",
                          "type": "string",
                          "readOnly": true
                        },
                        "properties": {
                          "description": "Properties of private endpoint connection for private link hub",
                          "type": "object",
                          "x-ms-client-flatten": true,
                          "properties": {
                            "privateEndpoint": {
                              "description": "The private endpoint which the connection belongs to.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Resource id of the private endpoint.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              },
                              "x-ms-azure-resource": true
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Connection state of the private endpoint connection.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "The private link service connection status.",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "The private link service connection description.",
                                  "type": "string"
                                },
                                "actionsRequired": {
                                  "description": "The actions required for private link service connection.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the private endpoint connection.",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PrivateLinkHub": {
      "description": "A privateLinkHub",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "PrivateLinkHub resource properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "PrivateLinkHub provisioning state",
              "type": "string"
            },
            "privateEndpointConnections": {
              "description": "List of private endpoint connections",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "Private Endpoint Connection For Private Link Hub - Basic",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "identifier",
                    "type": "string",
                    "readOnly": true
                  },
                  "properties": {
                    "description": "Properties of private endpoint connection for private link hub",
                    "type": "object",
                    "x-ms-client-flatten": true,
                    "properties": {
                      "privateEndpoint": {
                        "description": "The private endpoint which the connection belongs to.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Resource id of the private endpoint.",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "x-ms-azure-resource": true
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Connection state of the private endpoint connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The private link service connection status.",
                            "type": "string"
                          },
                          "description": {
                            "description": "The private link service connection description.",
                            "type": "string"
                          },
                          "actionsRequired": {
                            "description": "The actions required for private link service connection.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the private endpoint connection.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PrivateLinkHubPatchInfo": {
      "description": "PrivateLinkHub patch details",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "PrivateLinkHubProperties": {
      "description": "PrivateLinkHub properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "PrivateLinkHub provisioning state",
          "type": "string"
        },
        "privateEndpointConnections": {
          "description": "List of private endpoint connections",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Private Endpoint Connection For Private Link Hub - Basic",
            "type": "object",
            "properties": {
              "id": {
                "description": "identifier",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of private endpoint connection for private link hub",
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "privateEndpoint": {
                    "description": "The private endpoint which the connection belongs to.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Resource id of the private endpoint.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "x-ms-azure-resource": true
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Connection state of the private endpoint connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "The private link service connection status.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The private link service connection description.",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "The actions required for private link service connection.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the private endpoint connection.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "PrivateEndpointConnectionForPrivateLinkHubBasic": {
      "description": "Private Endpoint Connection For Private Link Hub - Basic",
      "type": "object",
      "properties": {
        "id": {
          "description": "identifier",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of private endpoint connection for private link hub",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "privateEndpoint": {
              "description": "The private endpoint which the connection belongs to.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Resource id of the private endpoint.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "x-ms-azure-resource": true
            },
            "privateLinkServiceConnectionState": {
              "description": "Connection state of the private endpoint connection.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "The private link service connection status.",
                  "type": "string"
                },
                "description": {
                  "description": "The private link service connection description.",
                  "type": "string"
                },
                "actionsRequired": {
                  "description": "The actions required for private link service connection.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the private endpoint connection.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "SqlPoolInfoListResult": {
      "type": "object",
      "title": "SQL pool collection",
      "description": "List of SQL pools",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "Link to the next page of results"
        },
        "value": {
          "type": "array",
          "description": "List of SQL pools",
          "items": {
            "type": "object",
            "title": "SQL pool",
            "description": "A SQL Analytics pool",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "sku": {
                "description": "SQL pool SKU",
                "type": "object",
                "title": "Sku",
                "properties": {
                  "tier": {
                    "type": "string",
                    "description": "The service tier",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "The SKU name"
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                    "x-ms-mutability": [
                      "create",
                      "read",
                      "update"
                    ]
                  }
                }
              },
              "properties": {
                "description": "SQL pool properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "title": "SQL pool properties",
                "properties": {
                  "maxSizeBytes": {
                    "type": "integer",
                    "description": "Maximum size in bytes",
                    "format": "int64"
                  },
                  "collation": {
                    "type": "string",
                    "description": "Collation mode",
                    "default": "",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "sourceDatabaseId": {
                    "type": "string",
                    "description": "Source database to create from",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "recoverableDatabaseId": {
                    "type": "string",
                    "description": "Backup database to restore from"
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Resource state"
                  },
                  "status": {
                    "type": "string",
                    "description": "Resource status",
                    "readOnly": true
                  },
                  "restorePointInTime": {
                    "type": "string",
                    "description": "Snapshot time to restore",
                    "format": "date-time",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "createMode": {
                    "type": "string",
                    "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
                    "enum": [
                      "Default",
                      "PointInTimeRestore",
                      "Recovery",
                      "Restore"
                    ],
                    "x-ms-enum": {
                      "name": "createMode",
                      "modelAsString": true
                    },
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "creationDate": {
                    "type": "string",
                    "description": "Date the SQL pool was created",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "storageAccountType": {
                    "description": "The storage account type used to store backups for this sql pool.",
                    "enum": [
                      "GRS",
                      "LRS"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "StorageAccountType",
                      "modelAsString": true
                    },
                    "default": "GRS"
                  },
                  "sourceDatabaseDeletionDate": {
                    "type": "string",
                    "description": "Specifies the time that the sql pool was deleted",
                    "format": "date-time",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "SqlPool": {
      "type": "object",
      "title": "SQL pool",
      "description": "A SQL Analytics pool",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "sku": {
          "description": "SQL pool SKU",
          "type": "object",
          "title": "Sku",
          "properties": {
            "tier": {
              "type": "string",
              "description": "The service tier",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "name": {
              "type": "string",
              "description": "The SKU name"
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            }
          }
        },
        "properties": {
          "description": "SQL pool properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "title": "SQL pool properties",
          "properties": {
            "maxSizeBytes": {
              "type": "integer",
              "description": "Maximum size in bytes",
              "format": "int64"
            },
            "collation": {
              "type": "string",
              "description": "Collation mode",
              "default": "",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sourceDatabaseId": {
              "type": "string",
              "description": "Source database to create from",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "recoverableDatabaseId": {
              "type": "string",
              "description": "Backup database to restore from"
            },
            "provisioningState": {
              "type": "string",
              "description": "Resource state"
            },
            "status": {
              "type": "string",
              "description": "Resource status",
              "readOnly": true
            },
            "restorePointInTime": {
              "type": "string",
              "description": "Snapshot time to restore",
              "format": "date-time",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "createMode": {
              "type": "string",
              "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
              "enum": [
                "Default",
                "PointInTimeRestore",
                "Recovery",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "createMode",
                "modelAsString": true
              },
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "creationDate": {
              "type": "string",
              "description": "Date the SQL pool was created",
              "format": "date-time",
              "readOnly": true
            },
            "storageAccountType": {
              "description": "The storage account type used to store backups for this sql pool.",
              "enum": [
                "GRS",
                "LRS"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "StorageAccountType",
                "modelAsString": true
              },
              "default": "GRS"
            },
            "sourceDatabaseDeletionDate": {
              "type": "string",
              "description": "Specifies the time that the sql pool was deleted",
              "format": "date-time",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        }
      }
    },
    "SqlPoolPatchInfo": {
      "type": "object",
      "title": "SQL pool patch info",
      "description": "A SQL Analytics pool patch info",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "sku": {
          "description": "SQL pool SKU",
          "type": "object",
          "title": "Sku",
          "properties": {
            "tier": {
              "type": "string",
              "description": "The service tier",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "name": {
              "type": "string",
              "description": "The SKU name"
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            }
          }
        },
        "properties": {
          "description": "SQL pool properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "title": "SQL pool properties",
          "properties": {
            "maxSizeBytes": {
              "type": "integer",
              "description": "Maximum size in bytes",
              "format": "int64"
            },
            "collation": {
              "type": "string",
              "description": "Collation mode",
              "default": "",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sourceDatabaseId": {
              "type": "string",
              "description": "Source database to create from",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "recoverableDatabaseId": {
              "type": "string",
              "description": "Backup database to restore from"
            },
            "provisioningState": {
              "type": "string",
              "description": "Resource state"
            },
            "status": {
              "type": "string",
              "description": "Resource status",
              "readOnly": true
            },
            "restorePointInTime": {
              "type": "string",
              "description": "Snapshot time to restore",
              "format": "date-time",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "createMode": {
              "type": "string",
              "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
              "enum": [
                "Default",
                "PointInTimeRestore",
                "Recovery",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "createMode",
                "modelAsString": true
              },
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "creationDate": {
              "type": "string",
              "description": "Date the SQL pool was created",
              "format": "date-time",
              "readOnly": true
            },
            "storageAccountType": {
              "description": "The storage account type used to store backups for this sql pool.",
              "enum": [
                "GRS",
                "LRS"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "StorageAccountType",
                "modelAsString": true
              },
              "default": "GRS"
            },
            "sourceDatabaseDeletionDate": {
              "type": "string",
              "description": "Specifies the time that the sql pool was deleted",
              "format": "date-time",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        }
      }
    },
    "Sku": {
      "type": "object",
      "title": "Sku",
      "description": "SQL pool SKU",
      "properties": {
        "tier": {
          "type": "string",
          "description": "The service tier",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "name": {
          "type": "string",
          "description": "The SKU name"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "SqlPoolResourceProperties": {
      "type": "object",
      "title": "SQL pool properties",
      "description": "Properties of a SQL Analytics pool",
      "properties": {
        "maxSizeBytes": {
          "type": "integer",
          "description": "Maximum size in bytes",
          "format": "int64"
        },
        "collation": {
          "type": "string",
          "description": "Collation mode",
          "default": "",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "sourceDatabaseId": {
          "type": "string",
          "description": "Source database to create from",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "recoverableDatabaseId": {
          "type": "string",
          "description": "Backup database to restore from"
        },
        "provisioningState": {
          "type": "string",
          "description": "Resource state"
        },
        "status": {
          "type": "string",
          "description": "Resource status",
          "readOnly": true
        },
        "restorePointInTime": {
          "type": "string",
          "description": "Snapshot time to restore",
          "format": "date-time",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "createMode": {
          "type": "string",
          "description": "Specifies the mode of sql pool creation.\n\nDefault: regular sql pool creation.\n\nPointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n\nRecovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n\nRestore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.",
          "enum": [
            "Default",
            "PointInTimeRestore",
            "Recovery",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "createMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "creationDate": {
          "type": "string",
          "description": "Date the SQL pool was created",
          "format": "date-time",
          "readOnly": true
        },
        "storageAccountType": {
          "description": "The storage account type used to store backups for this sql pool.",
          "enum": [
            "GRS",
            "LRS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageAccountType",
            "modelAsString": true
          },
          "default": "GRS"
        },
        "sourceDatabaseDeletionDate": {
          "type": "string",
          "description": "Specifies the time that the sql pool was deleted",
          "format": "date-time",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "MetadataSyncConfig": {
      "type": "object",
      "title": "Metadata sync configuration",
      "description": "Configuration for metadata sync",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "title": "Metadata Sync Config properties",
          "description": "Metadata Sync Config properties",
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates whether the metadata sync is enabled or disabled"
            },
            "syncIntervalInMinutes": {
              "type": "integer",
              "format": "int32",
              "description": "The Sync Interval in minutes."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "GeoBackupPolicyProperties": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "The state of the geo backup policy.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "modelAsString": false,
            "name": "GeoBackupPolicyState"
          }
        },
        "storageType": {
          "type": "string",
          "description": "The storage type of the geo backup policy.",
          "readOnly": true
        }
      },
      "required": [
        "state"
      ],
      "description": "The properties of the geo backup policy."
    },
    "GeoBackupPolicy": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "The properties of the geo backup policy.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "description": "The state of the geo backup policy.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "modelAsString": false,
                "name": "GeoBackupPolicyState"
              }
            },
            "storageType": {
              "type": "string",
              "description": "The storage type of the geo backup policy.",
              "readOnly": true
            }
          },
          "required": [
            "state"
          ]
        },
        "kind": {
          "readOnly": true,
          "type": "string",
          "description": "Kind of geo backup policy.  This is metadata used for the Azure portal experience."
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "Backup policy location."
        }
      },
      "required": [
        "properties"
      ],
      "description": "A database geo backup policy."
    },
    "GeoBackupPolicyListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "The properties of the geo backup policy.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "state": {
                    "type": "string",
                    "description": "The state of the geo backup policy.",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "GeoBackupPolicyState"
                    }
                  },
                  "storageType": {
                    "type": "string",
                    "description": "The storage type of the geo backup policy.",
                    "readOnly": true
                  }
                },
                "required": [
                  "state"
                ]
              },
              "kind": {
                "readOnly": true,
                "type": "string",
                "description": "Kind of geo backup policy.  This is metadata used for the Azure portal experience."
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "Backup policy location."
              }
            },
            "required": [
              "properties"
            ],
            "description": "A database geo backup policy."
          },
          "description": "The list of geo backup policies."
        }
      },
      "description": "The response to a list geo backup policies request."
    },
    "TopQueries": {
      "type": "object",
      "properties": {
        "aggregationFunction": {
          "description": "The function that is used to aggregate each query's metrics.",
          "type": "string",
          "enum": [
            "min",
            "max",
            "avg",
            "sum"
          ],
          "x-ms-enum": {
            "name": "QueryAggregationFunction",
            "modelAsString": false
          },
          "readOnly": true
        },
        "executionType": {
          "description": "The execution type that is used to filter the query instances that are returned.",
          "type": "string",
          "enum": [
            "any",
            "regular",
            "irregular",
            "aborted",
            "exception"
          ],
          "x-ms-enum": {
            "name": "QueryExecutionType",
            "modelAsString": false
          },
          "readOnly": true
        },
        "intervalType": {
          "description": "The duration of the interval (ISO8601 duration format).",
          "type": "string",
          "readOnly": true
        },
        "numberOfTopQueries": {
          "description": "The number of requested queries.",
          "type": "number",
          "format": "int32",
          "readOnly": true
        },
        "observationStartTime": {
          "description": "The start time for queries that are returned (ISO8601 format)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "observationEndTime": {
          "description": "The end time for queries that are returned (ISO8601 format)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "observedMetric": {
          "description": "The type of metric to use for ordering the top metrics.",
          "type": "string",
          "enum": [
            "cpu",
            "io",
            "logio",
            "duration",
            "executionCount"
          ],
          "x-ms-enum": {
            "name": "QueryObservedMetricType",
            "modelAsString": false
          },
          "readOnly": true
        },
        "queries": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "queryId": {
                "description": "The id of the query",
                "type": "string",
                "readOnly": true
              },
              "intervals": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "intervalStartTime": {
                      "description": "The start time of the measurement interval (ISO8601 format).",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "executionCount": {
                      "description": "The number of times the query was executed during this interval.",
                      "type": "number",
                      "format": "int32",
                      "readOnly": true
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the metric",
                            "type": "string",
                            "readOnly": true
                          },
                          "displayName": {
                            "description": "The name of the metric for display in user interface",
                            "type": "string",
                            "readOnly": true
                          },
                          "unit": {
                            "description": "The unit of measurement",
                            "type": "string",
                            "enum": [
                              "percentage",
                              "KB",
                              "microseconds"
                            ],
                            "x-ms-enum": {
                              "name": "QueryMetricUnit",
                              "modelAsString": false
                            },
                            "readOnly": true
                          },
                          "value": {
                            "description": "The measured value",
                            "type": "number",
                            "format": "double",
                            "readOnly": true
                          }
                        },
                        "description": "A database query."
                      },
                      "description": "The list of query metrics during this interval.",
                      "readOnly": true,
                      "x-ms-identifiers": []
                    }
                  },
                  "description": "A database query."
                },
                "description": "The list of query intervals.",
                "readOnly": true,
                "x-ms-identifiers": []
              }
            },
            "description": "A database query."
          },
          "description": "The list of queries.",
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "description": "A database query."
    },
    "QueryStatistic": {
      "type": "object",
      "properties": {
        "queryId": {
          "description": "The id of the query",
          "type": "string",
          "readOnly": true
        },
        "intervals": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "intervalStartTime": {
                "description": "The start time of the measurement interval (ISO8601 format).",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "executionCount": {
                "description": "The number of times the query was executed during this interval.",
                "type": "number",
                "format": "int32",
                "readOnly": true
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the metric",
                      "type": "string",
                      "readOnly": true
                    },
                    "displayName": {
                      "description": "The name of the metric for display in user interface",
                      "type": "string",
                      "readOnly": true
                    },
                    "unit": {
                      "description": "The unit of measurement",
                      "type": "string",
                      "enum": [
                        "percentage",
                        "KB",
                        "microseconds"
                      ],
                      "x-ms-enum": {
                        "name": "QueryMetricUnit",
                        "modelAsString": false
                      },
                      "readOnly": true
                    },
                    "value": {
                      "description": "The measured value",
                      "type": "number",
                      "format": "double",
                      "readOnly": true
                    }
                  },
                  "description": "A database query."
                },
                "description": "The list of query metrics during this interval.",
                "readOnly": true,
                "x-ms-identifiers": []
              }
            },
            "description": "A database query."
          },
          "description": "The list of query intervals.",
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "description": "A database query."
    },
    "QueryInterval": {
      "type": "object",
      "properties": {
        "intervalStartTime": {
          "description": "The start time of the measurement interval (ISO8601 format).",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "executionCount": {
          "description": "The number of times the query was executed during this interval.",
          "type": "number",
          "format": "int32",
          "readOnly": true
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the metric",
                "type": "string",
                "readOnly": true
              },
              "displayName": {
                "description": "The name of the metric for display in user interface",
                "type": "string",
                "readOnly": true
              },
              "unit": {
                "description": "The unit of measurement",
                "type": "string",
                "enum": [
                  "percentage",
                  "KB",
                  "microseconds"
                ],
                "x-ms-enum": {
                  "name": "QueryMetricUnit",
                  "modelAsString": false
                },
                "readOnly": true
              },
              "value": {
                "description": "The measured value",
                "type": "number",
                "format": "double",
                "readOnly": true
              }
            },
            "description": "A database query."
          },
          "description": "The list of query metrics during this interval.",
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "description": "A database query."
    },
    "QueryMetric": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the metric",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The name of the metric for display in user interface",
          "type": "string",
          "readOnly": true
        },
        "unit": {
          "description": "The unit of measurement",
          "type": "string",
          "enum": [
            "percentage",
            "KB",
            "microseconds"
          ],
          "x-ms-enum": {
            "name": "QueryMetricUnit",
            "modelAsString": false
          },
          "readOnly": true
        },
        "value": {
          "description": "The measured value",
          "type": "number",
          "format": "double",
          "readOnly": true
        }
      },
      "description": "A database query."
    },
    "TopQueriesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "aggregationFunction": {
                "description": "The function that is used to aggregate each query's metrics.",
                "type": "string",
                "enum": [
                  "min",
                  "max",
                  "avg",
                  "sum"
                ],
                "x-ms-enum": {
                  "name": "QueryAggregationFunction",
                  "modelAsString": false
                },
                "readOnly": true
              },
              "executionType": {
                "description": "The execution type that is used to filter the query instances that are returned.",
                "type": "string",
                "enum": [
                  "any",
                  "regular",
                  "irregular",
                  "aborted",
                  "exception"
                ],
                "x-ms-enum": {
                  "name": "QueryExecutionType",
                  "modelAsString": false
                },
                "readOnly": true
              },
              "intervalType": {
                "description": "The duration of the interval (ISO8601 duration format).",
                "type": "string",
                "readOnly": true
              },
              "numberOfTopQueries": {
                "description": "The number of requested queries.",
                "type": "number",
                "format": "int32",
                "readOnly": true
              },
              "observationStartTime": {
                "description": "The start time for queries that are returned (ISO8601 format)",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "observationEndTime": {
                "description": "The end time for queries that are returned (ISO8601 format)",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "observedMetric": {
                "description": "The type of metric to use for ordering the top metrics.",
                "type": "string",
                "enum": [
                  "cpu",
                  "io",
                  "logio",
                  "duration",
                  "executionCount"
                ],
                "x-ms-enum": {
                  "name": "QueryObservedMetricType",
                  "modelAsString": false
                },
                "readOnly": true
              },
              "queries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "queryId": {
                      "description": "The id of the query",
                      "type": "string",
                      "readOnly": true
                    },
                    "intervals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "intervalStartTime": {
                            "description": "The start time of the measurement interval (ISO8601 format).",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "executionCount": {
                            "description": "The number of times the query was executed during this interval.",
                            "type": "number",
                            "format": "int32",
                            "readOnly": true
                          },
                          "metrics": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of the metric",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "displayName": {
                                  "description": "The name of the metric for display in user interface",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "unit": {
                                  "description": "The unit of measurement",
                                  "type": "string",
                                  "enum": [
                                    "percentage",
                                    "KB",
                                    "microseconds"
                                  ],
                                  "x-ms-enum": {
                                    "name": "QueryMetricUnit",
                                    "modelAsString": false
                                  },
                                  "readOnly": true
                                },
                                "value": {
                                  "description": "The measured value",
                                  "type": "number",
                                  "format": "double",
                                  "readOnly": true
                                }
                              },
                              "description": "A database query."
                            },
                            "description": "The list of query metrics during this interval.",
                            "readOnly": true,
                            "x-ms-identifiers": []
                          }
                        },
                        "description": "A database query."
                      },
                      "description": "The list of query intervals.",
                      "readOnly": true,
                      "x-ms-identifiers": []
                    }
                  },
                  "description": "A database query."
                },
                "description": "The list of queries.",
                "readOnly": true,
                "x-ms-identifiers": []
              }
            },
            "description": "A database query."
          },
          "description": "The list of top queries.",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a get top queries request."
    },
    "DataWarehouseUserActivitiesProperties": {
      "description": "User activities of a data warehouse. This currently includes the count of running or suspended queries. For more information, please view the sys.dm_pdw_exec_requests dynamic management view (DMV).",
      "type": "object",
      "properties": {
        "activeQueriesCount": {
          "format": "int32",
          "description": "Count of running and suspended queries.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "DataWarehouseUserActivities": {
      "description": "User activities of a data warehouse",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "activeQueriesCount": {
              "format": "int32",
              "description": "Count of running and suspended queries.",
              "type": "integer",
              "readOnly": true
            }
          }
        }
      }
    },
    "RestorePointListResult": {
      "description": "A list of long term retention backups.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "Database restore points.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "location": {
                "description": "Resource location.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "restorePointType": {
                    "description": "The type of restore point",
                    "enum": [
                      "CONTINUOUS",
                      "DISCRETE"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "RestorePointType",
                      "modelAsString": false
                    }
                  },
                  "earliestRestoreDate": {
                    "format": "date-time",
                    "description": "The earliest time to which this database can be restored",
                    "type": "string",
                    "readOnly": true
                  },
                  "restorePointCreationDate": {
                    "format": "date-time",
                    "description": "The time the backup was taken",
                    "type": "string",
                    "readOnly": true
                  },
                  "restorePointLabel": {
                    "description": "The label of restore point for backup request by user",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RestorePointProperties": {
      "description": "Properties of a database restore point",
      "type": "object",
      "properties": {
        "restorePointType": {
          "description": "The type of restore point",
          "enum": [
            "CONTINUOUS",
            "DISCRETE"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "RestorePointType",
            "modelAsString": false
          }
        },
        "earliestRestoreDate": {
          "format": "date-time",
          "description": "The earliest time to which this database can be restored",
          "type": "string",
          "readOnly": true
        },
        "restorePointCreationDate": {
          "format": "date-time",
          "description": "The time the backup was taken",
          "type": "string",
          "readOnly": true
        },
        "restorePointLabel": {
          "description": "The label of restore point for backup request by user",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RestorePoint": {
      "description": "Database restore points.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "description": "Resource location.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "restorePointType": {
              "description": "The type of restore point",
              "enum": [
                "CONTINUOUS",
                "DISCRETE"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "RestorePointType",
                "modelAsString": false
              }
            },
            "earliestRestoreDate": {
              "format": "date-time",
              "description": "The earliest time to which this database can be restored",
              "type": "string",
              "readOnly": true
            },
            "restorePointCreationDate": {
              "format": "date-time",
              "description": "The time the backup was taken",
              "type": "string",
              "readOnly": true
            },
            "restorePointLabel": {
              "description": "The label of restore point for backup request by user",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ReplicationLinkProperties": {
      "type": "object",
      "properties": {
        "isTerminationAllowed": {
          "readOnly": true,
          "type": "boolean",
          "description": "Legacy value indicating whether termination is allowed.  Currently always returns true."
        },
        "replicationMode": {
          "readOnly": true,
          "type": "string",
          "description": "Replication mode of this replication link."
        },
        "partnerServer": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the workspace hosting the partner Sql pool."
        },
        "partnerDatabase": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the partner Sql pool."
        },
        "partnerLocation": {
          "readOnly": true,
          "type": "string",
          "description": "The Azure Region of the partner Sql pool."
        },
        "role": {
          "readOnly": true,
          "type": "string",
          "description": "The role of the Sql pool in the replication link.",
          "enum": [
            "Primary",
            "Secondary",
            "NonReadableSecondary",
            "Source",
            "Copy"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole"
          }
        },
        "partnerRole": {
          "readOnly": true,
          "type": "string",
          "description": "The role of the partner Sql pool in the replication link.",
          "enum": [
            "Primary",
            "Secondary",
            "NonReadableSecondary",
            "Source",
            "Copy"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole"
          }
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The start time for the replication link."
        },
        "percentComplete": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The percentage of seeding complete for the replication link."
        },
        "replicationState": {
          "readOnly": true,
          "type": "string",
          "description": "The replication state for the replication link.",
          "enum": [
            "PENDING",
            "SEEDING",
            "CATCH_UP",
            "SUSPENDED"
          ],
          "x-ms-enum": {
            "name": "ReplicationState",
            "modelAsString": true
          }
        }
      },
      "description": "Represents the properties of a Sql pool replication link."
    },
    "ReplicationLink": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "type": "string",
          "description": "Type of resource this is.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Location of the workspace that contains this firewall rule.",
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties representing the resource.",
          "type": "object",
          "properties": {
            "isTerminationAllowed": {
              "readOnly": true,
              "type": "boolean",
              "description": "Legacy value indicating whether termination is allowed.  Currently always returns true."
            },
            "replicationMode": {
              "readOnly": true,
              "type": "string",
              "description": "Replication mode of this replication link."
            },
            "partnerServer": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the workspace hosting the partner Sql pool."
            },
            "partnerDatabase": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the partner Sql pool."
            },
            "partnerLocation": {
              "readOnly": true,
              "type": "string",
              "description": "The Azure Region of the partner Sql pool."
            },
            "role": {
              "readOnly": true,
              "type": "string",
              "description": "The role of the Sql pool in the replication link.",
              "enum": [
                "Primary",
                "Secondary",
                "NonReadableSecondary",
                "Source",
                "Copy"
              ],
              "x-ms-enum": {
                "name": "ReplicationRole"
              }
            },
            "partnerRole": {
              "readOnly": true,
              "type": "string",
              "description": "The role of the partner Sql pool in the replication link.",
              "enum": [
                "Primary",
                "Secondary",
                "NonReadableSecondary",
                "Source",
                "Copy"
              ],
              "x-ms-enum": {
                "name": "ReplicationRole"
              }
            },
            "startTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "The start time for the replication link."
            },
            "percentComplete": {
              "readOnly": true,
              "type": "integer",
              "format": "int32",
              "description": "The percentage of seeding complete for the replication link."
            },
            "replicationState": {
              "readOnly": true,
              "type": "string",
              "description": "The replication state for the replication link.",
              "enum": [
                "PENDING",
                "SEEDING",
                "CATCH_UP",
                "SUSPENDED"
              ],
              "x-ms-enum": {
                "name": "ReplicationState",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "Represents a Sql pool replication link."
    },
    "ReplicationLinkListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "type": "string",
                "description": "Type of resource this is.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "Location of the workspace that contains this firewall rule.",
                "readOnly": true
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties representing the resource.",
                "type": "object",
                "properties": {
                  "isTerminationAllowed": {
                    "readOnly": true,
                    "type": "boolean",
                    "description": "Legacy value indicating whether termination is allowed.  Currently always returns true."
                  },
                  "replicationMode": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Replication mode of this replication link."
                  },
                  "partnerServer": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the workspace hosting the partner Sql pool."
                  },
                  "partnerDatabase": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the partner Sql pool."
                  },
                  "partnerLocation": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The Azure Region of the partner Sql pool."
                  },
                  "role": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The role of the Sql pool in the replication link.",
                    "enum": [
                      "Primary",
                      "Secondary",
                      "NonReadableSecondary",
                      "Source",
                      "Copy"
                    ],
                    "x-ms-enum": {
                      "name": "ReplicationRole"
                    }
                  },
                  "partnerRole": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The role of the partner Sql pool in the replication link.",
                    "enum": [
                      "Primary",
                      "Secondary",
                      "NonReadableSecondary",
                      "Source",
                      "Copy"
                    ],
                    "x-ms-enum": {
                      "name": "ReplicationRole"
                    }
                  },
                  "startTime": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time for the replication link."
                  },
                  "percentComplete": {
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32",
                    "description": "The percentage of seeding complete for the replication link."
                  },
                  "replicationState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The replication state for the replication link.",
                    "enum": [
                      "PENDING",
                      "SEEDING",
                      "CATCH_UP",
                      "SUSPENDED"
                    ],
                    "x-ms-enum": {
                      "name": "ReplicationState",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "description": "Represents a Sql pool replication link."
          },
          "description": "The list of Sql pool replication links housed in the Sql pool."
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Represents the response to a List Sql pool replication link request."
    },
    "MaintenanceWindowOptionsProperties": {
      "description": "Maintenance window options properties.",
      "type": "object",
      "properties": {
        "isEnabled": {
          "description": "Whether maintenance windows are enabled for the database.",
          "type": "boolean"
        },
        "maintenanceWindowCycles": {
          "description": "Available maintenance cycles e.g. {Saturday, 0, 48*60}, {Wednesday, 0, 24*60}.",
          "type": "array",
          "items": {
            "description": "Maintenance window time range.",
            "type": "object",
            "properties": {
              "dayOfWeek": {
                "description": "Day of maintenance window.",
                "enum": [
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DayOfWeek",
                  "modelAsString": true
                }
              },
              "startTime": {
                "description": "Start time minutes offset from 12am.",
                "type": "string"
              },
              "duration": {
                "description": "Duration of maintenance window in minutes.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "minDurationInMinutes": {
          "format": "int32",
          "description": "Minimum duration of maintenance window.",
          "type": "integer"
        },
        "defaultDurationInMinutes": {
          "format": "int32",
          "description": "Default duration for maintenance window.",
          "type": "integer"
        },
        "minCycles": {
          "format": "int32",
          "description": "Minimum number of maintenance windows cycles to be set on the database.",
          "type": "integer"
        },
        "timeGranularityInMinutes": {
          "format": "int32",
          "description": "Time granularity in minutes for maintenance windows.",
          "type": "integer"
        },
        "allowMultipleMaintenanceWindowsPerCycle": {
          "description": "Whether we allow multiple maintenance windows per cycle.",
          "type": "boolean"
        }
      }
    },
    "MaintenanceWindowOptions": {
      "description": "Maintenance window options.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "isEnabled": {
              "description": "Whether maintenance windows are enabled for the database.",
              "type": "boolean"
            },
            "maintenanceWindowCycles": {
              "description": "Available maintenance cycles e.g. {Saturday, 0, 48*60}, {Wednesday, 0, 24*60}.",
              "type": "array",
              "items": {
                "description": "Maintenance window time range.",
                "type": "object",
                "properties": {
                  "dayOfWeek": {
                    "description": "Day of maintenance window.",
                    "enum": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DayOfWeek",
                      "modelAsString": true
                    }
                  },
                  "startTime": {
                    "description": "Start time minutes offset from 12am.",
                    "type": "string"
                  },
                  "duration": {
                    "description": "Duration of maintenance window in minutes.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "minDurationInMinutes": {
              "format": "int32",
              "description": "Minimum duration of maintenance window.",
              "type": "integer"
            },
            "defaultDurationInMinutes": {
              "format": "int32",
              "description": "Default duration for maintenance window.",
              "type": "integer"
            },
            "minCycles": {
              "format": "int32",
              "description": "Minimum number of maintenance windows cycles to be set on the database.",
              "type": "integer"
            },
            "timeGranularityInMinutes": {
              "format": "int32",
              "description": "Time granularity in minutes for maintenance windows.",
              "type": "integer"
            },
            "allowMultipleMaintenanceWindowsPerCycle": {
              "description": "Whether we allow multiple maintenance windows per cycle.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "MaintenanceWindowsProperties": {
      "description": "Maintenance windows resource properties.",
      "type": "object",
      "properties": {
        "timeRanges": {
          "type": "array",
          "items": {
            "description": "Maintenance window time range.",
            "type": "object",
            "properties": {
              "dayOfWeek": {
                "description": "Day of maintenance window.",
                "enum": [
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DayOfWeek",
                  "modelAsString": true
                }
              },
              "startTime": {
                "description": "Start time minutes offset from 12am.",
                "type": "string"
              },
              "duration": {
                "description": "Duration of maintenance window in minutes.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MaintenanceWindowTimeRange": {
      "description": "Maintenance window time range.",
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "description": "Day of maintenance window.",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DayOfWeek",
            "modelAsString": true
          }
        },
        "startTime": {
          "description": "Start time minutes offset from 12am.",
          "type": "string"
        },
        "duration": {
          "description": "Duration of maintenance window in minutes.",
          "type": "string"
        }
      }
    },
    "MaintenanceWindows": {
      "description": "Maintenance windows.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "timeRanges": {
              "type": "array",
              "items": {
                "description": "Maintenance window time range.",
                "type": "object",
                "properties": {
                  "dayOfWeek": {
                    "description": "Day of maintenance window.",
                    "enum": [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "DayOfWeek",
                      "modelAsString": true
                    }
                  },
                  "startTime": {
                    "description": "Start time minutes offset from 12am.",
                    "type": "string"
                  },
                  "duration": {
                    "description": "Duration of maintenance window in minutes.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "TransparentDataEncryptionProperties": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the database transparent data encryption.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TransparentDataEncryptionStatus"
          }
        }
      },
      "description": "Represents the properties of a database transparent data encryption."
    },
    "TransparentDataEncryption": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "Resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Represents the properties of the resource.",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "The status of the database transparent data encryption.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "TransparentDataEncryptionStatus"
              }
            }
          }
        }
      },
      "description": "Represents a Sql pool transparent data encryption configuration."
    },
    "TransparentDataEncryptionListResult": {
      "description": "A list of transparent data encryption configurations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "Resource location."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Represents the properties of the resource.",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The status of the database transparent data encryption.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "TransparentDataEncryptionStatus"
                    }
                  }
                }
              }
            },
            "description": "Represents a Sql pool transparent data encryption configuration."
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlPoolBlobAuditingPolicyProperties": {
      "description": "Properties of a Sql pool blob auditing policy.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BlobAuditingPolicyState",
            "modelAsString": false
          }
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
          "type": "string"
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the audit logs in the storage account.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "auditActionsAndGroups": {
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          }
        },
        "storageAccountSubscriptionId": {
          "format": "uuid",
          "description": "Specifies the blob storage subscription Id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isStorageSecondaryKeyInUse": {
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
          "type": "boolean"
        },
        "isAzureMonitorTargetEnabled": {
          "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "type": "boolean",
          "default": false
        }
      }
    },
    "SqlPoolBlobAuditingPolicy": {
      "description": "A Sql pool blob auditing policy.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "kind": {
          "description": "Resource kind.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "state"
          ],
          "type": "object",
          "properties": {
            "state": {
              "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BlobAuditingPolicyState",
                "modelAsString": false
              }
            },
            "storageEndpoint": {
              "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
              "type": "string"
            },
            "storageAccountAccessKey": {
              "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "retentionDays": {
              "format": "int32",
              "description": "Specifies the number of days to keep in the audit logs in the storage account.",
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "auditActionsAndGroups": {
              "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
              "type": "array",
              "items": {
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              }
            },
            "storageAccountSubscriptionId": {
              "format": "uuid",
              "description": "Specifies the blob storage subscription Id.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isStorageSecondaryKeyInUse": {
              "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
              "type": "boolean"
            },
            "isAzureMonitorTargetEnabled": {
              "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    },
    "SqlPoolBlobAuditingPolicySqlPoolOperationListResult": {
      "description": "The response to a list Sql pool operations request",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A Sql pool operation.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "databaseName": {
                    "description": "The name of the Sql pool the operation is being performed on.",
                    "type": "string",
                    "readOnly": true
                  },
                  "operation": {
                    "description": "The name of operation.",
                    "type": "string",
                    "readOnly": true
                  },
                  "operationFriendlyName": {
                    "description": "The friendly name of operation.",
                    "type": "string",
                    "readOnly": true
                  },
                  "percentComplete": {
                    "format": "int32",
                    "description": "The percentage of the operation completed.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "serverName": {
                    "description": "The name of the server.",
                    "type": "string",
                    "readOnly": true
                  },
                  "startTime": {
                    "format": "date-time",
                    "description": "The operation start time.",
                    "type": "string",
                    "readOnly": true
                  },
                  "state": {
                    "description": "The operation state.",
                    "enum": [
                      "Pending",
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "CancelInProgress",
                      "Cancelled"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ManagementOperationState",
                      "modelAsString": true
                    }
                  },
                  "errorCode": {
                    "format": "int32",
                    "description": "The operation error code.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "errorDescription": {
                    "description": "The operation error description.",
                    "type": "string",
                    "readOnly": true
                  },
                  "errorSeverity": {
                    "format": "int32",
                    "description": "The operation error severity.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "isUserError": {
                    "description": "Whether or not the error is a user error.",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "estimatedCompletionTime": {
                    "format": "date-time",
                    "description": "The estimated completion time of the operation.",
                    "type": "string",
                    "readOnly": true
                  },
                  "description": {
                    "description": "The operation description.",
                    "type": "string",
                    "readOnly": true
                  },
                  "isCancellable": {
                    "description": "Whether the operation can be cancelled.",
                    "type": "boolean",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlPoolOperationProperties": {
      "description": "The properties of a Sql pool operation.",
      "type": "object",
      "properties": {
        "databaseName": {
          "description": "The name of the Sql pool the operation is being performed on.",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "The name of operation.",
          "type": "string",
          "readOnly": true
        },
        "operationFriendlyName": {
          "description": "The friendly name of operation.",
          "type": "string",
          "readOnly": true
        },
        "percentComplete": {
          "format": "int32",
          "description": "The percentage of the operation completed.",
          "type": "integer",
          "readOnly": true
        },
        "serverName": {
          "description": "The name of the server.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "format": "date-time",
          "description": "The operation start time.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "The operation state.",
          "enum": [
            "Pending",
            "InProgress",
            "Succeeded",
            "Failed",
            "CancelInProgress",
            "Cancelled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ManagementOperationState",
            "modelAsString": true
          }
        },
        "errorCode": {
          "format": "int32",
          "description": "The operation error code.",
          "type": "integer",
          "readOnly": true
        },
        "errorDescription": {
          "description": "The operation error description.",
          "type": "string",
          "readOnly": true
        },
        "errorSeverity": {
          "format": "int32",
          "description": "The operation error severity.",
          "type": "integer",
          "readOnly": true
        },
        "isUserError": {
          "description": "Whether or not the error is a user error.",
          "type": "boolean",
          "readOnly": true
        },
        "estimatedCompletionTime": {
          "format": "date-time",
          "description": "The estimated completion time of the operation.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The operation description.",
          "type": "string",
          "readOnly": true
        },
        "isCancellable": {
          "description": "Whether the operation can be cancelled.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "SqlPoolOperation": {
      "description": "A Sql pool operation.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "databaseName": {
              "description": "The name of the Sql pool the operation is being performed on.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "The name of operation.",
              "type": "string",
              "readOnly": true
            },
            "operationFriendlyName": {
              "description": "The friendly name of operation.",
              "type": "string",
              "readOnly": true
            },
            "percentComplete": {
              "format": "int32",
              "description": "The percentage of the operation completed.",
              "type": "integer",
              "readOnly": true
            },
            "serverName": {
              "description": "The name of the server.",
              "type": "string",
              "readOnly": true
            },
            "startTime": {
              "format": "date-time",
              "description": "The operation start time.",
              "type": "string",
              "readOnly": true
            },
            "state": {
              "description": "The operation state.",
              "enum": [
                "Pending",
                "InProgress",
                "Succeeded",
                "Failed",
                "CancelInProgress",
                "Cancelled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ManagementOperationState",
                "modelAsString": true
              }
            },
            "errorCode": {
              "format": "int32",
              "description": "The operation error code.",
              "type": "integer",
              "readOnly": true
            },
            "errorDescription": {
              "description": "The operation error description.",
              "type": "string",
              "readOnly": true
            },
            "errorSeverity": {
              "format": "int32",
              "description": "The operation error severity.",
              "type": "integer",
              "readOnly": true
            },
            "isUserError": {
              "description": "Whether or not the error is a user error.",
              "type": "boolean",
              "readOnly": true
            },
            "estimatedCompletionTime": {
              "format": "date-time",
              "description": "The estimated completion time of the operation.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "The operation description.",
              "type": "string",
              "readOnly": true
            },
            "isCancellable": {
              "description": "Whether the operation can be cancelled.",
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      }
    },
    "SqlPoolUsage": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the usage metric."
        },
        "resourceName": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "The usage metric display name."
        },
        "currentValue": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The current value of the usage metric."
        },
        "limit": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The current limit of the usage metric."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "The units of the usage metric."
        },
        "nextResetTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The next reset time for the usage metric (ISO8601 format)."
        }
      },
      "description": "The Sql pool usages."
    },
    "SqlPoolUsageListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the usage metric."
              },
              "resourceName": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource."
              },
              "displayName": {
                "readOnly": true,
                "type": "string",
                "description": "The usage metric display name."
              },
              "currentValue": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The current value of the usage metric."
              },
              "limit": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The current limit of the usage metric."
              },
              "unit": {
                "readOnly": true,
                "type": "string",
                "description": "The units of the usage metric."
              },
              "nextResetTime": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The next reset time for the usage metric (ISO8601 format)."
              }
            },
            "description": "The Sql pool usages."
          },
          "description": "The list of usages for the Sql pool.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ],
      "description": "The response to a list Sql pool usages request."
    },
    "SensitivityLabelProperties": {
      "description": "Properties of a sensitivity label.",
      "type": "object",
      "properties": {
        "schemaName": {
          "description": "The schema name.",
          "type": "string",
          "readOnly": true
        },
        "tableName": {
          "description": "The table name.",
          "type": "string",
          "readOnly": true
        },
        "columnName": {
          "description": "The column name.",
          "type": "string",
          "readOnly": true
        },
        "labelName": {
          "description": "The label name.",
          "type": "string"
        },
        "labelId": {
          "description": "The label ID.",
          "type": "string"
        },
        "informationType": {
          "description": "The information type.",
          "type": "string"
        },
        "informationTypeId": {
          "description": "The information type ID.",
          "type": "string"
        },
        "isDisabled": {
          "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
          "type": "boolean",
          "readOnly": true
        },
        "rank": {
          "enum": [
            "None",
            "Low",
            "Medium",
            "High",
            "Critical"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SensitivityLabelRank",
            "modelAsString": false
          }
        }
      }
    },
    "SensitivityLabel": {
      "description": "A sensitivity label.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "schemaName": {
              "description": "The schema name.",
              "type": "string",
              "readOnly": true
            },
            "tableName": {
              "description": "The table name.",
              "type": "string",
              "readOnly": true
            },
            "columnName": {
              "description": "The column name.",
              "type": "string",
              "readOnly": true
            },
            "labelName": {
              "description": "The label name.",
              "type": "string"
            },
            "labelId": {
              "description": "The label ID.",
              "type": "string"
            },
            "informationType": {
              "description": "The information type.",
              "type": "string"
            },
            "informationTypeId": {
              "description": "The information type ID.",
              "type": "string"
            },
            "isDisabled": {
              "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
              "type": "boolean",
              "readOnly": true
            },
            "rank": {
              "enum": [
                "None",
                "Low",
                "Medium",
                "High",
                "Critical"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SensitivityLabelRank",
                "modelAsString": false
              }
            }
          }
        },
        "managedBy": {
          "type": "string",
          "readOnly": true,
          "description": "managed by"
        }
      }
    },
    "SensitivityLabelListResult": {
      "description": "A list of sensitivity labels.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A sensitivity label.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "schemaName": {
                    "description": "The schema name.",
                    "type": "string",
                    "readOnly": true
                  },
                  "tableName": {
                    "description": "The table name.",
                    "type": "string",
                    "readOnly": true
                  },
                  "columnName": {
                    "description": "The column name.",
                    "type": "string",
                    "readOnly": true
                  },
                  "labelName": {
                    "description": "The label name.",
                    "type": "string"
                  },
                  "labelId": {
                    "description": "The label ID.",
                    "type": "string"
                  },
                  "informationType": {
                    "description": "The information type.",
                    "type": "string"
                  },
                  "informationTypeId": {
                    "description": "The information type ID.",
                    "type": "string"
                  },
                  "isDisabled": {
                    "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "rank": {
                    "enum": [
                      "None",
                      "Low",
                      "Medium",
                      "High",
                      "Critical"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "SensitivityLabelRank",
                      "modelAsString": false
                    }
                  }
                }
              },
              "managedBy": {
                "type": "string",
                "readOnly": true,
                "description": "managed by"
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlPoolSchema": {
      "description": "A Sql pool schema resource.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        }
      }
    },
    "SqlPoolSchemaListResult": {
      "description": "A list of Sql pool schemas.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A Sql pool schema resource.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlPoolTable": {
      "description": "A Sql pool table resource.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        }
      }
    },
    "SqlPoolTableListResult": {
      "description": "A list of Sql pool tables.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A Sql pool table resource.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlPoolColumnProperties": {
      "description": "Sql pool column properties.",
      "type": "object",
      "properties": {
        "columnType": {
          "description": "The column data type.",
          "enum": [
            "image",
            "text",
            "uniqueidentifier",
            "date",
            "time",
            "datetime2",
            "datetimeoffset",
            "tinyint",
            "smallint",
            "int",
            "smalldatetime",
            "real",
            "money",
            "datetime",
            "float",
            "sql_variant",
            "ntext",
            "bit",
            "decimal",
            "numeric",
            "smallmoney",
            "bigint",
            "hierarchyid",
            "geometry",
            "geography",
            "varbinary",
            "varchar",
            "binary",
            "char",
            "timestamp",
            "nvarchar",
            "nchar",
            "xml",
            "sysname"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ColumnDataType",
            "modelAsString": true
          }
        },
        "isComputed": {
          "type": "boolean",
          "description": "Indicates whether column value is computed or not",
          "readOnly": true
        }
      }
    },
    "SqlPoolColumn": {
      "description": "A Sql pool column resource.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "columnType": {
              "description": "The column data type.",
              "enum": [
                "image",
                "text",
                "uniqueidentifier",
                "date",
                "time",
                "datetime2",
                "datetimeoffset",
                "tinyint",
                "smallint",
                "int",
                "smalldatetime",
                "real",
                "money",
                "datetime",
                "float",
                "sql_variant",
                "ntext",
                "bit",
                "decimal",
                "numeric",
                "smallmoney",
                "bigint",
                "hierarchyid",
                "geometry",
                "geography",
                "varbinary",
                "varchar",
                "binary",
                "char",
                "timestamp",
                "nvarchar",
                "nchar",
                "xml",
                "sysname"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ColumnDataType",
                "modelAsString": true
              }
            },
            "isComputed": {
              "type": "boolean",
              "description": "Indicates whether column value is computed or not",
              "readOnly": true
            }
          }
        }
      }
    },
    "SqlPoolColumnListResult": {
      "description": "A list of Sql pool columns.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A Sql pool column resource.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "columnType": {
                    "description": "The column data type.",
                    "enum": [
                      "image",
                      "text",
                      "uniqueidentifier",
                      "date",
                      "time",
                      "datetime2",
                      "datetimeoffset",
                      "tinyint",
                      "smallint",
                      "int",
                      "smalldatetime",
                      "real",
                      "money",
                      "datetime",
                      "float",
                      "sql_variant",
                      "ntext",
                      "bit",
                      "decimal",
                      "numeric",
                      "smallmoney",
                      "bigint",
                      "hierarchyid",
                      "geometry",
                      "geography",
                      "varbinary",
                      "varchar",
                      "binary",
                      "char",
                      "timestamp",
                      "nvarchar",
                      "nchar",
                      "xml",
                      "sysname"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ColumnDataType",
                      "modelAsString": true
                    }
                  },
                  "isComputed": {
                    "type": "boolean",
                    "description": "Indicates whether column value is computed or not",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlPoolConnectionPolicyProperties": {
      "description": "Properties of a Sql pool connection policy.",
      "type": "object",
      "properties": {
        "securityEnabledAccess": {
          "description": "The state of security access.",
          "type": "string"
        },
        "proxyDnsName": {
          "description": "The fully qualified host name of the auditing proxy.",
          "type": "string"
        },
        "proxyPort": {
          "description": "The port number of the auditing proxy.",
          "type": "string"
        },
        "visibility": {
          "description": "The visibility of the auditing proxy.",
          "type": "string"
        },
        "useServerDefault": {
          "description": "Whether server default is enabled or disabled.",
          "type": "string"
        },
        "redirectionState": {
          "description": "The state of proxy redirection.",
          "type": "string"
        },
        "state": {
          "description": "The connection policy state.",
          "type": "string"
        }
      }
    },
    "SqlPoolConnectionPolicy": {
      "description": "A Sql pool connection policy.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "kind": {
          "description": "Resource kind.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "Resource location."
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "securityEnabledAccess": {
              "description": "The state of security access.",
              "type": "string"
            },
            "proxyDnsName": {
              "description": "The fully qualified host name of the auditing proxy.",
              "type": "string"
            },
            "proxyPort": {
              "description": "The port number of the auditing proxy.",
              "type": "string"
            },
            "visibility": {
              "description": "The visibility of the auditing proxy.",
              "type": "string"
            },
            "useServerDefault": {
              "description": "Whether server default is enabled or disabled.",
              "type": "string"
            },
            "redirectionState": {
              "description": "The state of proxy redirection.",
              "type": "string"
            },
            "state": {
              "description": "The connection policy state.",
              "type": "string"
            }
          }
        }
      }
    },
    "SqlPoolVulnerabilityAssessmentProperties": {
      "description": "Properties of a Sql pool Vulnerability Assessment.",
      "type": "object",
      "properties": {
        "storageContainerPath": {
          "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "storageContainerSasKey": {
          "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "recurringScans": {
          "description": "The recurring scans settings",
          "type": "object",
          "properties": {
            "isEnabled": {
              "description": "Recurring scans state.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            },
            "emailSubscriptionAdmins": {
              "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
              "default": true,
              "type": "boolean"
            },
            "emails": {
              "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "VulnerabilityAssessmentRecurringScansProperties": {
      "description": "Properties of a Vulnerability Assessment recurring scans.",
      "type": "object",
      "properties": {
        "isEnabled": {
          "description": "Recurring scans state.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "emailSubscriptionAdmins": {
          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
          "default": true,
          "type": "boolean"
        },
        "emails": {
          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SqlPoolVulnerabilityAssessment": {
      "description": "A Sql pool vulnerability assessment.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "storageContainerPath": {
              "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update",
                "read"
              ]
            },
            "storageContainerSasKey": {
              "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "storageAccountAccessKey": {
              "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "recurringScans": {
              "description": "The recurring scans settings",
              "type": "object",
              "properties": {
                "isEnabled": {
                  "description": "Recurring scans state.",
                  "type": "boolean",
                  "x-ms-mutability": [
                    "create",
                    "read",
                    "update"
                  ]
                },
                "emailSubscriptionAdmins": {
                  "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                  "default": true,
                  "type": "boolean"
                },
                "emails": {
                  "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "SqlPoolVulnerabilityAssessmentListResult": {
      "description": "A list of the Sql pool's vulnerability assessments.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A Sql pool vulnerability assessment.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "storageContainerPath": {
                    "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update",
                      "read"
                    ]
                  },
                  "storageContainerSasKey": {
                    "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "storageAccountAccessKey": {
                    "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "recurringScans": {
                    "description": "The recurring scans settings",
                    "type": "object",
                    "properties": {
                      "isEnabled": {
                        "description": "Recurring scans state.",
                        "type": "boolean",
                        "x-ms-mutability": [
                          "create",
                          "read",
                          "update"
                        ]
                      },
                      "emailSubscriptionAdmins": {
                        "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                        "default": true,
                        "type": "boolean"
                      },
                      "emails": {
                        "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VulnerabilityAssessmentScanRecordListResult": {
      "description": "A list of vulnerability assessment scan records.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A vulnerability assessment scan record.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "scanId": {
                    "description": "The scan ID.",
                    "type": "string",
                    "readOnly": true
                  },
                  "triggerType": {
                    "description": "The scan trigger type.",
                    "enum": [
                      "OnDemand",
                      "Recurring"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "VulnerabilityAssessmentScanTriggerType",
                      "modelAsString": true
                    }
                  },
                  "state": {
                    "description": "The scan status.",
                    "enum": [
                      "Passed",
                      "Failed",
                      "FailedToRun",
                      "InProgress"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "VulnerabilityAssessmentScanState",
                      "modelAsString": true
                    }
                  },
                  "startTime": {
                    "format": "date-time",
                    "description": "The scan start time (UTC).",
                    "type": "string",
                    "readOnly": true
                  },
                  "endTime": {
                    "format": "date-time",
                    "description": "The scan end time (UTC).",
                    "type": "string",
                    "readOnly": true
                  },
                  "errors": {
                    "description": "The scan errors.",
                    "type": "array",
                    "items": {
                      "description": "Properties of a vulnerability assessment scan error.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The error code.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "The error message.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "storageContainerPath": {
                    "description": "The scan results storage container path.",
                    "type": "string",
                    "readOnly": true
                  },
                  "numberOfFailedSecurityChecks": {
                    "format": "int32",
                    "description": "The number of failed security checks.",
                    "type": "integer",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VulnerabilityAssessmentScanRecord": {
      "description": "A vulnerability assessment scan record.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "scanId": {
              "description": "The scan ID.",
              "type": "string",
              "readOnly": true
            },
            "triggerType": {
              "description": "The scan trigger type.",
              "enum": [
                "OnDemand",
                "Recurring"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "VulnerabilityAssessmentScanTriggerType",
                "modelAsString": true
              }
            },
            "state": {
              "description": "The scan status.",
              "enum": [
                "Passed",
                "Failed",
                "FailedToRun",
                "InProgress"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "VulnerabilityAssessmentScanState",
                "modelAsString": true
              }
            },
            "startTime": {
              "format": "date-time",
              "description": "The scan start time (UTC).",
              "type": "string",
              "readOnly": true
            },
            "endTime": {
              "format": "date-time",
              "description": "The scan end time (UTC).",
              "type": "string",
              "readOnly": true
            },
            "errors": {
              "description": "The scan errors.",
              "type": "array",
              "items": {
                "description": "Properties of a vulnerability assessment scan error.",
                "type": "object",
                "properties": {
                  "code": {
                    "description": "The error code.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "The error message.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "storageContainerPath": {
              "description": "The scan results storage container path.",
              "type": "string",
              "readOnly": true
            },
            "numberOfFailedSecurityChecks": {
              "format": "int32",
              "description": "The number of failed security checks.",
              "type": "integer",
              "readOnly": true
            }
          }
        }
      }
    },
    "VulnerabilityAssessmentScanRecordProperties": {
      "description": "Properties of a vulnerability assessment scan record.",
      "type": "object",
      "properties": {
        "scanId": {
          "description": "The scan ID.",
          "type": "string",
          "readOnly": true
        },
        "triggerType": {
          "description": "The scan trigger type.",
          "enum": [
            "OnDemand",
            "Recurring"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "VulnerabilityAssessmentScanTriggerType",
            "modelAsString": true
          }
        },
        "state": {
          "description": "The scan status.",
          "enum": [
            "Passed",
            "Failed",
            "FailedToRun",
            "InProgress"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "VulnerabilityAssessmentScanState",
            "modelAsString": true
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "The scan start time (UTC).",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "description": "The scan end time (UTC).",
          "type": "string",
          "readOnly": true
        },
        "errors": {
          "description": "The scan errors.",
          "type": "array",
          "items": {
            "description": "Properties of a vulnerability assessment scan error.",
            "type": "object",
            "properties": {
              "code": {
                "description": "The error code.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "The error message.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "storageContainerPath": {
          "description": "The scan results storage container path.",
          "type": "string",
          "readOnly": true
        },
        "numberOfFailedSecurityChecks": {
          "format": "int32",
          "description": "The number of failed security checks.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "VulnerabilityAssessmentScanError": {
      "description": "Properties of a vulnerability assessment scan error.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error message.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SecurityAlertPolicyProperties": {
      "description": "Properties of a security alert policy.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
          "enum": [
            "New",
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SecurityAlertPolicyState",
            "modelAsString": false
          }
        },
        "disabledAlerts": {
          "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "emailAddresses": {
          "description": "Specifies an array of e-mail addresses to which the alert is sent.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "emailAccountAdmins": {
          "description": "Specifies that the alert is sent to the account administrators.",
          "type": "boolean"
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
          "type": "string"
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the Threat Detection audit storage account.",
          "type": "string"
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
          "type": "integer"
        },
        "creationTime": {
          "format": "date-time",
          "description": "Specifies the UTC creation time of the policy.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlPoolSecurityAlertPolicy": {
      "description": "A Sql pool security alert policy.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "state"
          ],
          "type": "object",
          "properties": {
            "state": {
              "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
              "enum": [
                "New",
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SecurityAlertPolicyState",
                "modelAsString": false
              }
            },
            "disabledAlerts": {
              "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "emailAddresses": {
              "description": "Specifies an array of e-mail addresses to which the alert is sent.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "emailAccountAdmins": {
              "description": "Specifies that the alert is sent to the account administrators.",
              "type": "boolean"
            },
            "storageEndpoint": {
              "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
              "type": "string"
            },
            "storageAccountAccessKey": {
              "description": "Specifies the identifier key of the Threat Detection audit storage account.",
              "type": "string"
            },
            "retentionDays": {
              "format": "int32",
              "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
              "type": "integer"
            },
            "creationTime": {
              "format": "date-time",
              "description": "Specifies the UTC creation time of the policy.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ListSqlPoolSecurityAlertPolicies": {
      "description": "A list of SQL pool security alert policies.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A Sql pool security alert policy.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "state"
                ],
                "type": "object",
                "properties": {
                  "state": {
                    "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
                    "enum": [
                      "New",
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "SecurityAlertPolicyState",
                      "modelAsString": false
                    }
                  },
                  "disabledAlerts": {
                    "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "emailAddresses": {
                    "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "emailAccountAdmins": {
                    "description": "Specifies that the alert is sent to the account administrators.",
                    "type": "boolean"
                  },
                  "storageEndpoint": {
                    "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                    "type": "string"
                  },
                  "storageAccountAccessKey": {
                    "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                    "type": "string"
                  },
                  "retentionDays": {
                    "format": "int32",
                    "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                    "type": "integer"
                  },
                  "creationTime": {
                    "format": "date-time",
                    "description": "Specifies the UTC creation time of the policy.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlPoolVulnerabilityAssessmentRuleBaselineProperties": {
      "description": "Properties of a Sql pool vulnerability assessment rule baseline.",
      "required": [
        "baselineResults"
      ],
      "type": "object",
      "properties": {
        "baselineResults": {
          "description": "The rule baseline result",
          "type": "array",
          "items": {
            "description": "Properties for an Sql pool vulnerability assessment rule baseline's result.",
            "required": [
              "result"
            ],
            "type": "object",
            "properties": {
              "result": {
                "description": "The rule baseline result",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SqlPoolVulnerabilityAssessmentRuleBaselineItem": {
      "description": "Properties for an Sql pool vulnerability assessment rule baseline's result.",
      "required": [
        "result"
      ],
      "type": "object",
      "properties": {
        "result": {
          "description": "The rule baseline result",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SqlPoolVulnerabilityAssessmentRuleBaseline": {
      "description": "A Sql pool vulnerability assessment rule baseline.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "baselineResults"
          ],
          "type": "object",
          "properties": {
            "baselineResults": {
              "description": "The rule baseline result",
              "type": "array",
              "items": {
                "description": "Properties for an Sql pool vulnerability assessment rule baseline's result.",
                "required": [
                  "result"
                ],
                "type": "object",
                "properties": {
                  "result": {
                    "description": "The rule baseline result",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "SqlPoolVulnerabilityAssessmentScanExportProperties": {
      "description": "Properties of the export operation's result.",
      "type": "object",
      "properties": {
        "exportedReportLocation": {
          "description": "Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlPoolVulnerabilityAssessmentScansExport": {
      "description": "A Sql pool Vulnerability Assessment scan export resource.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "exportedReportLocation": {
              "description": "Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "CreateSqlPoolRestorePointDefinition": {
      "description": "Contains the information necessary to perform a create Sql pool restore point operation.",
      "required": [
        "restorePointLabel"
      ],
      "type": "object",
      "properties": {
        "restorePointLabel": {
          "description": "The restore point label to apply",
          "type": "string"
        }
      }
    },
    "WorkloadGroupProperties": {
      "description": "Workload group definition. For more information look at sys.workload_management_workload_groups (DMV).",
      "required": [
        "minResourcePercent",
        "maxResourcePercent",
        "minResourcePercentPerRequest"
      ],
      "type": "object",
      "properties": {
        "minResourcePercent": {
          "format": "int32",
          "description": "The workload group minimum percentage resource.",
          "type": "integer"
        },
        "maxResourcePercent": {
          "format": "int32",
          "description": "The workload group cap percentage resource.",
          "type": "integer"
        },
        "minResourcePercentPerRequest": {
          "format": "double",
          "description": "The workload group request minimum grant percentage.",
          "type": "number"
        },
        "maxResourcePercentPerRequest": {
          "format": "double",
          "description": "The workload group request maximum grant percentage.",
          "type": "number"
        },
        "importance": {
          "description": "The workload group importance level.",
          "type": "string"
        },
        "queryExecutionTimeout": {
          "format": "int32",
          "description": "The workload group query execution timeout.",
          "type": "integer"
        }
      }
    },
    "WorkloadGroup": {
      "description": "Workload group operations for a sql pool",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "minResourcePercent",
            "maxResourcePercent",
            "minResourcePercentPerRequest"
          ],
          "type": "object",
          "properties": {
            "minResourcePercent": {
              "format": "int32",
              "description": "The workload group minimum percentage resource.",
              "type": "integer"
            },
            "maxResourcePercent": {
              "format": "int32",
              "description": "The workload group cap percentage resource.",
              "type": "integer"
            },
            "minResourcePercentPerRequest": {
              "format": "double",
              "description": "The workload group request minimum grant percentage.",
              "type": "number"
            },
            "maxResourcePercentPerRequest": {
              "format": "double",
              "description": "The workload group request maximum grant percentage.",
              "type": "number"
            },
            "importance": {
              "description": "The workload group importance level.",
              "type": "string"
            },
            "queryExecutionTimeout": {
              "format": "int32",
              "description": "The workload group query execution timeout.",
              "type": "integer"
            }
          }
        }
      }
    },
    "WorkloadGroupListResult": {
      "description": "A list of workload groups.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "Workload group operations for a sql pool",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "minResourcePercent",
                  "maxResourcePercent",
                  "minResourcePercentPerRequest"
                ],
                "type": "object",
                "properties": {
                  "minResourcePercent": {
                    "format": "int32",
                    "description": "The workload group minimum percentage resource.",
                    "type": "integer"
                  },
                  "maxResourcePercent": {
                    "format": "int32",
                    "description": "The workload group cap percentage resource.",
                    "type": "integer"
                  },
                  "minResourcePercentPerRequest": {
                    "format": "double",
                    "description": "The workload group request minimum grant percentage.",
                    "type": "number"
                  },
                  "maxResourcePercentPerRequest": {
                    "format": "double",
                    "description": "The workload group request maximum grant percentage.",
                    "type": "number"
                  },
                  "importance": {
                    "description": "The workload group importance level.",
                    "type": "string"
                  },
                  "queryExecutionTimeout": {
                    "format": "int32",
                    "description": "The workload group query execution timeout.",
                    "type": "integer"
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadClassifierProperties": {
      "description": "Workload classifier definition. For more information look at sys.workload_management_workload_classifiers (DMV).",
      "required": [
        "memberName"
      ],
      "type": "object",
      "properties": {
        "memberName": {
          "description": "The workload classifier member name.",
          "type": "string"
        },
        "label": {
          "description": "The workload classifier label.",
          "type": "string"
        },
        "context": {
          "description": "The workload classifier context.",
          "type": "string"
        },
        "startTime": {
          "description": "The workload classifier start time for classification.",
          "type": "string"
        },
        "endTime": {
          "description": "The workload classifier end time for classification.",
          "type": "string"
        },
        "importance": {
          "description": "The workload classifier importance.",
          "type": "string"
        }
      }
    },
    "WorkloadClassifier": {
      "description": "Workload classifier operations for a data warehouse",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "memberName"
          ],
          "type": "object",
          "properties": {
            "memberName": {
              "description": "The workload classifier member name.",
              "type": "string"
            },
            "label": {
              "description": "The workload classifier label.",
              "type": "string"
            },
            "context": {
              "description": "The workload classifier context.",
              "type": "string"
            },
            "startTime": {
              "description": "The workload classifier start time for classification.",
              "type": "string"
            },
            "endTime": {
              "description": "The workload classifier end time for classification.",
              "type": "string"
            },
            "importance": {
              "description": "The workload classifier importance.",
              "type": "string"
            }
          }
        }
      }
    },
    "WorkloadClassifierListResult": {
      "description": "A list of workload classifiers for a workload group.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "Workload classifier operations for a data warehouse",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "memberName"
                ],
                "type": "object",
                "properties": {
                  "memberName": {
                    "description": "The workload classifier member name.",
                    "type": "string"
                  },
                  "label": {
                    "description": "The workload classifier label.",
                    "type": "string"
                  },
                  "context": {
                    "description": "The workload classifier context.",
                    "type": "string"
                  },
                  "startTime": {
                    "description": "The workload classifier start time for classification.",
                    "type": "string"
                  },
                  "endTime": {
                    "description": "The workload classifier end time for classification.",
                    "type": "string"
                  },
                  "importance": {
                    "description": "The workload classifier importance.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataMaskingPolicyProperties": {
      "type": "object",
      "properties": {
        "dataMaskingState": {
          "type": "string",
          "description": "The state of the data masking policy.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "modelAsString": false,
            "name": "DataMaskingState"
          }
        },
        "exemptPrincipals": {
          "type": "string",
          "description": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries."
        },
        "applicationPrincipals": {
          "type": "string",
          "description": "The list of the application principals. This is a legacy parameter and is no longer used.",
          "readOnly": true
        },
        "maskingLevel": {
          "type": "string",
          "description": "The masking level. This is a legacy parameter and is no longer used.",
          "readOnly": true
        }
      },
      "required": [
        "dataMaskingState"
      ],
      "description": "The properties of a database data masking policy."
    },
    "DataMaskingPolicy": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of the data masking policy.",
          "type": "object",
          "properties": {
            "dataMaskingState": {
              "type": "string",
              "description": "The state of the data masking policy.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "modelAsString": false,
                "name": "DataMaskingState"
              }
            },
            "exemptPrincipals": {
              "type": "string",
              "description": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries."
            },
            "applicationPrincipals": {
              "type": "string",
              "description": "The list of the application principals. This is a legacy parameter and is no longer used.",
              "readOnly": true
            },
            "maskingLevel": {
              "type": "string",
              "description": "The masking level. This is a legacy parameter and is no longer used.",
              "readOnly": true
            }
          },
          "required": [
            "dataMaskingState"
          ]
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The location of the data masking policy."
        },
        "kind": {
          "type": "string",
          "readOnly": true,
          "description": "The kind of data masking policy. Metadata, used for Azure portal."
        },
        "managedBy": {
          "type": "string",
          "readOnly": true,
          "description": "Fully qualified resource ID of the sql pool"
        }
      }
    },
    "ExtendedSqlPoolBlobAuditingPolicy": {
      "description": "An extended Sql pool blob auditing policy.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "state"
          ],
          "type": "object",
          "properties": {
            "predicateExpression": {
              "description": "Specifies condition of where clause when creating an audit.",
              "type": "string"
            },
            "state": {
              "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BlobAuditingPolicyState",
                "modelAsString": false
              }
            },
            "storageEndpoint": {
              "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
              "type": "string"
            },
            "storageAccountAccessKey": {
              "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "retentionDays": {
              "format": "int32",
              "description": "Specifies the number of days to keep in the audit logs in the storage account.",
              "type": "integer"
            },
            "auditActionsAndGroups": {
              "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "storageAccountSubscriptionId": {
              "format": "uuid",
              "description": "Specifies the blob storage subscription Id.",
              "type": "string"
            },
            "isStorageSecondaryKeyInUse": {
              "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
              "type": "boolean"
            },
            "isAzureMonitorTargetEnabled": {
              "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
              "type": "boolean"
            },
            "queueDelayMs": {
              "format": "int32",
              "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
              "type": "integer"
            }
          }
        }
      }
    },
    "ExtendedSqlPoolBlobAuditingPolicyProperties": {
      "description": "Properties of an extended Sql pool blob auditing policy.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "predicateExpression": {
          "description": "Specifies condition of where clause when creating an audit.",
          "type": "string"
        },
        "state": {
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BlobAuditingPolicyState",
            "modelAsString": false
          }
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
          "type": "string"
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the audit logs in the storage account.",
          "type": "integer"
        },
        "auditActionsAndGroups": {
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "storageAccountSubscriptionId": {
          "format": "uuid",
          "description": "Specifies the blob storage subscription Id.",
          "type": "string"
        },
        "isStorageSecondaryKeyInUse": {
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
          "type": "boolean"
        },
        "isAzureMonitorTargetEnabled": {
          "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "type": "boolean"
        },
        "queueDelayMs": {
          "format": "int32",
          "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
          "type": "integer"
        }
      }
    },
    "ExtendedSqlPoolBlobAuditingPolicyListResult": {
      "description": "A list of sql pool extended auditing settings.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "An extended Sql pool blob auditing policy.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "state"
                ],
                "type": "object",
                "properties": {
                  "predicateExpression": {
                    "description": "Specifies condition of where clause when creating an audit.",
                    "type": "string"
                  },
                  "state": {
                    "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "BlobAuditingPolicyState",
                      "modelAsString": false
                    }
                  },
                  "storageEndpoint": {
                    "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                    "type": "string"
                  },
                  "storageAccountAccessKey": {
                    "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "retentionDays": {
                    "format": "int32",
                    "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                    "type": "integer"
                  },
                  "auditActionsAndGroups": {
                    "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "storageAccountSubscriptionId": {
                    "format": "uuid",
                    "description": "Specifies the blob storage subscription Id.",
                    "type": "string"
                  },
                  "isStorageSecondaryKeyInUse": {
                    "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                    "type": "boolean"
                  },
                  "isAzureMonitorTargetEnabled": {
                    "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                    "type": "boolean"
                  },
                  "queueDelayMs": {
                    "format": "int32",
                    "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                    "type": "integer"
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataMaskingRule": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of the resource.",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The rule Id.",
              "readOnly": true
            },
            "aliasName": {
              "type": "string",
              "description": "The alias name. This is a legacy parameter and is no longer used."
            },
            "ruleState": {
              "type": "string",
              "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "modelAsString": false,
                "name": "DataMaskingRuleState"
              }
            },
            "schemaName": {
              "type": "string",
              "description": "The schema name on which the data masking rule is applied."
            },
            "tableName": {
              "type": "string",
              "description": "The table name on which the data masking rule is applied."
            },
            "columnName": {
              "type": "string",
              "description": "The column name on which the data masking rule is applied."
            },
            "maskingFunction": {
              "type": "string",
              "description": "The masking function that is used for the data masking rule.",
              "enum": [
                "Default",
                "CCN",
                "Email",
                "Number",
                "SSN",
                "Text"
              ],
              "x-ms-enum": {
                "modelAsString": false,
                "name": "DataMaskingFunction"
              }
            },
            "numberFrom": {
              "type": "string",
              "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
            },
            "numberTo": {
              "type": "string",
              "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
            },
            "prefixSize": {
              "type": "string",
              "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored."
            },
            "suffixSize": {
              "type": "string",
              "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored."
            },
            "replacementString": {
              "type": "string",
              "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored."
            }
          },
          "required": [
            "maskingFunction",
            "schemaName",
            "tableName",
            "columnName"
          ]
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The location of the data masking rule."
        },
        "kind": {
          "type": "string",
          "readOnly": true,
          "description": "The kind of Data Masking Rule. Metadata, used for Azure portal."
        }
      },
      "description": "Represents a Sql pool data masking rule."
    },
    "DataMaskingRuleProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The rule Id.",
          "readOnly": true
        },
        "aliasName": {
          "type": "string",
          "description": "The alias name. This is a legacy parameter and is no longer used."
        },
        "ruleState": {
          "type": "string",
          "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "modelAsString": false,
            "name": "DataMaskingRuleState"
          }
        },
        "schemaName": {
          "type": "string",
          "description": "The schema name on which the data masking rule is applied."
        },
        "tableName": {
          "type": "string",
          "description": "The table name on which the data masking rule is applied."
        },
        "columnName": {
          "type": "string",
          "description": "The column name on which the data masking rule is applied."
        },
        "maskingFunction": {
          "type": "string",
          "description": "The masking function that is used for the data masking rule.",
          "enum": [
            "Default",
            "CCN",
            "Email",
            "Number",
            "SSN",
            "Text"
          ],
          "x-ms-enum": {
            "modelAsString": false,
            "name": "DataMaskingFunction"
          }
        },
        "numberFrom": {
          "type": "string",
          "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
        },
        "numberTo": {
          "type": "string",
          "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
        },
        "prefixSize": {
          "type": "string",
          "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored."
        },
        "suffixSize": {
          "type": "string",
          "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored."
        },
        "replacementString": {
          "type": "string",
          "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored."
        }
      },
      "required": [
        "maskingFunction",
        "schemaName",
        "tableName",
        "columnName"
      ],
      "description": "The properties of a Sql pool data masking rule."
    },
    "DataMaskingRuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of the resource.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The rule Id.",
                    "readOnly": true
                  },
                  "aliasName": {
                    "type": "string",
                    "description": "The alias name. This is a legacy parameter and is no longer used."
                  },
                  "ruleState": {
                    "type": "string",
                    "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "DataMaskingRuleState"
                    }
                  },
                  "schemaName": {
                    "type": "string",
                    "description": "The schema name on which the data masking rule is applied."
                  },
                  "tableName": {
                    "type": "string",
                    "description": "The table name on which the data masking rule is applied."
                  },
                  "columnName": {
                    "type": "string",
                    "description": "The column name on which the data masking rule is applied."
                  },
                  "maskingFunction": {
                    "type": "string",
                    "description": "The masking function that is used for the data masking rule.",
                    "enum": [
                      "Default",
                      "CCN",
                      "Email",
                      "Number",
                      "SSN",
                      "Text"
                    ],
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "DataMaskingFunction"
                    }
                  },
                  "numberFrom": {
                    "type": "string",
                    "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                  },
                  "numberTo": {
                    "type": "string",
                    "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
                  },
                  "prefixSize": {
                    "type": "string",
                    "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored."
                  },
                  "suffixSize": {
                    "type": "string",
                    "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored."
                  },
                  "replacementString": {
                    "type": "string",
                    "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored."
                  }
                },
                "required": [
                  "maskingFunction",
                  "schemaName",
                  "tableName",
                  "columnName"
                ]
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The location of the data masking rule."
              },
              "kind": {
                "type": "string",
                "readOnly": true,
                "description": "The kind of Data Masking Rule. Metadata, used for Azure portal."
              }
            },
            "description": "Represents a Sql pool data masking rule."
          },
          "description": "The list of Sql pool data masking rules."
        }
      },
      "description": "The response to a list data masking rules request."
    },
    "SqlPoolBlobAuditingPolicyListResult": {
      "description": "A list of Sql pool auditing settings.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A Sql pool blob auditing policy.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "kind": {
                "description": "Resource kind.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "state"
                ],
                "type": "object",
                "properties": {
                  "state": {
                    "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "BlobAuditingPolicyState",
                      "modelAsString": false
                    }
                  },
                  "storageEndpoint": {
                    "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
                    "type": "string"
                  },
                  "storageAccountAccessKey": {
                    "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "retentionDays": {
                    "format": "int32",
                    "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                    "type": "integer",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "auditActionsAndGroups": {
                    "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  },
                  "storageAccountSubscriptionId": {
                    "format": "uuid",
                    "description": "Specifies the blob storage subscription Id.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "isStorageSecondaryKeyInUse": {
                    "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                    "type": "boolean"
                  },
                  "isAzureMonitorTargetEnabled": {
                    "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SensitivityLabelUpdateProperties": {
      "description": "Properties of an operation executed on a sensitivity label.",
      "required": [
        "op",
        "schema",
        "table",
        "column"
      ],
      "type": "object",
      "properties": {
        "op": {
          "enum": [
            "set",
            "remove"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SensitivityLabelUpdateKind",
            "modelAsString": false
          }
        },
        "schema": {
          "description": "Schema name of the column to update.",
          "type": "string"
        },
        "table": {
          "description": "Table name of the column to update.",
          "type": "string"
        },
        "column": {
          "description": "Column name to update.",
          "type": "string"
        },
        "sensitivityLabel": {
          "description": "A sensitivity label.",
          "type": "object",
          "properties": {
            "id": {
              "readOnly": true,
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the resource"
            },
            "type": {
              "readOnly": true,
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
            },
            "properties": {
              "description": "Resource properties.",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "schemaName": {
                  "description": "The schema name.",
                  "type": "string",
                  "readOnly": true
                },
                "tableName": {
                  "description": "The table name.",
                  "type": "string",
                  "readOnly": true
                },
                "columnName": {
                  "description": "The column name.",
                  "type": "string",
                  "readOnly": true
                },
                "labelName": {
                  "description": "The label name.",
                  "type": "string"
                },
                "labelId": {
                  "description": "The label ID.",
                  "type": "string"
                },
                "informationType": {
                  "description": "The information type.",
                  "type": "string"
                },
                "informationTypeId": {
                  "description": "The information type ID.",
                  "type": "string"
                },
                "isDisabled": {
                  "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                  "type": "boolean",
                  "readOnly": true
                },
                "rank": {
                  "enum": [
                    "None",
                    "Low",
                    "Medium",
                    "High",
                    "Critical"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "SensitivityLabelRank",
                    "modelAsString": false
                  }
                }
              }
            },
            "managedBy": {
              "type": "string",
              "readOnly": true,
              "description": "managed by"
            }
          }
        }
      }
    },
    "SensitivityLabelUpdate": {
      "description": "A sensitivity label update operation.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "op",
            "schema",
            "table",
            "column"
          ],
          "type": "object",
          "properties": {
            "op": {
              "enum": [
                "set",
                "remove"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SensitivityLabelUpdateKind",
                "modelAsString": false
              }
            },
            "schema": {
              "description": "Schema name of the column to update.",
              "type": "string"
            },
            "table": {
              "description": "Table name of the column to update.",
              "type": "string"
            },
            "column": {
              "description": "Column name to update.",
              "type": "string"
            },
            "sensitivityLabel": {
              "description": "A sensitivity label.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "schemaName": {
                      "description": "The schema name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "tableName": {
                      "description": "The table name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "columnName": {
                      "description": "The column name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "labelName": {
                      "description": "The label name.",
                      "type": "string"
                    },
                    "labelId": {
                      "description": "The label ID.",
                      "type": "string"
                    },
                    "informationType": {
                      "description": "The information type.",
                      "type": "string"
                    },
                    "informationTypeId": {
                      "description": "The information type ID.",
                      "type": "string"
                    },
                    "isDisabled": {
                      "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "rank": {
                      "enum": [
                        "None",
                        "Low",
                        "Medium",
                        "High",
                        "Critical"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SensitivityLabelRank",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "managedBy": {
                  "type": "string",
                  "readOnly": true,
                  "description": "managed by"
                }
              }
            }
          }
        }
      }
    },
    "SensitivityLabelUpdateList": {
      "description": "A list of sensitivity label update operations.",
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "description": "A sensitivity label update operation.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "op",
                  "schema",
                  "table",
                  "column"
                ],
                "type": "object",
                "properties": {
                  "op": {
                    "enum": [
                      "set",
                      "remove"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "SensitivityLabelUpdateKind",
                      "modelAsString": false
                    }
                  },
                  "schema": {
                    "description": "Schema name of the column to update.",
                    "type": "string"
                  },
                  "table": {
                    "description": "Table name of the column to update.",
                    "type": "string"
                  },
                  "column": {
                    "description": "Column name to update.",
                    "type": "string"
                  },
                  "sensitivityLabel": {
                    "description": "A sensitivity label.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "schemaName": {
                            "description": "The schema name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "tableName": {
                            "description": "The table name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "columnName": {
                            "description": "The column name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "labelName": {
                            "description": "The label name.",
                            "type": "string"
                          },
                          "labelId": {
                            "description": "The label ID.",
                            "type": "string"
                          },
                          "informationType": {
                            "description": "The information type.",
                            "type": "string"
                          },
                          "informationTypeId": {
                            "description": "The information type ID.",
                            "type": "string"
                          },
                          "isDisabled": {
                            "description": "Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "rank": {
                            "enum": [
                              "None",
                              "Low",
                              "Medium",
                              "High",
                              "Critical"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SensitivityLabelRank",
                              "modelAsString": false
                            }
                          }
                        }
                      },
                      "managedBy": {
                        "type": "string",
                        "readOnly": true,
                        "description": "managed by"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "RecommendedSensitivityLabelUpdateProperties": {
      "description": "Properties of an operation executed on a recommended sensitivity label.",
      "required": [
        "op",
        "schema",
        "table",
        "column"
      ],
      "type": "object",
      "properties": {
        "op": {
          "enum": [
            "enable",
            "disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecommendedSensitivityLabelUpdateKind",
            "modelAsString": false
          }
        },
        "schema": {
          "description": "Schema name of the column to update.",
          "type": "string"
        },
        "table": {
          "description": "Table name of the column to update.",
          "type": "string"
        },
        "column": {
          "description": "Column name to update.",
          "type": "string"
        }
      }
    },
    "RecommendedSensitivityLabelUpdate": {
      "description": "A recommended sensitivity label update operation.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "op",
            "schema",
            "table",
            "column"
          ],
          "type": "object",
          "properties": {
            "op": {
              "enum": [
                "enable",
                "disable"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RecommendedSensitivityLabelUpdateKind",
                "modelAsString": false
              }
            },
            "schema": {
              "description": "Schema name of the column to update.",
              "type": "string"
            },
            "table": {
              "description": "Table name of the column to update.",
              "type": "string"
            },
            "column": {
              "description": "Column name to update.",
              "type": "string"
            }
          }
        }
      }
    },
    "RecommendedSensitivityLabelUpdateList": {
      "description": "A list of recommended sensitivity label update operations.",
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "description": "A recommended sensitivity label update operation.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "op",
                  "schema",
                  "table",
                  "column"
                ],
                "type": "object",
                "properties": {
                  "op": {
                    "enum": [
                      "enable",
                      "disable"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "RecommendedSensitivityLabelUpdateKind",
                      "modelAsString": false
                    }
                  },
                  "schema": {
                    "description": "Schema name of the column to update.",
                    "type": "string"
                  },
                  "table": {
                    "description": "Table name of the column to update.",
                    "type": "string"
                  },
                  "column": {
                    "description": "Column name to update.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ServerBlobAuditingPolicyProperties": {
      "description": "Properties of a server blob auditing policy.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BlobAuditingPolicyState",
            "modelAsString": false
          }
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
          "type": "string"
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the audit logs in the storage account.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "auditActionsAndGroups": {
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "storageAccountSubscriptionId": {
          "format": "uuid",
          "description": "Specifies the blob storage subscription Id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isStorageSecondaryKeyInUse": {
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
          "type": "boolean"
        },
        "isAzureMonitorTargetEnabled": {
          "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "type": "boolean"
        },
        "queueDelayMs": {
          "format": "int32",
          "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
          "type": "integer"
        },
        "isDevopsAuditEnabled": {
          "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "type": "boolean"
        }
      }
    },
    "ServerBlobAuditingPolicy": {
      "description": "A server blob auditing policy.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "state"
          ],
          "type": "object",
          "properties": {
            "state": {
              "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BlobAuditingPolicyState",
                "modelAsString": false
              }
            },
            "storageEndpoint": {
              "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
              "type": "string"
            },
            "storageAccountAccessKey": {
              "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "retentionDays": {
              "format": "int32",
              "description": "Specifies the number of days to keep in the audit logs in the storage account.",
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "auditActionsAndGroups": {
              "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "storageAccountSubscriptionId": {
              "format": "uuid",
              "description": "Specifies the blob storage subscription Id.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isStorageSecondaryKeyInUse": {
              "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
              "type": "boolean"
            },
            "isAzureMonitorTargetEnabled": {
              "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
              "type": "boolean"
            },
            "queueDelayMs": {
              "format": "int32",
              "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
              "type": "integer"
            },
            "isDevopsAuditEnabled": {
              "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
              "type": "boolean"
            }
          }
        }
      }
    },
    "ServerBlobAuditingPolicyListResult": {
      "description": "A list of server auditing settings.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A server blob auditing policy.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "state"
                ],
                "type": "object",
                "properties": {
                  "state": {
                    "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "BlobAuditingPolicyState",
                      "modelAsString": false
                    }
                  },
                  "storageEndpoint": {
                    "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                    "type": "string"
                  },
                  "storageAccountAccessKey": {
                    "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "retentionDays": {
                    "format": "int32",
                    "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                    "type": "integer",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "auditActionsAndGroups": {
                    "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "storageAccountSubscriptionId": {
                    "format": "uuid",
                    "description": "Specifies the blob storage subscription Id.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "isStorageSecondaryKeyInUse": {
                    "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                    "type": "boolean"
                  },
                  "isAzureMonitorTargetEnabled": {
                    "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                    "type": "boolean"
                  },
                  "queueDelayMs": {
                    "format": "int32",
                    "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                    "type": "integer"
                  },
                  "isDevopsAuditEnabled": {
                    "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ExtendedServerBlobAuditingPolicyProperties": {
      "description": "Properties of an extended server blob auditing policy.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "predicateExpression": {
          "description": "Specifies condition of where clause when creating an audit.",
          "type": "string"
        },
        "state": {
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BlobAuditingPolicyState",
            "modelAsString": false
          }
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
          "type": "string"
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the audit logs in the storage account.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "auditActionsAndGroups": {
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "storageAccountSubscriptionId": {
          "format": "uuid",
          "description": "Specifies the blob storage subscription Id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isStorageSecondaryKeyInUse": {
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
          "type": "boolean"
        },
        "isAzureMonitorTargetEnabled": {
          "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "type": "boolean"
        },
        "queueDelayMs": {
          "format": "int32",
          "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
          "type": "integer"
        },
        "isDevopsAuditEnabled": {
          "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "type": "boolean"
        }
      }
    },
    "ExtendedServerBlobAuditingPolicy": {
      "description": "An extended server blob auditing policy.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "state"
          ],
          "type": "object",
          "properties": {
            "predicateExpression": {
              "description": "Specifies condition of where clause when creating an audit.",
              "type": "string"
            },
            "state": {
              "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BlobAuditingPolicyState",
                "modelAsString": false
              }
            },
            "storageEndpoint": {
              "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
              "type": "string"
            },
            "storageAccountAccessKey": {
              "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "retentionDays": {
              "format": "int32",
              "description": "Specifies the number of days to keep in the audit logs in the storage account.",
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "auditActionsAndGroups": {
              "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "storageAccountSubscriptionId": {
              "format": "uuid",
              "description": "Specifies the blob storage subscription Id.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "isStorageSecondaryKeyInUse": {
              "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
              "type": "boolean"
            },
            "isAzureMonitorTargetEnabled": {
              "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
              "type": "boolean"
            },
            "queueDelayMs": {
              "format": "int32",
              "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
              "type": "integer"
            },
            "isDevopsAuditEnabled": {
              "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
              "type": "boolean"
            }
          }
        }
      }
    },
    "ExtendedServerBlobAuditingPolicyListResult": {
      "description": "A list of server extended auditing settings.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "An extended server blob auditing policy.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "state"
                ],
                "type": "object",
                "properties": {
                  "predicateExpression": {
                    "description": "Specifies condition of where clause when creating an audit.",
                    "type": "string"
                  },
                  "state": {
                    "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "BlobAuditingPolicyState",
                      "modelAsString": false
                    }
                  },
                  "storageEndpoint": {
                    "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
                    "type": "string"
                  },
                  "storageAccountAccessKey": {
                    "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "retentionDays": {
                    "format": "int32",
                    "description": "Specifies the number of days to keep in the audit logs in the storage account.",
                    "type": "integer",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "auditActionsAndGroups": {
                    "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "storageAccountSubscriptionId": {
                    "format": "uuid",
                    "description": "Specifies the blob storage subscription Id.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "isStorageSecondaryKeyInUse": {
                    "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
                    "type": "boolean"
                  },
                  "isAzureMonitorTargetEnabled": {
                    "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                    "type": "boolean"
                  },
                  "queueDelayMs": {
                    "format": "int32",
                    "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
                    "type": "integer"
                  },
                  "isDevopsAuditEnabled": {
                    "description": "Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\r\nIn order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServerSecurityAlertPolicyProperties": {
      "description": "Properties of a security alert policy.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server",
          "enum": [
            "New",
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SecurityAlertPolicyState",
            "modelAsString": false
          }
        },
        "disabledAlerts": {
          "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "emailAddresses": {
          "description": "Specifies an array of e-mail addresses to which the alert is sent.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "emailAccountAdmins": {
          "description": "Specifies that the alert is sent to the account administrators.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the Threat Detection audit storage account.",
          "type": "string"
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "creationTime": {
          "format": "date-time",
          "description": "Specifies the UTC creation time of the policy.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServerSecurityAlertPolicy": {
      "description": "Workspace managed Sql server security alert policy.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "state"
          ],
          "type": "object",
          "properties": {
            "state": {
              "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server",
              "enum": [
                "New",
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SecurityAlertPolicyState",
                "modelAsString": false
              }
            },
            "disabledAlerts": {
              "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "emailAddresses": {
              "description": "Specifies an array of e-mail addresses to which the alert is sent.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "emailAccountAdmins": {
              "description": "Specifies that the alert is sent to the account administrators.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "storageEndpoint": {
              "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "storageAccountAccessKey": {
              "description": "Specifies the identifier key of the Threat Detection audit storage account.",
              "type": "string"
            },
            "retentionDays": {
              "format": "int32",
              "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "creationTime": {
              "format": "date-time",
              "description": "Specifies the UTC creation time of the policy.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ServerSecurityAlertPolicyListResult": {
      "description": "A list of the workspace managed sql server's security alert policies.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "Workspace managed Sql server security alert policy.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "state"
                ],
                "type": "object",
                "properties": {
                  "state": {
                    "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server",
                    "enum": [
                      "New",
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "SecurityAlertPolicyState",
                      "modelAsString": false
                    }
                  },
                  "disabledAlerts": {
                    "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "emailAddresses": {
                    "description": "Specifies an array of e-mail addresses to which the alert is sent.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "emailAccountAdmins": {
                    "description": "Specifies that the alert is sent to the account administrators.",
                    "type": "boolean",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "storageEndpoint": {
                    "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "storageAccountAccessKey": {
                    "description": "Specifies the identifier key of the Threat Detection audit storage account.",
                    "type": "string"
                  },
                  "retentionDays": {
                    "format": "int32",
                    "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
                    "type": "integer",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "creationTime": {
                    "format": "date-time",
                    "description": "Specifies the UTC creation time of the policy.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServerVulnerabilityAssessmentProperties": {
      "description": "Properties of a server Vulnerability Assessment.",
      "type": "object",
      "required": [
        "storageContainerPath"
      ],
      "properties": {
        "storageContainerPath": {
          "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "storageContainerSasKey": {
          "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "recurringScans": {
          "description": "The recurring scans settings",
          "type": "object",
          "properties": {
            "isEnabled": {
              "description": "Recurring scans state.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            },
            "emailSubscriptionAdmins": {
              "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
              "default": true,
              "type": "boolean"
            },
            "emails": {
              "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ServerVulnerabilityAssessment": {
      "description": "A server vulnerability assessment.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "required": [
            "storageContainerPath"
          ],
          "properties": {
            "storageContainerPath": {
              "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "storageContainerSasKey": {
              "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "storageAccountAccessKey": {
              "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "recurringScans": {
              "description": "The recurring scans settings",
              "type": "object",
              "properties": {
                "isEnabled": {
                  "description": "Recurring scans state.",
                  "type": "boolean",
                  "x-ms-mutability": [
                    "create",
                    "read",
                    "update"
                  ]
                },
                "emailSubscriptionAdmins": {
                  "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                  "default": true,
                  "type": "boolean"
                },
                "emails": {
                  "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ServerVulnerabilityAssessmentListResult": {
      "description": "A list of the server's vulnerability assessments.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "A server vulnerability assessment.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "required": [
                  "storageContainerPath"
                ],
                "properties": {
                  "storageContainerPath": {
                    "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "storageContainerSasKey": {
                    "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "storageAccountAccessKey": {
                    "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "recurringScans": {
                    "description": "The recurring scans settings",
                    "type": "object",
                    "properties": {
                      "isEnabled": {
                        "description": "Recurring scans state.",
                        "type": "boolean",
                        "x-ms-mutability": [
                          "create",
                          "read",
                          "update"
                        ]
                      },
                      "emailSubscriptionAdmins": {
                        "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                        "default": true,
                        "type": "boolean"
                      },
                      "emails": {
                        "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EncryptionProtectorListResult": {
      "description": "A list of server encryption protectors.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "The server encryption protector.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "kind": {
                "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Resource location.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "serverKeyType"
                ],
                "type": "object",
                "properties": {
                  "subregion": {
                    "description": "Subregion of the encryption protector.",
                    "type": "string",
                    "readOnly": true
                  },
                  "serverKeyName": {
                    "description": "The name of the server key.",
                    "type": "string"
                  },
                  "serverKeyType": {
                    "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
                    "enum": [
                      "ServiceManaged",
                      "AzureKeyVault"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ServerKeyType",
                      "modelAsString": true
                    }
                  },
                  "uri": {
                    "description": "The URI of the server key.",
                    "type": "string",
                    "readOnly": true
                  },
                  "thumbprint": {
                    "description": "Thumbprint of the server key.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EncryptionProtectorProperties": {
      "description": "Properties for an encryption protector execution.",
      "required": [
        "serverKeyType"
      ],
      "type": "object",
      "properties": {
        "subregion": {
          "description": "Subregion of the encryption protector.",
          "type": "string",
          "readOnly": true
        },
        "serverKeyName": {
          "description": "The name of the server key.",
          "type": "string"
        },
        "serverKeyType": {
          "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
          "enum": [
            "ServiceManaged",
            "AzureKeyVault"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ServerKeyType",
            "modelAsString": true
          }
        },
        "uri": {
          "description": "The URI of the server key.",
          "type": "string",
          "readOnly": true
        },
        "thumbprint": {
          "description": "Thumbprint of the server key.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EncryptionProtector": {
      "description": "The server encryption protector.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "kind": {
          "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Resource location.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "serverKeyType"
          ],
          "type": "object",
          "properties": {
            "subregion": {
              "description": "Subregion of the encryption protector.",
              "type": "string",
              "readOnly": true
            },
            "serverKeyName": {
              "description": "The name of the server key.",
              "type": "string"
            },
            "serverKeyType": {
              "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
              "enum": [
                "ServiceManaged",
                "AzureKeyVault"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ServerKeyType",
                "modelAsString": true
              }
            },
            "uri": {
              "description": "The URI of the server key.",
              "type": "string",
              "readOnly": true
            },
            "thumbprint": {
              "description": "Thumbprint of the server key.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ServerUsage": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the server usage metric."
        },
        "resourceName": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "The metric display name."
        },
        "currentValue": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The current value of the metric."
        },
        "limit": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The current limit of the metric."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "The units of the metric."
        },
        "nextResetTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The next reset time for the metric (ISO8601 format)."
        }
      },
      "description": "Represents server metrics."
    },
    "ServerUsageListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Name of the server usage metric."
              },
              "resourceName": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource."
              },
              "displayName": {
                "readOnly": true,
                "type": "string",
                "description": "The metric display name."
              },
              "currentValue": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The current value of the metric."
              },
              "limit": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The current limit of the metric."
              },
              "unit": {
                "readOnly": true,
                "type": "string",
                "description": "The units of the metric."
              },
              "nextResetTime": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The next reset time for the metric (ISO8601 format)."
              }
            },
            "description": "Represents server metrics."
          },
          "description": "The list of server metrics for the server.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ],
      "description": "Represents the response to a list server metrics request."
    },
    "RecoverableSqlPoolProperties": {
      "type": "object",
      "properties": {
        "edition": {
          "readOnly": true,
          "type": "string",
          "description": "The edition of the database"
        },
        "serviceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "The service level objective name of the database"
        },
        "elasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "The elastic pool name of the database"
        },
        "lastAvailableBackupDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The last available backup date of the database (ISO8601 format)"
        }
      },
      "description": "The properties of a recoverable sql pool"
    },
    "RecoverableSqlPool": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "The properties of a recoverable sql pool",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "edition": {
              "readOnly": true,
              "type": "string",
              "description": "The edition of the database"
            },
            "serviceLevelObjective": {
              "readOnly": true,
              "type": "string",
              "description": "The service level objective name of the database"
            },
            "elasticPoolName": {
              "readOnly": true,
              "type": "string",
              "description": "The elastic pool name of the database"
            },
            "lastAvailableBackupDate": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "The last available backup date of the database (ISO8601 format)"
            }
          }
        }
      },
      "description": "A recoverable sql pool"
    },
    "RecoverableSqlPoolListResult": {
      "description": "The response to a list recoverable sql pools request",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of recoverable sql pool",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "The properties of a recoverable sql pool",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "edition": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The edition of the database"
                  },
                  "serviceLevelObjective": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The service level objective name of the database"
                  },
                  "elasticPoolName": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The elastic pool name of the database"
                  },
                  "lastAvailableBackupDate": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "The last available backup date of the database (ISO8601 format)"
                  }
                }
              }
            },
            "description": "A recoverable sql pool"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DedicatedSQLminimalTlsSettingsPatchInfo": {
      "type": "object",
      "title": "Dedicated SQL minimal tls settings patch info",
      "description": "Dedicated SQL minimal tls settings patch info",
      "properties": {
        "minimalTlsVersion": {
          "type": "string",
          "description": "minimal tls version"
        }
      }
    },
    "DedicatedSQLminimalTlsSettingsProperties": {
      "description": "Properties of a dedicated sql minimal tls settings.",
      "type": "object",
      "properties": {
        "minimalTlsVersion": {
          "type": "string",
          "description": "The minimal tls version of the sql server."
        }
      }
    },
    "DedicatedSQLminimalTlsSettings": {
      "description": "Dedicated Sql Minimal Tls Settings Info",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "description": "Resource location.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "minimalTlsVersion": {
              "type": "string",
              "description": "The minimal tls version of the sql server."
            }
          }
        }
      }
    },
    "DedicatedSQLminimalTlsSettingsListResult": {
      "description": "A list of the server's dedicated sql minimal tls settings.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "Dedicated Sql Minimal Tls Settings Info",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "location": {
                "description": "Resource location.",
                "type": "string",
                "readOnly": true
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "minimalTlsVersion": {
                    "type": "string",
                    "description": "The minimal tls version of the sql server."
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AadAdminProperties": {
      "description": "Workspace active directory administrator properties",
      "type": "object",
      "properties": {
        "tenantId": {
          "description": "Tenant ID of the workspace active directory administrator",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "login": {
          "description": "Login of the workspace active directory administrator",
          "type": "string"
        },
        "administratorType": {
          "description": "Workspace active directory administrator type",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "sid": {
          "description": "Object ID of the workspace active directory administrator",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "WorkspaceInfoListResult": {
      "description": "List of workspaces",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link to the next page of results",
          "type": "string"
        },
        "value": {
          "description": "List of workspaces",
          "type": "array",
          "items": {
            "description": "A workspace",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "Workspace resource properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "defaultDataLakeStorage": {
                    "description": "Workspace default data lake storage account details",
                    "type": "object",
                    "properties": {
                      "accountUrl": {
                        "description": "Account URL",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "filesystem": {
                        "description": "Filesystem name",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "resourceId": {
                        "description": "ARM resource Id of this storage account",
                        "type": "string"
                      },
                      "createManagedPrivateEndpoint": {
                        "description": "Create managed private endpoint to this storage account or not",
                        "type": "boolean",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    }
                  },
                  "sqlAdministratorLoginPassword": {
                    "description": "SQL administrator login password",
                    "type": "string"
                  },
                  "managedResourceGroupName": {
                    "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "provisioningState": {
                    "description": "Resource provisioning state",
                    "type": "string",
                    "readOnly": true
                  },
                  "sqlAdministratorLogin": {
                    "description": "Login for workspace SQL active directory administrator",
                    "type": "string"
                  },
                  "virtualNetworkProfile": {
                    "description": "Virtual Network profile",
                    "type": "object",
                    "properties": {
                      "computeSubnetId": {
                        "description": "Subnet ID used for computes in workspace",
                        "type": "string"
                      }
                    }
                  },
                  "connectivityEndpoints": {
                    "description": "Connectivity endpoints",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object",
                    "readOnly": true
                  },
                  "managedVirtualNetwork": {
                    "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
                    "type": "string"
                  },
                  "privateEndpointConnections": {
                    "description": "Private endpoint connections to the workspace",
                    "type": "array",
                    "items": {
                      "description": "A private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                        },
                        "properties": {
                          "description": "Private endpoint connection properties.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The private endpoint which the connection belongs to.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Resource id of the private endpoint.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              },
                              "x-ms-azure-resource": true
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Connection state of the private endpoint connection.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "The private link service connection status.",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "The private link service connection description.",
                                  "type": "string"
                                },
                                "actionsRequired": {
                                  "description": "The actions required for private link service connection.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the private endpoint connection.",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "encryption": {
                    "description": "The encryption details of the workspace",
                    "type": "object",
                    "properties": {
                      "doubleEncryptionEnabled": {
                        "description": "Double Encryption enabled",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "cmk": {
                        "description": "Customer Managed Key Details",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The customer managed key status on the workspace",
                            "type": "string",
                            "readOnly": true
                          },
                          "key": {
                            "description": "The key object of the workspace",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Workspace Key sub-resource name",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Workspace Key sub-resource key vault url",
                                "type": "string"
                              }
                            }
                          },
                          "kekIdentity": {
                            "description": "Key encryption key",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "description": "User assigned identity resource Id",
                                "type": "string"
                              },
                              "useSystemAssignedIdentity": {
                                "description": "Boolean specifying whether to use system assigned identity or not"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "workspaceUID": {
                    "description": "The workspace unique identifier",
                    "type": "string",
                    "readOnly": true,
                    "format": "uuid"
                  },
                  "extraProperties": {
                    "description": "Workspace level configs and feature flags",
                    "type": "object",
                    "readOnly": true
                  },
                  "managedVirtualNetworkSettings": {
                    "description": "Managed Virtual Network Settings",
                    "type": "object",
                    "properties": {
                      "preventDataExfiltration": {
                        "description": "Prevent Data Exfiltration",
                        "type": "boolean"
                      },
                      "linkedAccessCheckOnTargetResource": {
                        "description": "Linked Access Check On Target Resource",
                        "type": "boolean",
                        "x-ms-mutability": [
                          "create",
                          "read",
                          "update"
                        ]
                      },
                      "allowedAadTenantIdsForLinking": {
                        "description": "Allowed Aad Tenant Ids For Linking",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Tenant Id"
                        }
                      }
                    }
                  },
                  "workspaceRepositoryConfiguration": {
                    "description": "Git integration settings",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                        "type": "string"
                      },
                      "hostName": {
                        "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                        "type": "string"
                      },
                      "accountName": {
                        "description": "Account name",
                        "type": "string"
                      },
                      "projectName": {
                        "description": "VSTS project name",
                        "type": "string"
                      },
                      "repositoryName": {
                        "description": "Repository name",
                        "type": "string"
                      },
                      "collaborationBranch": {
                        "description": "Collaboration branch",
                        "type": "string"
                      },
                      "rootFolder": {
                        "description": "Root folder to use in the repository",
                        "type": "string"
                      },
                      "lastCommitId": {
                        "description": "The last commit ID",
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "The VSTS tenant ID",
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  },
                  "purviewConfiguration": {
                    "description": "Purview Configuration",
                    "type": "object",
                    "properties": {
                      "purviewResourceId": {
                        "description": "Purview Resource ID",
                        "type": "string"
                      }
                    }
                  },
                  "adlaResourceId": {
                    "description": "The ADLA resource ID.",
                    "type": "string",
                    "readOnly": true
                  },
                  "publicNetworkAccess": {
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "description": "Enable or Disable public network access to workspace",
                    "default": "Enabled",
                    "type": "string",
                    "x-ms-enum": {
                      "name": "WorkspacePublicNetworkAccess",
                      "modelAsString": true
                    }
                  },
                  "cspWorkspaceAdminProperties": {
                    "description": "Initial workspace AAD admin properties for a CSP subscription",
                    "type": "object",
                    "properties": {
                      "initialWorkspaceAdminObjectId": {
                        "description": "AAD object ID of initial workspace admin",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    }
                  },
                  "settings": {
                    "description": "Workspace settings",
                    "additionalProperties": {
                      "type": "object"
                    },
                    "type": "object",
                    "readOnly": true
                  },
                  "azureADOnlyAuthentication": {
                    "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
                    "type": "boolean",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "trustedServiceBypassEnabled": {
                    "description": "Is trustedServiceBypassEnabled for the workspace",
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "identity": {
                "description": "Identity of the workspace",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "The principal ID of the workspace managed identity",
                    "type": "string",
                    "readOnly": true
                  },
                  "tenantId": {
                    "description": "The tenant ID of the workspace managed identity",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                  },
                  "type": {
                    "description": "The type of managed identity for the workspace",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ResourceIdentityType",
                      "modelAsString": false
                    }
                  },
                  "userAssignedIdentities": {
                    "description": "The user assigned managed identities.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "User Assigned Managed Identity",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID.",
                          "readOnly": true,
                          "x-nullable": true
                        },
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID.",
                          "readOnly": true,
                          "x-nullable": true
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "DataLakeStorageAccountDetails": {
      "description": "Details of the data lake storage account associated with the workspace",
      "type": "object",
      "properties": {
        "accountUrl": {
          "description": "Account URL",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "filesystem": {
          "description": "Filesystem name",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "resourceId": {
          "description": "ARM resource Id of this storage account",
          "type": "string"
        },
        "createManagedPrivateEndpoint": {
          "description": "Create managed private endpoint to this storage account or not",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "EncryptionDetails": {
      "description": "Details of the encryption associated with the workspace",
      "type": "object",
      "properties": {
        "doubleEncryptionEnabled": {
          "description": "Double Encryption enabled",
          "type": "boolean",
          "readOnly": true
        },
        "cmk": {
          "description": "Customer Managed Key Details",
          "type": "object",
          "properties": {
            "status": {
              "description": "The customer managed key status on the workspace",
              "type": "string",
              "readOnly": true
            },
            "key": {
              "description": "The key object of the workspace",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Workspace Key sub-resource name",
                  "type": "string"
                },
                "keyVaultUrl": {
                  "description": "Workspace Key sub-resource key vault url",
                  "type": "string"
                }
              }
            },
            "kekIdentity": {
              "description": "Key encryption key",
              "type": "object",
              "properties": {
                "userAssignedIdentity": {
                  "description": "User assigned identity resource Id",
                  "type": "string"
                },
                "useSystemAssignedIdentity": {
                  "description": "Boolean specifying whether to use system assigned identity or not"
                }
              }
            }
          }
        }
      }
    },
    "CustomerManagedKeyDetails": {
      "description": "Details of the customer managed key associated with the workspace",
      "type": "object",
      "properties": {
        "status": {
          "description": "The customer managed key status on the workspace",
          "type": "string",
          "readOnly": true
        },
        "key": {
          "description": "The key object of the workspace",
          "type": "object",
          "properties": {
            "name": {
              "description": "Workspace Key sub-resource name",
              "type": "string"
            },
            "keyVaultUrl": {
              "description": "Workspace Key sub-resource key vault url",
              "type": "string"
            }
          }
        },
        "kekIdentity": {
          "description": "Key encryption key",
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "description": "User assigned identity resource Id",
              "type": "string"
            },
            "useSystemAssignedIdentity": {
              "description": "Boolean specifying whether to use system assigned identity or not"
            }
          }
        }
      }
    },
    "KekIdentityProperties": {
      "description": "Key encryption key properties",
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "description": "User assigned identity resource Id",
          "type": "string"
        },
        "useSystemAssignedIdentity": {
          "description": "Boolean specifying whether to use system assigned identity or not"
        }
      }
    },
    "WorkspaceKeyDetails": {
      "description": "Details of the customer managed key associated with the workspace",
      "type": "object",
      "properties": {
        "name": {
          "description": "Workspace Key sub-resource name",
          "type": "string"
        },
        "keyVaultUrl": {
          "description": "Workspace Key sub-resource key vault url",
          "type": "string"
        }
      }
    },
    "ManagedIdentity": {
      "description": "The workspace managed identity",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "The principal ID of the workspace managed identity",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "The tenant ID of the workspace managed identity",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "type": {
          "description": "The type of managed identity for the workspace",
          "enum": [
            "None",
            "SystemAssigned",
            "SystemAssigned,UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "description": "The user assigned managed identities.",
          "type": "object",
          "additionalProperties": {
            "description": "User Assigned Managed Identity",
            "properties": {
              "clientId": {
                "type": "string",
                "format": "uuid",
                "description": "The client ID.",
                "readOnly": true,
                "x-nullable": true
              },
              "principalId": {
                "type": "string",
                "format": "uuid",
                "description": "The principal ID.",
                "readOnly": true,
                "x-nullable": true
              }
            },
            "type": "object"
          }
        }
      }
    },
    "UserAssignedManagedIdentities": {
      "type": "object",
      "description": "The User Assigned Managed Identities.",
      "additionalProperties": {
        "description": "User Assigned Managed Identity",
        "properties": {
          "clientId": {
            "type": "string",
            "format": "uuid",
            "description": "The client ID.",
            "readOnly": true,
            "x-nullable": true
          },
          "principalId": {
            "type": "string",
            "format": "uuid",
            "description": "The principal ID.",
            "readOnly": true,
            "x-nullable": true
          }
        },
        "type": "object"
      }
    },
    "UserAssignedManagedIdentity": {
      "description": "User Assigned Managed Identity",
      "properties": {
        "clientId": {
          "type": "string",
          "format": "uuid",
          "description": "The client ID.",
          "readOnly": true,
          "x-nullable": true
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID.",
          "readOnly": true,
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "VirtualNetworkProfile": {
      "description": "Virtual Network Profile",
      "type": "object",
      "properties": {
        "computeSubnetId": {
          "description": "Subnet ID used for computes in workspace",
          "type": "string"
        }
      }
    },
    "ManagedVirtualNetworkSettings": {
      "description": "Managed Virtual Network Settings",
      "type": "object",
      "properties": {
        "preventDataExfiltration": {
          "description": "Prevent Data Exfiltration",
          "type": "boolean"
        },
        "linkedAccessCheckOnTargetResource": {
          "description": "Linked Access Check On Target Resource",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "allowedAadTenantIdsForLinking": {
          "description": "Allowed Aad Tenant Ids For Linking",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Tenant Id"
          }
        }
      }
    },
    "WorkspaceRepositoryConfiguration": {
      "description": "Git integration settings",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
          "type": "string"
        },
        "hostName": {
          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
          "type": "string"
        },
        "accountName": {
          "description": "Account name",
          "type": "string"
        },
        "projectName": {
          "description": "VSTS project name",
          "type": "string"
        },
        "repositoryName": {
          "description": "Repository name",
          "type": "string"
        },
        "collaborationBranch": {
          "description": "Collaboration branch",
          "type": "string"
        },
        "rootFolder": {
          "description": "Root folder to use in the repository",
          "type": "string"
        },
        "lastCommitId": {
          "description": "The last commit ID",
          "type": "string"
        },
        "tenantId": {
          "description": "The VSTS tenant ID",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "PurviewConfiguration": {
      "description": "Purview Configuration",
      "type": "object",
      "properties": {
        "purviewResourceId": {
          "description": "Purview Resource ID",
          "type": "string"
        }
      }
    },
    "WorkspaceAadAdminInfo": {
      "description": "Workspace active directory administrator",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Workspace active directory administrator properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "tenantId": {
              "description": "Tenant ID of the workspace active directory administrator",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "login": {
              "description": "Login of the workspace active directory administrator",
              "type": "string"
            },
            "administratorType": {
              "description": "Workspace active directory administrator type",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sid": {
              "description": "Object ID of the workspace active directory administrator",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        }
      }
    },
    "CspWorkspaceAdminProperties": {
      "type": "object",
      "description": "Initial workspace AAD admin properties for a CSP subscription",
      "properties": {
        "initialWorkspaceAdminObjectId": {
          "description": "AAD object ID of initial workspace admin",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "Workspace": {
      "description": "A workspace",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Workspace resource properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "defaultDataLakeStorage": {
              "description": "Workspace default data lake storage account details",
              "type": "object",
              "properties": {
                "accountUrl": {
                  "description": "Account URL",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "filesystem": {
                  "description": "Filesystem name",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "resourceId": {
                  "description": "ARM resource Id of this storage account",
                  "type": "string"
                },
                "createManagedPrivateEndpoint": {
                  "description": "Create managed private endpoint to this storage account or not",
                  "type": "boolean",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                }
              }
            },
            "sqlAdministratorLoginPassword": {
              "description": "SQL administrator login password",
              "type": "string"
            },
            "managedResourceGroupName": {
              "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "description": "Resource provisioning state",
              "type": "string",
              "readOnly": true
            },
            "sqlAdministratorLogin": {
              "description": "Login for workspace SQL active directory administrator",
              "type": "string"
            },
            "virtualNetworkProfile": {
              "description": "Virtual Network profile",
              "type": "object",
              "properties": {
                "computeSubnetId": {
                  "description": "Subnet ID used for computes in workspace",
                  "type": "string"
                }
              }
            },
            "connectivityEndpoints": {
              "description": "Connectivity endpoints",
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "readOnly": true
            },
            "managedVirtualNetwork": {
              "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
              "type": "string"
            },
            "privateEndpointConnections": {
              "description": "Private endpoint connections to the workspace",
              "type": "array",
              "items": {
                "description": "A private endpoint connection",
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "description": "Private endpoint connection properties.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The private endpoint which the connection belongs to.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Resource id of the private endpoint.",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "x-ms-azure-resource": true
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Connection state of the private endpoint connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The private link service connection status.",
                            "type": "string"
                          },
                          "description": {
                            "description": "The private link service connection description.",
                            "type": "string"
                          },
                          "actionsRequired": {
                            "description": "The actions required for private link service connection.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the private endpoint connection.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            },
            "encryption": {
              "description": "The encryption details of the workspace",
              "type": "object",
              "properties": {
                "doubleEncryptionEnabled": {
                  "description": "Double Encryption enabled",
                  "type": "boolean",
                  "readOnly": true
                },
                "cmk": {
                  "description": "Customer Managed Key Details",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The customer managed key status on the workspace",
                      "type": "string",
                      "readOnly": true
                    },
                    "key": {
                      "description": "The key object of the workspace",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Workspace Key sub-resource name",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "Workspace Key sub-resource key vault url",
                          "type": "string"
                        }
                      }
                    },
                    "kekIdentity": {
                      "description": "Key encryption key",
                      "type": "object",
                      "properties": {
                        "userAssignedIdentity": {
                          "description": "User assigned identity resource Id",
                          "type": "string"
                        },
                        "useSystemAssignedIdentity": {
                          "description": "Boolean specifying whether to use system assigned identity or not"
                        }
                      }
                    }
                  }
                }
              }
            },
            "workspaceUID": {
              "description": "The workspace unique identifier",
              "type": "string",
              "readOnly": true,
              "format": "uuid"
            },
            "extraProperties": {
              "description": "Workspace level configs and feature flags",
              "type": "object",
              "readOnly": true
            },
            "managedVirtualNetworkSettings": {
              "description": "Managed Virtual Network Settings",
              "type": "object",
              "properties": {
                "preventDataExfiltration": {
                  "description": "Prevent Data Exfiltration",
                  "type": "boolean"
                },
                "linkedAccessCheckOnTargetResource": {
                  "description": "Linked Access Check On Target Resource",
                  "type": "boolean",
                  "x-ms-mutability": [
                    "create",
                    "read",
                    "update"
                  ]
                },
                "allowedAadTenantIdsForLinking": {
                  "description": "Allowed Aad Tenant Ids For Linking",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Tenant Id"
                  }
                }
              }
            },
            "workspaceRepositoryConfiguration": {
              "description": "Git integration settings",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                  "type": "string"
                },
                "hostName": {
                  "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                  "type": "string"
                },
                "accountName": {
                  "description": "Account name",
                  "type": "string"
                },
                "projectName": {
                  "description": "VSTS project name",
                  "type": "string"
                },
                "repositoryName": {
                  "description": "Repository name",
                  "type": "string"
                },
                "collaborationBranch": {
                  "description": "Collaboration branch",
                  "type": "string"
                },
                "rootFolder": {
                  "description": "Root folder to use in the repository",
                  "type": "string"
                },
                "lastCommitId": {
                  "description": "The last commit ID",
                  "type": "string"
                },
                "tenantId": {
                  "description": "The VSTS tenant ID",
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "purviewConfiguration": {
              "description": "Purview Configuration",
              "type": "object",
              "properties": {
                "purviewResourceId": {
                  "description": "Purview Resource ID",
                  "type": "string"
                }
              }
            },
            "adlaResourceId": {
              "description": "The ADLA resource ID.",
              "type": "string",
              "readOnly": true
            },
            "publicNetworkAccess": {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "description": "Enable or Disable public network access to workspace",
              "default": "Enabled",
              "type": "string",
              "x-ms-enum": {
                "name": "WorkspacePublicNetworkAccess",
                "modelAsString": true
              }
            },
            "cspWorkspaceAdminProperties": {
              "description": "Initial workspace AAD admin properties for a CSP subscription",
              "type": "object",
              "properties": {
                "initialWorkspaceAdminObjectId": {
                  "description": "AAD object ID of initial workspace admin",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                }
              }
            },
            "settings": {
              "description": "Workspace settings",
              "additionalProperties": {
                "type": "object"
              },
              "type": "object",
              "readOnly": true
            },
            "azureADOnlyAuthentication": {
              "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "trustedServiceBypassEnabled": {
              "description": "Is trustedServiceBypassEnabled for the workspace",
              "type": "boolean",
              "default": false
            }
          }
        },
        "identity": {
          "description": "Identity of the workspace",
          "type": "object",
          "properties": {
            "principalId": {
              "description": "The principal ID of the workspace managed identity",
              "type": "string",
              "readOnly": true
            },
            "tenantId": {
              "description": "The tenant ID of the workspace managed identity",
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "type": {
              "description": "The type of managed identity for the workspace",
              "enum": [
                "None",
                "SystemAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "description": "The user assigned managed identities.",
              "type": "object",
              "additionalProperties": {
                "description": "User Assigned Managed Identity",
                "properties": {
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID.",
                    "readOnly": true,
                    "x-nullable": true
                  },
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID.",
                    "readOnly": true,
                    "x-nullable": true
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "WorkspaceProperties": {
      "description": "Workspace properties",
      "type": "object",
      "properties": {
        "defaultDataLakeStorage": {
          "description": "Workspace default data lake storage account details",
          "type": "object",
          "properties": {
            "accountUrl": {
              "description": "Account URL",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "filesystem": {
              "description": "Filesystem name",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "resourceId": {
              "description": "ARM resource Id of this storage account",
              "type": "string"
            },
            "createManagedPrivateEndpoint": {
              "description": "Create managed private endpoint to this storage account or not",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        },
        "sqlAdministratorLoginPassword": {
          "description": "SQL administrator login password",
          "type": "string"
        },
        "managedResourceGroupName": {
          "description": "Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.'",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "provisioningState": {
          "description": "Resource provisioning state",
          "type": "string",
          "readOnly": true
        },
        "sqlAdministratorLogin": {
          "description": "Login for workspace SQL active directory administrator",
          "type": "string"
        },
        "virtualNetworkProfile": {
          "description": "Virtual Network profile",
          "type": "object",
          "properties": {
            "computeSubnetId": {
              "description": "Subnet ID used for computes in workspace",
              "type": "string"
            }
          }
        },
        "connectivityEndpoints": {
          "description": "Connectivity endpoints",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "readOnly": true
        },
        "managedVirtualNetwork": {
          "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
          "type": "string"
        },
        "privateEndpointConnections": {
          "description": "Private endpoint connections to the workspace",
          "type": "array",
          "items": {
            "description": "A private endpoint connection",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Private endpoint connection properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The private endpoint which the connection belongs to.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Resource id of the private endpoint.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "x-ms-azure-resource": true
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Connection state of the private endpoint connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "The private link service connection status.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The private link service connection description.",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "The actions required for private link service connection.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the private endpoint connection.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "encryption": {
          "description": "The encryption details of the workspace",
          "type": "object",
          "properties": {
            "doubleEncryptionEnabled": {
              "description": "Double Encryption enabled",
              "type": "boolean",
              "readOnly": true
            },
            "cmk": {
              "description": "Customer Managed Key Details",
              "type": "object",
              "properties": {
                "status": {
                  "description": "The customer managed key status on the workspace",
                  "type": "string",
                  "readOnly": true
                },
                "key": {
                  "description": "The key object of the workspace",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Workspace Key sub-resource name",
                      "type": "string"
                    },
                    "keyVaultUrl": {
                      "description": "Workspace Key sub-resource key vault url",
                      "type": "string"
                    }
                  }
                },
                "kekIdentity": {
                  "description": "Key encryption key",
                  "type": "object",
                  "properties": {
                    "userAssignedIdentity": {
                      "description": "User assigned identity resource Id",
                      "type": "string"
                    },
                    "useSystemAssignedIdentity": {
                      "description": "Boolean specifying whether to use system assigned identity or not"
                    }
                  }
                }
              }
            }
          }
        },
        "workspaceUID": {
          "description": "The workspace unique identifier",
          "type": "string",
          "readOnly": true,
          "format": "uuid"
        },
        "extraProperties": {
          "description": "Workspace level configs and feature flags",
          "type": "object",
          "readOnly": true
        },
        "managedVirtualNetworkSettings": {
          "description": "Managed Virtual Network Settings",
          "type": "object",
          "properties": {
            "preventDataExfiltration": {
              "description": "Prevent Data Exfiltration",
              "type": "boolean"
            },
            "linkedAccessCheckOnTargetResource": {
              "description": "Linked Access Check On Target Resource",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            },
            "allowedAadTenantIdsForLinking": {
              "description": "Allowed Aad Tenant Ids For Linking",
              "type": "array",
              "items": {
                "type": "string",
                "description": "Tenant Id"
              }
            }
          }
        },
        "workspaceRepositoryConfiguration": {
          "description": "Git integration settings",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
              "type": "string"
            },
            "hostName": {
              "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
              "type": "string"
            },
            "accountName": {
              "description": "Account name",
              "type": "string"
            },
            "projectName": {
              "description": "VSTS project name",
              "type": "string"
            },
            "repositoryName": {
              "description": "Repository name",
              "type": "string"
            },
            "collaborationBranch": {
              "description": "Collaboration branch",
              "type": "string"
            },
            "rootFolder": {
              "description": "Root folder to use in the repository",
              "type": "string"
            },
            "lastCommitId": {
              "description": "The last commit ID",
              "type": "string"
            },
            "tenantId": {
              "description": "The VSTS tenant ID",
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "purviewConfiguration": {
          "description": "Purview Configuration",
          "type": "object",
          "properties": {
            "purviewResourceId": {
              "description": "Purview Resource ID",
              "type": "string"
            }
          }
        },
        "adlaResourceId": {
          "description": "The ADLA resource ID.",
          "type": "string",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "description": "Enable or Disable public network access to workspace",
          "default": "Enabled",
          "type": "string",
          "x-ms-enum": {
            "name": "WorkspacePublicNetworkAccess",
            "modelAsString": true
          }
        },
        "cspWorkspaceAdminProperties": {
          "description": "Initial workspace AAD admin properties for a CSP subscription",
          "type": "object",
          "properties": {
            "initialWorkspaceAdminObjectId": {
              "description": "AAD object ID of initial workspace admin",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        },
        "settings": {
          "description": "Workspace settings",
          "additionalProperties": {
            "type": "object"
          },
          "type": "object",
          "readOnly": true
        },
        "azureADOnlyAuthentication": {
          "description": "Enable or Disable AzureADOnlyAuthentication on All Workspace subresource",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "trustedServiceBypassEnabled": {
          "description": "Is trustedServiceBypassEnabled for the workspace",
          "type": "boolean",
          "default": false
        }
      }
    },
    "WorkspacePatchInfo": {
      "description": "Workspace patch details",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "identity": {
          "description": "The identity of the workspace",
          "type": "object",
          "properties": {
            "principalId": {
              "description": "The principal ID of the workspace managed identity",
              "type": "string",
              "readOnly": true
            },
            "tenantId": {
              "description": "The tenant ID of the workspace managed identity",
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "type": {
              "description": "The type of managed identity for the workspace",
              "enum": [
                "None",
                "SystemAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "description": "The user assigned managed identities.",
              "type": "object",
              "additionalProperties": {
                "description": "User Assigned Managed Identity",
                "properties": {
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID.",
                    "readOnly": true,
                    "x-nullable": true
                  },
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID.",
                    "readOnly": true,
                    "x-nullable": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "properties": {
          "description": "Workspace patch properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "sqlAdministratorLoginPassword": {
              "description": "SQL administrator login password",
              "type": "string"
            },
            "managedVirtualNetworkSettings": {
              "description": "Managed Virtual Network Settings",
              "type": "object",
              "properties": {
                "preventDataExfiltration": {
                  "description": "Prevent Data Exfiltration",
                  "type": "boolean"
                },
                "linkedAccessCheckOnTargetResource": {
                  "description": "Linked Access Check On Target Resource",
                  "type": "boolean",
                  "x-ms-mutability": [
                    "create",
                    "read",
                    "update"
                  ]
                },
                "allowedAadTenantIdsForLinking": {
                  "description": "Allowed Aad Tenant Ids For Linking",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Tenant Id"
                  }
                }
              }
            },
            "workspaceRepositoryConfiguration": {
              "description": "Git integration settings",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
                  "type": "string"
                },
                "hostName": {
                  "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                  "type": "string"
                },
                "accountName": {
                  "description": "Account name",
                  "type": "string"
                },
                "projectName": {
                  "description": "VSTS project name",
                  "type": "string"
                },
                "repositoryName": {
                  "description": "Repository name",
                  "type": "string"
                },
                "collaborationBranch": {
                  "description": "Collaboration branch",
                  "type": "string"
                },
                "rootFolder": {
                  "description": "Root folder to use in the repository",
                  "type": "string"
                },
                "lastCommitId": {
                  "description": "The last commit ID",
                  "type": "string"
                },
                "tenantId": {
                  "description": "The VSTS tenant ID",
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "purviewConfiguration": {
              "description": "Purview Configuration",
              "type": "object",
              "properties": {
                "purviewResourceId": {
                  "description": "Purview Resource ID",
                  "type": "string"
                }
              }
            },
            "provisioningState": {
              "description": "Resource provisioning state",
              "type": "string",
              "readOnly": true
            },
            "encryption": {
              "description": "The encryption details of the workspace",
              "type": "object",
              "properties": {
                "doubleEncryptionEnabled": {
                  "description": "Double Encryption enabled",
                  "type": "boolean",
                  "readOnly": true
                },
                "cmk": {
                  "description": "Customer Managed Key Details",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The customer managed key status on the workspace",
                      "type": "string",
                      "readOnly": true
                    },
                    "key": {
                      "description": "The key object of the workspace",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Workspace Key sub-resource name",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "Workspace Key sub-resource key vault url",
                          "type": "string"
                        }
                      }
                    },
                    "kekIdentity": {
                      "description": "Key encryption key",
                      "type": "object",
                      "properties": {
                        "userAssignedIdentity": {
                          "description": "User assigned identity resource Id",
                          "type": "string"
                        },
                        "useSystemAssignedIdentity": {
                          "description": "Boolean specifying whether to use system assigned identity or not"
                        }
                      }
                    }
                  }
                }
              }
            },
            "publicNetworkAccess": {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "description": "Enable or Disable public network access to workspace",
              "type": "string",
              "x-ms-enum": {
                "name": "WorkspacePublicNetworkAccess",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "WorkspacePatchProperties": {
      "description": "Workspace patch properties",
      "type": "object",
      "properties": {
        "sqlAdministratorLoginPassword": {
          "description": "SQL administrator login password",
          "type": "string"
        },
        "managedVirtualNetworkSettings": {
          "description": "Managed Virtual Network Settings",
          "type": "object",
          "properties": {
            "preventDataExfiltration": {
              "description": "Prevent Data Exfiltration",
              "type": "boolean"
            },
            "linkedAccessCheckOnTargetResource": {
              "description": "Linked Access Check On Target Resource",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            },
            "allowedAadTenantIdsForLinking": {
              "description": "Allowed Aad Tenant Ids For Linking",
              "type": "array",
              "items": {
                "type": "string",
                "description": "Tenant Id"
              }
            }
          }
        },
        "workspaceRepositoryConfiguration": {
          "description": "Git integration settings",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration",
              "type": "string"
            },
            "hostName": {
              "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
              "type": "string"
            },
            "accountName": {
              "description": "Account name",
              "type": "string"
            },
            "projectName": {
              "description": "VSTS project name",
              "type": "string"
            },
            "repositoryName": {
              "description": "Repository name",
              "type": "string"
            },
            "collaborationBranch": {
              "description": "Collaboration branch",
              "type": "string"
            },
            "rootFolder": {
              "description": "Root folder to use in the repository",
              "type": "string"
            },
            "lastCommitId": {
              "description": "The last commit ID",
              "type": "string"
            },
            "tenantId": {
              "description": "The VSTS tenant ID",
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "purviewConfiguration": {
          "description": "Purview Configuration",
          "type": "object",
          "properties": {
            "purviewResourceId": {
              "description": "Purview Resource ID",
              "type": "string"
            }
          }
        },
        "provisioningState": {
          "description": "Resource provisioning state",
          "type": "string",
          "readOnly": true
        },
        "encryption": {
          "description": "The encryption details of the workspace",
          "type": "object",
          "properties": {
            "doubleEncryptionEnabled": {
              "description": "Double Encryption enabled",
              "type": "boolean",
              "readOnly": true
            },
            "cmk": {
              "description": "Customer Managed Key Details",
              "type": "object",
              "properties": {
                "status": {
                  "description": "The customer managed key status on the workspace",
                  "type": "string",
                  "readOnly": true
                },
                "key": {
                  "description": "The key object of the workspace",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Workspace Key sub-resource name",
                      "type": "string"
                    },
                    "keyVaultUrl": {
                      "description": "Workspace Key sub-resource key vault url",
                      "type": "string"
                    }
                  }
                },
                "kekIdentity": {
                  "description": "Key encryption key",
                  "type": "object",
                  "properties": {
                    "userAssignedIdentity": {
                      "description": "User assigned identity resource Id",
                      "type": "string"
                    },
                    "useSystemAssignedIdentity": {
                      "description": "Boolean specifying whether to use system assigned identity or not"
                    }
                  }
                }
              }
            }
          }
        },
        "publicNetworkAccess": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "description": "Enable or Disable public network access to workspace",
          "type": "string",
          "x-ms-enum": {
            "name": "WorkspacePublicNetworkAccess",
            "modelAsString": true
          }
        }
      }
    },
    "ManagedIdentitySqlControlSettingsModel": {
      "type": "object",
      "title": "Managed Identity Sql Control Settings",
      "description": "Sql Control Settings for workspace managed identity",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "type": "object",
          "title": "Managed Identity Sql Control Settings",
          "description": "Sql Control Settings for workspace managed identity",
          "properties": {
            "grantSqlControlToManagedIdentity": {
              "type": "object",
              "description": "Grant sql control to managed identity",
              "properties": {
                "desiredState": {
                  "description": "Desired state",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "DesiredState",
                    "modelAsString": false
                  }
                },
                "actualState": {
                  "description": "Actual state",
                  "type": "string",
                  "enum": [
                    "Enabling",
                    "Enabled",
                    "Disabling",
                    "Disabled",
                    "Unknown"
                  ],
                  "x-ms-enum": {
                    "name": "ActualState",
                    "modelAsString": false
                  },
                  "readOnly": true
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RestorableDroppedSqlPoolProperties": {
      "type": "object",
      "properties": {
        "databaseName": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database"
        },
        "edition": {
          "readOnly": true,
          "type": "string",
          "description": "The edition of the database"
        },
        "maxSizeBytes": {
          "readOnly": true,
          "type": "string",
          "description": "The max size in bytes of the database"
        },
        "serviceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "The service level objective name of the database"
        },
        "elasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "The elastic pool name of the database"
        },
        "creationDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the database (ISO8601 format)"
        },
        "deletionDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The deletion date of the database (ISO8601 format)"
        },
        "earliestRestoreDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The earliest restore date of the database (ISO8601 format)"
        }
      },
      "description": "The properties of a restorable dropped Sql pool"
    },
    "RestorableDroppedSqlPool": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "The properties of a restorable dropped Sql pool",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "databaseName": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the database"
            },
            "edition": {
              "readOnly": true,
              "type": "string",
              "description": "The edition of the database"
            },
            "maxSizeBytes": {
              "readOnly": true,
              "type": "string",
              "description": "The max size in bytes of the database"
            },
            "serviceLevelObjective": {
              "readOnly": true,
              "type": "string",
              "description": "The service level objective name of the database"
            },
            "elasticPoolName": {
              "readOnly": true,
              "type": "string",
              "description": "The elastic pool name of the database"
            },
            "creationDate": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the database (ISO8601 format)"
            },
            "deletionDate": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "The deletion date of the database (ISO8601 format)"
            },
            "earliestRestoreDate": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "The earliest restore date of the database (ISO8601 format)"
            }
          }
        }
      },
      "description": "A restorable dropped Sql pool"
    },
    "RestorableDroppedSqlPoolListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "The properties of a restorable dropped Sql pool",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "databaseName": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the database"
                  },
                  "edition": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The edition of the database"
                  },
                  "maxSizeBytes": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The max size in bytes of the database"
                  },
                  "serviceLevelObjective": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The service level objective name of the database"
                  },
                  "elasticPoolName": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The elastic pool name of the database"
                  },
                  "creationDate": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the database (ISO8601 format)"
                  },
                  "deletionDate": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "The deletion date of the database (ISO8601 format)"
                  },
                  "earliestRestoreDate": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "The earliest restore date of the database (ISO8601 format)"
                  }
                }
              }
            },
            "description": "A restorable dropped Sql pool"
          },
          "description": "A list of restorable dropped Sql pools"
        }
      },
      "required": [
        "value"
      ],
      "description": "The response to a list restorable dropped Sql pools request"
    }
  },
  "parameters": {
    "workspaceNameParameter": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace",
      "x-ms-parameter-location": "method"
    },
    "azureADOnlyAuthenticationNameParameter": {
      "type": "string",
      "in": "path",
      "name": "azureADOnlyAuthenticationName",
      "description": "name of the property",
      "required": true,
      "enum": [
        "default"
      ],
      "x-ms-enum": {
        "name": "AzureADOnlyAuthenticationName",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "ruleNameParameter": {
      "type": "string",
      "in": "path",
      "name": "ruleName",
      "description": "The IP firewall rule name",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "IntegrationRuntimeNameParameter": {
      "name": "integrationRuntimeName",
      "type": "string",
      "required": true,
      "in": "path",
      "description": "Integration runtime name",
      "x-ms-parameter-location": "method"
    },
    "keyNameParameter": {
      "name": "keyName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace key",
      "x-ms-parameter-location": "method"
    },
    "LibraryNameParameter": {
      "name": "libraryName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Library name",
      "x-ms-parameter-location": "method"
    },
    "privateLinkResourceNameParameter": {
      "name": "privateLinkResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private link resource",
      "x-ms-parameter-location": "method"
    },
    "privateLinkHubNameParameter": {
      "name": "privateLinkHubName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private link hub",
      "x-ms-parameter-location": "method"
    },
    "DataMaskingPolicyNameParameter": {
      "name": "dataMaskingPolicyName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "Default"
      ],
      "x-ms-enum": {
        "modelAsString": false,
        "name": "DataMaskingPolicyName"
      },
      "description": "The name of the data masking policy for which the masking rule applies.",
      "x-ms-parameter-location": "method"
    }
  }
}