{
  "swagger": "2.0",
  "info": {
    "title": "Azure kubernetesruntime",
    "version": "2024-03-01",
    "description": "Azure kubernetesruntime service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers": {
      "get": {
        "operationId": "BgpPeers_List",
        "tags": [
          "BgpPeers"
        ],
        "description": "List BgpPeer resources by parent",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a BgpPeer list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The BgpPeer items on this page",
                  "items": {
                    "type": "object",
                    "description": "A BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "myAsn": {
                            "type": "integer",
                            "format": "int32",
                            "description": "My ASN"
                          },
                          "peerAsn": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Peer ASN"
                          },
                          "peerAddress": {
                            "type": "string",
                            "description": "Peer Address"
                          },
                          "provisioningState": {
                            "description": "Resource provision state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Initial provisioning in progress"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Update in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Deletion in progress"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Change accepted for processing"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "myAsn",
                          "peerAsn",
                          "peerAddress"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{bgpPeerName}": {
      "get": {
        "operationId": "BgpPeers_Get",
        "tags": [
          "BgpPeers"
        ],
        "description": "Get a BgpPeer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "bgpPeerName",
            "in": "path",
            "description": "The name of the BgpPeer",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "myAsn": {
                      "type": "integer",
                      "format": "int32",
                      "description": "My ASN"
                    },
                    "peerAsn": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Peer ASN"
                    },
                    "peerAddress": {
                      "type": "string",
                      "description": "Peer Address"
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "myAsn",
                    "peerAsn",
                    "peerAddress"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "BgpPeers_CreateOrUpdate",
        "tags": [
          "BgpPeers"
        ],
        "description": "Create a BgpPeer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "bgpPeerName",
            "in": "path",
            "description": "The name of the BgpPeer",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "myAsn": {
                      "type": "integer",
                      "format": "int32",
                      "description": "My ASN"
                    },
                    "peerAsn": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Peer ASN"
                    },
                    "peerAddress": {
                      "type": "string",
                      "description": "Peer Address"
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "myAsn",
                    "peerAsn",
                    "peerAddress"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BgpPeer' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "myAsn": {
                      "type": "integer",
                      "format": "int32",
                      "description": "My ASN"
                    },
                    "peerAsn": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Peer ASN"
                    },
                    "peerAddress": {
                      "type": "string",
                      "description": "Peer Address"
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "myAsn",
                    "peerAsn",
                    "peerAddress"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'BgpPeer' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "myAsn": {
                      "type": "integer",
                      "format": "int32",
                      "description": "My ASN"
                    },
                    "peerAsn": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Peer ASN"
                    },
                    "peerAddress": {
                      "type": "string",
                      "description": "Peer Address"
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "myAsn",
                    "peerAsn",
                    "peerAddress"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "BgpPeers_Delete",
        "tags": [
          "BgpPeers"
        ],
        "description": "Delete a BgpPeer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "bgpPeerName",
            "in": "path",
            "description": "The name of the BgpPeer",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.KubernetesRuntime/loadBalancers": {
      "get": {
        "operationId": "LoadBalancers_List",
        "tags": [
          "LoadBalancers"
        ],
        "description": "List LoadBalancer resources by parent",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a LoadBalancer list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The LoadBalancer items on this page",
                  "items": {
                    "type": "object",
                    "description": "A LoadBalancer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "type": "array",
                            "description": "IP Range",
                            "items": {
                              "type": "string"
                            }
                          },
                          "serviceSelector": {
                            "type": "object",
                            "description": "A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label \"a=b\", then please specify {\"a\": \"b\"} in the field.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "advertiseMode": {
                            "description": "Advertise Mode",
                            "type": "string",
                            "enum": [
                              "ARP",
                              "BGP",
                              "Both"
                            ],
                            "x-ms-enum": {
                              "name": "AdvertiseMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ARP",
                                  "value": "ARP",
                                  "description": "ARP advertise mode"
                                },
                                {
                                  "name": "BGP",
                                  "value": "BGP",
                                  "description": "BGP advertise mode"
                                },
                                {
                                  "name": "Both",
                                  "value": "Both",
                                  "description": "both ARP and BGP advertise mode"
                                }
                              ]
                            }
                          },
                          "bgpPeers": {
                            "type": "array",
                            "description": "The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "Resource provision state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Initial provisioning in progress"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Update in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Deletion in progress"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Change accepted for processing"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "addresses",
                          "advertiseMode"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.KubernetesRuntime/loadBalancers/{loadBalancerName}": {
      "get": {
        "operationId": "LoadBalancers_Get",
        "tags": [
          "LoadBalancers"
        ],
        "description": "Get a LoadBalancer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "description": "The name of the LoadBalancer",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A LoadBalancer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "type": "array",
                      "description": "IP Range",
                      "items": {
                        "type": "string"
                      }
                    },
                    "serviceSelector": {
                      "type": "object",
                      "description": "A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label \"a=b\", then please specify {\"a\": \"b\"} in the field.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "advertiseMode": {
                      "description": "Advertise Mode",
                      "type": "string",
                      "enum": [
                        "ARP",
                        "BGP",
                        "Both"
                      ],
                      "x-ms-enum": {
                        "name": "AdvertiseMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ARP",
                            "value": "ARP",
                            "description": "ARP advertise mode"
                          },
                          {
                            "name": "BGP",
                            "value": "BGP",
                            "description": "BGP advertise mode"
                          },
                          {
                            "name": "Both",
                            "value": "Both",
                            "description": "both ARP and BGP advertise mode"
                          }
                        ]
                      }
                    },
                    "bgpPeers": {
                      "type": "array",
                      "description": "The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "addresses",
                    "advertiseMode"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "LoadBalancers_CreateOrUpdate",
        "tags": [
          "LoadBalancers"
        ],
        "description": "Create a LoadBalancer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "description": "The name of the LoadBalancer",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A LoadBalancer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "type": "array",
                      "description": "IP Range",
                      "items": {
                        "type": "string"
                      }
                    },
                    "serviceSelector": {
                      "type": "object",
                      "description": "A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label \"a=b\", then please specify {\"a\": \"b\"} in the field.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "advertiseMode": {
                      "description": "Advertise Mode",
                      "type": "string",
                      "enum": [
                        "ARP",
                        "BGP",
                        "Both"
                      ],
                      "x-ms-enum": {
                        "name": "AdvertiseMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ARP",
                            "value": "ARP",
                            "description": "ARP advertise mode"
                          },
                          {
                            "name": "BGP",
                            "value": "BGP",
                            "description": "BGP advertise mode"
                          },
                          {
                            "name": "Both",
                            "value": "Both",
                            "description": "both ARP and BGP advertise mode"
                          }
                        ]
                      }
                    },
                    "bgpPeers": {
                      "type": "array",
                      "description": "The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "addresses",
                    "advertiseMode"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'LoadBalancer' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A LoadBalancer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "type": "array",
                      "description": "IP Range",
                      "items": {
                        "type": "string"
                      }
                    },
                    "serviceSelector": {
                      "type": "object",
                      "description": "A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label \"a=b\", then please specify {\"a\": \"b\"} in the field.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "advertiseMode": {
                      "description": "Advertise Mode",
                      "type": "string",
                      "enum": [
                        "ARP",
                        "BGP",
                        "Both"
                      ],
                      "x-ms-enum": {
                        "name": "AdvertiseMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ARP",
                            "value": "ARP",
                            "description": "ARP advertise mode"
                          },
                          {
                            "name": "BGP",
                            "value": "BGP",
                            "description": "BGP advertise mode"
                          },
                          {
                            "name": "Both",
                            "value": "Both",
                            "description": "both ARP and BGP advertise mode"
                          }
                        ]
                      }
                    },
                    "bgpPeers": {
                      "type": "array",
                      "description": "The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "addresses",
                    "advertiseMode"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'LoadBalancer' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A LoadBalancer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "type": "array",
                      "description": "IP Range",
                      "items": {
                        "type": "string"
                      }
                    },
                    "serviceSelector": {
                      "type": "object",
                      "description": "A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label \"a=b\", then please specify {\"a\": \"b\"} in the field.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "advertiseMode": {
                      "description": "Advertise Mode",
                      "type": "string",
                      "enum": [
                        "ARP",
                        "BGP",
                        "Both"
                      ],
                      "x-ms-enum": {
                        "name": "AdvertiseMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ARP",
                            "value": "ARP",
                            "description": "ARP advertise mode"
                          },
                          {
                            "name": "BGP",
                            "value": "BGP",
                            "description": "BGP advertise mode"
                          },
                          {
                            "name": "Both",
                            "value": "Both",
                            "description": "both ARP and BGP advertise mode"
                          }
                        ]
                      }
                    },
                    "bgpPeers": {
                      "type": "array",
                      "description": "The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "addresses",
                    "advertiseMode"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "LoadBalancers_Delete",
        "tags": [
          "LoadBalancers"
        ],
        "description": "Delete a LoadBalancer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "description": "The name of the LoadBalancer",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.KubernetesRuntime/services": {
      "get": {
        "operationId": "Services_List",
        "tags": [
          "Services"
        ],
        "description": "List ServiceResource resources by parent",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ServiceResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ServiceResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Service resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "rpObjectId": {
                            "description": "The object id of the service principal of the RP provisioned in the tenant",
                            "readOnly": true,
                            "type": "string",
                            "format": "uuid"
                          },
                          "provisioningState": {
                            "description": "Resource provision state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Initial provisioning in progress"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Update in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Deletion in progress"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Change accepted for processing"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.KubernetesRuntime/services/{serviceName}": {
      "get": {
        "operationId": "Services_Get",
        "tags": [
          "Services"
        ],
        "description": "Get a ServiceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the the service",
            "required": true,
            "type": "string",
            "pattern": "^(storageclass|networking)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Service resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "rpObjectId": {
                      "description": "The object id of the service principal of the RP provisioned in the tenant",
                      "readOnly": true,
                      "type": "string",
                      "format": "uuid"
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Services_CreateOrUpdate",
        "tags": [
          "Services"
        ],
        "description": "Create a ServiceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the the service",
            "required": true,
            "type": "string",
            "pattern": "^(storageclass|networking)$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Service resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "rpObjectId": {
                      "description": "The object id of the service principal of the RP provisioned in the tenant",
                      "readOnly": true,
                      "type": "string",
                      "format": "uuid"
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Service resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "rpObjectId": {
                      "description": "The object id of the service principal of the RP provisioned in the tenant",
                      "readOnly": true,
                      "type": "string",
                      "format": "uuid"
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'ServiceResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Service resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "rpObjectId": {
                      "description": "The object id of the service principal of the RP provisioned in the tenant",
                      "readOnly": true,
                      "type": "string",
                      "format": "uuid"
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Services_Delete",
        "tags": [
          "Services"
        ],
        "description": "Delete a ServiceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the the service",
            "required": true,
            "type": "string",
            "pattern": "^(storageclass|networking)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses": {
      "get": {
        "operationId": "StorageClass_List",
        "tags": [
          "StorageClass"
        ],
        "description": "List StorageClassResource resources by parent",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a StorageClassResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The StorageClassResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "allowVolumeExpansion": {
                            "description": "Volume can be expanded or not",
                            "type": "string",
                            "enum": [
                              "Allow",
                              "Disallow"
                            ],
                            "x-ms-enum": {
                              "name": "VolumeExpansion",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Allow",
                                  "value": "Allow",
                                  "description": "Allow volume expansion"
                                },
                                {
                                  "name": "Disallow",
                                  "value": "Disallow",
                                  "description": "Disallow volume expansion"
                                }
                              ]
                            }
                          },
                          "mountOptions": {
                            "type": "array",
                            "description": "Additional mount options",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioner": {
                            "type": "string",
                            "description": "Provisioner name",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "volumeBindingMode": {
                            "description": "Binding mode of volumes: Immediate, WaitForFirstConsumer",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Immediate",
                              "WaitForFirstConsumer"
                            ],
                            "x-ms-enum": {
                              "name": "VolumeBindingMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Immediate",
                                  "value": "Immediate",
                                  "description": "Immediate binding mode"
                                },
                                {
                                  "name": "WaitForFirstConsumer",
                                  "value": "WaitForFirstConsumer",
                                  "description": "Wait for first consumer binding mode"
                                }
                              ]
                            }
                          },
                          "accessModes": {
                            "type": "array",
                            "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
                            "items": {
                              "type": "string",
                              "description": "Storage Class Access Mode",
                              "enum": [
                                "ReadWriteOnce",
                                "ReadWriteMany"
                              ],
                              "x-ms-enum": {
                                "name": "AccessMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ReadWriteOnce",
                                    "value": "ReadWriteOnce",
                                    "description": "Read Write Once (RWO) access mode"
                                  },
                                  {
                                    "name": "ReadWriteMany",
                                    "value": "ReadWriteMany",
                                    "description": "Read Write Many (RWX) access mode"
                                  }
                                ]
                              }
                            }
                          },
                          "dataResilience": {
                            "description": "Allow single data node failure",
                            "type": "string",
                            "enum": [
                              "NotDataResilient",
                              "DataResilient"
                            ],
                            "x-ms-enum": {
                              "name": "DataResilienceTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotDataResilient",
                                  "value": "NotDataResilient",
                                  "description": "Not data resilient"
                                },
                                {
                                  "name": "DataResilient",
                                  "value": "DataResilient",
                                  "description": "Data resilient"
                                }
                              ]
                            }
                          },
                          "failoverSpeed": {
                            "description": "Failover speed: NA, Slow, Fast",
                            "type": "string",
                            "enum": [
                              "NotAvailable",
                              "Slow",
                              "Fast",
                              "Super"
                            ],
                            "x-ms-enum": {
                              "name": "FailoverTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotAvailable",
                                  "value": "NotAvailable",
                                  "description": "Not available Failover Tier"
                                },
                                {
                                  "name": "Slow",
                                  "value": "Slow",
                                  "description": "Slow Failover Tier"
                                },
                                {
                                  "name": "Fast",
                                  "value": "Fast",
                                  "description": "Fast Failover Tier"
                                },
                                {
                                  "name": "Super",
                                  "value": "Super",
                                  "description": "Super Failover Tier"
                                }
                              ]
                            }
                          },
                          "limitations": {
                            "type": "array",
                            "description": "Limitations of the storage class",
                            "items": {
                              "type": "string"
                            }
                          },
                          "performance": {
                            "description": "Performance tier",
                            "type": "string",
                            "enum": [
                              "Undefined",
                              "Basic",
                              "Standard",
                              "Premium",
                              "Ultra"
                            ],
                            "x-ms-enum": {
                              "name": "PerformanceTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Undefined",
                                  "value": "Undefined",
                                  "description": "Undefined Performance Tier"
                                },
                                {
                                  "name": "Basic",
                                  "value": "Basic",
                                  "description": "Basic Performance Tier"
                                },
                                {
                                  "name": "Standard",
                                  "value": "Standard",
                                  "description": "Standard Performance Tier"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium",
                                  "description": "Premium Performance Tier"
                                },
                                {
                                  "name": "Ultra",
                                  "value": "Ultra",
                                  "description": "Ultra Performance Tier"
                                }
                              ]
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
                          },
                          "typeProperties": {
                            "description": "Properties of the StorageClass",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Type of the storage class.",
                                "type": "string",
                                "enum": [
                                  "Native",
                                  "RWX",
                                  "Blob",
                                  "NFS",
                                  "SMB"
                                ],
                                "x-ms-enum": {
                                  "name": "SCType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Native",
                                      "value": "Native",
                                      "description": "Native storage class"
                                    },
                                    {
                                      "name": "RWX",
                                      "value": "RWX",
                                      "description": "RWX storage class"
                                    },
                                    {
                                      "name": "Blob",
                                      "value": "Blob",
                                      "description": "Blob storage class"
                                    },
                                    {
                                      "name": "NFS",
                                      "value": "NFS",
                                      "description": "NFS storage class"
                                    },
                                    {
                                      "name": "SMB",
                                      "value": "SMB",
                                      "description": "SMB storage class"
                                    }
                                  ]
                                }
                              }
                            },
                            "discriminator": "type",
                            "required": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Resource provision state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Initial provisioning in progress"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Update in progress"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Deletion in progress"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Change accepted for processing"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "typeProperties"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{storageClassName}": {
      "get": {
        "operationId": "StorageClass_Get",
        "tags": [
          "StorageClass"
        ],
        "description": "Get a StorageClassResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "storageClassName",
            "in": "path",
            "description": "The name of the the storage class",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowVolumeExpansion": {
                      "description": "Volume can be expanded or not",
                      "type": "string",
                      "enum": [
                        "Allow",
                        "Disallow"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeExpansion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Allow",
                            "value": "Allow",
                            "description": "Allow volume expansion"
                          },
                          {
                            "name": "Disallow",
                            "value": "Disallow",
                            "description": "Disallow volume expansion"
                          }
                        ]
                      }
                    },
                    "mountOptions": {
                      "type": "array",
                      "description": "Additional mount options",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioner": {
                      "type": "string",
                      "description": "Provisioner name",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "volumeBindingMode": {
                      "description": "Binding mode of volumes: Immediate, WaitForFirstConsumer",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Immediate",
                        "WaitForFirstConsumer"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeBindingMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Immediate",
                            "value": "Immediate",
                            "description": "Immediate binding mode"
                          },
                          {
                            "name": "WaitForFirstConsumer",
                            "value": "WaitForFirstConsumer",
                            "description": "Wait for first consumer binding mode"
                          }
                        ]
                      }
                    },
                    "accessModes": {
                      "type": "array",
                      "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
                      "items": {
                        "type": "string",
                        "description": "Storage Class Access Mode",
                        "enum": [
                          "ReadWriteOnce",
                          "ReadWriteMany"
                        ],
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ReadWriteOnce",
                              "value": "ReadWriteOnce",
                              "description": "Read Write Once (RWO) access mode"
                            },
                            {
                              "name": "ReadWriteMany",
                              "value": "ReadWriteMany",
                              "description": "Read Write Many (RWX) access mode"
                            }
                          ]
                        }
                      }
                    },
                    "dataResilience": {
                      "description": "Allow single data node failure",
                      "type": "string",
                      "enum": [
                        "NotDataResilient",
                        "DataResilient"
                      ],
                      "x-ms-enum": {
                        "name": "DataResilienceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotDataResilient",
                            "value": "NotDataResilient",
                            "description": "Not data resilient"
                          },
                          {
                            "name": "DataResilient",
                            "value": "DataResilient",
                            "description": "Data resilient"
                          }
                        ]
                      }
                    },
                    "failoverSpeed": {
                      "description": "Failover speed: NA, Slow, Fast",
                      "type": "string",
                      "enum": [
                        "NotAvailable",
                        "Slow",
                        "Fast",
                        "Super"
                      ],
                      "x-ms-enum": {
                        "name": "FailoverTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotAvailable",
                            "value": "NotAvailable",
                            "description": "Not available Failover Tier"
                          },
                          {
                            "name": "Slow",
                            "value": "Slow",
                            "description": "Slow Failover Tier"
                          },
                          {
                            "name": "Fast",
                            "value": "Fast",
                            "description": "Fast Failover Tier"
                          },
                          {
                            "name": "Super",
                            "value": "Super",
                            "description": "Super Failover Tier"
                          }
                        ]
                      }
                    },
                    "limitations": {
                      "type": "array",
                      "description": "Limitations of the storage class",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "description": "Performance tier",
                      "type": "string",
                      "enum": [
                        "Undefined",
                        "Basic",
                        "Standard",
                        "Premium",
                        "Ultra"
                      ],
                      "x-ms-enum": {
                        "name": "PerformanceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Undefined",
                            "value": "Undefined",
                            "description": "Undefined Performance Tier"
                          },
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "Basic Performance Tier"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard Performance Tier"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "Premium Performance Tier"
                          },
                          {
                            "name": "Ultra",
                            "value": "Ultra",
                            "description": "Ultra Performance Tier"
                          }
                        ]
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
                    },
                    "typeProperties": {
                      "description": "Properties of the StorageClass",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of the storage class.",
                          "type": "string",
                          "enum": [
                            "Native",
                            "RWX",
                            "Blob",
                            "NFS",
                            "SMB"
                          ],
                          "x-ms-enum": {
                            "name": "SCType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Native",
                                "value": "Native",
                                "description": "Native storage class"
                              },
                              {
                                "name": "RWX",
                                "value": "RWX",
                                "description": "RWX storage class"
                              },
                              {
                                "name": "Blob",
                                "value": "Blob",
                                "description": "Blob storage class"
                              },
                              {
                                "name": "NFS",
                                "value": "NFS",
                                "description": "NFS storage class"
                              },
                              {
                                "name": "SMB",
                                "value": "SMB",
                                "description": "SMB storage class"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "typeProperties"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "StorageClass_CreateOrUpdate",
        "tags": [
          "StorageClass"
        ],
        "description": "Create a StorageClassResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "storageClassName",
            "in": "path",
            "description": "The name of the the storage class",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowVolumeExpansion": {
                      "description": "Volume can be expanded or not",
                      "type": "string",
                      "enum": [
                        "Allow",
                        "Disallow"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeExpansion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Allow",
                            "value": "Allow",
                            "description": "Allow volume expansion"
                          },
                          {
                            "name": "Disallow",
                            "value": "Disallow",
                            "description": "Disallow volume expansion"
                          }
                        ]
                      }
                    },
                    "mountOptions": {
                      "type": "array",
                      "description": "Additional mount options",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioner": {
                      "type": "string",
                      "description": "Provisioner name",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "volumeBindingMode": {
                      "description": "Binding mode of volumes: Immediate, WaitForFirstConsumer",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Immediate",
                        "WaitForFirstConsumer"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeBindingMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Immediate",
                            "value": "Immediate",
                            "description": "Immediate binding mode"
                          },
                          {
                            "name": "WaitForFirstConsumer",
                            "value": "WaitForFirstConsumer",
                            "description": "Wait for first consumer binding mode"
                          }
                        ]
                      }
                    },
                    "accessModes": {
                      "type": "array",
                      "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
                      "items": {
                        "type": "string",
                        "description": "Storage Class Access Mode",
                        "enum": [
                          "ReadWriteOnce",
                          "ReadWriteMany"
                        ],
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ReadWriteOnce",
                              "value": "ReadWriteOnce",
                              "description": "Read Write Once (RWO) access mode"
                            },
                            {
                              "name": "ReadWriteMany",
                              "value": "ReadWriteMany",
                              "description": "Read Write Many (RWX) access mode"
                            }
                          ]
                        }
                      }
                    },
                    "dataResilience": {
                      "description": "Allow single data node failure",
                      "type": "string",
                      "enum": [
                        "NotDataResilient",
                        "DataResilient"
                      ],
                      "x-ms-enum": {
                        "name": "DataResilienceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotDataResilient",
                            "value": "NotDataResilient",
                            "description": "Not data resilient"
                          },
                          {
                            "name": "DataResilient",
                            "value": "DataResilient",
                            "description": "Data resilient"
                          }
                        ]
                      }
                    },
                    "failoverSpeed": {
                      "description": "Failover speed: NA, Slow, Fast",
                      "type": "string",
                      "enum": [
                        "NotAvailable",
                        "Slow",
                        "Fast",
                        "Super"
                      ],
                      "x-ms-enum": {
                        "name": "FailoverTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotAvailable",
                            "value": "NotAvailable",
                            "description": "Not available Failover Tier"
                          },
                          {
                            "name": "Slow",
                            "value": "Slow",
                            "description": "Slow Failover Tier"
                          },
                          {
                            "name": "Fast",
                            "value": "Fast",
                            "description": "Fast Failover Tier"
                          },
                          {
                            "name": "Super",
                            "value": "Super",
                            "description": "Super Failover Tier"
                          }
                        ]
                      }
                    },
                    "limitations": {
                      "type": "array",
                      "description": "Limitations of the storage class",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "description": "Performance tier",
                      "type": "string",
                      "enum": [
                        "Undefined",
                        "Basic",
                        "Standard",
                        "Premium",
                        "Ultra"
                      ],
                      "x-ms-enum": {
                        "name": "PerformanceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Undefined",
                            "value": "Undefined",
                            "description": "Undefined Performance Tier"
                          },
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "Basic Performance Tier"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard Performance Tier"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "Premium Performance Tier"
                          },
                          {
                            "name": "Ultra",
                            "value": "Ultra",
                            "description": "Ultra Performance Tier"
                          }
                        ]
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
                    },
                    "typeProperties": {
                      "description": "Properties of the StorageClass",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of the storage class.",
                          "type": "string",
                          "enum": [
                            "Native",
                            "RWX",
                            "Blob",
                            "NFS",
                            "SMB"
                          ],
                          "x-ms-enum": {
                            "name": "SCType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Native",
                                "value": "Native",
                                "description": "Native storage class"
                              },
                              {
                                "name": "RWX",
                                "value": "RWX",
                                "description": "RWX storage class"
                              },
                              {
                                "name": "Blob",
                                "value": "Blob",
                                "description": "Blob storage class"
                              },
                              {
                                "name": "NFS",
                                "value": "NFS",
                                "description": "NFS storage class"
                              },
                              {
                                "name": "SMB",
                                "value": "SMB",
                                "description": "SMB storage class"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "typeProperties"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageClassResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowVolumeExpansion": {
                      "description": "Volume can be expanded or not",
                      "type": "string",
                      "enum": [
                        "Allow",
                        "Disallow"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeExpansion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Allow",
                            "value": "Allow",
                            "description": "Allow volume expansion"
                          },
                          {
                            "name": "Disallow",
                            "value": "Disallow",
                            "description": "Disallow volume expansion"
                          }
                        ]
                      }
                    },
                    "mountOptions": {
                      "type": "array",
                      "description": "Additional mount options",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioner": {
                      "type": "string",
                      "description": "Provisioner name",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "volumeBindingMode": {
                      "description": "Binding mode of volumes: Immediate, WaitForFirstConsumer",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Immediate",
                        "WaitForFirstConsumer"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeBindingMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Immediate",
                            "value": "Immediate",
                            "description": "Immediate binding mode"
                          },
                          {
                            "name": "WaitForFirstConsumer",
                            "value": "WaitForFirstConsumer",
                            "description": "Wait for first consumer binding mode"
                          }
                        ]
                      }
                    },
                    "accessModes": {
                      "type": "array",
                      "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
                      "items": {
                        "type": "string",
                        "description": "Storage Class Access Mode",
                        "enum": [
                          "ReadWriteOnce",
                          "ReadWriteMany"
                        ],
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ReadWriteOnce",
                              "value": "ReadWriteOnce",
                              "description": "Read Write Once (RWO) access mode"
                            },
                            {
                              "name": "ReadWriteMany",
                              "value": "ReadWriteMany",
                              "description": "Read Write Many (RWX) access mode"
                            }
                          ]
                        }
                      }
                    },
                    "dataResilience": {
                      "description": "Allow single data node failure",
                      "type": "string",
                      "enum": [
                        "NotDataResilient",
                        "DataResilient"
                      ],
                      "x-ms-enum": {
                        "name": "DataResilienceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotDataResilient",
                            "value": "NotDataResilient",
                            "description": "Not data resilient"
                          },
                          {
                            "name": "DataResilient",
                            "value": "DataResilient",
                            "description": "Data resilient"
                          }
                        ]
                      }
                    },
                    "failoverSpeed": {
                      "description": "Failover speed: NA, Slow, Fast",
                      "type": "string",
                      "enum": [
                        "NotAvailable",
                        "Slow",
                        "Fast",
                        "Super"
                      ],
                      "x-ms-enum": {
                        "name": "FailoverTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotAvailable",
                            "value": "NotAvailable",
                            "description": "Not available Failover Tier"
                          },
                          {
                            "name": "Slow",
                            "value": "Slow",
                            "description": "Slow Failover Tier"
                          },
                          {
                            "name": "Fast",
                            "value": "Fast",
                            "description": "Fast Failover Tier"
                          },
                          {
                            "name": "Super",
                            "value": "Super",
                            "description": "Super Failover Tier"
                          }
                        ]
                      }
                    },
                    "limitations": {
                      "type": "array",
                      "description": "Limitations of the storage class",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "description": "Performance tier",
                      "type": "string",
                      "enum": [
                        "Undefined",
                        "Basic",
                        "Standard",
                        "Premium",
                        "Ultra"
                      ],
                      "x-ms-enum": {
                        "name": "PerformanceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Undefined",
                            "value": "Undefined",
                            "description": "Undefined Performance Tier"
                          },
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "Basic Performance Tier"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard Performance Tier"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "Premium Performance Tier"
                          },
                          {
                            "name": "Ultra",
                            "value": "Ultra",
                            "description": "Ultra Performance Tier"
                          }
                        ]
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
                    },
                    "typeProperties": {
                      "description": "Properties of the StorageClass",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of the storage class.",
                          "type": "string",
                          "enum": [
                            "Native",
                            "RWX",
                            "Blob",
                            "NFS",
                            "SMB"
                          ],
                          "x-ms-enum": {
                            "name": "SCType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Native",
                                "value": "Native",
                                "description": "Native storage class"
                              },
                              {
                                "name": "RWX",
                                "value": "RWX",
                                "description": "RWX storage class"
                              },
                              {
                                "name": "Blob",
                                "value": "Blob",
                                "description": "Blob storage class"
                              },
                              {
                                "name": "NFS",
                                "value": "NFS",
                                "description": "NFS storage class"
                              },
                              {
                                "name": "SMB",
                                "value": "SMB",
                                "description": "SMB storage class"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "typeProperties"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'StorageClassResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowVolumeExpansion": {
                      "description": "Volume can be expanded or not",
                      "type": "string",
                      "enum": [
                        "Allow",
                        "Disallow"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeExpansion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Allow",
                            "value": "Allow",
                            "description": "Allow volume expansion"
                          },
                          {
                            "name": "Disallow",
                            "value": "Disallow",
                            "description": "Disallow volume expansion"
                          }
                        ]
                      }
                    },
                    "mountOptions": {
                      "type": "array",
                      "description": "Additional mount options",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioner": {
                      "type": "string",
                      "description": "Provisioner name",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "volumeBindingMode": {
                      "description": "Binding mode of volumes: Immediate, WaitForFirstConsumer",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Immediate",
                        "WaitForFirstConsumer"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeBindingMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Immediate",
                            "value": "Immediate",
                            "description": "Immediate binding mode"
                          },
                          {
                            "name": "WaitForFirstConsumer",
                            "value": "WaitForFirstConsumer",
                            "description": "Wait for first consumer binding mode"
                          }
                        ]
                      }
                    },
                    "accessModes": {
                      "type": "array",
                      "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
                      "items": {
                        "type": "string",
                        "description": "Storage Class Access Mode",
                        "enum": [
                          "ReadWriteOnce",
                          "ReadWriteMany"
                        ],
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ReadWriteOnce",
                              "value": "ReadWriteOnce",
                              "description": "Read Write Once (RWO) access mode"
                            },
                            {
                              "name": "ReadWriteMany",
                              "value": "ReadWriteMany",
                              "description": "Read Write Many (RWX) access mode"
                            }
                          ]
                        }
                      }
                    },
                    "dataResilience": {
                      "description": "Allow single data node failure",
                      "type": "string",
                      "enum": [
                        "NotDataResilient",
                        "DataResilient"
                      ],
                      "x-ms-enum": {
                        "name": "DataResilienceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotDataResilient",
                            "value": "NotDataResilient",
                            "description": "Not data resilient"
                          },
                          {
                            "name": "DataResilient",
                            "value": "DataResilient",
                            "description": "Data resilient"
                          }
                        ]
                      }
                    },
                    "failoverSpeed": {
                      "description": "Failover speed: NA, Slow, Fast",
                      "type": "string",
                      "enum": [
                        "NotAvailable",
                        "Slow",
                        "Fast",
                        "Super"
                      ],
                      "x-ms-enum": {
                        "name": "FailoverTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotAvailable",
                            "value": "NotAvailable",
                            "description": "Not available Failover Tier"
                          },
                          {
                            "name": "Slow",
                            "value": "Slow",
                            "description": "Slow Failover Tier"
                          },
                          {
                            "name": "Fast",
                            "value": "Fast",
                            "description": "Fast Failover Tier"
                          },
                          {
                            "name": "Super",
                            "value": "Super",
                            "description": "Super Failover Tier"
                          }
                        ]
                      }
                    },
                    "limitations": {
                      "type": "array",
                      "description": "Limitations of the storage class",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "description": "Performance tier",
                      "type": "string",
                      "enum": [
                        "Undefined",
                        "Basic",
                        "Standard",
                        "Premium",
                        "Ultra"
                      ],
                      "x-ms-enum": {
                        "name": "PerformanceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Undefined",
                            "value": "Undefined",
                            "description": "Undefined Performance Tier"
                          },
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "Basic Performance Tier"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard Performance Tier"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "Premium Performance Tier"
                          },
                          {
                            "name": "Ultra",
                            "value": "Ultra",
                            "description": "Ultra Performance Tier"
                          }
                        ]
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
                    },
                    "typeProperties": {
                      "description": "Properties of the StorageClass",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of the storage class.",
                          "type": "string",
                          "enum": [
                            "Native",
                            "RWX",
                            "Blob",
                            "NFS",
                            "SMB"
                          ],
                          "x-ms-enum": {
                            "name": "SCType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Native",
                                "value": "Native",
                                "description": "Native storage class"
                              },
                              {
                                "name": "RWX",
                                "value": "RWX",
                                "description": "RWX storage class"
                              },
                              {
                                "name": "Blob",
                                "value": "Blob",
                                "description": "Blob storage class"
                              },
                              {
                                "name": "NFS",
                                "value": "NFS",
                                "description": "NFS storage class"
                              },
                              {
                                "name": "SMB",
                                "value": "SMB",
                                "description": "SMB storage class"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "typeProperties"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "StorageClass_Update",
        "tags": [
          "StorageClass"
        ],
        "description": "Update a StorageClassResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "storageClassName",
            "in": "path",
            "description": "The name of the the storage class",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for updating a storageClass",
              "properties": {
                "properties": {
                  "description": "The properties of StorageClass",
                  "type": "object",
                  "properties": {
                    "allowVolumeExpansion": {
                      "description": "Volume can be expanded or not",
                      "type": "string",
                      "enum": [
                        "Allow",
                        "Disallow"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeExpansion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Allow",
                            "value": "Allow",
                            "description": "Allow volume expansion"
                          },
                          {
                            "name": "Disallow",
                            "value": "Disallow",
                            "description": "Disallow volume expansion"
                          }
                        ]
                      }
                    },
                    "mountOptions": {
                      "type": "array",
                      "description": "Additional mount options",
                      "items": {
                        "type": "string"
                      }
                    },
                    "accessModes": {
                      "type": "array",
                      "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
                      "items": {
                        "type": "string",
                        "description": "Storage Class Access Mode",
                        "enum": [
                          "ReadWriteOnce",
                          "ReadWriteMany"
                        ],
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ReadWriteOnce",
                              "value": "ReadWriteOnce",
                              "description": "Read Write Once (RWO) access mode"
                            },
                            {
                              "name": "ReadWriteMany",
                              "value": "ReadWriteMany",
                              "description": "Read Write Many (RWX) access mode"
                            }
                          ]
                        }
                      }
                    },
                    "dataResilience": {
                      "description": "Allow single data node failure",
                      "type": "string",
                      "enum": [
                        "NotDataResilient",
                        "DataResilient"
                      ],
                      "x-ms-enum": {
                        "name": "DataResilienceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotDataResilient",
                            "value": "NotDataResilient",
                            "description": "Not data resilient"
                          },
                          {
                            "name": "DataResilient",
                            "value": "DataResilient",
                            "description": "Data resilient"
                          }
                        ]
                      }
                    },
                    "failoverSpeed": {
                      "description": "Failover speed: NA, Slow, Fast",
                      "type": "string",
                      "enum": [
                        "NotAvailable",
                        "Slow",
                        "Fast",
                        "Super"
                      ],
                      "x-ms-enum": {
                        "name": "FailoverTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotAvailable",
                            "value": "NotAvailable",
                            "description": "Not available Failover Tier"
                          },
                          {
                            "name": "Slow",
                            "value": "Slow",
                            "description": "Slow Failover Tier"
                          },
                          {
                            "name": "Fast",
                            "value": "Fast",
                            "description": "Fast Failover Tier"
                          },
                          {
                            "name": "Super",
                            "value": "Super",
                            "description": "Super Failover Tier"
                          }
                        ]
                      }
                    },
                    "limitations": {
                      "type": "array",
                      "description": "Limitations of the storage class",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "description": "Performance tier",
                      "type": "string",
                      "enum": [
                        "Undefined",
                        "Basic",
                        "Standard",
                        "Premium",
                        "Ultra"
                      ],
                      "x-ms-enum": {
                        "name": "PerformanceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Undefined",
                            "value": "Undefined",
                            "description": "Undefined Performance Tier"
                          },
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "Basic Performance Tier"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard Performance Tier"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "Premium Performance Tier"
                          },
                          {
                            "name": "Ultra",
                            "value": "Ultra",
                            "description": "Ultra Performance Tier"
                          }
                        ]
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
                    },
                    "typeProperties": {
                      "description": "New storage class type of storageClass",
                      "type": "object",
                      "properties": {
                        "backingStorageClassName": {
                          "type": "string",
                          "description": "The backing storageclass used to create new storageclass"
                        },
                        "azureStorageAccountName": {
                          "type": "string",
                          "description": "Azure Storage Account Name"
                        },
                        "azureStorageAccountKey": {
                          "type": "string",
                          "format": "password",
                          "description": "Azure Storage Account Key",
                          "x-ms-secret": true
                        },
                        "server": {
                          "type": "string",
                          "description": "NFS Server"
                        },
                        "share": {
                          "type": "string",
                          "description": "NFS share"
                        },
                        "subDir": {
                          "type": "string",
                          "description": "Sub directory under share. If the sub directory doesn't exist, driver will create it"
                        },
                        "mountPermissions": {
                          "type": "string",
                          "description": "Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount"
                        },
                        "onDelete": {
                          "description": "The action to take when a NFS volume is deleted. Default is Delete",
                          "type": "string",
                          "enum": [
                            "Delete",
                            "Retain"
                          ],
                          "x-ms-enum": {
                            "name": "NfsDirectoryActionOnVolumeDeletion",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Delete",
                                "value": "Delete",
                                "description": "When the volume is deleted, delete the directory"
                              },
                              {
                                "name": "Retain",
                                "value": "Retain",
                                "description": "When the volume is deleted, retain the directory"
                              }
                            ]
                          }
                        },
                        "source": {
                          "type": "string",
                          "description": "SMB Source"
                        },
                        "username": {
                          "type": "string",
                          "description": "Server username"
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Server password",
                          "x-ms-secret": true
                        },
                        "domain": {
                          "type": "string",
                          "description": "Server domain"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowVolumeExpansion": {
                      "description": "Volume can be expanded or not",
                      "type": "string",
                      "enum": [
                        "Allow",
                        "Disallow"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeExpansion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Allow",
                            "value": "Allow",
                            "description": "Allow volume expansion"
                          },
                          {
                            "name": "Disallow",
                            "value": "Disallow",
                            "description": "Disallow volume expansion"
                          }
                        ]
                      }
                    },
                    "mountOptions": {
                      "type": "array",
                      "description": "Additional mount options",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioner": {
                      "type": "string",
                      "description": "Provisioner name",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "volumeBindingMode": {
                      "description": "Binding mode of volumes: Immediate, WaitForFirstConsumer",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Immediate",
                        "WaitForFirstConsumer"
                      ],
                      "x-ms-enum": {
                        "name": "VolumeBindingMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Immediate",
                            "value": "Immediate",
                            "description": "Immediate binding mode"
                          },
                          {
                            "name": "WaitForFirstConsumer",
                            "value": "WaitForFirstConsumer",
                            "description": "Wait for first consumer binding mode"
                          }
                        ]
                      }
                    },
                    "accessModes": {
                      "type": "array",
                      "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
                      "items": {
                        "type": "string",
                        "description": "Storage Class Access Mode",
                        "enum": [
                          "ReadWriteOnce",
                          "ReadWriteMany"
                        ],
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ReadWriteOnce",
                              "value": "ReadWriteOnce",
                              "description": "Read Write Once (RWO) access mode"
                            },
                            {
                              "name": "ReadWriteMany",
                              "value": "ReadWriteMany",
                              "description": "Read Write Many (RWX) access mode"
                            }
                          ]
                        }
                      }
                    },
                    "dataResilience": {
                      "description": "Allow single data node failure",
                      "type": "string",
                      "enum": [
                        "NotDataResilient",
                        "DataResilient"
                      ],
                      "x-ms-enum": {
                        "name": "DataResilienceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotDataResilient",
                            "value": "NotDataResilient",
                            "description": "Not data resilient"
                          },
                          {
                            "name": "DataResilient",
                            "value": "DataResilient",
                            "description": "Data resilient"
                          }
                        ]
                      }
                    },
                    "failoverSpeed": {
                      "description": "Failover speed: NA, Slow, Fast",
                      "type": "string",
                      "enum": [
                        "NotAvailable",
                        "Slow",
                        "Fast",
                        "Super"
                      ],
                      "x-ms-enum": {
                        "name": "FailoverTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotAvailable",
                            "value": "NotAvailable",
                            "description": "Not available Failover Tier"
                          },
                          {
                            "name": "Slow",
                            "value": "Slow",
                            "description": "Slow Failover Tier"
                          },
                          {
                            "name": "Fast",
                            "value": "Fast",
                            "description": "Fast Failover Tier"
                          },
                          {
                            "name": "Super",
                            "value": "Super",
                            "description": "Super Failover Tier"
                          }
                        ]
                      }
                    },
                    "limitations": {
                      "type": "array",
                      "description": "Limitations of the storage class",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "description": "Performance tier",
                      "type": "string",
                      "enum": [
                        "Undefined",
                        "Basic",
                        "Standard",
                        "Premium",
                        "Ultra"
                      ],
                      "x-ms-enum": {
                        "name": "PerformanceTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Undefined",
                            "value": "Undefined",
                            "description": "Undefined Performance Tier"
                          },
                          {
                            "name": "Basic",
                            "value": "Basic",
                            "description": "Basic Performance Tier"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard Performance Tier"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "Premium Performance Tier"
                          },
                          {
                            "name": "Ultra",
                            "value": "Ultra",
                            "description": "Ultra Performance Tier"
                          }
                        ]
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
                    },
                    "typeProperties": {
                      "description": "Properties of the StorageClass",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of the storage class.",
                          "type": "string",
                          "enum": [
                            "Native",
                            "RWX",
                            "Blob",
                            "NFS",
                            "SMB"
                          ],
                          "x-ms-enum": {
                            "name": "SCType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Native",
                                "value": "Native",
                                "description": "Native storage class"
                              },
                              {
                                "name": "RWX",
                                "value": "RWX",
                                "description": "RWX storage class"
                              },
                              {
                                "name": "Blob",
                                "value": "Blob",
                                "description": "Blob storage class"
                              },
                              {
                                "name": "NFS",
                                "value": "NFS",
                                "description": "NFS storage class"
                              },
                              {
                                "name": "SMB",
                                "value": "SMB",
                                "description": "SMB storage class"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Resource provision state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Initial provisioning in progress"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Update in progress"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Deletion in progress"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Change accepted for processing"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "typeProperties"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "StorageClass_Delete",
        "tags": [
          "StorageClass"
        ],
        "description": "Delete a StorageClassResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "storageClassName",
            "in": "path",
            "description": "The name of the the storage class",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/providers/Microsoft.KubernetesRuntime/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessMode": {
      "type": "string",
      "description": "Storage Class Access Mode",
      "enum": [
        "ReadWriteOnce",
        "ReadWriteMany"
      ],
      "x-ms-enum": {
        "name": "AccessMode",
        "modelAsString": true,
        "values": [
          {
            "name": "ReadWriteOnce",
            "value": "ReadWriteOnce",
            "description": "Read Write Once (RWO) access mode"
          },
          {
            "name": "ReadWriteMany",
            "value": "ReadWriteMany",
            "description": "Read Write Many (RWX) access mode"
          }
        ]
      }
    },
    "AdvertiseMode": {
      "type": "string",
      "description": "Enum of advertise mode",
      "enum": [
        "ARP",
        "BGP",
        "Both"
      ],
      "x-ms-enum": {
        "name": "AdvertiseMode",
        "modelAsString": true,
        "values": [
          {
            "name": "ARP",
            "value": "ARP",
            "description": "ARP advertise mode"
          },
          {
            "name": "BGP",
            "value": "BGP",
            "description": "BGP advertise mode"
          },
          {
            "name": "Both",
            "value": "Both",
            "description": "both ARP and BGP advertise mode"
          }
        ]
      }
    },
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "BgpPeer": {
      "type": "object",
      "description": "A BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "myAsn": {
              "type": "integer",
              "format": "int32",
              "description": "My ASN"
            },
            "peerAsn": {
              "type": "integer",
              "format": "int32",
              "description": "Peer ASN"
            },
            "peerAddress": {
              "type": "string",
              "description": "Peer Address"
            },
            "provisioningState": {
              "description": "Resource provision state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Initial provisioning in progress"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Update in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Deletion in progress"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Change accepted for processing"
                  }
                ]
              }
            }
          },
          "required": [
            "myAsn",
            "peerAsn",
            "peerAddress"
          ]
        }
      }
    },
    "BgpPeerListResult": {
      "type": "object",
      "description": "The response of a BgpPeer list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BgpPeer items on this page",
          "items": {
            "type": "object",
            "description": "A BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "myAsn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "My ASN"
                  },
                  "peerAsn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Peer ASN"
                  },
                  "peerAddress": {
                    "type": "string",
                    "description": "Peer Address"
                  },
                  "provisioningState": {
                    "description": "Resource provision state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Initial provisioning in progress"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Update in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Deletion in progress"
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Change accepted for processing"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "myAsn",
                  "peerAsn",
                  "peerAddress"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BgpPeerProperties": {
      "type": "object",
      "description": "Details of the BgpPeer.",
      "properties": {
        "myAsn": {
          "type": "integer",
          "format": "int32",
          "description": "My ASN"
        },
        "peerAsn": {
          "type": "integer",
          "format": "int32",
          "description": "Peer ASN"
        },
        "peerAddress": {
          "type": "string",
          "description": "Peer Address"
        },
        "provisioningState": {
          "description": "Resource provision state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Initial provisioning in progress"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Update in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Deletion in progress"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Change accepted for processing"
              }
            ]
          }
        }
      },
      "required": [
        "myAsn",
        "peerAsn",
        "peerAddress"
      ]
    },
    "BlobStorageClassTypeProperties": {
      "type": "object",
      "description": "The properties of Blob StorageClass",
      "properties": {
        "azureStorageAccountName": {
          "type": "string",
          "description": "Azure Storage Account Name"
        },
        "azureStorageAccountKey": {
          "type": "string",
          "format": "password",
          "description": "Azure Storage Account Key",
          "x-ms-secret": true
        }
      },
      "required": [
        "azureStorageAccountName",
        "azureStorageAccountKey"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "The properties of storage class of the StorageClass",
          "properties": {
            "type": {
              "description": "Type of the storage class.",
              "type": "string",
              "enum": [
                "Native",
                "RWX",
                "Blob",
                "NFS",
                "SMB"
              ],
              "x-ms-enum": {
                "name": "SCType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Native",
                    "value": "Native",
                    "description": "Native storage class"
                  },
                  {
                    "name": "RWX",
                    "value": "RWX",
                    "description": "RWX storage class"
                  },
                  {
                    "name": "Blob",
                    "value": "Blob",
                    "description": "Blob storage class"
                  },
                  {
                    "name": "NFS",
                    "value": "NFS",
                    "description": "NFS storage class"
                  },
                  {
                    "name": "SMB",
                    "value": "SMB",
                    "description": "SMB storage class"
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "Blob"
    },
    "DataResilienceTier": {
      "type": "string",
      "description": "Data resilience tier of a storage class",
      "enum": [
        "NotDataResilient",
        "DataResilient"
      ],
      "x-ms-enum": {
        "name": "DataResilienceTier",
        "modelAsString": true,
        "values": [
          {
            "name": "NotDataResilient",
            "value": "NotDataResilient",
            "description": "Not data resilient"
          },
          {
            "name": "DataResilient",
            "value": "DataResilient",
            "description": "Data resilient"
          }
        ]
      }
    },
    "FailoverTier": {
      "type": "string",
      "description": "Failover tier of a storage class",
      "enum": [
        "NotAvailable",
        "Slow",
        "Fast",
        "Super"
      ],
      "x-ms-enum": {
        "name": "FailoverTier",
        "modelAsString": true,
        "values": [
          {
            "name": "NotAvailable",
            "value": "NotAvailable",
            "description": "Not available Failover Tier"
          },
          {
            "name": "Slow",
            "value": "Slow",
            "description": "Slow Failover Tier"
          },
          {
            "name": "Fast",
            "value": "Fast",
            "description": "Fast Failover Tier"
          },
          {
            "name": "Super",
            "value": "Super",
            "description": "Super Failover Tier"
          }
        ]
      }
    },
    "LoadBalancer": {
      "type": "object",
      "description": "A LoadBalancer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "addresses": {
              "type": "array",
              "description": "IP Range",
              "items": {
                "type": "string"
              }
            },
            "serviceSelector": {
              "type": "object",
              "description": "A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label \"a=b\", then please specify {\"a\": \"b\"} in the field.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "advertiseMode": {
              "description": "Advertise Mode",
              "type": "string",
              "enum": [
                "ARP",
                "BGP",
                "Both"
              ],
              "x-ms-enum": {
                "name": "AdvertiseMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ARP",
                    "value": "ARP",
                    "description": "ARP advertise mode"
                  },
                  {
                    "name": "BGP",
                    "value": "BGP",
                    "description": "BGP advertise mode"
                  },
                  {
                    "name": "Both",
                    "value": "Both",
                    "description": "both ARP and BGP advertise mode"
                  }
                ]
              }
            },
            "bgpPeers": {
              "type": "array",
              "description": "The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.",
              "items": {
                "type": "string"
              }
            },
            "provisioningState": {
              "description": "Resource provision state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Initial provisioning in progress"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Update in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Deletion in progress"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Change accepted for processing"
                  }
                ]
              }
            }
          },
          "required": [
            "addresses",
            "advertiseMode"
          ]
        }
      }
    },
    "LoadBalancerListResult": {
      "type": "object",
      "description": "The response of a LoadBalancer list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The LoadBalancer items on this page",
          "items": {
            "type": "object",
            "description": "A LoadBalancer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "addresses": {
                    "type": "array",
                    "description": "IP Range",
                    "items": {
                      "type": "string"
                    }
                  },
                  "serviceSelector": {
                    "type": "object",
                    "description": "A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label \"a=b\", then please specify {\"a\": \"b\"} in the field.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "advertiseMode": {
                    "description": "Advertise Mode",
                    "type": "string",
                    "enum": [
                      "ARP",
                      "BGP",
                      "Both"
                    ],
                    "x-ms-enum": {
                      "name": "AdvertiseMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "ARP",
                          "value": "ARP",
                          "description": "ARP advertise mode"
                        },
                        {
                          "name": "BGP",
                          "value": "BGP",
                          "description": "BGP advertise mode"
                        },
                        {
                          "name": "Both",
                          "value": "Both",
                          "description": "both ARP and BGP advertise mode"
                        }
                      ]
                    }
                  },
                  "bgpPeers": {
                    "type": "array",
                    "description": "The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "provisioningState": {
                    "description": "Resource provision state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Initial provisioning in progress"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Update in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Deletion in progress"
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Change accepted for processing"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "addresses",
                  "advertiseMode"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "LoadBalancerProperties": {
      "type": "object",
      "description": "Details of the LoadBalancer.",
      "properties": {
        "addresses": {
          "type": "array",
          "description": "IP Range",
          "items": {
            "type": "string"
          }
        },
        "serviceSelector": {
          "type": "object",
          "description": "A dynamic label mapping to select related services. For instance, if you want to create a load balancer only for services with label \"a=b\", then please specify {\"a\": \"b\"} in the field.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "advertiseMode": {
          "description": "Advertise Mode",
          "type": "string",
          "enum": [
            "ARP",
            "BGP",
            "Both"
          ],
          "x-ms-enum": {
            "name": "AdvertiseMode",
            "modelAsString": true,
            "values": [
              {
                "name": "ARP",
                "value": "ARP",
                "description": "ARP advertise mode"
              },
              {
                "name": "BGP",
                "value": "BGP",
                "description": "BGP advertise mode"
              },
              {
                "name": "Both",
                "value": "Both",
                "description": "both ARP and BGP advertise mode"
              }
            ]
          }
        },
        "bgpPeers": {
          "type": "array",
          "description": "The list of BGP peers it should advertise to. Null or empty means to advertise to all peers.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Resource provision state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Initial provisioning in progress"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Update in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Deletion in progress"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Change accepted for processing"
              }
            ]
          }
        }
      },
      "required": [
        "addresses",
        "advertiseMode"
      ]
    },
    "NativeStorageClassTypeProperties": {
      "type": "object",
      "description": "The properties of Native StorageClass",
      "allOf": [
        {
          "type": "object",
          "description": "The properties of storage class of the StorageClass",
          "properties": {
            "type": {
              "description": "Type of the storage class.",
              "type": "string",
              "enum": [
                "Native",
                "RWX",
                "Blob",
                "NFS",
                "SMB"
              ],
              "x-ms-enum": {
                "name": "SCType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Native",
                    "value": "Native",
                    "description": "Native storage class"
                  },
                  {
                    "name": "RWX",
                    "value": "RWX",
                    "description": "RWX storage class"
                  },
                  {
                    "name": "Blob",
                    "value": "Blob",
                    "description": "Blob storage class"
                  },
                  {
                    "name": "NFS",
                    "value": "NFS",
                    "description": "NFS storage class"
                  },
                  {
                    "name": "SMB",
                    "value": "SMB",
                    "description": "SMB storage class"
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "Native"
    },
    "NfsDirectoryActionOnVolumeDeletion": {
      "type": "string",
      "description": "The action to take when a NFS volume is deleted",
      "enum": [
        "Delete",
        "Retain"
      ],
      "x-ms-enum": {
        "name": "NfsDirectoryActionOnVolumeDeletion",
        "modelAsString": true,
        "values": [
          {
            "name": "Delete",
            "value": "Delete",
            "description": "When the volume is deleted, delete the directory"
          },
          {
            "name": "Retain",
            "value": "Retain",
            "description": "When the volume is deleted, retain the directory"
          }
        ]
      }
    },
    "NfsStorageClassTypeProperties": {
      "type": "object",
      "description": "The properties of NFS StorageClass",
      "properties": {
        "server": {
          "type": "string",
          "description": "NFS Server"
        },
        "share": {
          "type": "string",
          "description": "NFS share"
        },
        "subDir": {
          "type": "string",
          "description": "Sub directory under share. If the sub directory doesn't exist, driver will create it"
        },
        "mountPermissions": {
          "type": "string",
          "description": "Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount"
        },
        "onDelete": {
          "description": "The action to take when a NFS volume is deleted. Default is Delete",
          "type": "string",
          "enum": [
            "Delete",
            "Retain"
          ],
          "x-ms-enum": {
            "name": "NfsDirectoryActionOnVolumeDeletion",
            "modelAsString": true,
            "values": [
              {
                "name": "Delete",
                "value": "Delete",
                "description": "When the volume is deleted, delete the directory"
              },
              {
                "name": "Retain",
                "value": "Retain",
                "description": "When the volume is deleted, retain the directory"
              }
            ]
          }
        }
      },
      "required": [
        "server",
        "share"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "The properties of storage class of the StorageClass",
          "properties": {
            "type": {
              "description": "Type of the storage class.",
              "type": "string",
              "enum": [
                "Native",
                "RWX",
                "Blob",
                "NFS",
                "SMB"
              ],
              "x-ms-enum": {
                "name": "SCType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Native",
                    "value": "Native",
                    "description": "Native storage class"
                  },
                  {
                    "name": "RWX",
                    "value": "RWX",
                    "description": "RWX storage class"
                  },
                  {
                    "name": "Blob",
                    "value": "Blob",
                    "description": "Blob storage class"
                  },
                  {
                    "name": "NFS",
                    "value": "NFS",
                    "description": "NFS storage class"
                  },
                  {
                    "name": "SMB",
                    "value": "SMB",
                    "description": "SMB storage class"
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "NFS"
    },
    "PerformanceTier": {
      "type": "string",
      "description": "Performance tier of a storage class",
      "enum": [
        "Undefined",
        "Basic",
        "Standard",
        "Premium",
        "Ultra"
      ],
      "x-ms-enum": {
        "name": "PerformanceTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Undefined",
            "value": "Undefined",
            "description": "Undefined Performance Tier"
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Basic Performance Tier"
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Standard Performance Tier"
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "Premium Performance Tier"
          },
          {
            "name": "Ultra",
            "value": "Ultra",
            "description": "Ultra Performance Tier"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Initial provisioning in progress"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Update in progress"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Deletion in progress"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Change accepted for processing"
          }
        ]
      },
      "readOnly": true
    },
    "RwxStorageClassTypeProperties": {
      "type": "object",
      "description": "The properties of RWX StorageClass",
      "properties": {
        "backingStorageClassName": {
          "type": "string",
          "description": "The backing storageclass used to create new storageclass"
        }
      },
      "required": [
        "backingStorageClassName"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "The properties of storage class of the StorageClass",
          "properties": {
            "type": {
              "description": "Type of the storage class.",
              "type": "string",
              "enum": [
                "Native",
                "RWX",
                "Blob",
                "NFS",
                "SMB"
              ],
              "x-ms-enum": {
                "name": "SCType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Native",
                    "value": "Native",
                    "description": "Native storage class"
                  },
                  {
                    "name": "RWX",
                    "value": "RWX",
                    "description": "RWX storage class"
                  },
                  {
                    "name": "Blob",
                    "value": "Blob",
                    "description": "Blob storage class"
                  },
                  {
                    "name": "NFS",
                    "value": "NFS",
                    "description": "NFS storage class"
                  },
                  {
                    "name": "SMB",
                    "value": "SMB",
                    "description": "SMB storage class"
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "RWX"
    },
    "SCType": {
      "type": "string",
      "description": "Type of a storage class",
      "enum": [
        "Native",
        "RWX",
        "Blob",
        "NFS",
        "SMB"
      ],
      "x-ms-enum": {
        "name": "SCType",
        "modelAsString": true,
        "values": [
          {
            "name": "Native",
            "value": "Native",
            "description": "Native storage class"
          },
          {
            "name": "RWX",
            "value": "RWX",
            "description": "RWX storage class"
          },
          {
            "name": "Blob",
            "value": "Blob",
            "description": "Blob storage class"
          },
          {
            "name": "NFS",
            "value": "NFS",
            "description": "NFS storage class"
          },
          {
            "name": "SMB",
            "value": "SMB",
            "description": "SMB storage class"
          }
        ]
      }
    },
    "ServiceProperties": {
      "type": "object",
      "description": "Properties for the service resource",
      "properties": {
        "rpObjectId": {
          "description": "The object id of the service principal of the RP provisioned in the tenant",
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "provisioningState": {
          "description": "Resource provision state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Initial provisioning in progress"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Update in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Deletion in progress"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Change accepted for processing"
              }
            ]
          }
        }
      }
    },
    "ServiceResource": {
      "type": "object",
      "description": "A Service resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "rpObjectId": {
              "description": "The object id of the service principal of the RP provisioned in the tenant",
              "readOnly": true,
              "type": "string",
              "format": "uuid"
            },
            "provisioningState": {
              "description": "Resource provision state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Initial provisioning in progress"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Update in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Deletion in progress"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Change accepted for processing"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ServiceResourceListResult": {
      "type": "object",
      "description": "The response of a ServiceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceResource items on this page",
          "items": {
            "type": "object",
            "description": "A Service resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "rpObjectId": {
                    "description": "The object id of the service principal of the RP provisioned in the tenant",
                    "readOnly": true,
                    "type": "string",
                    "format": "uuid"
                  },
                  "provisioningState": {
                    "description": "Resource provision state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Initial provisioning in progress"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Update in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Deletion in progress"
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Change accepted for processing"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SmbStorageClassTypeProperties": {
      "type": "object",
      "description": "The properties of SMB StorageClass",
      "properties": {
        "source": {
          "type": "string",
          "description": "SMB Source"
        },
        "subDir": {
          "type": "string",
          "description": "Sub directory under share. If the sub directory doesn't exist, driver will create it"
        },
        "username": {
          "type": "string",
          "description": "Server username"
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "Server password",
          "x-ms-secret": true
        },
        "domain": {
          "type": "string",
          "description": "Server domain"
        }
      },
      "required": [
        "source"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "The properties of storage class of the StorageClass",
          "properties": {
            "type": {
              "description": "Type of the storage class.",
              "type": "string",
              "enum": [
                "Native",
                "RWX",
                "Blob",
                "NFS",
                "SMB"
              ],
              "x-ms-enum": {
                "name": "SCType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Native",
                    "value": "Native",
                    "description": "Native storage class"
                  },
                  {
                    "name": "RWX",
                    "value": "RWX",
                    "description": "RWX storage class"
                  },
                  {
                    "name": "Blob",
                    "value": "Blob",
                    "description": "Blob storage class"
                  },
                  {
                    "name": "NFS",
                    "value": "NFS",
                    "description": "NFS storage class"
                  },
                  {
                    "name": "SMB",
                    "value": "SMB",
                    "description": "SMB storage class"
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "SMB"
    },
    "StorageClassProperties": {
      "type": "object",
      "description": "Details of the StorageClass StorageClass.",
      "properties": {
        "allowVolumeExpansion": {
          "description": "Volume can be expanded or not",
          "type": "string",
          "enum": [
            "Allow",
            "Disallow"
          ],
          "x-ms-enum": {
            "name": "VolumeExpansion",
            "modelAsString": true,
            "values": [
              {
                "name": "Allow",
                "value": "Allow",
                "description": "Allow volume expansion"
              },
              {
                "name": "Disallow",
                "value": "Disallow",
                "description": "Disallow volume expansion"
              }
            ]
          }
        },
        "mountOptions": {
          "type": "array",
          "description": "Additional mount options",
          "items": {
            "type": "string"
          }
        },
        "provisioner": {
          "type": "string",
          "description": "Provisioner name",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "volumeBindingMode": {
          "description": "Binding mode of volumes: Immediate, WaitForFirstConsumer",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Immediate",
            "WaitForFirstConsumer"
          ],
          "x-ms-enum": {
            "name": "VolumeBindingMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Immediate",
                "value": "Immediate",
                "description": "Immediate binding mode"
              },
              {
                "name": "WaitForFirstConsumer",
                "value": "WaitForFirstConsumer",
                "description": "Wait for first consumer binding mode"
              }
            ]
          }
        },
        "accessModes": {
          "type": "array",
          "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
          "items": {
            "type": "string",
            "description": "Storage Class Access Mode",
            "enum": [
              "ReadWriteOnce",
              "ReadWriteMany"
            ],
            "x-ms-enum": {
              "name": "AccessMode",
              "modelAsString": true,
              "values": [
                {
                  "name": "ReadWriteOnce",
                  "value": "ReadWriteOnce",
                  "description": "Read Write Once (RWO) access mode"
                },
                {
                  "name": "ReadWriteMany",
                  "value": "ReadWriteMany",
                  "description": "Read Write Many (RWX) access mode"
                }
              ]
            }
          }
        },
        "dataResilience": {
          "description": "Allow single data node failure",
          "type": "string",
          "enum": [
            "NotDataResilient",
            "DataResilient"
          ],
          "x-ms-enum": {
            "name": "DataResilienceTier",
            "modelAsString": true,
            "values": [
              {
                "name": "NotDataResilient",
                "value": "NotDataResilient",
                "description": "Not data resilient"
              },
              {
                "name": "DataResilient",
                "value": "DataResilient",
                "description": "Data resilient"
              }
            ]
          }
        },
        "failoverSpeed": {
          "description": "Failover speed: NA, Slow, Fast",
          "type": "string",
          "enum": [
            "NotAvailable",
            "Slow",
            "Fast",
            "Super"
          ],
          "x-ms-enum": {
            "name": "FailoverTier",
            "modelAsString": true,
            "values": [
              {
                "name": "NotAvailable",
                "value": "NotAvailable",
                "description": "Not available Failover Tier"
              },
              {
                "name": "Slow",
                "value": "Slow",
                "description": "Slow Failover Tier"
              },
              {
                "name": "Fast",
                "value": "Fast",
                "description": "Fast Failover Tier"
              },
              {
                "name": "Super",
                "value": "Super",
                "description": "Super Failover Tier"
              }
            ]
          }
        },
        "limitations": {
          "type": "array",
          "description": "Limitations of the storage class",
          "items": {
            "type": "string"
          }
        },
        "performance": {
          "description": "Performance tier",
          "type": "string",
          "enum": [
            "Undefined",
            "Basic",
            "Standard",
            "Premium",
            "Ultra"
          ],
          "x-ms-enum": {
            "name": "PerformanceTier",
            "modelAsString": true,
            "values": [
              {
                "name": "Undefined",
                "value": "Undefined",
                "description": "Undefined Performance Tier"
              },
              {
                "name": "Basic",
                "value": "Basic",
                "description": "Basic Performance Tier"
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard Performance Tier"
              },
              {
                "name": "Premium",
                "value": "Premium",
                "description": "Premium Performance Tier"
              },
              {
                "name": "Ultra",
                "value": "Ultra",
                "description": "Ultra Performance Tier"
              }
            ]
          }
        },
        "priority": {
          "type": "integer",
          "format": "int64",
          "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
        },
        "typeProperties": {
          "description": "Properties of the StorageClass",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of the storage class.",
              "type": "string",
              "enum": [
                "Native",
                "RWX",
                "Blob",
                "NFS",
                "SMB"
              ],
              "x-ms-enum": {
                "name": "SCType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Native",
                    "value": "Native",
                    "description": "Native storage class"
                  },
                  {
                    "name": "RWX",
                    "value": "RWX",
                    "description": "RWX storage class"
                  },
                  {
                    "name": "Blob",
                    "value": "Blob",
                    "description": "Blob storage class"
                  },
                  {
                    "name": "NFS",
                    "value": "NFS",
                    "description": "NFS storage class"
                  },
                  {
                    "name": "SMB",
                    "value": "SMB",
                    "description": "SMB storage class"
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        },
        "provisioningState": {
          "description": "Resource provision state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Initial provisioning in progress"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Update in progress"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Deletion in progress"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Change accepted for processing"
              }
            ]
          }
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "StorageClassPropertiesUpdate": {
      "type": "object",
      "description": "The model for updating storageClass properties",
      "properties": {
        "allowVolumeExpansion": {
          "description": "Volume can be expanded or not",
          "type": "string",
          "enum": [
            "Allow",
            "Disallow"
          ],
          "x-ms-enum": {
            "name": "VolumeExpansion",
            "modelAsString": true,
            "values": [
              {
                "name": "Allow",
                "value": "Allow",
                "description": "Allow volume expansion"
              },
              {
                "name": "Disallow",
                "value": "Disallow",
                "description": "Disallow volume expansion"
              }
            ]
          }
        },
        "mountOptions": {
          "type": "array",
          "description": "Additional mount options",
          "items": {
            "type": "string"
          }
        },
        "accessModes": {
          "type": "array",
          "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
          "items": {
            "type": "string",
            "description": "Storage Class Access Mode",
            "enum": [
              "ReadWriteOnce",
              "ReadWriteMany"
            ],
            "x-ms-enum": {
              "name": "AccessMode",
              "modelAsString": true,
              "values": [
                {
                  "name": "ReadWriteOnce",
                  "value": "ReadWriteOnce",
                  "description": "Read Write Once (RWO) access mode"
                },
                {
                  "name": "ReadWriteMany",
                  "value": "ReadWriteMany",
                  "description": "Read Write Many (RWX) access mode"
                }
              ]
            }
          }
        },
        "dataResilience": {
          "description": "Allow single data node failure",
          "type": "string",
          "enum": [
            "NotDataResilient",
            "DataResilient"
          ],
          "x-ms-enum": {
            "name": "DataResilienceTier",
            "modelAsString": true,
            "values": [
              {
                "name": "NotDataResilient",
                "value": "NotDataResilient",
                "description": "Not data resilient"
              },
              {
                "name": "DataResilient",
                "value": "DataResilient",
                "description": "Data resilient"
              }
            ]
          }
        },
        "failoverSpeed": {
          "description": "Failover speed: NA, Slow, Fast",
          "type": "string",
          "enum": [
            "NotAvailable",
            "Slow",
            "Fast",
            "Super"
          ],
          "x-ms-enum": {
            "name": "FailoverTier",
            "modelAsString": true,
            "values": [
              {
                "name": "NotAvailable",
                "value": "NotAvailable",
                "description": "Not available Failover Tier"
              },
              {
                "name": "Slow",
                "value": "Slow",
                "description": "Slow Failover Tier"
              },
              {
                "name": "Fast",
                "value": "Fast",
                "description": "Fast Failover Tier"
              },
              {
                "name": "Super",
                "value": "Super",
                "description": "Super Failover Tier"
              }
            ]
          }
        },
        "limitations": {
          "type": "array",
          "description": "Limitations of the storage class",
          "items": {
            "type": "string"
          }
        },
        "performance": {
          "description": "Performance tier",
          "type": "string",
          "enum": [
            "Undefined",
            "Basic",
            "Standard",
            "Premium",
            "Ultra"
          ],
          "x-ms-enum": {
            "name": "PerformanceTier",
            "modelAsString": true,
            "values": [
              {
                "name": "Undefined",
                "value": "Undefined",
                "description": "Undefined Performance Tier"
              },
              {
                "name": "Basic",
                "value": "Basic",
                "description": "Basic Performance Tier"
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard Performance Tier"
              },
              {
                "name": "Premium",
                "value": "Premium",
                "description": "Premium Performance Tier"
              },
              {
                "name": "Ultra",
                "value": "Ultra",
                "description": "Ultra Performance Tier"
              }
            ]
          }
        },
        "priority": {
          "type": "integer",
          "format": "int64",
          "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
        },
        "typeProperties": {
          "description": "New storage class type of storageClass",
          "type": "object",
          "properties": {
            "backingStorageClassName": {
              "type": "string",
              "description": "The backing storageclass used to create new storageclass"
            },
            "azureStorageAccountName": {
              "type": "string",
              "description": "Azure Storage Account Name"
            },
            "azureStorageAccountKey": {
              "type": "string",
              "format": "password",
              "description": "Azure Storage Account Key",
              "x-ms-secret": true
            },
            "server": {
              "type": "string",
              "description": "NFS Server"
            },
            "share": {
              "type": "string",
              "description": "NFS share"
            },
            "subDir": {
              "type": "string",
              "description": "Sub directory under share. If the sub directory doesn't exist, driver will create it"
            },
            "mountPermissions": {
              "type": "string",
              "description": "Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount"
            },
            "onDelete": {
              "description": "The action to take when a NFS volume is deleted. Default is Delete",
              "type": "string",
              "enum": [
                "Delete",
                "Retain"
              ],
              "x-ms-enum": {
                "name": "NfsDirectoryActionOnVolumeDeletion",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Delete",
                    "value": "Delete",
                    "description": "When the volume is deleted, delete the directory"
                  },
                  {
                    "name": "Retain",
                    "value": "Retain",
                    "description": "When the volume is deleted, retain the directory"
                  }
                ]
              }
            },
            "source": {
              "type": "string",
              "description": "SMB Source"
            },
            "username": {
              "type": "string",
              "description": "Server username"
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "Server password",
              "x-ms-secret": true
            },
            "domain": {
              "type": "string",
              "description": "Server domain"
            }
          }
        }
      }
    },
    "StorageClassResource": {
      "type": "object",
      "description": "A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "allowVolumeExpansion": {
              "description": "Volume can be expanded or not",
              "type": "string",
              "enum": [
                "Allow",
                "Disallow"
              ],
              "x-ms-enum": {
                "name": "VolumeExpansion",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Allow",
                    "value": "Allow",
                    "description": "Allow volume expansion"
                  },
                  {
                    "name": "Disallow",
                    "value": "Disallow",
                    "description": "Disallow volume expansion"
                  }
                ]
              }
            },
            "mountOptions": {
              "type": "array",
              "description": "Additional mount options",
              "items": {
                "type": "string"
              }
            },
            "provisioner": {
              "type": "string",
              "description": "Provisioner name",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "volumeBindingMode": {
              "description": "Binding mode of volumes: Immediate, WaitForFirstConsumer",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Immediate",
                "WaitForFirstConsumer"
              ],
              "x-ms-enum": {
                "name": "VolumeBindingMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Immediate",
                    "value": "Immediate",
                    "description": "Immediate binding mode"
                  },
                  {
                    "name": "WaitForFirstConsumer",
                    "value": "WaitForFirstConsumer",
                    "description": "Wait for first consumer binding mode"
                  }
                ]
              }
            },
            "accessModes": {
              "type": "array",
              "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
              "items": {
                "type": "string",
                "description": "Storage Class Access Mode",
                "enum": [
                  "ReadWriteOnce",
                  "ReadWriteMany"
                ],
                "x-ms-enum": {
                  "name": "AccessMode",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "ReadWriteOnce",
                      "value": "ReadWriteOnce",
                      "description": "Read Write Once (RWO) access mode"
                    },
                    {
                      "name": "ReadWriteMany",
                      "value": "ReadWriteMany",
                      "description": "Read Write Many (RWX) access mode"
                    }
                  ]
                }
              }
            },
            "dataResilience": {
              "description": "Allow single data node failure",
              "type": "string",
              "enum": [
                "NotDataResilient",
                "DataResilient"
              ],
              "x-ms-enum": {
                "name": "DataResilienceTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotDataResilient",
                    "value": "NotDataResilient",
                    "description": "Not data resilient"
                  },
                  {
                    "name": "DataResilient",
                    "value": "DataResilient",
                    "description": "Data resilient"
                  }
                ]
              }
            },
            "failoverSpeed": {
              "description": "Failover speed: NA, Slow, Fast",
              "type": "string",
              "enum": [
                "NotAvailable",
                "Slow",
                "Fast",
                "Super"
              ],
              "x-ms-enum": {
                "name": "FailoverTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotAvailable",
                    "value": "NotAvailable",
                    "description": "Not available Failover Tier"
                  },
                  {
                    "name": "Slow",
                    "value": "Slow",
                    "description": "Slow Failover Tier"
                  },
                  {
                    "name": "Fast",
                    "value": "Fast",
                    "description": "Fast Failover Tier"
                  },
                  {
                    "name": "Super",
                    "value": "Super",
                    "description": "Super Failover Tier"
                  }
                ]
              }
            },
            "limitations": {
              "type": "array",
              "description": "Limitations of the storage class",
              "items": {
                "type": "string"
              }
            },
            "performance": {
              "description": "Performance tier",
              "type": "string",
              "enum": [
                "Undefined",
                "Basic",
                "Standard",
                "Premium",
                "Ultra"
              ],
              "x-ms-enum": {
                "name": "PerformanceTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Undefined",
                    "value": "Undefined",
                    "description": "Undefined Performance Tier"
                  },
                  {
                    "name": "Basic",
                    "value": "Basic",
                    "description": "Basic Performance Tier"
                  },
                  {
                    "name": "Standard",
                    "value": "Standard",
                    "description": "Standard Performance Tier"
                  },
                  {
                    "name": "Premium",
                    "value": "Premium",
                    "description": "Premium Performance Tier"
                  },
                  {
                    "name": "Ultra",
                    "value": "Ultra",
                    "description": "Ultra Performance Tier"
                  }
                ]
              }
            },
            "priority": {
              "type": "integer",
              "format": "int64",
              "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
            },
            "typeProperties": {
              "description": "Properties of the StorageClass",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "description": "Type of the storage class.",
                  "type": "string",
                  "enum": [
                    "Native",
                    "RWX",
                    "Blob",
                    "NFS",
                    "SMB"
                  ],
                  "x-ms-enum": {
                    "name": "SCType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Native",
                        "value": "Native",
                        "description": "Native storage class"
                      },
                      {
                        "name": "RWX",
                        "value": "RWX",
                        "description": "RWX storage class"
                      },
                      {
                        "name": "Blob",
                        "value": "Blob",
                        "description": "Blob storage class"
                      },
                      {
                        "name": "NFS",
                        "value": "NFS",
                        "description": "NFS storage class"
                      },
                      {
                        "name": "SMB",
                        "value": "SMB",
                        "description": "SMB storage class"
                      }
                    ]
                  }
                }
              },
              "discriminator": "type",
              "required": [
                "type"
              ]
            },
            "provisioningState": {
              "description": "Resource provision state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Initial provisioning in progress"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Update in progress"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Deletion in progress"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Change accepted for processing"
                  }
                ]
              }
            }
          },
          "required": [
            "typeProperties"
          ]
        }
      }
    },
    "StorageClassResourceListResult": {
      "type": "object",
      "description": "The response of a StorageClassResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StorageClassResource items on this page",
          "items": {
            "type": "object",
            "description": "A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "allowVolumeExpansion": {
                    "description": "Volume can be expanded or not",
                    "type": "string",
                    "enum": [
                      "Allow",
                      "Disallow"
                    ],
                    "x-ms-enum": {
                      "name": "VolumeExpansion",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Allow",
                          "value": "Allow",
                          "description": "Allow volume expansion"
                        },
                        {
                          "name": "Disallow",
                          "value": "Disallow",
                          "description": "Disallow volume expansion"
                        }
                      ]
                    }
                  },
                  "mountOptions": {
                    "type": "array",
                    "description": "Additional mount options",
                    "items": {
                      "type": "string"
                    }
                  },
                  "provisioner": {
                    "type": "string",
                    "description": "Provisioner name",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "volumeBindingMode": {
                    "description": "Binding mode of volumes: Immediate, WaitForFirstConsumer",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "Immediate",
                      "WaitForFirstConsumer"
                    ],
                    "x-ms-enum": {
                      "name": "VolumeBindingMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Immediate",
                          "value": "Immediate",
                          "description": "Immediate binding mode"
                        },
                        {
                          "name": "WaitForFirstConsumer",
                          "value": "WaitForFirstConsumer",
                          "description": "Wait for first consumer binding mode"
                        }
                      ]
                    }
                  },
                  "accessModes": {
                    "type": "array",
                    "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
                    "items": {
                      "type": "string",
                      "description": "Storage Class Access Mode",
                      "enum": [
                        "ReadWriteOnce",
                        "ReadWriteMany"
                      ],
                      "x-ms-enum": {
                        "name": "AccessMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ReadWriteOnce",
                            "value": "ReadWriteOnce",
                            "description": "Read Write Once (RWO) access mode"
                          },
                          {
                            "name": "ReadWriteMany",
                            "value": "ReadWriteMany",
                            "description": "Read Write Many (RWX) access mode"
                          }
                        ]
                      }
                    }
                  },
                  "dataResilience": {
                    "description": "Allow single data node failure",
                    "type": "string",
                    "enum": [
                      "NotDataResilient",
                      "DataResilient"
                    ],
                    "x-ms-enum": {
                      "name": "DataResilienceTier",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotDataResilient",
                          "value": "NotDataResilient",
                          "description": "Not data resilient"
                        },
                        {
                          "name": "DataResilient",
                          "value": "DataResilient",
                          "description": "Data resilient"
                        }
                      ]
                    }
                  },
                  "failoverSpeed": {
                    "description": "Failover speed: NA, Slow, Fast",
                    "type": "string",
                    "enum": [
                      "NotAvailable",
                      "Slow",
                      "Fast",
                      "Super"
                    ],
                    "x-ms-enum": {
                      "name": "FailoverTier",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotAvailable",
                          "value": "NotAvailable",
                          "description": "Not available Failover Tier"
                        },
                        {
                          "name": "Slow",
                          "value": "Slow",
                          "description": "Slow Failover Tier"
                        },
                        {
                          "name": "Fast",
                          "value": "Fast",
                          "description": "Fast Failover Tier"
                        },
                        {
                          "name": "Super",
                          "value": "Super",
                          "description": "Super Failover Tier"
                        }
                      ]
                    }
                  },
                  "limitations": {
                    "type": "array",
                    "description": "Limitations of the storage class",
                    "items": {
                      "type": "string"
                    }
                  },
                  "performance": {
                    "description": "Performance tier",
                    "type": "string",
                    "enum": [
                      "Undefined",
                      "Basic",
                      "Standard",
                      "Premium",
                      "Ultra"
                    ],
                    "x-ms-enum": {
                      "name": "PerformanceTier",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Undefined",
                          "value": "Undefined",
                          "description": "Undefined Performance Tier"
                        },
                        {
                          "name": "Basic",
                          "value": "Basic",
                          "description": "Basic Performance Tier"
                        },
                        {
                          "name": "Standard",
                          "value": "Standard",
                          "description": "Standard Performance Tier"
                        },
                        {
                          "name": "Premium",
                          "value": "Premium",
                          "description": "Premium Performance Tier"
                        },
                        {
                          "name": "Ultra",
                          "value": "Ultra",
                          "description": "Ultra Performance Tier"
                        }
                      ]
                    }
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
                  },
                  "typeProperties": {
                    "description": "Properties of the StorageClass",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Type of the storage class.",
                        "type": "string",
                        "enum": [
                          "Native",
                          "RWX",
                          "Blob",
                          "NFS",
                          "SMB"
                        ],
                        "x-ms-enum": {
                          "name": "SCType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Native",
                              "value": "Native",
                              "description": "Native storage class"
                            },
                            {
                              "name": "RWX",
                              "value": "RWX",
                              "description": "RWX storage class"
                            },
                            {
                              "name": "Blob",
                              "value": "Blob",
                              "description": "Blob storage class"
                            },
                            {
                              "name": "NFS",
                              "value": "NFS",
                              "description": "NFS storage class"
                            },
                            {
                              "name": "SMB",
                              "value": "SMB",
                              "description": "SMB storage class"
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "type",
                    "required": [
                      "type"
                    ]
                  },
                  "provisioningState": {
                    "description": "Resource provision state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Initial provisioning in progress"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Update in progress"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Deletion in progress"
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Change accepted for processing"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "typeProperties"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageClassResourceUpdate": {
      "type": "object",
      "description": "The model for updating a storageClass",
      "properties": {
        "properties": {
          "description": "The properties of StorageClass",
          "type": "object",
          "properties": {
            "allowVolumeExpansion": {
              "description": "Volume can be expanded or not",
              "type": "string",
              "enum": [
                "Allow",
                "Disallow"
              ],
              "x-ms-enum": {
                "name": "VolumeExpansion",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Allow",
                    "value": "Allow",
                    "description": "Allow volume expansion"
                  },
                  {
                    "name": "Disallow",
                    "value": "Disallow",
                    "description": "Disallow volume expansion"
                  }
                ]
              }
            },
            "mountOptions": {
              "type": "array",
              "description": "Additional mount options",
              "items": {
                "type": "string"
              }
            },
            "accessModes": {
              "type": "array",
              "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
              "items": {
                "type": "string",
                "description": "Storage Class Access Mode",
                "enum": [
                  "ReadWriteOnce",
                  "ReadWriteMany"
                ],
                "x-ms-enum": {
                  "name": "AccessMode",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "ReadWriteOnce",
                      "value": "ReadWriteOnce",
                      "description": "Read Write Once (RWO) access mode"
                    },
                    {
                      "name": "ReadWriteMany",
                      "value": "ReadWriteMany",
                      "description": "Read Write Many (RWX) access mode"
                    }
                  ]
                }
              }
            },
            "dataResilience": {
              "description": "Allow single data node failure",
              "type": "string",
              "enum": [
                "NotDataResilient",
                "DataResilient"
              ],
              "x-ms-enum": {
                "name": "DataResilienceTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotDataResilient",
                    "value": "NotDataResilient",
                    "description": "Not data resilient"
                  },
                  {
                    "name": "DataResilient",
                    "value": "DataResilient",
                    "description": "Data resilient"
                  }
                ]
              }
            },
            "failoverSpeed": {
              "description": "Failover speed: NA, Slow, Fast",
              "type": "string",
              "enum": [
                "NotAvailable",
                "Slow",
                "Fast",
                "Super"
              ],
              "x-ms-enum": {
                "name": "FailoverTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotAvailable",
                    "value": "NotAvailable",
                    "description": "Not available Failover Tier"
                  },
                  {
                    "name": "Slow",
                    "value": "Slow",
                    "description": "Slow Failover Tier"
                  },
                  {
                    "name": "Fast",
                    "value": "Fast",
                    "description": "Fast Failover Tier"
                  },
                  {
                    "name": "Super",
                    "value": "Super",
                    "description": "Super Failover Tier"
                  }
                ]
              }
            },
            "limitations": {
              "type": "array",
              "description": "Limitations of the storage class",
              "items": {
                "type": "string"
              }
            },
            "performance": {
              "description": "Performance tier",
              "type": "string",
              "enum": [
                "Undefined",
                "Basic",
                "Standard",
                "Premium",
                "Ultra"
              ],
              "x-ms-enum": {
                "name": "PerformanceTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Undefined",
                    "value": "Undefined",
                    "description": "Undefined Performance Tier"
                  },
                  {
                    "name": "Basic",
                    "value": "Basic",
                    "description": "Basic Performance Tier"
                  },
                  {
                    "name": "Standard",
                    "value": "Standard",
                    "description": "Standard Performance Tier"
                  },
                  {
                    "name": "Premium",
                    "value": "Premium",
                    "description": "Premium Performance Tier"
                  },
                  {
                    "name": "Ultra",
                    "value": "Ultra",
                    "description": "Ultra Performance Tier"
                  }
                ]
              }
            },
            "priority": {
              "type": "integer",
              "format": "int64",
              "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
            },
            "typeProperties": {
              "description": "New storage class type of storageClass",
              "type": "object",
              "properties": {
                "backingStorageClassName": {
                  "type": "string",
                  "description": "The backing storageclass used to create new storageclass"
                },
                "azureStorageAccountName": {
                  "type": "string",
                  "description": "Azure Storage Account Name"
                },
                "azureStorageAccountKey": {
                  "type": "string",
                  "format": "password",
                  "description": "Azure Storage Account Key",
                  "x-ms-secret": true
                },
                "server": {
                  "type": "string",
                  "description": "NFS Server"
                },
                "share": {
                  "type": "string",
                  "description": "NFS share"
                },
                "subDir": {
                  "type": "string",
                  "description": "Sub directory under share. If the sub directory doesn't exist, driver will create it"
                },
                "mountPermissions": {
                  "type": "string",
                  "description": "Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount"
                },
                "onDelete": {
                  "description": "The action to take when a NFS volume is deleted. Default is Delete",
                  "type": "string",
                  "enum": [
                    "Delete",
                    "Retain"
                  ],
                  "x-ms-enum": {
                    "name": "NfsDirectoryActionOnVolumeDeletion",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Delete",
                        "value": "Delete",
                        "description": "When the volume is deleted, delete the directory"
                      },
                      {
                        "name": "Retain",
                        "value": "Retain",
                        "description": "When the volume is deleted, retain the directory"
                      }
                    ]
                  }
                },
                "source": {
                  "type": "string",
                  "description": "SMB Source"
                },
                "username": {
                  "type": "string",
                  "description": "Server username"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "Server password",
                  "x-ms-secret": true
                },
                "domain": {
                  "type": "string",
                  "description": "Server domain"
                }
              }
            }
          }
        }
      }
    },
    "StorageClassTypeProperties": {
      "type": "object",
      "description": "The properties of storage class of the StorageClass",
      "properties": {
        "type": {
          "description": "Type of the storage class.",
          "type": "string",
          "enum": [
            "Native",
            "RWX",
            "Blob",
            "NFS",
            "SMB"
          ],
          "x-ms-enum": {
            "name": "SCType",
            "modelAsString": true,
            "values": [
              {
                "name": "Native",
                "value": "Native",
                "description": "Native storage class"
              },
              {
                "name": "RWX",
                "value": "RWX",
                "description": "RWX storage class"
              },
              {
                "name": "Blob",
                "value": "Blob",
                "description": "Blob storage class"
              },
              {
                "name": "NFS",
                "value": "NFS",
                "description": "NFS storage class"
              },
              {
                "name": "SMB",
                "value": "SMB",
                "description": "SMB storage class"
              }
            ]
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "StorageClassTypePropertiesUpdate": {
      "type": "object",
      "description": "The model for update a storageClass",
      "properties": {
        "backingStorageClassName": {
          "type": "string",
          "description": "The backing storageclass used to create new storageclass"
        },
        "azureStorageAccountName": {
          "type": "string",
          "description": "Azure Storage Account Name"
        },
        "azureStorageAccountKey": {
          "type": "string",
          "format": "password",
          "description": "Azure Storage Account Key",
          "x-ms-secret": true
        },
        "server": {
          "type": "string",
          "description": "NFS Server"
        },
        "share": {
          "type": "string",
          "description": "NFS share"
        },
        "subDir": {
          "type": "string",
          "description": "Sub directory under share. If the sub directory doesn't exist, driver will create it"
        },
        "mountPermissions": {
          "type": "string",
          "description": "Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount"
        },
        "onDelete": {
          "description": "The action to take when a NFS volume is deleted. Default is Delete",
          "type": "string",
          "enum": [
            "Delete",
            "Retain"
          ],
          "x-ms-enum": {
            "name": "NfsDirectoryActionOnVolumeDeletion",
            "modelAsString": true,
            "values": [
              {
                "name": "Delete",
                "value": "Delete",
                "description": "When the volume is deleted, delete the directory"
              },
              {
                "name": "Retain",
                "value": "Retain",
                "description": "When the volume is deleted, retain the directory"
              }
            ]
          }
        },
        "source": {
          "type": "string",
          "description": "SMB Source"
        },
        "username": {
          "type": "string",
          "description": "Server username"
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "Server password",
          "x-ms-secret": true
        },
        "domain": {
          "type": "string",
          "description": "Server domain"
        }
      }
    },
    "VolumeBindingMode": {
      "type": "string",
      "description": "Storage class volume binding mode",
      "enum": [
        "Immediate",
        "WaitForFirstConsumer"
      ],
      "x-ms-enum": {
        "name": "VolumeBindingMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Immediate",
            "value": "Immediate",
            "description": "Immediate binding mode"
          },
          {
            "name": "WaitForFirstConsumer",
            "value": "WaitForFirstConsumer",
            "description": "Wait for first consumer binding mode"
          }
        ]
      }
    },
    "VolumeExpansion": {
      "type": "string",
      "description": "Ability to expand volumes of a storage class",
      "enum": [
        "Allow",
        "Disallow"
      ],
      "x-ms-enum": {
        "name": "VolumeExpansion",
        "modelAsString": true,
        "values": [
          {
            "name": "Allow",
            "value": "Allow",
            "description": "Allow volume expansion"
          },
          {
            "name": "Disallow",
            "value": "Disallow",
            "description": "Disallow volume expansion"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}