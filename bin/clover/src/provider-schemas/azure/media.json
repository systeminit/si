{
  "swagger": "2.0",
  "info": {
    "title": "Azure media",
    "version": "2021-11-01-preview-preview",
    "description": "Azure media service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/edgeModules": {
      "get": {
        "summary": "List all existing edge module resources.",
        "description": "List all existing edge module resources, along with their JSON representations.",
        "operationId": "EdgeModules_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource properties.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "edgeModuleId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Internal ID generated for the instance of the Video Analyzer edge module.",
                            "readOnly": true,
                            "x-nullable": false
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "The representation of an edge module."
                  },
                  "description": "A collection of EdgeModuleEntity items."
                },
                "@nextLink": {
                  "type": "string",
                  "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
                }
              },
              "type": "object",
              "description": "A collection of EdgeModuleEntity items."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/edgeModules/{edgeModuleName}": {
      "get": {
        "summary": "Retrieves an existing edge module resource.",
        "description": "Retrieves an existing edge module resource with the given name.",
        "operationId": "EdgeModules_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "edgeModuleId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Internal ID generated for the instance of the Video Analyzer edge module.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "The representation of an edge module."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "edgeModuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Edge Module name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "put": {
        "summary": "Creates a new edge module or updates an existing one.",
        "description": "Creates a new edge module or updates an existing one. An edge module resource enables a single instance of an Azure Video Analyzer IoT edge module to interact with the Video Analyzer Account. This is used for authorization and also to make sure that the particular edge module instance only has access to the data it requires from the Azure Video Analyzer service. A new edge module resource should be created for every new instance of an Azure Video Analyzer edge module deployed to you Azure IoT edge environment. Edge module resources can be deleted if the specific module is not in use anymore.",
        "operationId": "EdgeModules_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "edgeModuleId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Internal ID generated for the instance of the Video Analyzer edge module.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "The representation of an edge module."
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "edgeModuleId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Internal ID generated for the instance of the Video Analyzer edge module.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "The representation of an edge module."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "edgeModuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Edge Module name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "edgeModuleId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Internal ID generated for the instance of the Video Analyzer edge module.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "The representation of an edge module."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "delete": {
        "summary": "Deletes an existing edge module resource.",
        "description": "Deletes an existing edge module resource. Deleting the edge module resource will prevent an Azure Video Analyzer IoT edge module which was previously initiated with the module provisioning token from communicating with the cloud.",
        "operationId": "EdgeModules_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "edgeModuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Edge Module name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/edgeModules/{edgeModuleName}/listProvisioningToken": {
      "post": {
        "summary": "Creates a new provisioning token.",
        "description": "Creates a new provisioning token. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset.",
        "operationId": "EdgeModules_ListProvisioningToken",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "expirationDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date.",
                  "readOnly": true,
                  "x-nullable": false
                },
                "token": {
                  "type": "string",
                  "description": "The token blob to be provided to the Azure Video Analyzer IoT edge module through the Azure IoT Edge module twin properties.",
                  "readOnly": true
                }
              },
              "type": "object",
              "description": "Provisioning token properties. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "edgeModuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Edge Module name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "expirationDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The desired expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date."
                }
              },
              "type": "object",
              "required": [
                "expirationDate"
              ],
              "description": "The input parameters to generate registration token for the Azure Video Analyzer IoT edge module."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineTopologies": {
      "get": {
        "summary": "Retrieves a list of pipeline topologies.",
        "description": "Retrieves a list of pipeline topologies that have been added to the account, if any, along with their JSON representation.",
        "operationId": "PipelineTopologies_List",
        "responses": {
          "200": {
            "description": "Pipeline topologies were successfully retrieved.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource properties.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the parameter."
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "String",
                                    "SecretString",
                                    "Int",
                                    "Double",
                                    "Bool"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ParameterType",
                                    "values": [
                                      {
                                        "value": "String",
                                        "description": "The parameter's value is a string."
                                      },
                                      {
                                        "value": "SecretString",
                                        "description": "The parameter's value is a string that holds sensitive information."
                                      },
                                      {
                                        "value": "Int",
                                        "description": "The parameter's value is a 32-bit signed integer."
                                      },
                                      {
                                        "value": "Double",
                                        "description": "The parameter's value is a 64-bit double-precision floating point."
                                      },
                                      {
                                        "value": "Bool",
                                        "description": "The parameter's value is a boolean value that is either true or false."
                                      }
                                    ],
                                    "modelAsString": true
                                  },
                                  "description": "Type of the parameter."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description of the parameter."
                                },
                                "default": {
                                  "type": "string",
                                  "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                                }
                              },
                              "type": "object",
                              "required": [
                                "name",
                                "type"
                              ],
                              "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
                          },
                          "sources": {
                            "type": "array",
                            "items": {
                              "discriminator": "@type",
                              "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                              "properties": {
                                "@type": {
                                  "type": "string",
                                  "description": "The discriminator for derived types."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Node name. Must be unique within the topology."
                                }
                              },
                              "type": "object",
                              "required": [
                                "@type"
                              ],
                              "description": "Base class for topology source nodes."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
                          },
                          "processors": {
                            "type": "array",
                            "items": {
                              "discriminator": "@type",
                              "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                              "properties": {
                                "@type": {
                                  "type": "string",
                                  "description": "The discriminator for derived types."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Node name. Must be unique within the topology."
                                },
                                "inputs": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "nodeName": {
                                        "type": "string",
                                        "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                      }
                                    },
                                    "type": "object",
                                    "required": [
                                      "nodeName"
                                    ],
                                    "description": "Describes an input signal to be used on a pipeline node."
                                  },
                                  "x-ms-identifiers": [
                                    "nodeName"
                                  ],
                                  "description": "An array of upstream node references within the topology to be used as inputs for this node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "@type",
                                "inputs"
                              ],
                              "description": "Base class for topology processor nodes."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
                          },
                          "sinks": {
                            "type": "array",
                            "items": {
                              "discriminator": "@type",
                              "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                              "properties": {
                                "@type": {
                                  "type": "string",
                                  "description": "The discriminator for derived types."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Node name. Must be unique within the topology."
                                },
                                "inputs": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "nodeName": {
                                        "type": "string",
                                        "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                      }
                                    },
                                    "type": "object",
                                    "required": [
                                      "nodeName"
                                    ],
                                    "description": "Describes an input signal to be used on a pipeline node."
                                  },
                                  "x-ms-identifiers": [
                                    "nodeName"
                                  ],
                                  "description": "An array of upstream node references within the topology to be used as inputs for this node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "@type",
                                "inputs"
                              ],
                              "description": "Base class for topology sink nodes."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
                          }
                        },
                        "type": "object",
                        "required": [
                          "sources",
                          "sinks"
                        ]
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "Live",
                          "Batch"
                        ],
                        "x-ms-enum": {
                          "name": "Kind",
                          "values": [
                            {
                              "value": "Live",
                              "description": "Live pipeline topology resource."
                            },
                            {
                              "value": "Batch",
                              "description": "Batch pipeline topology resource."
                            }
                          ],
                          "modelAsString": true
                        },
                        "description": "Topology kind."
                      },
                      "sku": {
                        "description": "Describes the properties of a SKU.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "enum": [
                              "Live_S1",
                              "Batch_S1"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "values": [
                                {
                                  "value": "Live_S1",
                                  "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                                },
                                {
                                  "value": "Batch_S1",
                                  "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "The SKU name."
                          },
                          "tier": {
                            "type": "string",
                            "enum": [
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "values": [
                                {
                                  "value": "Standard",
                                  "description": "Standard tier."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "The SKU tier.",
                            "readOnly": true,
                            "x-nullable": false
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "type": "object",
                    "required": [
                      "kind",
                      "sku"
                    ],
                    "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
                  },
                  "description": "A collection of PipelineTopology items."
                },
                "@nextLink": {
                  "type": "string",
                  "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
                }
              },
              "type": "object",
              "description": "A collection of PipelineTopology items."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineTopologies/{pipelineTopologyName}": {
      "get": {
        "summary": "Retrieves a specific pipeline topology by name.",
        "description": "Retrieves a specific pipeline topology by name. If a topology with that name has been previously created, the call will return the JSON representation of that topology.",
        "operationId": "PipelineTopologies_Get",
        "responses": {
          "200": {
            "description": "Pipeline topology was retrieved successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "String",
                              "SecretString",
                              "Int",
                              "Double",
                              "Bool"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "values": [
                                {
                                  "value": "String",
                                  "description": "The parameter's value is a string."
                                },
                                {
                                  "value": "SecretString",
                                  "description": "The parameter's value is a string that holds sensitive information."
                                },
                                {
                                  "value": "Int",
                                  "description": "The parameter's value is a 32-bit signed integer."
                                },
                                {
                                  "value": "Double",
                                  "description": "The parameter's value is a 64-bit double-precision floating point."
                                },
                                {
                                  "value": "Bool",
                                  "description": "The parameter's value is a boolean value that is either true or false."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Type of the parameter."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the parameter."
                          },
                          "default": {
                            "type": "string",
                            "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name",
                          "type"
                        ],
                        "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
                    },
                    "sources": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type"
                        ],
                        "description": "Base class for topology source nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
                    },
                    "processors": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology processor nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
                    },
                    "sinks": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology sink nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
                    }
                  },
                  "type": "object",
                  "required": [
                    "sources",
                    "sinks"
                  ]
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "Live",
                    "Batch"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "values": [
                      {
                        "value": "Live",
                        "description": "Live pipeline topology resource."
                      },
                      {
                        "value": "Batch",
                        "description": "Batch pipeline topology resource."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Topology kind."
                },
                "sku": {
                  "description": "Describes the properties of a SKU.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "Live_S1",
                        "Batch_S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "values": [
                          {
                            "value": "Live_S1",
                            "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                          },
                          {
                            "value": "Batch_S1",
                            "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU name."
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard tier."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU tier.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object",
                  "required": [
                    "name"
                  ]
                }
              },
              "type": "object",
              "required": [
                "kind",
                "sku"
              ],
              "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pipeline topology unique identifier."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "put": {
        "summary": "Creates or updates a pipeline topology.",
        "description": "Creates a new pipeline topology or updates an existing one, with the given name. A pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics.",
        "operationId": "PipelineTopologies_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "The existing pipeline topology was updated.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "String",
                              "SecretString",
                              "Int",
                              "Double",
                              "Bool"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "values": [
                                {
                                  "value": "String",
                                  "description": "The parameter's value is a string."
                                },
                                {
                                  "value": "SecretString",
                                  "description": "The parameter's value is a string that holds sensitive information."
                                },
                                {
                                  "value": "Int",
                                  "description": "The parameter's value is a 32-bit signed integer."
                                },
                                {
                                  "value": "Double",
                                  "description": "The parameter's value is a 64-bit double-precision floating point."
                                },
                                {
                                  "value": "Bool",
                                  "description": "The parameter's value is a boolean value that is either true or false."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Type of the parameter."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the parameter."
                          },
                          "default": {
                            "type": "string",
                            "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name",
                          "type"
                        ],
                        "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
                    },
                    "sources": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type"
                        ],
                        "description": "Base class for topology source nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
                    },
                    "processors": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology processor nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
                    },
                    "sinks": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology sink nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
                    }
                  },
                  "type": "object",
                  "required": [
                    "sources",
                    "sinks"
                  ]
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "Live",
                    "Batch"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "values": [
                      {
                        "value": "Live",
                        "description": "Live pipeline topology resource."
                      },
                      {
                        "value": "Batch",
                        "description": "Batch pipeline topology resource."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Topology kind."
                },
                "sku": {
                  "description": "Describes the properties of a SKU.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "Live_S1",
                        "Batch_S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "values": [
                          {
                            "value": "Live_S1",
                            "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                          },
                          {
                            "value": "Batch_S1",
                            "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU name."
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard tier."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU tier.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object",
                  "required": [
                    "name"
                  ]
                }
              },
              "type": "object",
              "required": [
                "kind",
                "sku"
              ],
              "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
            }
          },
          "201": {
            "description": "A new pipeline topology was created.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "String",
                              "SecretString",
                              "Int",
                              "Double",
                              "Bool"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "values": [
                                {
                                  "value": "String",
                                  "description": "The parameter's value is a string."
                                },
                                {
                                  "value": "SecretString",
                                  "description": "The parameter's value is a string that holds sensitive information."
                                },
                                {
                                  "value": "Int",
                                  "description": "The parameter's value is a 32-bit signed integer."
                                },
                                {
                                  "value": "Double",
                                  "description": "The parameter's value is a 64-bit double-precision floating point."
                                },
                                {
                                  "value": "Bool",
                                  "description": "The parameter's value is a boolean value that is either true or false."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Type of the parameter."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the parameter."
                          },
                          "default": {
                            "type": "string",
                            "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name",
                          "type"
                        ],
                        "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
                    },
                    "sources": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type"
                        ],
                        "description": "Base class for topology source nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
                    },
                    "processors": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology processor nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
                    },
                    "sinks": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology sink nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
                    }
                  },
                  "type": "object",
                  "required": [
                    "sources",
                    "sinks"
                  ]
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "Live",
                    "Batch"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "values": [
                      {
                        "value": "Live",
                        "description": "Live pipeline topology resource."
                      },
                      {
                        "value": "Batch",
                        "description": "Batch pipeline topology resource."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Topology kind."
                },
                "sku": {
                  "description": "Describes the properties of a SKU.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "Live_S1",
                        "Batch_S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "values": [
                          {
                            "value": "Live_S1",
                            "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                          },
                          {
                            "value": "Batch_S1",
                            "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU name."
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard tier."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU tier.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object",
                  "required": [
                    "name"
                  ]
                }
              },
              "type": "object",
              "required": [
                "kind",
                "sku"
              ],
              "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pipeline topology unique identifier."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "String",
                              "SecretString",
                              "Int",
                              "Double",
                              "Bool"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "values": [
                                {
                                  "value": "String",
                                  "description": "The parameter's value is a string."
                                },
                                {
                                  "value": "SecretString",
                                  "description": "The parameter's value is a string that holds sensitive information."
                                },
                                {
                                  "value": "Int",
                                  "description": "The parameter's value is a 32-bit signed integer."
                                },
                                {
                                  "value": "Double",
                                  "description": "The parameter's value is a 64-bit double-precision floating point."
                                },
                                {
                                  "value": "Bool",
                                  "description": "The parameter's value is a boolean value that is either true or false."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Type of the parameter."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the parameter."
                          },
                          "default": {
                            "type": "string",
                            "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name",
                          "type"
                        ],
                        "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
                    },
                    "sources": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type"
                        ],
                        "description": "Base class for topology source nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
                    },
                    "processors": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology processor nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
                    },
                    "sinks": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology sink nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
                    }
                  },
                  "type": "object",
                  "required": [
                    "sources",
                    "sinks"
                  ]
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "Live",
                    "Batch"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "values": [
                      {
                        "value": "Live",
                        "description": "Live pipeline topology resource."
                      },
                      {
                        "value": "Batch",
                        "description": "Batch pipeline topology resource."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Topology kind."
                },
                "sku": {
                  "description": "Describes the properties of a SKU.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "Live_S1",
                        "Batch_S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "values": [
                          {
                            "value": "Live_S1",
                            "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                          },
                          {
                            "value": "Batch_S1",
                            "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU name."
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard tier."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU tier.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object",
                  "required": [
                    "name"
                  ]
                }
              },
              "type": "object",
              "required": [
                "kind",
                "sku"
              ],
              "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "delete": {
        "summary": "Deletes a pipeline topology.",
        "description": "Deletes a pipeline topology with the given name. This method should be called after all instances of the topology have been stopped and deleted.",
        "operationId": "PipelineTopologies_Delete",
        "responses": {
          "200": {
            "description": "The pipeline topology was deleted successfully."
          },
          "204": {
            "description": "The pipeline topology was not found."
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pipeline topology unique identifier."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "patch": {
        "summary": "Updates an existing pipeline topology.",
        "description": "Updates an existing pipeline topology with the given name. If the associated live pipelines or pipeline jobs are in active or processing state, respectively, then only the description can be updated. Else, the properties that can be updated include: description, parameter declarations, sources, processors, and sinks.",
        "operationId": "PipelineTopologies_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "String",
                              "SecretString",
                              "Int",
                              "Double",
                              "Bool"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "values": [
                                {
                                  "value": "String",
                                  "description": "The parameter's value is a string."
                                },
                                {
                                  "value": "SecretString",
                                  "description": "The parameter's value is a string that holds sensitive information."
                                },
                                {
                                  "value": "Int",
                                  "description": "The parameter's value is a 32-bit signed integer."
                                },
                                {
                                  "value": "Double",
                                  "description": "The parameter's value is a 64-bit double-precision floating point."
                                },
                                {
                                  "value": "Bool",
                                  "description": "The parameter's value is a boolean value that is either true or false."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Type of the parameter."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the parameter."
                          },
                          "default": {
                            "type": "string",
                            "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name",
                          "type"
                        ],
                        "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
                    },
                    "sources": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type"
                        ],
                        "description": "Base class for topology source nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
                    },
                    "processors": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology processor nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
                    },
                    "sinks": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology sink nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
                    }
                  },
                  "type": "object",
                  "required": [
                    "sources",
                    "sinks"
                  ]
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "Live",
                    "Batch"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "values": [
                      {
                        "value": "Live",
                        "description": "Live pipeline topology resource."
                      },
                      {
                        "value": "Batch",
                        "description": "Batch pipeline topology resource."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Topology kind."
                },
                "sku": {
                  "description": "Describes the properties of a SKU.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "Live_S1",
                        "Batch_S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "values": [
                          {
                            "value": "Live_S1",
                            "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                          },
                          {
                            "value": "Batch_S1",
                            "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU name."
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard tier."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU tier.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object",
                  "required": [
                    "name"
                  ]
                }
              },
              "type": "object",
              "required": [
                "kind",
                "sku"
              ],
              "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pipeline topology unique identifier."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "String",
                              "SecretString",
                              "Int",
                              "Double",
                              "Bool"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "values": [
                                {
                                  "value": "String",
                                  "description": "The parameter's value is a string."
                                },
                                {
                                  "value": "SecretString",
                                  "description": "The parameter's value is a string that holds sensitive information."
                                },
                                {
                                  "value": "Int",
                                  "description": "The parameter's value is a 32-bit signed integer."
                                },
                                {
                                  "value": "Double",
                                  "description": "The parameter's value is a 64-bit double-precision floating point."
                                },
                                {
                                  "value": "Bool",
                                  "description": "The parameter's value is a boolean value that is either true or false."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Type of the parameter."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the parameter."
                          },
                          "default": {
                            "type": "string",
                            "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name",
                          "type"
                        ],
                        "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
                    },
                    "sources": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type"
                        ],
                        "description": "Base class for topology source nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
                    },
                    "processors": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology processor nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
                    },
                    "sinks": {
                      "type": "array",
                      "items": {
                        "discriminator": "@type",
                        "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "description": "The discriminator for derived types."
                          },
                          "name": {
                            "type": "string",
                            "description": "Node name. Must be unique within the topology."
                          },
                          "inputs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "nodeName": {
                                  "type": "string",
                                  "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                                }
                              },
                              "type": "object",
                              "required": [
                                "nodeName"
                              ],
                              "description": "Describes an input signal to be used on a pipeline node."
                            },
                            "x-ms-identifiers": [
                              "nodeName"
                            ],
                            "description": "An array of upstream node references within the topology to be used as inputs for this node."
                          }
                        },
                        "type": "object",
                        "required": [
                          "@type",
                          "inputs"
                        ],
                        "description": "Base class for topology sink nodes."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
                    }
                  },
                  "type": "object"
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "Live",
                    "Batch"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "values": [
                      {
                        "value": "Live",
                        "description": "Live pipeline topology resource."
                      },
                      {
                        "value": "Batch",
                        "description": "Batch pipeline topology resource."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Topology kind."
                },
                "sku": {
                  "description": "Describes the properties of a SKU.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "Live_S1",
                        "Batch_S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "values": [
                          {
                            "value": "Live_S1",
                            "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                          },
                          {
                            "value": "Batch_S1",
                            "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU name."
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard tier."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "The SKU tier.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object",
                  "required": [
                    "name"
                  ]
                }
              },
              "type": "object",
              "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines": {
      "get": {
        "summary": "Retrieves a list of live pipelines.",
        "description": "Retrieves a list of live pipelines that have been created, along with their JSON representations.",
        "operationId": "LivePipelines_List",
        "responses": {
          "200": {
            "description": "List of live pipelines that were successfully retrieved.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource properties.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "topologyName": {
                            "type": "string",
                            "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
                          },
                          "description": {
                            "type": "string",
                            "description": "An optional description for the pipeline."
                          },
                          "bitrateKbps": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "Inactive",
                              "Activating",
                              "Active",
                              "Deactivating"
                            ],
                            "x-ms-enum": {
                              "name": "LivePipelineState",
                              "values": [
                                {
                                  "value": "Inactive",
                                  "description": "The live pipeline is idle and not processing media."
                                },
                                {
                                  "value": "Activating",
                                  "description": "The live pipeline is transitioning into the active state."
                                },
                                {
                                  "value": "Active",
                                  "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                                },
                                {
                                  "value": "Deactivating",
                                  "description": "The live pipeline is transitioning into the inactive state."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Current state of the pipeline (read-only).",
                            "readOnly": true,
                            "x-nullable": false
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the parameter declared in the pipeline topology."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Parameter value to be applied on this specific pipeline."
                                }
                              },
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                          }
                        },
                        "type": "object",
                        "required": [
                          "topologyName",
                          "bitrateKbps"
                        ]
                      }
                    },
                    "type": "object",
                    "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
                  },
                  "description": "A collection of LivePipeline items."
                },
                "@nextLink": {
                  "type": "string",
                  "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
                }
              },
              "type": "object",
              "description": "A collection of LivePipeline items."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}": {
      "get": {
        "summary": "Retrieves a specific live pipeline by name.",
        "description": "Retrieves a specific live pipeline by name. If a live pipeline with that name has been previously created, the call will return the JSON representation of that instance.",
        "operationId": "LivePipelines_Get",
        "responses": {
          "200": {
            "description": "The live pipeline was retrieved successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "bitrateKbps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Inactive",
                        "Activating",
                        "Active",
                        "Deactivating"
                      ],
                      "x-ms-enum": {
                        "name": "LivePipelineState",
                        "values": [
                          {
                            "value": "Inactive",
                            "description": "The live pipeline is idle and not processing media."
                          },
                          {
                            "value": "Activating",
                            "description": "The live pipeline is transitioning into the active state."
                          },
                          {
                            "value": "Active",
                            "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                          },
                          {
                            "value": "Deactivating",
                            "description": "The live pipeline is transitioning into the inactive state."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName",
                    "bitrateKbps"
                  ]
                }
              },
              "type": "object",
              "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "put": {
        "summary": "Creates or updates a live pipeline.",
        "description": "Creates a new live pipeline or updates an existing one, with the given name.",
        "operationId": "LivePipelines_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "The existing live pipeline was updated.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "bitrateKbps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Inactive",
                        "Activating",
                        "Active",
                        "Deactivating"
                      ],
                      "x-ms-enum": {
                        "name": "LivePipelineState",
                        "values": [
                          {
                            "value": "Inactive",
                            "description": "The live pipeline is idle and not processing media."
                          },
                          {
                            "value": "Activating",
                            "description": "The live pipeline is transitioning into the active state."
                          },
                          {
                            "value": "Active",
                            "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                          },
                          {
                            "value": "Deactivating",
                            "description": "The live pipeline is transitioning into the inactive state."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName",
                    "bitrateKbps"
                  ]
                }
              },
              "type": "object",
              "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
            }
          },
          "201": {
            "description": "A new live pipeline was created.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "bitrateKbps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Inactive",
                        "Activating",
                        "Active",
                        "Deactivating"
                      ],
                      "x-ms-enum": {
                        "name": "LivePipelineState",
                        "values": [
                          {
                            "value": "Inactive",
                            "description": "The live pipeline is idle and not processing media."
                          },
                          {
                            "value": "Activating",
                            "description": "The live pipeline is transitioning into the active state."
                          },
                          {
                            "value": "Active",
                            "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                          },
                          {
                            "value": "Deactivating",
                            "description": "The live pipeline is transitioning into the inactive state."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName",
                    "bitrateKbps"
                  ]
                }
              },
              "type": "object",
              "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "bitrateKbps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Inactive",
                        "Activating",
                        "Active",
                        "Deactivating"
                      ],
                      "x-ms-enum": {
                        "name": "LivePipelineState",
                        "values": [
                          {
                            "value": "Inactive",
                            "description": "The live pipeline is idle and not processing media."
                          },
                          {
                            "value": "Activating",
                            "description": "The live pipeline is transitioning into the active state."
                          },
                          {
                            "value": "Active",
                            "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                          },
                          {
                            "value": "Deactivating",
                            "description": "The live pipeline is transitioning into the inactive state."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName",
                    "bitrateKbps"
                  ]
                }
              },
              "type": "object",
              "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "delete": {
        "summary": "Deletes a live pipeline.",
        "description": "Deletes a live pipeline with the given name.",
        "operationId": "LivePipelines_Delete",
        "responses": {
          "200": {
            "description": "The live pipeline was deleted successfully."
          },
          "204": {
            "description": "The live pipeline was not found."
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "patch": {
        "summary": "Updates an existing live pipeline.",
        "description": "Updates an existing live pipeline with the given name. Properties that can be updated include: description, bitrateKbps, and parameter definitions. Only the description can be updated while the live pipeline is active.",
        "operationId": "LivePipelines_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "bitrateKbps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Inactive",
                        "Activating",
                        "Active",
                        "Deactivating"
                      ],
                      "x-ms-enum": {
                        "name": "LivePipelineState",
                        "values": [
                          {
                            "value": "Inactive",
                            "description": "The live pipeline is idle and not processing media."
                          },
                          {
                            "value": "Activating",
                            "description": "The live pipeline is transitioning into the active state."
                          },
                          {
                            "value": "Active",
                            "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                          },
                          {
                            "value": "Deactivating",
                            "description": "The live pipeline is transitioning into the inactive state."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName",
                    "bitrateKbps"
                  ]
                }
              },
              "type": "object",
              "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "bitrateKbps": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Inactive",
                        "Activating",
                        "Active",
                        "Deactivating"
                      ],
                      "x-ms-enum": {
                        "name": "LivePipelineState",
                        "values": [
                          {
                            "value": "Inactive",
                            "description": "The live pipeline is idle and not processing media."
                          },
                          {
                            "value": "Activating",
                            "description": "The live pipeline is transitioning into the active state."
                          },
                          {
                            "value": "Active",
                            "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                          },
                          {
                            "value": "Deactivating",
                            "description": "The live pipeline is transitioning into the inactive state."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}/activate": {
      "post": {
        "summary": "Activates a live pipeline.",
        "description": "Activates a live pipeline with the given name.",
        "operationId": "LivePipelines_Activate",
        "responses": {
          "200": {
            "description": "The live pipeline was activated successfully."
          },
          "202": {
            "description": "Request to activate a live pipeline was accepted, and is being processed."
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}/deactivate": {
      "post": {
        "summary": "Deactivates a live pipeline.",
        "description": "Deactivates a live pipeline with the given name.",
        "operationId": "LivePipelines_Deactivate",
        "responses": {
          "200": {
            "description": "The live pipeline was deactivated successfully."
          },
          "202": {
            "description": "Request to deactivate a live pipeline was accepted, and is being processed."
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs": {
      "get": {
        "summary": "Retrieves a list of pipeline jobs.",
        "description": "Retrieves a list of all live pipelines that have been created, along with their JSON representations.",
        "operationId": "PipelineJobs_List",
        "responses": {
          "200": {
            "description": "List of pipeline jobs that were successfully retrieved.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource properties.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "topologyName": {
                            "type": "string",
                            "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
                          },
                          "description": {
                            "type": "string",
                            "description": "An optional description for the pipeline."
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "Processing",
                              "Canceled",
                              "Completed",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PipelineJobState",
                              "values": [
                                {
                                  "value": "Processing",
                                  "description": "Pipeline job is processing."
                                },
                                {
                                  "value": "Canceled",
                                  "description": "Pipeline job is canceled."
                                },
                                {
                                  "value": "Completed",
                                  "description": "Pipeline job completed."
                                },
                                {
                                  "value": "Failed",
                                  "description": "Pipeline job failed."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Current state of the pipeline (read-only).",
                            "readOnly": true,
                            "x-nullable": false
                          },
                          "expiration": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
                            "readOnly": true,
                            "x-nullable": false
                          },
                          "error": {
                            "description": "Details about the error, in case the pipeline job fails.",
                            "readOnly": true,
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The error code."
                              },
                              "message": {
                                "type": "string",
                                "description": "The error message."
                              }
                            },
                            "type": "object"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the parameter declared in the pipeline topology."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Parameter value to be applied on this specific pipeline."
                                }
                              },
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                          }
                        },
                        "type": "object",
                        "required": [
                          "topologyName"
                        ]
                      }
                    },
                    "type": "object",
                    "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
                  },
                  "description": "A collection of PipelineJob items."
                },
                "@nextLink": {
                  "type": "string",
                  "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
                }
              },
              "type": "object",
              "description": "A collection of PipelineJob items."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}": {
      "get": {
        "summary": "Gets a specific pipeline job by name.",
        "description": "Retrieves a specific pipeline job by name. If a pipeline job with that name has been previously created, the call will return the JSON representation of that instance.",
        "operationId": "PipelineJobs_Get",
        "responses": {
          "200": {
            "description": "Pipeline job was retrieved successfully.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Processing",
                        "Canceled",
                        "Completed",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineJobState",
                        "values": [
                          {
                            "value": "Processing",
                            "description": "Pipeline job is processing."
                          },
                          {
                            "value": "Canceled",
                            "description": "Pipeline job is canceled."
                          },
                          {
                            "value": "Completed",
                            "description": "Pipeline job completed."
                          },
                          {
                            "value": "Failed",
                            "description": "Pipeline job failed."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "error": {
                      "description": "Details about the error, in case the pipeline job fails.",
                      "readOnly": true,
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "message": {
                          "type": "string",
                          "description": "The error message."
                        }
                      },
                      "type": "object"
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName"
                  ]
                }
              },
              "type": "object",
              "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "put": {
        "summary": "Creates or updates a pipeline job.",
        "description": "Creates a new pipeline job or updates an existing one, with the given name.",
        "operationId": "PipelineJobs_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "The existing pipeline job was updated.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Processing",
                        "Canceled",
                        "Completed",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineJobState",
                        "values": [
                          {
                            "value": "Processing",
                            "description": "Pipeline job is processing."
                          },
                          {
                            "value": "Canceled",
                            "description": "Pipeline job is canceled."
                          },
                          {
                            "value": "Completed",
                            "description": "Pipeline job completed."
                          },
                          {
                            "value": "Failed",
                            "description": "Pipeline job failed."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "error": {
                      "description": "Details about the error, in case the pipeline job fails.",
                      "readOnly": true,
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "message": {
                          "type": "string",
                          "description": "The error message."
                        }
                      },
                      "type": "object"
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName"
                  ]
                }
              },
              "type": "object",
              "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
            }
          },
          "201": {
            "description": "A new pipeline job was created.",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Processing",
                        "Canceled",
                        "Completed",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineJobState",
                        "values": [
                          {
                            "value": "Processing",
                            "description": "Pipeline job is processing."
                          },
                          {
                            "value": "Canceled",
                            "description": "Pipeline job is canceled."
                          },
                          {
                            "value": "Completed",
                            "description": "Pipeline job completed."
                          },
                          {
                            "value": "Failed",
                            "description": "Pipeline job failed."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "error": {
                      "description": "Details about the error, in case the pipeline job fails.",
                      "readOnly": true,
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "message": {
                          "type": "string",
                          "description": "The error message."
                        }
                      },
                      "type": "object"
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName"
                  ]
                }
              },
              "type": "object",
              "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Processing",
                        "Canceled",
                        "Completed",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineJobState",
                        "values": [
                          {
                            "value": "Processing",
                            "description": "Pipeline job is processing."
                          },
                          {
                            "value": "Canceled",
                            "description": "Pipeline job is canceled."
                          },
                          {
                            "value": "Completed",
                            "description": "Pipeline job completed."
                          },
                          {
                            "value": "Failed",
                            "description": "Pipeline job failed."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "error": {
                      "description": "Details about the error, in case the pipeline job fails.",
                      "readOnly": true,
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "message": {
                          "type": "string",
                          "description": "The error message."
                        }
                      },
                      "type": "object"
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName"
                  ]
                }
              },
              "type": "object",
              "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "delete": {
        "summary": "Deletes a pipeline job.",
        "description": "Deletes a pipeline job with the given name.",
        "operationId": "PipelineJobs_Delete",
        "responses": {
          "200": {
            "description": "The pipeline job was deleted successfully."
          },
          "204": {
            "description": "The pipeline job was not found."
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "patch": {
        "summary": "Updates an existing pipeline job.",
        "description": "Updates an existing pipeline job with the given name. Properties that can be updated include: description.",
        "operationId": "PipelineJobs_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Processing",
                        "Canceled",
                        "Completed",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineJobState",
                        "values": [
                          {
                            "value": "Processing",
                            "description": "Pipeline job is processing."
                          },
                          {
                            "value": "Canceled",
                            "description": "Pipeline job is canceled."
                          },
                          {
                            "value": "Completed",
                            "description": "Pipeline job completed."
                          },
                          {
                            "value": "Failed",
                            "description": "Pipeline job failed."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "error": {
                      "description": "Details about the error, in case the pipeline job fails.",
                      "readOnly": true,
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "message": {
                          "type": "string",
                          "description": "The error message."
                        }
                      },
                      "type": "object"
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object",
                  "required": [
                    "topologyName"
                  ]
                }
              },
              "type": "object",
              "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "topologyName": {
                      "type": "string",
                      "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional description for the pipeline."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "Processing",
                        "Canceled",
                        "Completed",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineJobState",
                        "values": [
                          {
                            "value": "Processing",
                            "description": "Pipeline job is processing."
                          },
                          {
                            "value": "Canceled",
                            "description": "Pipeline job is canceled."
                          },
                          {
                            "value": "Completed",
                            "description": "Pipeline job completed."
                          },
                          {
                            "value": "Failed",
                            "description": "Pipeline job failed."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Current state of the pipeline (read-only).",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "error": {
                      "description": "Details about the error, in case the pipeline job fails.",
                      "readOnly": true,
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "message": {
                          "type": "string",
                          "description": "The error message."
                        }
                      },
                      "type": "object"
                    },
                    "parameters": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the parameter declared in the pipeline topology."
                          },
                          "value": {
                            "type": "string",
                            "description": "Parameter value to be applied on this specific pipeline."
                          }
                        },
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}/cancel": {
      "post": {
        "summary": "Cancels a pipeline job.",
        "description": "Cancels a pipeline job with the given name.",
        "operationId": "PipelineJobs_Cancel",
        "responses": {
          "200": {
            "description": "The pipeline job was cancelled successfully."
          },
          "202": {
            "description": "Request to cancel the pipeline job was accepted, and is being processed."
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}/operationStatuses/{operationId}": {
      "get": {
        "summary": "Get the operation status",
        "description": "Get the operation status of a live pipeline.",
        "operationId": "LivePipelineOperationStatuses_Get",
        "responses": {
          "200": {
            "description": "Live pipeline operation status was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/LivePipelineOperationStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The operation ID."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}/operationStatuses/{operationId}": {
      "get": {
        "summary": "Get the operation statuses.",
        "description": "Get the operation status of a pipeline job with the given operationId.",
        "operationId": "PipelineJobOperationStatuses_Get",
        "responses": {
          "200": {
            "description": "The pipeline job operation status was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/PipelineJobOperationStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The operation ID."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/providers/Microsoft.Media/operations": {
      "get": {
        "summary": "List Operations",
        "description": "Lists all the Media operations.",
        "operationId": "Operations_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The operation name."
                      },
                      "display": {
                        "description": "The operation display name.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The service provider."
                          },
                          "resource": {
                            "type": "string",
                            "description": "Resource on which the operation is performed."
                          },
                          "operation": {
                            "type": "string",
                            "description": "The operation type."
                          },
                          "description": {
                            "type": "string",
                            "description": "The operation description."
                          }
                        },
                        "type": "object"
                      },
                      "origin": {
                        "type": "string",
                        "description": "Origin of the operation."
                      },
                      "properties": {
                        "description": "Operation properties format.",
                        "properties": {
                          "serviceSpecification": {
                            "description": "The service specifications.",
                            "readOnly": true,
                            "properties": {
                              "logSpecifications": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The diagnostic log category name.",
                                      "readOnly": true
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "The diagnostic log category display name.",
                                      "readOnly": true
                                    },
                                    "blobDuration": {
                                      "type": "string",
                                      "description": "The time range for requests in each blob.",
                                      "readOnly": true
                                    }
                                  },
                                  "type": "object",
                                  "description": "A diagnostic log emitted by service."
                                },
                                "x-ms-identifiers": [
                                  "blobDuration",
                                  "name"
                                ],
                                "description": "List of log specifications.",
                                "readOnly": true
                              },
                              "metricSpecifications": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The metric name.",
                                      "readOnly": true
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "The metric display name.",
                                      "readOnly": true
                                    },
                                    "displayDescription": {
                                      "type": "string",
                                      "description": "The metric display description.",
                                      "readOnly": true
                                    },
                                    "unit": {
                                      "type": "string",
                                      "enum": [
                                        "Bytes",
                                        "Count",
                                        "Milliseconds"
                                      ],
                                      "x-ms-enum": {
                                        "name": "MetricUnit",
                                        "values": [
                                          {
                                            "value": "Bytes",
                                            "description": "The number of bytes."
                                          },
                                          {
                                            "value": "Count",
                                            "description": "The count."
                                          },
                                          {
                                            "value": "Milliseconds",
                                            "description": "The number of milliseconds."
                                          }
                                        ],
                                        "modelAsString": true
                                      },
                                      "description": "The metric unit",
                                      "readOnly": true,
                                      "x-nullable": false
                                    },
                                    "aggregationType": {
                                      "type": "string",
                                      "enum": [
                                        "Average",
                                        "Count",
                                        "Total"
                                      ],
                                      "x-ms-enum": {
                                        "name": "MetricAggregationType",
                                        "values": [
                                          {
                                            "value": "Average",
                                            "description": "The average."
                                          },
                                          {
                                            "value": "Count",
                                            "description": "The count of a number of items, usually requests."
                                          },
                                          {
                                            "value": "Total",
                                            "description": "The sum."
                                          }
                                        ],
                                        "modelAsString": true
                                      },
                                      "description": "The metric aggregation type",
                                      "readOnly": true,
                                      "x-nullable": false
                                    },
                                    "lockAggregationType": {
                                      "type": "string",
                                      "enum": [
                                        "Average",
                                        "Count",
                                        "Total"
                                      ],
                                      "x-ms-enum": {
                                        "name": "MetricAggregationType",
                                        "values": [
                                          {
                                            "value": "Average",
                                            "description": "The average."
                                          },
                                          {
                                            "value": "Count",
                                            "description": "The count of a number of items, usually requests."
                                          },
                                          {
                                            "value": "Total",
                                            "description": "The sum."
                                          }
                                        ],
                                        "modelAsString": true
                                      },
                                      "description": "The metric lock aggregation type",
                                      "readOnly": true,
                                      "x-nullable": true
                                    },
                                    "supportedAggregationTypes": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Supported aggregation types."
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "items": {
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The metric dimension name.",
                                            "readOnly": true
                                          },
                                          "displayName": {
                                            "type": "string",
                                            "description": "The display name for the dimension.",
                                            "readOnly": true
                                          },
                                          "toBeExportedForShoebox": {
                                            "type": "boolean",
                                            "description": "Whether to export metric to shoebox.",
                                            "readOnly": true,
                                            "x-nullable": false
                                          }
                                        },
                                        "type": "object",
                                        "description": "A metric dimension."
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ],
                                      "description": "The metric dimensions.",
                                      "readOnly": true
                                    },
                                    "enableRegionalMdmAccount": {
                                      "type": "boolean",
                                      "description": "Indicates whether regional MDM account is enabled.",
                                      "readOnly": true,
                                      "x-nullable": false
                                    },
                                    "sourceMdmAccount": {
                                      "type": "string",
                                      "description": "The source MDM account.",
                                      "readOnly": true
                                    },
                                    "sourceMdmNamespace": {
                                      "type": "string",
                                      "description": "The source MDM namespace.",
                                      "readOnly": true
                                    },
                                    "supportedTimeGrainTypes": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "The supported time grain types.",
                                      "readOnly": true
                                    }
                                  },
                                  "type": "object",
                                  "description": "A metric emitted by service."
                                },
                                "x-ms-identifiers": [
                                  "name",
                                  "unit"
                                ],
                                "description": "List of metric specifications.",
                                "readOnly": true
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane.",
                        "x-nullable": true
                      },
                      "actionType": {
                        "type": "string",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "values": [
                            {
                              "value": "Internal",
                              "description": "An internal action."
                            }
                          ],
                          "modelAsString": true
                        },
                        "description": "Indicates the action type.",
                        "x-nullable": true
                      }
                    },
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "description": "An operation."
                  },
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "description": "A collection of Operation items."
                }
              },
              "type": "object",
              "description": "A collection of Operation items."
            }
          }
        },
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers": {
      "get": {
        "summary": "List Video Analyzer accounts",
        "description": "Lists the Video Analyzer accounts in the specified resource group.",
        "operationId": "VideoAnalyzers_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource properties.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "storageAccounts": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                                },
                                "identity": {
                                  "description": "A managed identity that Video Analyzer will use to access the storage account.",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                                    }
                                  },
                                  "type": "object",
                                  "required": [
                                    "userAssignedIdentity"
                                  ]
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The current status of the storage account mapping.",
                                  "readOnly": true
                                }
                              },
                              "type": "object",
                              "required": [
                                "id"
                              ],
                              "description": "The details about the associated storage account."
                            },
                            "description": "The storage accounts for this resource."
                          },
                          "endpoints": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "endpointUrl": {
                                  "type": "string",
                                  "description": "The URL of the endpoint."
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ClientApi"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VideoAnalyzerEndpointType",
                                    "values": [
                                      {
                                        "value": "ClientApi",
                                        "description": "The client API endpoint."
                                      }
                                    ],
                                    "modelAsString": true
                                  },
                                  "description": "The type of the endpoint."
                                }
                              },
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "The endpoint details."
                            },
                            "x-ms-identifiers": [
                              "endpointUrl"
                            ],
                            "description": "The endpoints associated with this resource.",
                            "readOnly": true
                          },
                          "encryption": {
                            "description": "The account encryption properties.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "SystemKey",
                                  "CustomerKey"
                                ],
                                "x-ms-enum": {
                                  "name": "AccountEncryptionKeyType",
                                  "values": [
                                    {
                                      "value": "SystemKey",
                                      "description": "The Account Key is encrypted with a System Key."
                                    },
                                    {
                                      "value": "CustomerKey",
                                      "description": "The Account Key is encrypted with a Customer Key."
                                    }
                                  ],
                                  "modelAsString": true
                                },
                                "description": "The type of key used to encrypt the Account Key."
                              },
                              "keyVaultProperties": {
                                "description": "The properties of the key used to encrypt the account.",
                                "properties": {
                                  "keyIdentifier": {
                                    "type": "string",
                                    "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                                  },
                                  "currentKeyIdentifier": {
                                    "type": "string",
                                    "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                                    "readOnly": true
                                  }
                                },
                                "type": "object",
                                "required": [
                                  "keyIdentifier"
                                ]
                              },
                              "identity": {
                                "description": "The Key Vault identity.",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                                  }
                                },
                                "type": "object",
                                "required": [
                                  "userAssignedIdentity"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "description": "The current status of the Key Vault mapping.",
                                "readOnly": true
                              }
                            },
                            "type": "object",
                            "required": [
                              "type"
                            ]
                          },
                          "iotHubs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The IoT Hub resource identifier."
                                },
                                "identity": {
                                  "description": "The IoT Hub identity.",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                                    }
                                  },
                                  "type": "object",
                                  "required": [
                                    "userAssignedIdentity"
                                  ]
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The current status of the Iot Hub mapping.",
                                  "readOnly": true
                                }
                              },
                              "type": "object",
                              "required": [
                                "id",
                                "identity"
                              ],
                              "description": "The IoT Hub details."
                            },
                            "description": "The IoT Hubs for this resource."
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Public network access is enabled."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Public network access is disabled."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                            "x-nullable": true
                          },
                          "networkAccessControl": {
                            "description": "Network access control for Video Analyzer.",
                            "x-nullable": true,
                            "properties": {
                              "integration": {
                                "description": "Public network access for integration group.",
                                "x-nullable": true,
                                "properties": {
                                  "publicNetworkAccess": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PublicNetworkAccess",
                                      "values": [
                                        {
                                          "value": "Enabled",
                                          "description": "Public network access is enabled."
                                        },
                                        {
                                          "value": "Disabled",
                                          "description": "Public network access is disabled."
                                        }
                                      ],
                                      "modelAsString": true
                                    },
                                    "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                                    "x-nullable": true
                                  }
                                },
                                "type": "object"
                              },
                              "ingestion": {
                                "description": "Public network access for ingestion group.",
                                "x-nullable": true,
                                "properties": {
                                  "publicNetworkAccess": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PublicNetworkAccess",
                                      "values": [
                                        {
                                          "value": "Enabled",
                                          "description": "Public network access is enabled."
                                        },
                                        {
                                          "value": "Disabled",
                                          "description": "Public network access is disabled."
                                        }
                                      ],
                                      "modelAsString": true
                                    },
                                    "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                                    "x-nullable": true
                                  }
                                },
                                "type": "object"
                              },
                              "consumption": {
                                "description": "Public network access for consumption group.",
                                "x-nullable": true,
                                "properties": {
                                  "publicNetworkAccess": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PublicNetworkAccess",
                                      "values": [
                                        {
                                          "value": "Enabled",
                                          "description": "Public network access is enabled."
                                        },
                                        {
                                          "value": "Disabled",
                                          "description": "Public network access is disabled."
                                        }
                                      ],
                                      "modelAsString": true
                                    },
                                    "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                                    "x-nullable": true
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "provisioningState": {
                            "type": "string",
                            "enum": [
                              "Failed",
                              "InProgress",
                              "Succeeded"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "values": [
                                {
                                  "value": "Failed",
                                  "description": "Provisioning state failed."
                                },
                                {
                                  "value": "InProgress",
                                  "description": "Provisioning state in progress."
                                },
                                {
                                  "value": "Succeeded",
                                  "description": "Provisioning state succeeded."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Provisioning state of the Video Analyzer account.",
                            "readOnly": true,
                            "x-nullable": false
                          },
                          "privateEndpointConnections": {
                            "items": {
                              "type": "object",
                              "description": "The Private Endpoint Connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "type": "object",
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "type": "array",
                            "description": "Private Endpoint Connections created under Video Analyzer account.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "storageAccounts"
                        ]
                      },
                      "identity": {
                        "description": "The identities associated to the Video Analyzer resource.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The identity type."
                          },
                          "userAssignedIdentities": {
                            "description": "The User Assigned Managed Identities.",
                            "type": "object",
                            "additionalProperties": {
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID.",
                                  "readOnly": true,
                                  "x-nullable": true
                                },
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID.",
                                  "readOnly": true,
                                  "x-nullable": true
                                }
                              },
                              "type": "object",
                              "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                            }
                          }
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "type": "object",
                    "description": "The Video Analyzer account."
                  },
                  "description": "A collection of VideoAnalyzer items."
                }
              },
              "type": "object",
              "description": "A collection of VideoAnalyzer items."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}": {
      "get": {
        "summary": "Get a Video Analyzer account",
        "description": "Get the details of the specified Video Analyzer account",
        "operationId": "VideoAnalyzers_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "storageAccounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                          },
                          "identity": {
                            "description": "A managed identity that Video Analyzer will use to access the storage account.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the storage account mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "description": "The details about the associated storage account."
                      },
                      "description": "The storage accounts for this resource."
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "endpointUrl": {
                            "type": "string",
                            "description": "The URL of the endpoint."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ClientApi"
                            ],
                            "x-ms-enum": {
                              "name": "VideoAnalyzerEndpointType",
                              "values": [
                                {
                                  "value": "ClientApi",
                                  "description": "The client API endpoint."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "The type of the endpoint."
                          }
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "description": "The endpoint details."
                      },
                      "x-ms-identifiers": [
                        "endpointUrl"
                      ],
                      "description": "The endpoints associated with this resource.",
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The account encryption properties.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "SystemKey",
                            "CustomerKey"
                          ],
                          "x-ms-enum": {
                            "name": "AccountEncryptionKeyType",
                            "values": [
                              {
                                "value": "SystemKey",
                                "description": "The Account Key is encrypted with a System Key."
                              },
                              {
                                "value": "CustomerKey",
                                "description": "The Account Key is encrypted with a Customer Key."
                              }
                            ],
                            "modelAsString": true
                          },
                          "description": "The type of key used to encrypt the Account Key."
                        },
                        "keyVaultProperties": {
                          "description": "The properties of the key used to encrypt the account.",
                          "properties": {
                            "keyIdentifier": {
                              "type": "string",
                              "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                            },
                            "currentKeyIdentifier": {
                              "type": "string",
                              "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                              "readOnly": true
                            }
                          },
                          "type": "object",
                          "required": [
                            "keyIdentifier"
                          ]
                        },
                        "identity": {
                          "description": "The Key Vault identity.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                            }
                          },
                          "type": "object",
                          "required": [
                            "userAssignedIdentity"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the Key Vault mapping.",
                          "readOnly": true
                        }
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ]
                    },
                    "iotHubs": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The IoT Hub resource identifier."
                          },
                          "identity": {
                            "description": "The IoT Hub identity.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Iot Hub mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id",
                          "identity"
                        ],
                        "description": "The IoT Hub details."
                      },
                      "description": "The IoT Hubs for this resource."
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                      "x-nullable": true
                    },
                    "networkAccessControl": {
                      "description": "Network access control for Video Analyzer.",
                      "x-nullable": true,
                      "properties": {
                        "integration": {
                          "description": "Public network access for integration group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "ingestion": {
                          "description": "Public network access for ingestion group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "consumption": {
                          "description": "Public network access for consumption group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "type": "string",
                      "enum": [
                        "Failed",
                        "InProgress",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Provisioning state failed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Provisioning state in progress."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Provisioning state succeeded."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Video Analyzer account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "privateEndpointConnections": {
                      "items": {
                        "type": "object",
                        "description": "The Private Endpoint Connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "type": "object",
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "type": "array",
                      "description": "Private Endpoint Connections created under Video Analyzer account.",
                      "readOnly": true
                    }
                  },
                  "type": "object",
                  "required": [
                    "storageAccounts"
                  ]
                },
                "identity": {
                  "description": "The identities associated to the Video Analyzer resource.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type."
                    },
                    "userAssignedIdentities": {
                      "description": "The User Assigned Managed Identities.",
                      "type": "object",
                      "additionalProperties": {
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object",
                        "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                      }
                    }
                  },
                  "type": "object",
                  "required": [
                    "type"
                  ]
                }
              },
              "type": "object",
              "description": "The Video Analyzer account."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "put": {
        "summary": "Create or update a Video Analyzer account",
        "description": "Create or update an instance of a Video Analyzer account",
        "operationId": "VideoAnalyzers_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "storageAccounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                          },
                          "identity": {
                            "description": "A managed identity that Video Analyzer will use to access the storage account.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the storage account mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "description": "The details about the associated storage account."
                      },
                      "description": "The storage accounts for this resource."
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "endpointUrl": {
                            "type": "string",
                            "description": "The URL of the endpoint."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ClientApi"
                            ],
                            "x-ms-enum": {
                              "name": "VideoAnalyzerEndpointType",
                              "values": [
                                {
                                  "value": "ClientApi",
                                  "description": "The client API endpoint."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "The type of the endpoint."
                          }
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "description": "The endpoint details."
                      },
                      "x-ms-identifiers": [
                        "endpointUrl"
                      ],
                      "description": "The endpoints associated with this resource.",
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The account encryption properties.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "SystemKey",
                            "CustomerKey"
                          ],
                          "x-ms-enum": {
                            "name": "AccountEncryptionKeyType",
                            "values": [
                              {
                                "value": "SystemKey",
                                "description": "The Account Key is encrypted with a System Key."
                              },
                              {
                                "value": "CustomerKey",
                                "description": "The Account Key is encrypted with a Customer Key."
                              }
                            ],
                            "modelAsString": true
                          },
                          "description": "The type of key used to encrypt the Account Key."
                        },
                        "keyVaultProperties": {
                          "description": "The properties of the key used to encrypt the account.",
                          "properties": {
                            "keyIdentifier": {
                              "type": "string",
                              "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                            },
                            "currentKeyIdentifier": {
                              "type": "string",
                              "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                              "readOnly": true
                            }
                          },
                          "type": "object",
                          "required": [
                            "keyIdentifier"
                          ]
                        },
                        "identity": {
                          "description": "The Key Vault identity.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                            }
                          },
                          "type": "object",
                          "required": [
                            "userAssignedIdentity"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the Key Vault mapping.",
                          "readOnly": true
                        }
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ]
                    },
                    "iotHubs": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The IoT Hub resource identifier."
                          },
                          "identity": {
                            "description": "The IoT Hub identity.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Iot Hub mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id",
                          "identity"
                        ],
                        "description": "The IoT Hub details."
                      },
                      "description": "The IoT Hubs for this resource."
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                      "x-nullable": true
                    },
                    "networkAccessControl": {
                      "description": "Network access control for Video Analyzer.",
                      "x-nullable": true,
                      "properties": {
                        "integration": {
                          "description": "Public network access for integration group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "ingestion": {
                          "description": "Public network access for ingestion group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "consumption": {
                          "description": "Public network access for consumption group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "type": "string",
                      "enum": [
                        "Failed",
                        "InProgress",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Provisioning state failed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Provisioning state in progress."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Provisioning state succeeded."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Video Analyzer account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "privateEndpointConnections": {
                      "items": {
                        "type": "object",
                        "description": "The Private Endpoint Connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "type": "object",
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "type": "array",
                      "description": "Private Endpoint Connections created under Video Analyzer account.",
                      "readOnly": true
                    }
                  },
                  "type": "object",
                  "required": [
                    "storageAccounts"
                  ]
                },
                "identity": {
                  "description": "The identities associated to the Video Analyzer resource.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type."
                    },
                    "userAssignedIdentities": {
                      "description": "The User Assigned Managed Identities.",
                      "type": "object",
                      "additionalProperties": {
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object",
                        "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                      }
                    }
                  },
                  "type": "object",
                  "required": [
                    "type"
                  ]
                }
              },
              "type": "object",
              "description": "The Video Analyzer account."
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "storageAccounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                          },
                          "identity": {
                            "description": "A managed identity that Video Analyzer will use to access the storage account.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the storage account mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "description": "The details about the associated storage account."
                      },
                      "description": "The storage accounts for this resource."
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "endpointUrl": {
                            "type": "string",
                            "description": "The URL of the endpoint."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ClientApi"
                            ],
                            "x-ms-enum": {
                              "name": "VideoAnalyzerEndpointType",
                              "values": [
                                {
                                  "value": "ClientApi",
                                  "description": "The client API endpoint."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "The type of the endpoint."
                          }
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "description": "The endpoint details."
                      },
                      "x-ms-identifiers": [
                        "endpointUrl"
                      ],
                      "description": "The endpoints associated with this resource.",
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The account encryption properties.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "SystemKey",
                            "CustomerKey"
                          ],
                          "x-ms-enum": {
                            "name": "AccountEncryptionKeyType",
                            "values": [
                              {
                                "value": "SystemKey",
                                "description": "The Account Key is encrypted with a System Key."
                              },
                              {
                                "value": "CustomerKey",
                                "description": "The Account Key is encrypted with a Customer Key."
                              }
                            ],
                            "modelAsString": true
                          },
                          "description": "The type of key used to encrypt the Account Key."
                        },
                        "keyVaultProperties": {
                          "description": "The properties of the key used to encrypt the account.",
                          "properties": {
                            "keyIdentifier": {
                              "type": "string",
                              "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                            },
                            "currentKeyIdentifier": {
                              "type": "string",
                              "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                              "readOnly": true
                            }
                          },
                          "type": "object",
                          "required": [
                            "keyIdentifier"
                          ]
                        },
                        "identity": {
                          "description": "The Key Vault identity.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                            }
                          },
                          "type": "object",
                          "required": [
                            "userAssignedIdentity"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the Key Vault mapping.",
                          "readOnly": true
                        }
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ]
                    },
                    "iotHubs": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The IoT Hub resource identifier."
                          },
                          "identity": {
                            "description": "The IoT Hub identity.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Iot Hub mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id",
                          "identity"
                        ],
                        "description": "The IoT Hub details."
                      },
                      "description": "The IoT Hubs for this resource."
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                      "x-nullable": true
                    },
                    "networkAccessControl": {
                      "description": "Network access control for Video Analyzer.",
                      "x-nullable": true,
                      "properties": {
                        "integration": {
                          "description": "Public network access for integration group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "ingestion": {
                          "description": "Public network access for ingestion group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "consumption": {
                          "description": "Public network access for consumption group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "type": "string",
                      "enum": [
                        "Failed",
                        "InProgress",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Provisioning state failed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Provisioning state in progress."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Provisioning state succeeded."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Video Analyzer account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "privateEndpointConnections": {
                      "items": {
                        "type": "object",
                        "description": "The Private Endpoint Connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "type": "object",
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "type": "array",
                      "description": "Private Endpoint Connections created under Video Analyzer account.",
                      "readOnly": true
                    }
                  },
                  "type": "object",
                  "required": [
                    "storageAccounts"
                  ]
                },
                "identity": {
                  "description": "The identities associated to the Video Analyzer resource.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type."
                    },
                    "userAssignedIdentities": {
                      "description": "The User Assigned Managed Identities.",
                      "type": "object",
                      "additionalProperties": {
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object",
                        "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                      }
                    }
                  },
                  "type": "object",
                  "required": [
                    "type"
                  ]
                }
              },
              "type": "object",
              "description": "The Video Analyzer account."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "storageAccounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                          },
                          "identity": {
                            "description": "A managed identity that Video Analyzer will use to access the storage account.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the storage account mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "description": "The details about the associated storage account."
                      },
                      "description": "The storage accounts for this resource."
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "endpointUrl": {
                            "type": "string",
                            "description": "The URL of the endpoint."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ClientApi"
                            ],
                            "x-ms-enum": {
                              "name": "VideoAnalyzerEndpointType",
                              "values": [
                                {
                                  "value": "ClientApi",
                                  "description": "The client API endpoint."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "The type of the endpoint."
                          }
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "description": "The endpoint details."
                      },
                      "x-ms-identifiers": [
                        "endpointUrl"
                      ],
                      "description": "The endpoints associated with this resource.",
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The account encryption properties.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "SystemKey",
                            "CustomerKey"
                          ],
                          "x-ms-enum": {
                            "name": "AccountEncryptionKeyType",
                            "values": [
                              {
                                "value": "SystemKey",
                                "description": "The Account Key is encrypted with a System Key."
                              },
                              {
                                "value": "CustomerKey",
                                "description": "The Account Key is encrypted with a Customer Key."
                              }
                            ],
                            "modelAsString": true
                          },
                          "description": "The type of key used to encrypt the Account Key."
                        },
                        "keyVaultProperties": {
                          "description": "The properties of the key used to encrypt the account.",
                          "properties": {
                            "keyIdentifier": {
                              "type": "string",
                              "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                            },
                            "currentKeyIdentifier": {
                              "type": "string",
                              "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                              "readOnly": true
                            }
                          },
                          "type": "object",
                          "required": [
                            "keyIdentifier"
                          ]
                        },
                        "identity": {
                          "description": "The Key Vault identity.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                            }
                          },
                          "type": "object",
                          "required": [
                            "userAssignedIdentity"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the Key Vault mapping.",
                          "readOnly": true
                        }
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ]
                    },
                    "iotHubs": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The IoT Hub resource identifier."
                          },
                          "identity": {
                            "description": "The IoT Hub identity.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Iot Hub mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id",
                          "identity"
                        ],
                        "description": "The IoT Hub details."
                      },
                      "description": "The IoT Hubs for this resource."
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                      "x-nullable": true
                    },
                    "networkAccessControl": {
                      "description": "Network access control for Video Analyzer.",
                      "x-nullable": true,
                      "properties": {
                        "integration": {
                          "description": "Public network access for integration group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "ingestion": {
                          "description": "Public network access for ingestion group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "consumption": {
                          "description": "Public network access for consumption group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "type": "string",
                      "enum": [
                        "Failed",
                        "InProgress",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Provisioning state failed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Provisioning state in progress."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Provisioning state succeeded."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Video Analyzer account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "privateEndpointConnections": {
                      "items": {
                        "type": "object",
                        "description": "The Private Endpoint Connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "type": "object",
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "type": "array",
                      "description": "Private Endpoint Connections created under Video Analyzer account.",
                      "readOnly": true
                    }
                  },
                  "type": "object",
                  "required": [
                    "storageAccounts"
                  ]
                },
                "identity": {
                  "description": "The identities associated to the Video Analyzer resource.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type."
                    },
                    "userAssignedIdentities": {
                      "description": "The User Assigned Managed Identities.",
                      "type": "object",
                      "additionalProperties": {
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object",
                        "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                      }
                    }
                  },
                  "type": "object",
                  "required": [
                    "type"
                  ]
                }
              },
              "type": "object",
              "description": "The Video Analyzer account."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "delete": {
        "summary": "Delete a Video Analyzer account.",
        "description": "Delete the specified Video Analyzer account",
        "operationId": "VideoAnalyzers_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "patch": {
        "summary": "Update a Video Analyzer account",
        "description": "Updates an existing instance of Video Analyzer account",
        "operationId": "VideoAnalyzers_Update",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "storageAccounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                          },
                          "identity": {
                            "description": "A managed identity that Video Analyzer will use to access the storage account.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the storage account mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "description": "The details about the associated storage account."
                      },
                      "description": "The storage accounts for this resource."
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "endpointUrl": {
                            "type": "string",
                            "description": "The URL of the endpoint."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ClientApi"
                            ],
                            "x-ms-enum": {
                              "name": "VideoAnalyzerEndpointType",
                              "values": [
                                {
                                  "value": "ClientApi",
                                  "description": "The client API endpoint."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "The type of the endpoint."
                          }
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "description": "The endpoint details."
                      },
                      "x-ms-identifiers": [
                        "endpointUrl"
                      ],
                      "description": "The endpoints associated with this resource.",
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The account encryption properties.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "SystemKey",
                            "CustomerKey"
                          ],
                          "x-ms-enum": {
                            "name": "AccountEncryptionKeyType",
                            "values": [
                              {
                                "value": "SystemKey",
                                "description": "The Account Key is encrypted with a System Key."
                              },
                              {
                                "value": "CustomerKey",
                                "description": "The Account Key is encrypted with a Customer Key."
                              }
                            ],
                            "modelAsString": true
                          },
                          "description": "The type of key used to encrypt the Account Key."
                        },
                        "keyVaultProperties": {
                          "description": "The properties of the key used to encrypt the account.",
                          "properties": {
                            "keyIdentifier": {
                              "type": "string",
                              "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                            },
                            "currentKeyIdentifier": {
                              "type": "string",
                              "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                              "readOnly": true
                            }
                          },
                          "type": "object",
                          "required": [
                            "keyIdentifier"
                          ]
                        },
                        "identity": {
                          "description": "The Key Vault identity.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                            }
                          },
                          "type": "object",
                          "required": [
                            "userAssignedIdentity"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the Key Vault mapping.",
                          "readOnly": true
                        }
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ]
                    },
                    "iotHubs": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The IoT Hub resource identifier."
                          },
                          "identity": {
                            "description": "The IoT Hub identity.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Iot Hub mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id",
                          "identity"
                        ],
                        "description": "The IoT Hub details."
                      },
                      "description": "The IoT Hubs for this resource."
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                      "x-nullable": true
                    },
                    "networkAccessControl": {
                      "description": "Network access control for Video Analyzer.",
                      "x-nullable": true,
                      "properties": {
                        "integration": {
                          "description": "Public network access for integration group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "ingestion": {
                          "description": "Public network access for ingestion group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "consumption": {
                          "description": "Public network access for consumption group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "type": "string",
                      "enum": [
                        "Failed",
                        "InProgress",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Provisioning state failed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Provisioning state in progress."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Provisioning state succeeded."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Video Analyzer account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "privateEndpointConnections": {
                      "items": {
                        "type": "object",
                        "description": "The Private Endpoint Connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "type": "object",
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "type": "array",
                      "description": "Private Endpoint Connections created under Video Analyzer account.",
                      "readOnly": true
                    }
                  },
                  "type": "object",
                  "required": [
                    "storageAccounts"
                  ]
                },
                "identity": {
                  "description": "The identities associated to the Video Analyzer resource.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type."
                    },
                    "userAssignedIdentities": {
                      "description": "The User Assigned Managed Identities.",
                      "type": "object",
                      "additionalProperties": {
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object",
                        "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                      }
                    }
                  },
                  "type": "object",
                  "required": [
                    "type"
                  ]
                }
              },
              "type": "object",
              "description": "The Video Analyzer account."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "storageAccounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                          },
                          "identity": {
                            "description": "A managed identity that Video Analyzer will use to access the storage account.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the storage account mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "description": "The details about the associated storage account."
                      },
                      "description": "The storage accounts for this resource."
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "endpointUrl": {
                            "type": "string",
                            "description": "The URL of the endpoint."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ClientApi"
                            ],
                            "x-ms-enum": {
                              "name": "VideoAnalyzerEndpointType",
                              "values": [
                                {
                                  "value": "ClientApi",
                                  "description": "The client API endpoint."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "The type of the endpoint."
                          }
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "description": "The endpoint details."
                      },
                      "x-ms-identifiers": [
                        "endpointUrl"
                      ],
                      "description": "The endpoints associated with this resource.",
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The account encryption properties.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "SystemKey",
                            "CustomerKey"
                          ],
                          "x-ms-enum": {
                            "name": "AccountEncryptionKeyType",
                            "values": [
                              {
                                "value": "SystemKey",
                                "description": "The Account Key is encrypted with a System Key."
                              },
                              {
                                "value": "CustomerKey",
                                "description": "The Account Key is encrypted with a Customer Key."
                              }
                            ],
                            "modelAsString": true
                          },
                          "description": "The type of key used to encrypt the Account Key."
                        },
                        "keyVaultProperties": {
                          "description": "The properties of the key used to encrypt the account.",
                          "properties": {
                            "keyIdentifier": {
                              "type": "string",
                              "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                            },
                            "currentKeyIdentifier": {
                              "type": "string",
                              "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                              "readOnly": true
                            }
                          },
                          "type": "object",
                          "required": [
                            "keyIdentifier"
                          ]
                        },
                        "identity": {
                          "description": "The Key Vault identity.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                            }
                          },
                          "type": "object",
                          "required": [
                            "userAssignedIdentity"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the Key Vault mapping.",
                          "readOnly": true
                        }
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ]
                    },
                    "iotHubs": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The IoT Hub resource identifier."
                          },
                          "identity": {
                            "description": "The IoT Hub identity.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Iot Hub mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id",
                          "identity"
                        ],
                        "description": "The IoT Hub details."
                      },
                      "description": "The IoT Hubs for this resource."
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                      "x-nullable": true
                    },
                    "networkAccessControl": {
                      "description": "Network access control for Video Analyzer.",
                      "x-nullable": true,
                      "properties": {
                        "integration": {
                          "description": "Public network access for integration group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "ingestion": {
                          "description": "Public network access for ingestion group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "consumption": {
                          "description": "Public network access for consumption group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "type": "string",
                      "enum": [
                        "Failed",
                        "InProgress",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Provisioning state failed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Provisioning state in progress."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Provisioning state succeeded."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Video Analyzer account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "privateEndpointConnections": {
                      "items": {
                        "type": "object",
                        "description": "The Private Endpoint Connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "type": "object",
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "type": "array",
                      "description": "Private Endpoint Connections created under Video Analyzer account.",
                      "readOnly": true
                    }
                  },
                  "type": "object"
                },
                "identity": {
                  "description": "The identities associated to the Video Analyzer resource.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type."
                    },
                    "userAssignedIdentities": {
                      "description": "The User Assigned Managed Identities.",
                      "type": "object",
                      "additionalProperties": {
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object",
                        "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                      }
                    }
                  },
                  "type": "object",
                  "required": [
                    "type"
                  ]
                }
              },
              "type": "object",
              "description": "The update operation for a Video Analyzer account."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateLinkResources": {
      "get": {
        "summary": "Get list of group IDs.",
        "description": "Get list of group IDs for video analyzer account.",
        "operationId": "PrivateLinkResources_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A list of private link resources",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "type": "object",
                    "description": "A private link resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string",
                            "description": "The private link resource group id.",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "type": "array",
                            "description": "The private link resource required member names.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "description": "The private link resource Private link DNS zone name.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateLinkResources/{name}": {
      "get": {
        "summary": "Get group ID.",
        "description": "Get group ID for video analyzer account.",
        "operationId": "PrivateLinkResources_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A private link resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "description": "The private link resource group id.",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "type": "array",
                      "description": "The private link resource required member names.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "type": "array",
                      "description": "The private link resource Private link DNS zone name.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the private link resource (Group ID)."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateEndpointConnections": {
      "get": {
        "summary": "Get all private endpoint connections.",
        "description": "Get all private endpoint connections under video analyzer account.",
        "operationId": "PrivateEndpointConnections_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "List of private endpoint connection associated with the specified storage account",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private endpoint connections",
                  "items": {
                    "type": "object",
                    "description": "The Private Endpoint Connection resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "The resource of private end point.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ARM identifier for Private Endpoint",
                                "readOnly": true
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateEndpointConnections/{name}": {
      "get": {
        "summary": "Get private endpoint connection.",
        "description": "Get private endpoint connection under video analyzer account.",
        "operationId": "PrivateEndpointConnections_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "The Private Endpoint Connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Private endpoint connection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "put": {
        "summary": "Update private endpoint connection.",
        "description": "Update private endpoint connection state under video analyzer account.",
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "description": "The Private Endpoint Connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Private endpoint connection name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The Private Endpoint Connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "delete": {
        "summary": "Delete private endpoint connection.",
        "description": "Delete private endpoint connection under video analyzer account.",
        "operationId": "PrivateEndpointConnections_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Private endpoint connection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateEndpointConnections/{name}/operationStatuses/{operationId}": {
      "get": {
        "summary": "Get operation status.",
        "description": "Get private endpoint connection operation status.",
        "operationId": "OperationStatuses_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VideoAnalyzerPrivateEndpointConnectionOperationStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Private endpoint connection name."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Operation Id."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/privateEndpointConnections/{name}/operationResults/{operationId}": {
      "get": {
        "summary": "Get operation result.",
        "description": "Get private endpoint connection operation result.",
        "operationId": "OperationResults_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "The Private Endpoint Connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video Analyzer account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Private endpoint connection name."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Operation Id."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/videoAnalyzerOperationStatuses/{operationId}": {
      "get": {
        "summary": "Get operation status.",
        "description": "Get video analyzer operation status.",
        "operationId": "VideoAnalyzerOperationStatuses_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VideoAnalyzerOperationStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Location name."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Operation Id."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/videoAnalyzerOperationResults/{operationId}": {
      "get": {
        "summary": "Get operation result.",
        "description": "Get video analyzer operation result.",
        "operationId": "VideoAnalyzerOperationResults_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "storageAccounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                          },
                          "identity": {
                            "description": "A managed identity that Video Analyzer will use to access the storage account.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the storage account mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "description": "The details about the associated storage account."
                      },
                      "description": "The storage accounts for this resource."
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "endpointUrl": {
                            "type": "string",
                            "description": "The URL of the endpoint."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ClientApi"
                            ],
                            "x-ms-enum": {
                              "name": "VideoAnalyzerEndpointType",
                              "values": [
                                {
                                  "value": "ClientApi",
                                  "description": "The client API endpoint."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "The type of the endpoint."
                          }
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "description": "The endpoint details."
                      },
                      "x-ms-identifiers": [
                        "endpointUrl"
                      ],
                      "description": "The endpoints associated with this resource.",
                      "readOnly": true
                    },
                    "encryption": {
                      "description": "The account encryption properties.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "SystemKey",
                            "CustomerKey"
                          ],
                          "x-ms-enum": {
                            "name": "AccountEncryptionKeyType",
                            "values": [
                              {
                                "value": "SystemKey",
                                "description": "The Account Key is encrypted with a System Key."
                              },
                              {
                                "value": "CustomerKey",
                                "description": "The Account Key is encrypted with a Customer Key."
                              }
                            ],
                            "modelAsString": true
                          },
                          "description": "The type of key used to encrypt the Account Key."
                        },
                        "keyVaultProperties": {
                          "description": "The properties of the key used to encrypt the account.",
                          "properties": {
                            "keyIdentifier": {
                              "type": "string",
                              "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                            },
                            "currentKeyIdentifier": {
                              "type": "string",
                              "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                              "readOnly": true
                            }
                          },
                          "type": "object",
                          "required": [
                            "keyIdentifier"
                          ]
                        },
                        "identity": {
                          "description": "The Key Vault identity.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                            }
                          },
                          "type": "object",
                          "required": [
                            "userAssignedIdentity"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the Key Vault mapping.",
                          "readOnly": true
                        }
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ]
                    },
                    "iotHubs": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The IoT Hub resource identifier."
                          },
                          "identity": {
                            "description": "The IoT Hub identity.",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                              }
                            },
                            "type": "object",
                            "required": [
                              "userAssignedIdentity"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Iot Hub mapping.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "id",
                          "identity"
                        ],
                        "description": "The IoT Hub details."
                      },
                      "description": "The IoT Hubs for this resource."
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                      "x-nullable": true
                    },
                    "networkAccessControl": {
                      "description": "Network access control for Video Analyzer.",
                      "x-nullable": true,
                      "properties": {
                        "integration": {
                          "description": "Public network access for integration group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "ingestion": {
                          "description": "Public network access for ingestion group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "consumption": {
                          "description": "Public network access for consumption group.",
                          "x-nullable": true,
                          "properties": {
                            "publicNetworkAccess": {
                              "type": "string",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "PublicNetworkAccess",
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Public network access is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Public network access is disabled."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "type": "string",
                      "enum": [
                        "Failed",
                        "InProgress",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Provisioning state failed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Provisioning state in progress."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Provisioning state succeeded."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Provisioning state of the Video Analyzer account.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "privateEndpointConnections": {
                      "items": {
                        "type": "object",
                        "description": "The Private Endpoint Connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "type": "object",
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "type": "array",
                      "description": "Private Endpoint Connections created under Video Analyzer account.",
                      "readOnly": true
                    }
                  },
                  "type": "object",
                  "required": [
                    "storageAccounts"
                  ]
                },
                "identity": {
                  "description": "The identities associated to the Video Analyzer resource.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type."
                    },
                    "userAssignedIdentities": {
                      "description": "The User Assigned Managed Identities.",
                      "type": "object",
                      "additionalProperties": {
                        "properties": {
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID.",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        },
                        "type": "object",
                        "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                      }
                    }
                  },
                  "type": "object",
                  "required": [
                    "type"
                  ]
                }
              },
              "type": "object",
              "description": "The Video Analyzer account."
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Location name."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Operation Id."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability": {
      "post": {
        "summary": "Check Name Availability",
        "description": "Checks whether the Video Analyzer resource name is available.",
        "operationId": "Locations_CheckNameAvailability",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "The check availability result.",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the given name is not available.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "CheckNameAvailabilityReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Detailed reason why the given name is available."
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Location Name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The check availability request body.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the resource for which availability needs to be checked."
                },
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/videoAnalyzers": {
      "get": {
        "summary": "List Video Analyzer accounts",
        "description": "List all Video Analyzer accounts in the specified subscription.",
        "operationId": "VideoAnalyzers_ListBySubscription",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource properties.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "storageAccounts": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                                },
                                "identity": {
                                  "description": "A managed identity that Video Analyzer will use to access the storage account.",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                                    }
                                  },
                                  "type": "object",
                                  "required": [
                                    "userAssignedIdentity"
                                  ]
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The current status of the storage account mapping.",
                                  "readOnly": true
                                }
                              },
                              "type": "object",
                              "required": [
                                "id"
                              ],
                              "description": "The details about the associated storage account."
                            },
                            "description": "The storage accounts for this resource."
                          },
                          "endpoints": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "endpointUrl": {
                                  "type": "string",
                                  "description": "The URL of the endpoint."
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ClientApi"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VideoAnalyzerEndpointType",
                                    "values": [
                                      {
                                        "value": "ClientApi",
                                        "description": "The client API endpoint."
                                      }
                                    ],
                                    "modelAsString": true
                                  },
                                  "description": "The type of the endpoint."
                                }
                              },
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "description": "The endpoint details."
                            },
                            "x-ms-identifiers": [
                              "endpointUrl"
                            ],
                            "description": "The endpoints associated with this resource.",
                            "readOnly": true
                          },
                          "encryption": {
                            "description": "The account encryption properties.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "SystemKey",
                                  "CustomerKey"
                                ],
                                "x-ms-enum": {
                                  "name": "AccountEncryptionKeyType",
                                  "values": [
                                    {
                                      "value": "SystemKey",
                                      "description": "The Account Key is encrypted with a System Key."
                                    },
                                    {
                                      "value": "CustomerKey",
                                      "description": "The Account Key is encrypted with a Customer Key."
                                    }
                                  ],
                                  "modelAsString": true
                                },
                                "description": "The type of key used to encrypt the Account Key."
                              },
                              "keyVaultProperties": {
                                "description": "The properties of the key used to encrypt the account.",
                                "properties": {
                                  "keyIdentifier": {
                                    "type": "string",
                                    "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                                  },
                                  "currentKeyIdentifier": {
                                    "type": "string",
                                    "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                                    "readOnly": true
                                  }
                                },
                                "type": "object",
                                "required": [
                                  "keyIdentifier"
                                ]
                              },
                              "identity": {
                                "description": "The Key Vault identity.",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                                  }
                                },
                                "type": "object",
                                "required": [
                                  "userAssignedIdentity"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "description": "The current status of the Key Vault mapping.",
                                "readOnly": true
                              }
                            },
                            "type": "object",
                            "required": [
                              "type"
                            ]
                          },
                          "iotHubs": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The IoT Hub resource identifier."
                                },
                                "identity": {
                                  "description": "The IoT Hub identity.",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                                    }
                                  },
                                  "type": "object",
                                  "required": [
                                    "userAssignedIdentity"
                                  ]
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The current status of the Iot Hub mapping.",
                                  "readOnly": true
                                }
                              },
                              "type": "object",
                              "required": [
                                "id",
                                "identity"
                              ],
                              "description": "The IoT Hub details."
                            },
                            "description": "The IoT Hubs for this resource."
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Public network access is enabled."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Public network access is disabled."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                            "x-nullable": true
                          },
                          "networkAccessControl": {
                            "description": "Network access control for Video Analyzer.",
                            "x-nullable": true,
                            "properties": {
                              "integration": {
                                "description": "Public network access for integration group.",
                                "x-nullable": true,
                                "properties": {
                                  "publicNetworkAccess": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PublicNetworkAccess",
                                      "values": [
                                        {
                                          "value": "Enabled",
                                          "description": "Public network access is enabled."
                                        },
                                        {
                                          "value": "Disabled",
                                          "description": "Public network access is disabled."
                                        }
                                      ],
                                      "modelAsString": true
                                    },
                                    "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                                    "x-nullable": true
                                  }
                                },
                                "type": "object"
                              },
                              "ingestion": {
                                "description": "Public network access for ingestion group.",
                                "x-nullable": true,
                                "properties": {
                                  "publicNetworkAccess": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PublicNetworkAccess",
                                      "values": [
                                        {
                                          "value": "Enabled",
                                          "description": "Public network access is enabled."
                                        },
                                        {
                                          "value": "Disabled",
                                          "description": "Public network access is disabled."
                                        }
                                      ],
                                      "modelAsString": true
                                    },
                                    "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                                    "x-nullable": true
                                  }
                                },
                                "type": "object"
                              },
                              "consumption": {
                                "description": "Public network access for consumption group.",
                                "x-nullable": true,
                                "properties": {
                                  "publicNetworkAccess": {
                                    "type": "string",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PublicNetworkAccess",
                                      "values": [
                                        {
                                          "value": "Enabled",
                                          "description": "Public network access is enabled."
                                        },
                                        {
                                          "value": "Disabled",
                                          "description": "Public network access is disabled."
                                        }
                                      ],
                                      "modelAsString": true
                                    },
                                    "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                                    "x-nullable": true
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "provisioningState": {
                            "type": "string",
                            "enum": [
                              "Failed",
                              "InProgress",
                              "Succeeded"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "values": [
                                {
                                  "value": "Failed",
                                  "description": "Provisioning state failed."
                                },
                                {
                                  "value": "InProgress",
                                  "description": "Provisioning state in progress."
                                },
                                {
                                  "value": "Succeeded",
                                  "description": "Provisioning state succeeded."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Provisioning state of the Video Analyzer account.",
                            "readOnly": true,
                            "x-nullable": false
                          },
                          "privateEndpointConnections": {
                            "items": {
                              "type": "object",
                              "description": "The Private Endpoint Connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "type": "object",
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "type": "array",
                            "description": "Private Endpoint Connections created under Video Analyzer account.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "storageAccounts"
                        ]
                      },
                      "identity": {
                        "description": "The identities associated to the Video Analyzer resource.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The identity type."
                          },
                          "userAssignedIdentities": {
                            "description": "The User Assigned Managed Identities.",
                            "type": "object",
                            "additionalProperties": {
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID.",
                                  "readOnly": true,
                                  "x-nullable": true
                                },
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID.",
                                  "readOnly": true,
                                  "x-nullable": true
                                }
                              },
                              "type": "object",
                              "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                            }
                          }
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "type": "object",
                    "description": "The Video Analyzer account."
                  },
                  "description": "A collection of VideoAnalyzer items."
                }
              },
              "type": "object",
              "description": "A collection of VideoAnalyzer items."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/videos": {
      "get": {
        "summary": "Retrieves all existing video resources.",
        "description": "Retrieves a list of video resources that have been created, along with their JSON representations.",
        "operationId": "Videos_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource properties.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional video title provided by the user. Value can be up to 256 characters long."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Archive",
                              "File"
                            ],
                            "x-ms-enum": {
                              "name": "VideoType",
                              "values": [
                                {
                                  "value": "Archive",
                                  "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
                                },
                                {
                                  "value": "File",
                                  "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Video content type. Different content types are suitable for different applications and scenarios.",
                            "readOnly": true,
                            "x-nullable": false
                          },
                          "flags": {
                            "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
                            "readOnly": true,
                            "properties": {
                              "canStream": {
                                "type": "boolean",
                                "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
                              },
                              "hasData": {
                                "type": "boolean",
                                "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
                              },
                              "isInUse": {
                                "type": "boolean",
                                "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
                              }
                            },
                            "type": "object",
                            "required": [
                              "canStream",
                              "hasData",
                              "isInUse"
                            ]
                          },
                          "contentUrls": {
                            "description": "Set of URLs to the video content.",
                            "readOnly": true,
                            "properties": {
                              "downloadUrl": {
                                "type": "string",
                                "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
                              },
                              "archiveBaseUrl": {
                                "type": "string",
                                "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
                              },
                              "rtspTunnelUrl": {
                                "type": "string",
                                "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
                              },
                              "previewImageUrls": {
                                "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
                                "properties": {
                                  "small": {
                                    "type": "string",
                                    "description": "Low resolution preview image URL."
                                  },
                                  "medium": {
                                    "type": "string",
                                    "description": "Medium resolution preview image URL."
                                  },
                                  "large": {
                                    "type": "string",
                                    "description": "High resolution preview image URL."
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "mediaInfo": {
                            "description": "Contains information about the video and audio content.",
                            "properties": {
                              "segmentLength": {
                                "type": "string",
                                "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
                              }
                            },
                            "type": "object"
                          },
                          "archival": {
                            "description": "Video archival properties.",
                            "properties": {
                              "retentionPeriod": {
                                "type": "string",
                                "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files."
                  },
                  "description": "A collection of VideoEntity items."
                },
                "@nextLink": {
                  "type": "string",
                  "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
                }
              },
              "type": "object",
              "description": "A collection of VideoEntity items."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/videos/{videoName}": {
      "get": {
        "summary": "Retrieves an existing video resource.",
        "description": "Retrieves an existing video resource with the given name.",
        "operationId": "Videos_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Optional video title provided by the user. Value can be up to 256 characters long."
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Archive",
                        "File"
                      ],
                      "x-ms-enum": {
                        "name": "VideoType",
                        "values": [
                          {
                            "value": "Archive",
                            "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
                          },
                          {
                            "value": "File",
                            "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Video content type. Different content types are suitable for different applications and scenarios.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "flags": {
                      "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
                      "readOnly": true,
                      "properties": {
                        "canStream": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
                        },
                        "hasData": {
                          "type": "boolean",
                          "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
                        },
                        "isInUse": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
                        }
                      },
                      "type": "object",
                      "required": [
                        "canStream",
                        "hasData",
                        "isInUse"
                      ]
                    },
                    "contentUrls": {
                      "description": "Set of URLs to the video content.",
                      "readOnly": true,
                      "properties": {
                        "downloadUrl": {
                          "type": "string",
                          "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
                        },
                        "archiveBaseUrl": {
                          "type": "string",
                          "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
                        },
                        "rtspTunnelUrl": {
                          "type": "string",
                          "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
                        },
                        "previewImageUrls": {
                          "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
                          "properties": {
                            "small": {
                              "type": "string",
                              "description": "Low resolution preview image URL."
                            },
                            "medium": {
                              "type": "string",
                              "description": "Medium resolution preview image URL."
                            },
                            "large": {
                              "type": "string",
                              "description": "High resolution preview image URL."
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "mediaInfo": {
                      "description": "Contains information about the video and audio content.",
                      "properties": {
                        "segmentLength": {
                          "type": "string",
                          "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
                        }
                      },
                      "type": "object"
                    },
                    "archival": {
                      "description": "Video archival properties.",
                      "properties": {
                        "retentionPeriod": {
                          "type": "string",
                          "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "videoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "put": {
        "summary": "Creates a new video resource or updates an existing one.",
        "description": "Creates a new video resource or updates an existing video resource with the given name.",
        "operationId": "Videos_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Optional video title provided by the user. Value can be up to 256 characters long."
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Archive",
                        "File"
                      ],
                      "x-ms-enum": {
                        "name": "VideoType",
                        "values": [
                          {
                            "value": "Archive",
                            "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
                          },
                          {
                            "value": "File",
                            "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Video content type. Different content types are suitable for different applications and scenarios.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "flags": {
                      "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
                      "readOnly": true,
                      "properties": {
                        "canStream": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
                        },
                        "hasData": {
                          "type": "boolean",
                          "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
                        },
                        "isInUse": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
                        }
                      },
                      "type": "object",
                      "required": [
                        "canStream",
                        "hasData",
                        "isInUse"
                      ]
                    },
                    "contentUrls": {
                      "description": "Set of URLs to the video content.",
                      "readOnly": true,
                      "properties": {
                        "downloadUrl": {
                          "type": "string",
                          "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
                        },
                        "archiveBaseUrl": {
                          "type": "string",
                          "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
                        },
                        "rtspTunnelUrl": {
                          "type": "string",
                          "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
                        },
                        "previewImageUrls": {
                          "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
                          "properties": {
                            "small": {
                              "type": "string",
                              "description": "Low resolution preview image URL."
                            },
                            "medium": {
                              "type": "string",
                              "description": "Medium resolution preview image URL."
                            },
                            "large": {
                              "type": "string",
                              "description": "High resolution preview image URL."
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "mediaInfo": {
                      "description": "Contains information about the video and audio content.",
                      "properties": {
                        "segmentLength": {
                          "type": "string",
                          "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
                        }
                      },
                      "type": "object"
                    },
                    "archival": {
                      "description": "Video archival properties.",
                      "properties": {
                        "retentionPeriod": {
                          "type": "string",
                          "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files."
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Optional video title provided by the user. Value can be up to 256 characters long."
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Archive",
                        "File"
                      ],
                      "x-ms-enum": {
                        "name": "VideoType",
                        "values": [
                          {
                            "value": "Archive",
                            "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
                          },
                          {
                            "value": "File",
                            "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Video content type. Different content types are suitable for different applications and scenarios.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "flags": {
                      "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
                      "readOnly": true,
                      "properties": {
                        "canStream": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
                        },
                        "hasData": {
                          "type": "boolean",
                          "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
                        },
                        "isInUse": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
                        }
                      },
                      "type": "object",
                      "required": [
                        "canStream",
                        "hasData",
                        "isInUse"
                      ]
                    },
                    "contentUrls": {
                      "description": "Set of URLs to the video content.",
                      "readOnly": true,
                      "properties": {
                        "downloadUrl": {
                          "type": "string",
                          "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
                        },
                        "archiveBaseUrl": {
                          "type": "string",
                          "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
                        },
                        "rtspTunnelUrl": {
                          "type": "string",
                          "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
                        },
                        "previewImageUrls": {
                          "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
                          "properties": {
                            "small": {
                              "type": "string",
                              "description": "Low resolution preview image URL."
                            },
                            "medium": {
                              "type": "string",
                              "description": "Medium resolution preview image URL."
                            },
                            "large": {
                              "type": "string",
                              "description": "High resolution preview image URL."
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "mediaInfo": {
                      "description": "Contains information about the video and audio content.",
                      "properties": {
                        "segmentLength": {
                          "type": "string",
                          "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
                        }
                      },
                      "type": "object"
                    },
                    "archival": {
                      "description": "Video archival properties.",
                      "properties": {
                        "retentionPeriod": {
                          "type": "string",
                          "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "videoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Optional video title provided by the user. Value can be up to 256 characters long."
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Archive",
                        "File"
                      ],
                      "x-ms-enum": {
                        "name": "VideoType",
                        "values": [
                          {
                            "value": "Archive",
                            "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
                          },
                          {
                            "value": "File",
                            "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Video content type. Different content types are suitable for different applications and scenarios.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "flags": {
                      "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
                      "readOnly": true,
                      "properties": {
                        "canStream": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
                        },
                        "hasData": {
                          "type": "boolean",
                          "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
                        },
                        "isInUse": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
                        }
                      },
                      "type": "object",
                      "required": [
                        "canStream",
                        "hasData",
                        "isInUse"
                      ]
                    },
                    "contentUrls": {
                      "description": "Set of URLs to the video content.",
                      "readOnly": true,
                      "properties": {
                        "downloadUrl": {
                          "type": "string",
                          "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
                        },
                        "archiveBaseUrl": {
                          "type": "string",
                          "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
                        },
                        "rtspTunnelUrl": {
                          "type": "string",
                          "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
                        },
                        "previewImageUrls": {
                          "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
                          "properties": {
                            "small": {
                              "type": "string",
                              "description": "Low resolution preview image URL."
                            },
                            "medium": {
                              "type": "string",
                              "description": "Medium resolution preview image URL."
                            },
                            "large": {
                              "type": "string",
                              "description": "High resolution preview image URL."
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "mediaInfo": {
                      "description": "Contains information about the video and audio content.",
                      "properties": {
                        "segmentLength": {
                          "type": "string",
                          "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
                        }
                      },
                      "type": "object"
                    },
                    "archival": {
                      "description": "Video archival properties.",
                      "properties": {
                        "retentionPeriod": {
                          "type": "string",
                          "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "delete": {
        "summary": "Deletes an existing video resource and its underlying data.",
        "description": "Deletes an existing video resource and its underlying data. This operation is irreversible.",
        "operationId": "Videos_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "videoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "patch": {
        "summary": "Updates individual properties of an existing video resource.",
        "description": "Updates individual properties of an existing video resource with the given name.",
        "operationId": "Videos_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Optional video title provided by the user. Value can be up to 256 characters long."
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Archive",
                        "File"
                      ],
                      "x-ms-enum": {
                        "name": "VideoType",
                        "values": [
                          {
                            "value": "Archive",
                            "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
                          },
                          {
                            "value": "File",
                            "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Video content type. Different content types are suitable for different applications and scenarios.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "flags": {
                      "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
                      "readOnly": true,
                      "properties": {
                        "canStream": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
                        },
                        "hasData": {
                          "type": "boolean",
                          "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
                        },
                        "isInUse": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
                        }
                      },
                      "type": "object",
                      "required": [
                        "canStream",
                        "hasData",
                        "isInUse"
                      ]
                    },
                    "contentUrls": {
                      "description": "Set of URLs to the video content.",
                      "readOnly": true,
                      "properties": {
                        "downloadUrl": {
                          "type": "string",
                          "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
                        },
                        "archiveBaseUrl": {
                          "type": "string",
                          "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
                        },
                        "rtspTunnelUrl": {
                          "type": "string",
                          "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
                        },
                        "previewImageUrls": {
                          "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
                          "properties": {
                            "small": {
                              "type": "string",
                              "description": "Low resolution preview image URL."
                            },
                            "medium": {
                              "type": "string",
                              "description": "Medium resolution preview image URL."
                            },
                            "large": {
                              "type": "string",
                              "description": "High resolution preview image URL."
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "mediaInfo": {
                      "description": "Contains information about the video and audio content.",
                      "properties": {
                        "segmentLength": {
                          "type": "string",
                          "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
                        }
                      },
                      "type": "object"
                    },
                    "archival": {
                      "description": "Video archival properties.",
                      "properties": {
                        "retentionPeriod": {
                          "type": "string",
                          "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "videoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Optional video title provided by the user. Value can be up to 256 characters long."
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Archive",
                        "File"
                      ],
                      "x-ms-enum": {
                        "name": "VideoType",
                        "values": [
                          {
                            "value": "Archive",
                            "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
                          },
                          {
                            "value": "File",
                            "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Video content type. Different content types are suitable for different applications and scenarios.",
                      "readOnly": true,
                      "x-nullable": false
                    },
                    "flags": {
                      "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
                      "readOnly": true,
                      "properties": {
                        "canStream": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
                        },
                        "hasData": {
                          "type": "boolean",
                          "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
                        },
                        "isInUse": {
                          "type": "boolean",
                          "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
                        }
                      },
                      "type": "object",
                      "required": [
                        "canStream",
                        "hasData",
                        "isInUse"
                      ]
                    },
                    "contentUrls": {
                      "description": "Set of URLs to the video content.",
                      "readOnly": true,
                      "properties": {
                        "downloadUrl": {
                          "type": "string",
                          "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
                        },
                        "archiveBaseUrl": {
                          "type": "string",
                          "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
                        },
                        "rtspTunnelUrl": {
                          "type": "string",
                          "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
                        },
                        "previewImageUrls": {
                          "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
                          "properties": {
                            "small": {
                              "type": "string",
                              "description": "Low resolution preview image URL."
                            },
                            "medium": {
                              "type": "string",
                              "description": "Medium resolution preview image URL."
                            },
                            "large": {
                              "type": "string",
                              "description": "High resolution preview image URL."
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "mediaInfo": {
                      "description": "Contains information about the video and audio content.",
                      "properties": {
                        "segmentLength": {
                          "type": "string",
                          "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
                        }
                      },
                      "type": "object"
                    },
                    "archival": {
                      "description": "Video archival properties.",
                      "properties": {
                        "retentionPeriod": {
                          "type": "string",
                          "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/videos/{videoName}/listContentToken": {
      "post": {
        "summary": "Generates a streaming token which can be used for accessing content from video content URLs.",
        "description": "Generates a streaming token which can be used for accessing content from video content URLs, for a video resource with the given name.",
        "operationId": "Videos_ListContentToken",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "expirationDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The content token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).",
                  "readOnly": true,
                  "x-nullable": false
                },
                "token": {
                  "type": "string",
                  "description": "The content token value to be added to the video content URL as the value for the \"token\" query string parameter. The token is specific to a single video.",
                  "readOnly": true
                }
              },
              "type": "object",
              "description": "\"Video content token grants access to the video content URLs.\""
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "videoName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Video name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies": {
      "get": {
        "summary": "List all existing access policy resources.",
        "description": "Retrieves all existing access policy resources, along with their JSON representations.",
        "operationId": "AccessPolicies_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource properties.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "Reader"
                            ],
                            "x-ms-enum": {
                              "name": "AccessPolicyRole",
                              "values": [
                                {
                                  "value": "Reader",
                                  "description": "Reader role allows for read-only operations to be performed through the client APIs."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Defines the access level granted by this policy.",
                            "x-nullable": true
                          },
                          "authentication": {
                            "discriminator": "@type",
                            "properties": {
                              "@type": {
                                "type": "string",
                                "description": "The discriminator for derived types."
                              }
                            },
                            "type": "object",
                            "required": [
                              "@type"
                            ],
                            "description": "Base class for access policies authentication methods."
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "description": "Access policies help define the authentication rules, and control access to specific video resources."
                  },
                  "description": "A collection of AccessPolicyEntity items."
                },
                "@nextLink": {
                  "type": "string",
                  "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
                }
              },
              "type": "object",
              "description": "A collection of AccessPolicyEntity items."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/accessPolicies/{accessPolicyName}": {
      "get": {
        "summary": "Retrieves an existing access policy resource.",
        "description": "Retrieves an existing access policy resource with the given name.",
        "operationId": "AccessPolicies_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "Reader"
                      ],
                      "x-ms-enum": {
                        "name": "AccessPolicyRole",
                        "values": [
                          {
                            "value": "Reader",
                            "description": "Reader role allows for read-only operations to be performed through the client APIs."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Defines the access level granted by this policy.",
                      "x-nullable": true
                    },
                    "authentication": {
                      "discriminator": "@type",
                      "properties": {
                        "@type": {
                          "type": "string",
                          "description": "The discriminator for derived types."
                        }
                      },
                      "type": "object",
                      "required": [
                        "@type"
                      ],
                      "description": "Base class for access policies authentication methods."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Access policies help define the authentication rules, and control access to specific video resources."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accessPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Access Policy name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "put": {
        "summary": "Creates a new access policy resource or updates an existing one.",
        "description": "Creates a new access policy resource or updates an existing one with the given name.",
        "operationId": "AccessPolicies_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "Reader"
                      ],
                      "x-ms-enum": {
                        "name": "AccessPolicyRole",
                        "values": [
                          {
                            "value": "Reader",
                            "description": "Reader role allows for read-only operations to be performed through the client APIs."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Defines the access level granted by this policy.",
                      "x-nullable": true
                    },
                    "authentication": {
                      "discriminator": "@type",
                      "properties": {
                        "@type": {
                          "type": "string",
                          "description": "The discriminator for derived types."
                        }
                      },
                      "type": "object",
                      "required": [
                        "@type"
                      ],
                      "description": "Base class for access policies authentication methods."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Access policies help define the authentication rules, and control access to specific video resources."
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "Reader"
                      ],
                      "x-ms-enum": {
                        "name": "AccessPolicyRole",
                        "values": [
                          {
                            "value": "Reader",
                            "description": "Reader role allows for read-only operations to be performed through the client APIs."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Defines the access level granted by this policy.",
                      "x-nullable": true
                    },
                    "authentication": {
                      "discriminator": "@type",
                      "properties": {
                        "@type": {
                          "type": "string",
                          "description": "The discriminator for derived types."
                        }
                      },
                      "type": "object",
                      "required": [
                        "@type"
                      ],
                      "description": "Base class for access policies authentication methods."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Access policies help define the authentication rules, and control access to specific video resources."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accessPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Access Policy name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "Reader"
                      ],
                      "x-ms-enum": {
                        "name": "AccessPolicyRole",
                        "values": [
                          {
                            "value": "Reader",
                            "description": "Reader role allows for read-only operations to be performed through the client APIs."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Defines the access level granted by this policy.",
                      "x-nullable": true
                    },
                    "authentication": {
                      "discriminator": "@type",
                      "properties": {
                        "@type": {
                          "type": "string",
                          "description": "The discriminator for derived types."
                        }
                      },
                      "type": "object",
                      "required": [
                        "@type"
                      ],
                      "description": "Base class for access policies authentication methods."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Access policies help define the authentication rules, and control access to specific video resources."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "delete": {
        "summary": "Deletes an existing access policy resource.",
        "description": "Deletes an existing access policy resource with the given name.",
        "operationId": "AccessPolicies_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accessPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Access Policy name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      },
      "patch": {
        "summary": "Updates individual properties of an existing access policy resource.",
        "description": "Updates individual properties of an existing access policy resource with the given name.",
        "operationId": "AccessPolicies_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "Reader"
                      ],
                      "x-ms-enum": {
                        "name": "AccessPolicyRole",
                        "values": [
                          {
                            "value": "Reader",
                            "description": "Reader role allows for read-only operations to be performed through the client APIs."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Defines the access level granted by this policy.",
                      "x-nullable": true
                    },
                    "authentication": {
                      "discriminator": "@type",
                      "properties": {
                        "@type": {
                          "type": "string",
                          "description": "The discriminator for derived types."
                        }
                      },
                      "type": "object",
                      "required": [
                        "@type"
                      ],
                      "description": "Base class for access policies authentication methods."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Access policies help define the authentication rules, and control access to specific video resources."
            }
          }
        },
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Video Analyzer account name.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accessPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Access Policy name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource properties.",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "Reader"
                      ],
                      "x-ms-enum": {
                        "name": "AccessPolicyRole",
                        "values": [
                          {
                            "value": "Reader",
                            "description": "Reader role allows for read-only operations to be performed through the client APIs."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Defines the access level granted by this policy.",
                      "x-nullable": true
                    },
                    "authentication": {
                      "discriminator": "@type",
                      "properties": {
                        "@type": {
                          "type": "string",
                          "description": "The discriminator for derived types."
                        }
                      },
                      "type": "object",
                      "required": [
                        "@type"
                      ],
                      "description": "Base class for access policies authentication methods."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "description": "Access policies help define the authentication rules, and control access to specific video resources."
            },
            "description": "The request parameters"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ]
      }
    }
  },
  "definitions": {
    "EdgeModuleProperties": {
      "properties": {
        "edgeModuleId": {
          "type": "string",
          "format": "uuid",
          "description": "Internal ID generated for the instance of the Video Analyzer edge module.",
          "readOnly": true,
          "x-nullable": false
        }
      },
      "type": "object",
      "description": "Application level properties for the edge module resource."
    },
    "ListProvisioningTokenInput": {
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The desired expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date."
        }
      },
      "type": "object",
      "required": [
        "expirationDate"
      ],
      "description": "The input parameters to generate registration token for the Azure Video Analyzer IoT edge module."
    },
    "EdgeModuleProvisioningToken": {
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date of the registration token. The Azure Video Analyzer IoT edge module must be initialized and connected to the Internet prior to the token expiration date.",
          "readOnly": true,
          "x-nullable": false
        },
        "token": {
          "type": "string",
          "description": "The token blob to be provided to the Azure Video Analyzer IoT edge module through the Azure IoT Edge module twin properties.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Provisioning token properties. A provisioning token allows for a single instance of Azure Video analyzer IoT edge module to be initialized and authorized to the cloud account. The provisioning token itself is short lived and it is only used for the initial handshake between IoT edge module and the cloud. After the initial handshake, the IoT edge module will agree on a set of authentication keys which will be auto-rotated as long as the module is able to periodically connect to the cloud. A new provisioning token can be generated for the same IoT edge module in case the module state lost or reset."
    },
    "EdgeModuleEntity": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "edgeModuleId": {
              "type": "string",
              "format": "uuid",
              "description": "Internal ID generated for the instance of the Video Analyzer edge module.",
              "readOnly": true,
              "x-nullable": false
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "The representation of an edge module."
    },
    "EdgeModuleEntityCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource properties.",
                "x-ms-client-flatten": true,
                "properties": {
                  "edgeModuleId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Internal ID generated for the instance of the Video Analyzer edge module.",
                    "readOnly": true,
                    "x-nullable": false
                  }
                },
                "type": "object"
              }
            },
            "type": "object",
            "description": "The representation of an edge module."
          },
          "description": "A collection of EdgeModuleEntity items."
        },
        "@nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of EdgeModuleEntity items."
    },
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Live_S1",
            "Batch_S1"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "values": [
              {
                "value": "Live_S1",
                "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
              },
              {
                "value": "Batch_S1",
                "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
              }
            ],
            "modelAsString": true
          },
          "description": "The SKU name."
        },
        "tier": {
          "type": "string",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "values": [
              {
                "value": "Standard",
                "description": "Standard tier."
              }
            ],
            "modelAsString": true
          },
          "description": "The SKU tier.",
          "readOnly": true,
          "x-nullable": false
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "The SKU details."
    },
    "PipelineTopologyProperties": {
      "properties": {
        "description": {
          "type": "string",
          "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
        },
        "parameters": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the parameter."
              },
              "type": {
                "type": "string",
                "enum": [
                  "String",
                  "SecretString",
                  "Int",
                  "Double",
                  "Bool"
                ],
                "x-ms-enum": {
                  "name": "ParameterType",
                  "values": [
                    {
                      "value": "String",
                      "description": "The parameter's value is a string."
                    },
                    {
                      "value": "SecretString",
                      "description": "The parameter's value is a string that holds sensitive information."
                    },
                    {
                      "value": "Int",
                      "description": "The parameter's value is a 32-bit signed integer."
                    },
                    {
                      "value": "Double",
                      "description": "The parameter's value is a 64-bit double-precision floating point."
                    },
                    {
                      "value": "Bool",
                      "description": "The parameter's value is a boolean value that is either true or false."
                    }
                  ],
                  "modelAsString": true
                },
                "description": "Type of the parameter."
              },
              "description": {
                "type": "string",
                "description": "Description of the parameter."
              },
              "default": {
                "type": "string",
                "description": "The default value for the parameter to be used if the pipeline does not specify a value."
              }
            },
            "type": "object",
            "required": [
              "name",
              "type"
            ],
            "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
        },
        "sources": {
          "type": "array",
          "items": {
            "discriminator": "@type",
            "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
            "properties": {
              "@type": {
                "type": "string",
                "description": "The discriminator for derived types."
              },
              "name": {
                "type": "string",
                "description": "Node name. Must be unique within the topology."
              }
            },
            "type": "object",
            "required": [
              "@type"
            ],
            "description": "Base class for topology source nodes."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
        },
        "processors": {
          "type": "array",
          "items": {
            "discriminator": "@type",
            "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
            "properties": {
              "@type": {
                "type": "string",
                "description": "The discriminator for derived types."
              },
              "name": {
                "type": "string",
                "description": "Node name. Must be unique within the topology."
              },
              "inputs": {
                "type": "array",
                "items": {
                  "properties": {
                    "nodeName": {
                      "type": "string",
                      "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                    }
                  },
                  "type": "object",
                  "required": [
                    "nodeName"
                  ],
                  "description": "Describes an input signal to be used on a pipeline node."
                },
                "x-ms-identifiers": [
                  "nodeName"
                ],
                "description": "An array of upstream node references within the topology to be used as inputs for this node."
              }
            },
            "type": "object",
            "required": [
              "@type",
              "inputs"
            ],
            "description": "Base class for topology processor nodes."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
        },
        "sinks": {
          "type": "array",
          "items": {
            "discriminator": "@type",
            "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
            "properties": {
              "@type": {
                "type": "string",
                "description": "The discriminator for derived types."
              },
              "name": {
                "type": "string",
                "description": "Node name. Must be unique within the topology."
              },
              "inputs": {
                "type": "array",
                "items": {
                  "properties": {
                    "nodeName": {
                      "type": "string",
                      "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                    }
                  },
                  "type": "object",
                  "required": [
                    "nodeName"
                  ],
                  "description": "Describes an input signal to be used on a pipeline node."
                },
                "x-ms-identifiers": [
                  "nodeName"
                ],
                "description": "An array of upstream node references within the topology to be used as inputs for this node."
              }
            },
            "type": "object",
            "required": [
              "@type",
              "inputs"
            ],
            "description": "Base class for topology sink nodes."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
        }
      },
      "type": "object",
      "required": [
        "sources",
        "sinks"
      ],
      "description": "Describes the properties of a pipeline topology."
    },
    "PipelineTopologyPropertiesUpdate": {
      "properties": {
        "description": {
          "type": "string",
          "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
        },
        "parameters": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the parameter."
              },
              "type": {
                "type": "string",
                "enum": [
                  "String",
                  "SecretString",
                  "Int",
                  "Double",
                  "Bool"
                ],
                "x-ms-enum": {
                  "name": "ParameterType",
                  "values": [
                    {
                      "value": "String",
                      "description": "The parameter's value is a string."
                    },
                    {
                      "value": "SecretString",
                      "description": "The parameter's value is a string that holds sensitive information."
                    },
                    {
                      "value": "Int",
                      "description": "The parameter's value is a 32-bit signed integer."
                    },
                    {
                      "value": "Double",
                      "description": "The parameter's value is a 64-bit double-precision floating point."
                    },
                    {
                      "value": "Bool",
                      "description": "The parameter's value is a boolean value that is either true or false."
                    }
                  ],
                  "modelAsString": true
                },
                "description": "Type of the parameter."
              },
              "description": {
                "type": "string",
                "description": "Description of the parameter."
              },
              "default": {
                "type": "string",
                "description": "The default value for the parameter to be used if the pipeline does not specify a value."
              }
            },
            "type": "object",
            "required": [
              "name",
              "type"
            ],
            "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
        },
        "sources": {
          "type": "array",
          "items": {
            "discriminator": "@type",
            "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
            "properties": {
              "@type": {
                "type": "string",
                "description": "The discriminator for derived types."
              },
              "name": {
                "type": "string",
                "description": "Node name. Must be unique within the topology."
              }
            },
            "type": "object",
            "required": [
              "@type"
            ],
            "description": "Base class for topology source nodes."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
        },
        "processors": {
          "type": "array",
          "items": {
            "discriminator": "@type",
            "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
            "properties": {
              "@type": {
                "type": "string",
                "description": "The discriminator for derived types."
              },
              "name": {
                "type": "string",
                "description": "Node name. Must be unique within the topology."
              },
              "inputs": {
                "type": "array",
                "items": {
                  "properties": {
                    "nodeName": {
                      "type": "string",
                      "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                    }
                  },
                  "type": "object",
                  "required": [
                    "nodeName"
                  ],
                  "description": "Describes an input signal to be used on a pipeline node."
                },
                "x-ms-identifiers": [
                  "nodeName"
                ],
                "description": "An array of upstream node references within the topology to be used as inputs for this node."
              }
            },
            "type": "object",
            "required": [
              "@type",
              "inputs"
            ],
            "description": "Base class for topology processor nodes."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
        },
        "sinks": {
          "type": "array",
          "items": {
            "discriminator": "@type",
            "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
            "properties": {
              "@type": {
                "type": "string",
                "description": "The discriminator for derived types."
              },
              "name": {
                "type": "string",
                "description": "Node name. Must be unique within the topology."
              },
              "inputs": {
                "type": "array",
                "items": {
                  "properties": {
                    "nodeName": {
                      "type": "string",
                      "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                    }
                  },
                  "type": "object",
                  "required": [
                    "nodeName"
                  ],
                  "description": "Describes an input signal to be used on a pipeline node."
                },
                "x-ms-identifiers": [
                  "nodeName"
                ],
                "description": "An array of upstream node references within the topology to be used as inputs for this node."
              }
            },
            "type": "object",
            "required": [
              "@type",
              "inputs"
            ],
            "description": "Base class for topology sink nodes."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
        }
      },
      "type": "object",
      "description": "Describes the properties of a pipeline topology."
    },
    "ParameterDeclaration": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the parameter."
        },
        "type": {
          "type": "string",
          "enum": [
            "String",
            "SecretString",
            "Int",
            "Double",
            "Bool"
          ],
          "x-ms-enum": {
            "name": "ParameterType",
            "values": [
              {
                "value": "String",
                "description": "The parameter's value is a string."
              },
              {
                "value": "SecretString",
                "description": "The parameter's value is a string that holds sensitive information."
              },
              {
                "value": "Int",
                "description": "The parameter's value is a 32-bit signed integer."
              },
              {
                "value": "Double",
                "description": "The parameter's value is a 64-bit double-precision floating point."
              },
              {
                "value": "Bool",
                "description": "The parameter's value is a boolean value that is either true or false."
              }
            ],
            "modelAsString": true
          },
          "description": "Type of the parameter."
        },
        "description": {
          "type": "string",
          "description": "Description of the parameter."
        },
        "default": {
          "type": "string",
          "description": "The default value for the parameter to be used if the pipeline does not specify a value."
        }
      },
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
    },
    "NodeBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "name": {
          "type": "string",
          "description": "Node name. Must be unique within the topology."
        }
      },
      "type": "object",
      "required": [
        "@type",
        "name"
      ],
      "description": "Base class for nodes."
    },
    "SourceNodeBase": {
      "discriminator": "@type",
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "name": {
          "type": "string",
          "description": "Node name. Must be unique within the topology."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base class for topology source nodes."
    },
    "ProcessorNodeBase": {
      "discriminator": "@type",
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "name": {
          "type": "string",
          "description": "Node name. Must be unique within the topology."
        },
        "inputs": {
          "type": "array",
          "items": {
            "properties": {
              "nodeName": {
                "type": "string",
                "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
              }
            },
            "type": "object",
            "required": [
              "nodeName"
            ],
            "description": "Describes an input signal to be used on a pipeline node."
          },
          "x-ms-identifiers": [
            "nodeName"
          ],
          "description": "An array of upstream node references within the topology to be used as inputs for this node."
        }
      },
      "type": "object",
      "required": [
        "@type",
        "inputs"
      ],
      "description": "Base class for topology processor nodes."
    },
    "SinkNodeBase": {
      "discriminator": "@type",
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "name": {
          "type": "string",
          "description": "Node name. Must be unique within the topology."
        },
        "inputs": {
          "type": "array",
          "items": {
            "properties": {
              "nodeName": {
                "type": "string",
                "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
              }
            },
            "type": "object",
            "required": [
              "nodeName"
            ],
            "description": "Describes an input signal to be used on a pipeline node."
          },
          "x-ms-identifiers": [
            "nodeName"
          ],
          "description": "An array of upstream node references within the topology to be used as inputs for this node."
        }
      },
      "type": "object",
      "required": [
        "@type",
        "inputs"
      ],
      "description": "Base class for topology sink nodes."
    },
    "NodeInput": {
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
        }
      },
      "type": "object",
      "required": [
        "nodeName"
      ],
      "description": "Describes an input signal to be used on a pipeline node."
    },
    "RtspSource": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.RtspSource",
      "allOf": [
        {
          "discriminator": "@type",
          "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "name": {
              "type": "string",
              "description": "Node name. Must be unique within the topology."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base class for topology source nodes."
        }
      ],
      "properties": {
        "transport": {
          "type": "string",
          "enum": [
            "Http",
            "Tcp"
          ],
          "x-ms-enum": {
            "name": "RtspTransport",
            "values": [
              {
                "value": "Http",
                "description": "HTTP transport. RTSP messages are exchanged over long running HTTP requests and RTP packets are interleaved within the HTTP channel."
              },
              {
                "value": "Tcp",
                "description": "TCP transport. RTSP is used directly over TCP and RTP packets are interleaved within the TCP channel."
              }
            ],
            "modelAsString": true
          },
          "description": "Network transport utilized by the RTSP and RTP exchange: TCP or HTTP. When using TCP, the RTP packets are interleaved on the TCP RTSP connection. When using HTTP, the RTSP messages are exchanged through long lived HTTP connections, and the RTP packages are interleaved in the HTTP connections alongside the RTSP messages."
        },
        "endpoint": {
          "description": "RTSP endpoint information for Video Analyzer to connect to. This contains the required information for Video Analyzer to connect to RTSP cameras and/or generic RTSP servers.",
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "credentials": {
              "description": "Credentials to be presented to the endpoint.",
              "discriminator": "@type",
              "properties": {
                "@type": {
                  "type": "string",
                  "description": "The discriminator for derived types."
                }
              },
              "type": "object",
              "required": [
                "@type"
              ]
            },
            "url": {
              "type": "string",
              "description": "The endpoint URL for Video Analyzer to connect to."
            },
            "tunnel": {
              "description": "Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall.",
              "discriminator": "@type",
              "properties": {
                "@type": {
                  "type": "string",
                  "description": "The discriminator for derived types."
                }
              },
              "type": "object",
              "required": [
                "@type"
              ]
            }
          },
          "type": "object",
          "required": [
            "@type",
            "credentials",
            "url"
          ]
        }
      },
      "type": "object",
      "required": [
        "endpoint"
      ],
      "description": "RTSP source allows for media from an RTSP camera or generic RTSP server to be ingested into a pipeline."
    },
    "EndpointBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "credentials": {
          "description": "Credentials to be presented to the endpoint.",
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ]
        },
        "url": {
          "type": "string",
          "description": "The endpoint URL for Video Analyzer to connect to."
        },
        "tunnel": {
          "description": "Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall.",
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ]
        }
      },
      "type": "object",
      "required": [
        "@type",
        "credentials",
        "url"
      ],
      "description": "Base class for endpoints."
    },
    "CredentialsBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base class for credential objects."
    },
    "TunnelBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base class for tunnel objects."
    },
    "UsernamePasswordCredentials": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.UsernamePasswordCredentials",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base class for credential objects."
        }
      ],
      "properties": {
        "username": {
          "type": "string",
          "description": "Username to be presented as part of the credentials."
        },
        "password": {
          "type": "string",
          "description": "Password to be presented as part of the credentials. It is recommended that this value is parameterized as a secret string in order to prevent this value to be returned as part of the resource on API requests."
        }
      },
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "description": "Username and password credentials."
    },
    "SecureIotDeviceRemoteTunnel": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SecureIotDeviceRemoteTunnel",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base class for tunnel objects."
        }
      ],
      "properties": {
        "iotHubName": {
          "type": "string",
          "description": "Name of the IoT Hub."
        },
        "deviceId": {
          "type": "string",
          "description": "The IoT device id to use when establishing the remote tunnel. This string is case-sensitive."
        }
      },
      "type": "object",
      "required": [
        "iotHubName",
        "deviceId"
      ],
      "description": "A remote tunnel securely established using IoT Hub device information."
    },
    "UnsecuredEndpoint": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.UnsecuredEndpoint",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "credentials": {
              "description": "Credentials to be presented to the endpoint.",
              "discriminator": "@type",
              "properties": {
                "@type": {
                  "type": "string",
                  "description": "The discriminator for derived types."
                }
              },
              "type": "object",
              "required": [
                "@type"
              ]
            },
            "url": {
              "type": "string",
              "description": "The endpoint URL for Video Analyzer to connect to."
            },
            "tunnel": {
              "description": "Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall.",
              "discriminator": "@type",
              "properties": {
                "@type": {
                  "type": "string",
                  "description": "The discriminator for derived types."
                }
              },
              "type": "object",
              "required": [
                "@type"
              ]
            }
          },
          "type": "object",
          "required": [
            "@type",
            "credentials",
            "url"
          ],
          "description": "Base class for endpoints."
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Unsecured endpoint describes an endpoint that the pipeline can connect to over clear transport (no encryption in transit)."
    },
    "TlsEndpoint": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.TlsEndpoint",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "credentials": {
              "description": "Credentials to be presented to the endpoint.",
              "discriminator": "@type",
              "properties": {
                "@type": {
                  "type": "string",
                  "description": "The discriminator for derived types."
                }
              },
              "type": "object",
              "required": [
                "@type"
              ]
            },
            "url": {
              "type": "string",
              "description": "The endpoint URL for Video Analyzer to connect to."
            },
            "tunnel": {
              "description": "Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall.",
              "discriminator": "@type",
              "properties": {
                "@type": {
                  "type": "string",
                  "description": "The discriminator for derived types."
                }
              },
              "type": "object",
              "required": [
                "@type"
              ]
            }
          },
          "type": "object",
          "required": [
            "@type",
            "credentials",
            "url"
          ],
          "description": "Base class for endpoints."
        }
      ],
      "properties": {
        "trustedCertificates": {
          "description": "List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer's list of trusted authorities should be used.",
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ]
        },
        "validationOptions": {
          "description": "Validation options to use when authenticating a TLS connection. By default, strict validation is used.",
          "properties": {
            "ignoreHostname": {
              "type": "string",
              "description": "When set to 'true' causes the certificate subject name validation to be skipped. Default is 'false'."
            },
            "ignoreSignature": {
              "type": "string",
              "description": "When set to 'true' causes the certificate chain trust validation to be skipped. Default is 'false'."
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "TLS endpoint describes an endpoint that the pipeline can connect to over TLS transport (data is encrypted in transit)."
    },
    "CertificateSource": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base class for certificate sources."
    },
    "TlsValidationOptions": {
      "properties": {
        "ignoreHostname": {
          "type": "string",
          "description": "When set to 'true' causes the certificate subject name validation to be skipped. Default is 'false'."
        },
        "ignoreSignature": {
          "type": "string",
          "description": "When set to 'true' causes the certificate chain trust validation to be skipped. Default is 'false'."
        }
      },
      "type": "object",
      "description": "Options for controlling the validation of TLS endpoints."
    },
    "PemCertificateList": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.PemCertificateList",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base class for certificate sources."
        }
      ],
      "properties": {
        "certificates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "PEM formatted public certificates. One certificate per entry."
        }
      },
      "type": "object",
      "required": [
        "certificates"
      ],
      "description": "A list of PEM formatted certificates."
    },
    "VideoSource": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.VideoSource",
      "allOf": [
        {
          "discriminator": "@type",
          "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "name": {
              "type": "string",
              "description": "Node name. Must be unique within the topology."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base class for topology source nodes."
        }
      ],
      "properties": {
        "videoName": {
          "type": "string",
          "description": "Name of the Video Analyzer video resource to be used as the source."
        },
        "timeSequences": {
          "description": "Describes a sequence of datetime ranges. The video source only picks up recorded media within these ranges.",
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ]
        }
      },
      "type": "object",
      "required": [
        "videoName",
        "timeSequences"
      ],
      "description": "Video source allows for content from a Video Analyzer video resource to be ingested into a pipeline. Currently supported only with batch pipelines."
    },
    "TimeSequenceBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "A sequence of datetime ranges as a string."
    },
    "VideoSequenceAbsoluteTimeMarkers": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.VideoSequenceAbsoluteTimeMarkers",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "A sequence of datetime ranges as a string."
        }
      ],
      "properties": {
        "ranges": {
          "type": "string",
          "description": "The sequence of datetime ranges. Example: '[[\"2021-10-05T03:30:00Z\", \"2021-10-05T03:40:00Z\"]]'."
        }
      },
      "type": "object",
      "required": [
        "ranges"
      ],
      "description": "A sequence of absolute datetime ranges as a string. The datetime values should follow IS08601, and the sum of the ranges should add up to 24 hours or less. Currently, there can be only one range specified in the sequence."
    },
    "EncoderProcessor": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.EncoderProcessor",
      "allOf": [
        {
          "discriminator": "@type",
          "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "name": {
              "type": "string",
              "description": "Node name. Must be unique within the topology."
            },
            "inputs": {
              "type": "array",
              "items": {
                "properties": {
                  "nodeName": {
                    "type": "string",
                    "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                  }
                },
                "type": "object",
                "required": [
                  "nodeName"
                ],
                "description": "Describes an input signal to be used on a pipeline node."
              },
              "x-ms-identifiers": [
                "nodeName"
              ],
              "description": "An array of upstream node references within the topology to be used as inputs for this node."
            }
          },
          "type": "object",
          "required": [
            "@type",
            "inputs"
          ],
          "description": "Base class for topology processor nodes."
        }
      ],
      "properties": {
        "preset": {
          "description": "The encoder preset, which defines the recipe or instructions on how the input content should be processed.",
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ]
        }
      },
      "type": "object",
      "required": [
        "preset"
      ],
      "description": "Encoder processor allows for encoding of the input content. For example, it can used to change the resolution from 4K to 1280x720."
    },
    "EncoderPresetBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base type for all encoder presets, which define the recipe or instructions on how the input content should be processed."
    },
    "EncoderSystemPreset": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.EncoderSystemPreset",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base type for all encoder presets, which define the recipe or instructions on how the input content should be processed."
        }
      ],
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "SingleLayer_540p_H264_AAC",
            "SingleLayer_720p_H264_AAC",
            "SingleLayer_1080p_H264_AAC",
            "SingleLayer_2160p_H264_AAC"
          ],
          "x-ms-enum": {
            "name": "EncoderSystemPresetType",
            "values": [
              {
                "value": "SingleLayer_540p_H264_AAC",
                "description": "Produces an MP4 file where the video is encoded with H.264 codec at a picture height of 540 pixels, and at a maximum bitrate of 2000 Kbps. Encoded video has the same average frame rate as the input. The aspect ratio of the input is preserved. If the input content has audio, then it is encoded with AAC-LC codec at 96 Kbps"
              },
              {
                "value": "SingleLayer_720p_H264_AAC",
                "description": "Produces an MP4 file where the video is encoded with H.264 codec at a picture height of 720 pixels, and at a maximum bitrate of 3500 Kbps. Encoded video has the same average frame rate as the input. The aspect ratio of the input is preserved. If the input content has audio, then it is encoded with AAC-LC codec at 96 Kbps"
              },
              {
                "value": "SingleLayer_1080p_H264_AAC",
                "description": "Produces an MP4 file where the video is encoded with H.264 codec at a picture height of 1080 pixels, and at a maximum bitrate of 6000 Kbps. Encoded video has the same average frame rate as the input. The aspect ratio of the input is preserved. If the input content has audio, then it is encoded with AAC-LC codec at 128 Kbps"
              },
              {
                "value": "SingleLayer_2160p_H264_AAC",
                "description": "Produces an MP4 file where the video is encoded with H.264 codec at a picture height of 2160 pixels, and at a maximum bitrate of 16000 Kbps. Encoded video has the same average frame rate as the input. The aspect ratio of the input is preserved. If the input content has audio, then it is encoded with AAC-LC codec at 128 Kbps"
              }
            ],
            "modelAsString": true
          },
          "description": "Name of the built-in encoding preset."
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "Describes a built-in preset for encoding the input content using the encoder processor."
    },
    "EncoderCustomPreset": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.EncoderCustomPreset",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base type for all encoder presets, which define the recipe or instructions on how the input content should be processed."
        }
      ],
      "properties": {
        "audioEncoder": {
          "description": "Describes a custom preset for encoding audio.",
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "bitrateKbps": {
              "type": "string",
              "description": "Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ]
        },
        "videoEncoder": {
          "description": "Describes a custom preset for encoding video.",
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "bitrateKbps": {
              "type": "string",
              "description": "The maximum bitrate, in kilobits per second or Kbps, at which video should be encoded. If omitted, encoder sets it automatically to try and match the quality of the input video."
            },
            "frameRate": {
              "type": "string",
              "description": "The frame rate (in frames per second) of the encoded video. The value must be greater than zero, and less than or equal to 300. If omitted, the encoder uses the average frame rate of the input video."
            },
            "scale": {
              "description": "Describes the resolution of the encoded video. If omitted, the encoder uses the resolution of the input video.",
              "properties": {
                "height": {
                  "type": "string",
                  "description": "The desired output video height."
                },
                "width": {
                  "type": "string",
                  "description": "The desired output video width."
                },
                "mode": {
                  "type": "string",
                  "enum": [
                    "Pad",
                    "PreserveAspectRatio",
                    "Stretch"
                  ],
                  "x-ms-enum": {
                    "name": "VideoScaleMode",
                    "values": [
                      {
                        "value": "Pad",
                        "description": "Pads the video with black horizontal stripes (letterbox) or black vertical stripes (pillar-box) so the video is resized to the specified dimensions while not altering the content aspect ratio."
                      },
                      {
                        "value": "PreserveAspectRatio",
                        "description": "Preserves the same aspect ratio as the input video. If only one video dimension is provided, the second dimension is calculated based on the input video aspect ratio. When 2 dimensions are provided, the video is resized to fit the most constraining dimension, considering the input video size and aspect ratio."
                      },
                      {
                        "value": "Stretch",
                        "description": "Stretches the original video so it resized to the specified dimensions."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Describes the video scaling mode to be applied. Default mode is 'Pad'. If the mode is 'Pad' or 'Stretch' then both width and height must be specified. Else if the mode is 'PreserveAspectRatio' then only one of width or height need be provided."
                }
              },
              "type": "object"
            }
          },
          "type": "object",
          "required": [
            "@type"
          ]
        }
      },
      "type": "object",
      "description": "Describes a custom preset for encoding the input content using the encoder processor."
    },
    "AudioEncoderBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "bitrateKbps": {
          "type": "string",
          "description": "Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base type for all audio encoder presets, which define the recipe or instructions on how audio should be processed."
    },
    "VideoEncoderBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "bitrateKbps": {
          "type": "string",
          "description": "The maximum bitrate, in kilobits per second or Kbps, at which video should be encoded. If omitted, encoder sets it automatically to try and match the quality of the input video."
        },
        "frameRate": {
          "type": "string",
          "description": "The frame rate (in frames per second) of the encoded video. The value must be greater than zero, and less than or equal to 300. If omitted, the encoder uses the average frame rate of the input video."
        },
        "scale": {
          "description": "Describes the resolution of the encoded video. If omitted, the encoder uses the resolution of the input video.",
          "properties": {
            "height": {
              "type": "string",
              "description": "The desired output video height."
            },
            "width": {
              "type": "string",
              "description": "The desired output video width."
            },
            "mode": {
              "type": "string",
              "enum": [
                "Pad",
                "PreserveAspectRatio",
                "Stretch"
              ],
              "x-ms-enum": {
                "name": "VideoScaleMode",
                "values": [
                  {
                    "value": "Pad",
                    "description": "Pads the video with black horizontal stripes (letterbox) or black vertical stripes (pillar-box) so the video is resized to the specified dimensions while not altering the content aspect ratio."
                  },
                  {
                    "value": "PreserveAspectRatio",
                    "description": "Preserves the same aspect ratio as the input video. If only one video dimension is provided, the second dimension is calculated based on the input video aspect ratio. When 2 dimensions are provided, the video is resized to fit the most constraining dimension, considering the input video size and aspect ratio."
                  },
                  {
                    "value": "Stretch",
                    "description": "Stretches the original video so it resized to the specified dimensions."
                  }
                ],
                "modelAsString": true
              },
              "description": "Describes the video scaling mode to be applied. Default mode is 'Pad'. If the mode is 'Pad' or 'Stretch' then both width and height must be specified. Else if the mode is 'PreserveAspectRatio' then only one of width or height need be provided."
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base type for all video encoding presets, which define the recipe or instructions on how the input video should be processed."
    },
    "AudioEncoderAac": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.AudioEncoderAac",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "bitrateKbps": {
              "type": "string",
              "description": "Bitrate, in kilobits per second or Kbps, at which audio should be encoded (2-channel stereo audio at a sampling rate of 48 kHz). Allowed values are 96, 112, 128, 160, 192, 224, and 256. If omitted, the bitrate of the input audio is used."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base type for all audio encoder presets, which define the recipe or instructions on how audio should be processed."
        }
      ],
      "properties": {},
      "type": "object",
      "description": "A custom preset for encoding audio with the AAC codec."
    },
    "VideoScale": {
      "properties": {
        "height": {
          "type": "string",
          "description": "The desired output video height."
        },
        "width": {
          "type": "string",
          "description": "The desired output video width."
        },
        "mode": {
          "type": "string",
          "enum": [
            "Pad",
            "PreserveAspectRatio",
            "Stretch"
          ],
          "x-ms-enum": {
            "name": "VideoScaleMode",
            "values": [
              {
                "value": "Pad",
                "description": "Pads the video with black horizontal stripes (letterbox) or black vertical stripes (pillar-box) so the video is resized to the specified dimensions while not altering the content aspect ratio."
              },
              {
                "value": "PreserveAspectRatio",
                "description": "Preserves the same aspect ratio as the input video. If only one video dimension is provided, the second dimension is calculated based on the input video aspect ratio. When 2 dimensions are provided, the video is resized to fit the most constraining dimension, considering the input video size and aspect ratio."
              },
              {
                "value": "Stretch",
                "description": "Stretches the original video so it resized to the specified dimensions."
              }
            ],
            "modelAsString": true
          },
          "description": "Describes the video scaling mode to be applied. Default mode is 'Pad'. If the mode is 'Pad' or 'Stretch' then both width and height must be specified. Else if the mode is 'PreserveAspectRatio' then only one of width or height need be provided."
        }
      },
      "type": "object",
      "description": "The video scaling information."
    },
    "VideoEncoderH264": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.VideoEncoderH264",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "bitrateKbps": {
              "type": "string",
              "description": "The maximum bitrate, in kilobits per second or Kbps, at which video should be encoded. If omitted, encoder sets it automatically to try and match the quality of the input video."
            },
            "frameRate": {
              "type": "string",
              "description": "The frame rate (in frames per second) of the encoded video. The value must be greater than zero, and less than or equal to 300. If omitted, the encoder uses the average frame rate of the input video."
            },
            "scale": {
              "description": "Describes the resolution of the encoded video. If omitted, the encoder uses the resolution of the input video.",
              "properties": {
                "height": {
                  "type": "string",
                  "description": "The desired output video height."
                },
                "width": {
                  "type": "string",
                  "description": "The desired output video width."
                },
                "mode": {
                  "type": "string",
                  "enum": [
                    "Pad",
                    "PreserveAspectRatio",
                    "Stretch"
                  ],
                  "x-ms-enum": {
                    "name": "VideoScaleMode",
                    "values": [
                      {
                        "value": "Pad",
                        "description": "Pads the video with black horizontal stripes (letterbox) or black vertical stripes (pillar-box) so the video is resized to the specified dimensions while not altering the content aspect ratio."
                      },
                      {
                        "value": "PreserveAspectRatio",
                        "description": "Preserves the same aspect ratio as the input video. If only one video dimension is provided, the second dimension is calculated based on the input video aspect ratio. When 2 dimensions are provided, the video is resized to fit the most constraining dimension, considering the input video size and aspect ratio."
                      },
                      {
                        "value": "Stretch",
                        "description": "Stretches the original video so it resized to the specified dimensions."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Describes the video scaling mode to be applied. Default mode is 'Pad'. If the mode is 'Pad' or 'Stretch' then both width and height must be specified. Else if the mode is 'PreserveAspectRatio' then only one of width or height need be provided."
                }
              },
              "type": "object"
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base type for all video encoding presets, which define the recipe or instructions on how the input video should be processed."
        }
      ],
      "properties": {},
      "type": "object",
      "description": "A custom preset for encoding video with the H.264 (AVC) codec."
    },
    "VideoSink": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.VideoSink",
      "allOf": [
        {
          "discriminator": "@type",
          "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "name": {
              "type": "string",
              "description": "Node name. Must be unique within the topology."
            },
            "inputs": {
              "type": "array",
              "items": {
                "properties": {
                  "nodeName": {
                    "type": "string",
                    "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                  }
                },
                "type": "object",
                "required": [
                  "nodeName"
                ],
                "description": "Describes an input signal to be used on a pipeline node."
              },
              "x-ms-identifiers": [
                "nodeName"
              ],
              "description": "An array of upstream node references within the topology to be used as inputs for this node."
            }
          },
          "type": "object",
          "required": [
            "@type",
            "inputs"
          ],
          "description": "Base class for topology sink nodes."
        }
      ],
      "properties": {
        "videoName": {
          "type": "string",
          "description": "Name of a new or existing video resource used to capture and publish content. Note: if downstream of RTSP source, and if disableArchive is set to true, then no content is archived."
        },
        "videoCreationProperties": {
          "description": "Optional video properties to be used in case a new video resource needs to be created on the service.",
          "properties": {
            "title": {
              "type": "string",
              "description": "Optional title provided by the user. Value can be up to 256 characters long."
            },
            "description": {
              "type": "string",
              "description": "Optional description provided by the user. Value can be up to 2048 characters long."
            },
            "segmentLength": {
              "type": "string",
              "description": "Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the initial call to create the video resource can lead to errors when uploading content to the archive. Default value is 30 seconds. This property is only allowed for topologies where \"kind\" is set to \"live\"."
            },
            "retentionPeriod": {
              "type": "string",
              "description": "Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format (i.e. \"P1D\" equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content is retained indefinitely. This property is only allowed for topologies where \"kind\" is set to \"live\"."
            }
          },
          "type": "object"
        },
        "videoPublishingOptions": {
          "description": "Options to change how the video sink publishes content via the video resource. This property is only allowed for topologies where \"kind\" is set to \"live\".",
          "properties": {
            "disableArchive": {
              "type": "string",
              "description": "When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only for low latency video streaming. Default is 'false'.  If set to 'true', then \"disableRtspPublishing\" must be set to 'false'."
            },
            "disableRtspPublishing": {
              "type": "string",
              "description": "When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example, when the topology is used only for archiving content. Default is 'false'.  If set to 'true', then \"disableArchive\" must be set to 'false'."
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "required": [
        "videoName"
      ],
      "description": "Video sink in a live topology allows for video and audio to be captured, optionally archived, and published via a video resource. If archiving is enabled, this results in a video of type 'archive'. If used in a batch topology, this allows for video and audio to be stored as a file, and published via a video resource of type 'file'"
    },
    "VideoCreationProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional title provided by the user. Value can be up to 256 characters long."
        },
        "description": {
          "type": "string",
          "description": "Optional description provided by the user. Value can be up to 2048 characters long."
        },
        "segmentLength": {
          "type": "string",
          "description": "Segment length indicates the length of individual content files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the initial call to create the video resource can lead to errors when uploading content to the archive. Default value is 30 seconds. This property is only allowed for topologies where \"kind\" is set to \"live\"."
        },
        "retentionPeriod": {
          "type": "string",
          "description": "Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format (i.e. \"P1D\" equals 1 day) and can vary between 1 day to 10 years, in 1 day increments. When absent (null), all video content is retained indefinitely. This property is only allowed for topologies where \"kind\" is set to \"live\"."
        }
      },
      "type": "object",
      "description": "Optional properties to be used in case a new video resource needs to be created on the service. These will not take effect if the video already exists."
    },
    "VideoPublishingOptions": {
      "properties": {
        "disableArchive": {
          "type": "string",
          "description": "When set to 'true' content will not be archived or recorded. This is used, for example, when the topology is used only for low latency video streaming. Default is 'false'.  If set to 'true', then \"disableRtspPublishing\" must be set to 'false'."
        },
        "disableRtspPublishing": {
          "type": "string",
          "description": "When set to 'true' the RTSP playback URL will not be published, disabling low latency streaming. This is used, for example, when the topology is used only for archiving content. Default is 'false'.  If set to 'true', then \"disableArchive\" must be set to 'false'."
        }
      },
      "type": "object",
      "description": "Optional flags used to change how video is published. These are only allowed for topologies where \"kind\" is set to \"live\"."
    },
    "ParameterDefinition": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the parameter declared in the pipeline topology."
        },
        "value": {
          "type": "string",
          "description": "Parameter value to be applied on this specific pipeline."
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
    },
    "PipelineTopology": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "description": {
              "type": "string",
              "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
            },
            "parameters": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the parameter."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "String",
                      "SecretString",
                      "Int",
                      "Double",
                      "Bool"
                    ],
                    "x-ms-enum": {
                      "name": "ParameterType",
                      "values": [
                        {
                          "value": "String",
                          "description": "The parameter's value is a string."
                        },
                        {
                          "value": "SecretString",
                          "description": "The parameter's value is a string that holds sensitive information."
                        },
                        {
                          "value": "Int",
                          "description": "The parameter's value is a 32-bit signed integer."
                        },
                        {
                          "value": "Double",
                          "description": "The parameter's value is a 64-bit double-precision floating point."
                        },
                        {
                          "value": "Bool",
                          "description": "The parameter's value is a boolean value that is either true or false."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "Type of the parameter."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the parameter."
                  },
                  "default": {
                    "type": "string",
                    "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                  }
                },
                "type": "object",
                "required": [
                  "name",
                  "type"
                ],
                "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
            },
            "sources": {
              "type": "array",
              "items": {
                "discriminator": "@type",
                "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                "properties": {
                  "@type": {
                    "type": "string",
                    "description": "The discriminator for derived types."
                  },
                  "name": {
                    "type": "string",
                    "description": "Node name. Must be unique within the topology."
                  }
                },
                "type": "object",
                "required": [
                  "@type"
                ],
                "description": "Base class for topology source nodes."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
            },
            "processors": {
              "type": "array",
              "items": {
                "discriminator": "@type",
                "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                "properties": {
                  "@type": {
                    "type": "string",
                    "description": "The discriminator for derived types."
                  },
                  "name": {
                    "type": "string",
                    "description": "Node name. Must be unique within the topology."
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "nodeName": {
                          "type": "string",
                          "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                        }
                      },
                      "type": "object",
                      "required": [
                        "nodeName"
                      ],
                      "description": "Describes an input signal to be used on a pipeline node."
                    },
                    "x-ms-identifiers": [
                      "nodeName"
                    ],
                    "description": "An array of upstream node references within the topology to be used as inputs for this node."
                  }
                },
                "type": "object",
                "required": [
                  "@type",
                  "inputs"
                ],
                "description": "Base class for topology processor nodes."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
            },
            "sinks": {
              "type": "array",
              "items": {
                "discriminator": "@type",
                "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                "properties": {
                  "@type": {
                    "type": "string",
                    "description": "The discriminator for derived types."
                  },
                  "name": {
                    "type": "string",
                    "description": "Node name. Must be unique within the topology."
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "nodeName": {
                          "type": "string",
                          "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                        }
                      },
                      "type": "object",
                      "required": [
                        "nodeName"
                      ],
                      "description": "Describes an input signal to be used on a pipeline node."
                    },
                    "x-ms-identifiers": [
                      "nodeName"
                    ],
                    "description": "An array of upstream node references within the topology to be used as inputs for this node."
                  }
                },
                "type": "object",
                "required": [
                  "@type",
                  "inputs"
                ],
                "description": "Base class for topology sink nodes."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
            }
          },
          "type": "object",
          "required": [
            "sources",
            "sinks"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "Live",
            "Batch"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "values": [
              {
                "value": "Live",
                "description": "Live pipeline topology resource."
              },
              {
                "value": "Batch",
                "description": "Batch pipeline topology resource."
              }
            ],
            "modelAsString": true
          },
          "description": "Topology kind."
        },
        "sku": {
          "description": "Describes the properties of a SKU.",
          "properties": {
            "name": {
              "type": "string",
              "enum": [
                "Live_S1",
                "Batch_S1"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "values": [
                  {
                    "value": "Live_S1",
                    "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                  },
                  {
                    "value": "Batch_S1",
                    "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                  }
                ],
                "modelAsString": true
              },
              "description": "The SKU name."
            },
            "tier": {
              "type": "string",
              "enum": [
                "Standard"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "values": [
                  {
                    "value": "Standard",
                    "description": "Standard tier."
                  }
                ],
                "modelAsString": true
              },
              "description": "The SKU tier.",
              "readOnly": true,
              "x-nullable": false
            }
          },
          "type": "object",
          "required": [
            "name"
          ]
        }
      },
      "type": "object",
      "required": [
        "kind",
        "sku"
      ],
      "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
    },
    "PipelineTopologyUpdate": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "description": {
              "type": "string",
              "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
            },
            "parameters": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the parameter."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "String",
                      "SecretString",
                      "Int",
                      "Double",
                      "Bool"
                    ],
                    "x-ms-enum": {
                      "name": "ParameterType",
                      "values": [
                        {
                          "value": "String",
                          "description": "The parameter's value is a string."
                        },
                        {
                          "value": "SecretString",
                          "description": "The parameter's value is a string that holds sensitive information."
                        },
                        {
                          "value": "Int",
                          "description": "The parameter's value is a 32-bit signed integer."
                        },
                        {
                          "value": "Double",
                          "description": "The parameter's value is a 64-bit double-precision floating point."
                        },
                        {
                          "value": "Bool",
                          "description": "The parameter's value is a boolean value that is either true or false."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "Type of the parameter."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the parameter."
                  },
                  "default": {
                    "type": "string",
                    "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                  }
                },
                "type": "object",
                "required": [
                  "name",
                  "type"
                ],
                "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
            },
            "sources": {
              "type": "array",
              "items": {
                "discriminator": "@type",
                "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                "properties": {
                  "@type": {
                    "type": "string",
                    "description": "The discriminator for derived types."
                  },
                  "name": {
                    "type": "string",
                    "description": "Node name. Must be unique within the topology."
                  }
                },
                "type": "object",
                "required": [
                  "@type"
                ],
                "description": "Base class for topology source nodes."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
            },
            "processors": {
              "type": "array",
              "items": {
                "discriminator": "@type",
                "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                "properties": {
                  "@type": {
                    "type": "string",
                    "description": "The discriminator for derived types."
                  },
                  "name": {
                    "type": "string",
                    "description": "Node name. Must be unique within the topology."
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "nodeName": {
                          "type": "string",
                          "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                        }
                      },
                      "type": "object",
                      "required": [
                        "nodeName"
                      ],
                      "description": "Describes an input signal to be used on a pipeline node."
                    },
                    "x-ms-identifiers": [
                      "nodeName"
                    ],
                    "description": "An array of upstream node references within the topology to be used as inputs for this node."
                  }
                },
                "type": "object",
                "required": [
                  "@type",
                  "inputs"
                ],
                "description": "Base class for topology processor nodes."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
            },
            "sinks": {
              "type": "array",
              "items": {
                "discriminator": "@type",
                "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                "properties": {
                  "@type": {
                    "type": "string",
                    "description": "The discriminator for derived types."
                  },
                  "name": {
                    "type": "string",
                    "description": "Node name. Must be unique within the topology."
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "nodeName": {
                          "type": "string",
                          "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                        }
                      },
                      "type": "object",
                      "required": [
                        "nodeName"
                      ],
                      "description": "Describes an input signal to be used on a pipeline node."
                    },
                    "x-ms-identifiers": [
                      "nodeName"
                    ],
                    "description": "An array of upstream node references within the topology to be used as inputs for this node."
                  }
                },
                "type": "object",
                "required": [
                  "@type",
                  "inputs"
                ],
                "description": "Base class for topology sink nodes."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string",
          "enum": [
            "Live",
            "Batch"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "values": [
              {
                "value": "Live",
                "description": "Live pipeline topology resource."
              },
              {
                "value": "Batch",
                "description": "Batch pipeline topology resource."
              }
            ],
            "modelAsString": true
          },
          "description": "Topology kind."
        },
        "sku": {
          "description": "Describes the properties of a SKU.",
          "properties": {
            "name": {
              "type": "string",
              "enum": [
                "Live_S1",
                "Batch_S1"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "values": [
                  {
                    "value": "Live_S1",
                    "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                  },
                  {
                    "value": "Batch_S1",
                    "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                  }
                ],
                "modelAsString": true
              },
              "description": "The SKU name."
            },
            "tier": {
              "type": "string",
              "enum": [
                "Standard"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "values": [
                  {
                    "value": "Standard",
                    "description": "Standard tier."
                  }
                ],
                "modelAsString": true
              },
              "description": "The SKU tier.",
              "readOnly": true,
              "x-nullable": false
            }
          },
          "type": "object",
          "required": [
            "name"
          ]
        }
      },
      "type": "object",
      "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
    },
    "LivePipelineProperties": {
      "properties": {
        "topologyName": {
          "type": "string",
          "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the pipeline."
        },
        "bitrateKbps": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
        },
        "state": {
          "type": "string",
          "enum": [
            "Inactive",
            "Activating",
            "Active",
            "Deactivating"
          ],
          "x-ms-enum": {
            "name": "LivePipelineState",
            "values": [
              {
                "value": "Inactive",
                "description": "The live pipeline is idle and not processing media."
              },
              {
                "value": "Activating",
                "description": "The live pipeline is transitioning into the active state."
              },
              {
                "value": "Active",
                "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
              },
              {
                "value": "Deactivating",
                "description": "The live pipeline is transitioning into the inactive state."
              }
            ],
            "modelAsString": true
          },
          "description": "Current state of the pipeline (read-only).",
          "readOnly": true,
          "x-nullable": false
        },
        "parameters": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the parameter declared in the pipeline topology."
              },
              "value": {
                "type": "string",
                "description": "Parameter value to be applied on this specific pipeline."
              }
            },
            "type": "object",
            "required": [
              "name"
            ],
            "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
        }
      },
      "type": "object",
      "required": [
        "topologyName",
        "bitrateKbps"
      ],
      "description": "Live pipeline properties."
    },
    "LivePipelinePropertiesUpdate": {
      "properties": {
        "topologyName": {
          "type": "string",
          "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the pipeline."
        },
        "bitrateKbps": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
        },
        "state": {
          "type": "string",
          "enum": [
            "Inactive",
            "Activating",
            "Active",
            "Deactivating"
          ],
          "x-ms-enum": {
            "name": "LivePipelineState",
            "values": [
              {
                "value": "Inactive",
                "description": "The live pipeline is idle and not processing media."
              },
              {
                "value": "Activating",
                "description": "The live pipeline is transitioning into the active state."
              },
              {
                "value": "Active",
                "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
              },
              {
                "value": "Deactivating",
                "description": "The live pipeline is transitioning into the inactive state."
              }
            ],
            "modelAsString": true
          },
          "description": "Current state of the pipeline (read-only).",
          "readOnly": true,
          "x-nullable": false
        },
        "parameters": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the parameter declared in the pipeline topology."
              },
              "value": {
                "type": "string",
                "description": "Parameter value to be applied on this specific pipeline."
              }
            },
            "type": "object",
            "required": [
              "name"
            ],
            "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
        }
      },
      "type": "object",
      "description": "Live pipeline properties."
    },
    "LivePipeline": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "topologyName": {
              "type": "string",
              "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
            },
            "description": {
              "type": "string",
              "description": "An optional description for the pipeline."
            },
            "bitrateKbps": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
            },
            "state": {
              "type": "string",
              "enum": [
                "Inactive",
                "Activating",
                "Active",
                "Deactivating"
              ],
              "x-ms-enum": {
                "name": "LivePipelineState",
                "values": [
                  {
                    "value": "Inactive",
                    "description": "The live pipeline is idle and not processing media."
                  },
                  {
                    "value": "Activating",
                    "description": "The live pipeline is transitioning into the active state."
                  },
                  {
                    "value": "Active",
                    "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                  },
                  {
                    "value": "Deactivating",
                    "description": "The live pipeline is transitioning into the inactive state."
                  }
                ],
                "modelAsString": true
              },
              "description": "Current state of the pipeline (read-only).",
              "readOnly": true,
              "x-nullable": false
            },
            "parameters": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the parameter declared in the pipeline topology."
                  },
                  "value": {
                    "type": "string",
                    "description": "Parameter value to be applied on this specific pipeline."
                  }
                },
                "type": "object",
                "required": [
                  "name"
                ],
                "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
            }
          },
          "type": "object",
          "required": [
            "topologyName",
            "bitrateKbps"
          ]
        }
      },
      "type": "object",
      "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
    },
    "LivePipelineUpdate": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "topologyName": {
              "type": "string",
              "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
            },
            "description": {
              "type": "string",
              "description": "An optional description for the pipeline."
            },
            "bitrateKbps": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
            },
            "state": {
              "type": "string",
              "enum": [
                "Inactive",
                "Activating",
                "Active",
                "Deactivating"
              ],
              "x-ms-enum": {
                "name": "LivePipelineState",
                "values": [
                  {
                    "value": "Inactive",
                    "description": "The live pipeline is idle and not processing media."
                  },
                  {
                    "value": "Activating",
                    "description": "The live pipeline is transitioning into the active state."
                  },
                  {
                    "value": "Active",
                    "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                  },
                  {
                    "value": "Deactivating",
                    "description": "The live pipeline is transitioning into the inactive state."
                  }
                ],
                "modelAsString": true
              },
              "description": "Current state of the pipeline (read-only).",
              "readOnly": true,
              "x-nullable": false
            },
            "parameters": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the parameter declared in the pipeline topology."
                  },
                  "value": {
                    "type": "string",
                    "description": "Parameter value to be applied on this specific pipeline."
                  }
                },
                "type": "object",
                "required": [
                  "name"
                ],
                "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
    },
    "PipelineJobProperties": {
      "properties": {
        "topologyName": {
          "type": "string",
          "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the pipeline."
        },
        "state": {
          "type": "string",
          "enum": [
            "Processing",
            "Canceled",
            "Completed",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "PipelineJobState",
            "values": [
              {
                "value": "Processing",
                "description": "Pipeline job is processing."
              },
              {
                "value": "Canceled",
                "description": "Pipeline job is canceled."
              },
              {
                "value": "Completed",
                "description": "Pipeline job completed."
              },
              {
                "value": "Failed",
                "description": "Pipeline job failed."
              }
            ],
            "modelAsString": true
          },
          "description": "Current state of the pipeline (read-only).",
          "readOnly": true,
          "x-nullable": false
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
          "readOnly": true,
          "x-nullable": false
        },
        "error": {
          "description": "Details about the error, in case the pipeline job fails.",
          "readOnly": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "The error code."
            },
            "message": {
              "type": "string",
              "description": "The error message."
            }
          },
          "type": "object"
        },
        "parameters": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the parameter declared in the pipeline topology."
              },
              "value": {
                "type": "string",
                "description": "Parameter value to be applied on this specific pipeline."
              }
            },
            "type": "object",
            "required": [
              "name"
            ],
            "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
        }
      },
      "type": "object",
      "required": [
        "topologyName"
      ],
      "description": "Pipeline job properties."
    },
    "PipelineJobPropertiesUpdate": {
      "properties": {
        "topologyName": {
          "type": "string",
          "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the pipeline."
        },
        "state": {
          "type": "string",
          "enum": [
            "Processing",
            "Canceled",
            "Completed",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "PipelineJobState",
            "values": [
              {
                "value": "Processing",
                "description": "Pipeline job is processing."
              },
              {
                "value": "Canceled",
                "description": "Pipeline job is canceled."
              },
              {
                "value": "Completed",
                "description": "Pipeline job completed."
              },
              {
                "value": "Failed",
                "description": "Pipeline job failed."
              }
            ],
            "modelAsString": true
          },
          "description": "Current state of the pipeline (read-only).",
          "readOnly": true,
          "x-nullable": false
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
          "readOnly": true,
          "x-nullable": false
        },
        "error": {
          "description": "Details about the error, in case the pipeline job fails.",
          "readOnly": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "The error code."
            },
            "message": {
              "type": "string",
              "description": "The error message."
            }
          },
          "type": "object"
        },
        "parameters": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the parameter declared in the pipeline topology."
              },
              "value": {
                "type": "string",
                "description": "Parameter value to be applied on this specific pipeline."
              }
            },
            "type": "object",
            "required": [
              "name"
            ],
            "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
        }
      },
      "type": "object",
      "description": "Pipeline job properties."
    },
    "PipelineJobError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      },
      "type": "object",
      "description": "Details about the error for a failed pipeline job."
    },
    "PipelineJob": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "topologyName": {
              "type": "string",
              "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
            },
            "description": {
              "type": "string",
              "description": "An optional description for the pipeline."
            },
            "state": {
              "type": "string",
              "enum": [
                "Processing",
                "Canceled",
                "Completed",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "PipelineJobState",
                "values": [
                  {
                    "value": "Processing",
                    "description": "Pipeline job is processing."
                  },
                  {
                    "value": "Canceled",
                    "description": "Pipeline job is canceled."
                  },
                  {
                    "value": "Completed",
                    "description": "Pipeline job completed."
                  },
                  {
                    "value": "Failed",
                    "description": "Pipeline job failed."
                  }
                ],
                "modelAsString": true
              },
              "description": "Current state of the pipeline (read-only).",
              "readOnly": true,
              "x-nullable": false
            },
            "expiration": {
              "type": "string",
              "format": "date-time",
              "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
              "readOnly": true,
              "x-nullable": false
            },
            "error": {
              "description": "Details about the error, in case the pipeline job fails.",
              "readOnly": true,
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The error code."
                },
                "message": {
                  "type": "string",
                  "description": "The error message."
                }
              },
              "type": "object"
            },
            "parameters": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the parameter declared in the pipeline topology."
                  },
                  "value": {
                    "type": "string",
                    "description": "Parameter value to be applied on this specific pipeline."
                  }
                },
                "type": "object",
                "required": [
                  "name"
                ],
                "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
            }
          },
          "type": "object",
          "required": [
            "topologyName"
          ]
        }
      },
      "type": "object",
      "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
    },
    "PipelineJobUpdate": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "topologyName": {
              "type": "string",
              "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
            },
            "description": {
              "type": "string",
              "description": "An optional description for the pipeline."
            },
            "state": {
              "type": "string",
              "enum": [
                "Processing",
                "Canceled",
                "Completed",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "PipelineJobState",
                "values": [
                  {
                    "value": "Processing",
                    "description": "Pipeline job is processing."
                  },
                  {
                    "value": "Canceled",
                    "description": "Pipeline job is canceled."
                  },
                  {
                    "value": "Completed",
                    "description": "Pipeline job completed."
                  },
                  {
                    "value": "Failed",
                    "description": "Pipeline job failed."
                  }
                ],
                "modelAsString": true
              },
              "description": "Current state of the pipeline (read-only).",
              "readOnly": true,
              "x-nullable": false
            },
            "expiration": {
              "type": "string",
              "format": "date-time",
              "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
              "readOnly": true,
              "x-nullable": false
            },
            "error": {
              "description": "Details about the error, in case the pipeline job fails.",
              "readOnly": true,
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The error code."
                },
                "message": {
                  "type": "string",
                  "description": "The error message."
                }
              },
              "type": "object"
            },
            "parameters": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the parameter declared in the pipeline topology."
                  },
                  "value": {
                    "type": "string",
                    "description": "Parameter value to be applied on this specific pipeline."
                  }
                },
                "type": "object",
                "required": [
                  "name"
                ],
                "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
    },
    "LivePipelineOperationStatus": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the live pipeline operation.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of the live pipeline operation.",
          "readOnly": true
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "description": "The error details for the live pipeline operation.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Used for tracking the status of an operation on the live pipeline."
    },
    "PipelineJobOperationStatus": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the pipeline job operation.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of the pipeline job operation.",
          "readOnly": true
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "description": "The error details for the pipeline job operation.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Used for tracking the status of an operation on the pipeline job."
    },
    "PipelineTopologyCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource properties.",
                "x-ms-client-flatten": true,
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the parameter."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "String",
                            "SecretString",
                            "Int",
                            "Double",
                            "Bool"
                          ],
                          "x-ms-enum": {
                            "name": "ParameterType",
                            "values": [
                              {
                                "value": "String",
                                "description": "The parameter's value is a string."
                              },
                              {
                                "value": "SecretString",
                                "description": "The parameter's value is a string that holds sensitive information."
                              },
                              {
                                "value": "Int",
                                "description": "The parameter's value is a 32-bit signed integer."
                              },
                              {
                                "value": "Double",
                                "description": "The parameter's value is a 64-bit double-precision floating point."
                              },
                              {
                                "value": "Bool",
                                "description": "The parameter's value is a boolean value that is either true or false."
                              }
                            ],
                            "modelAsString": true
                          },
                          "description": "Type of the parameter."
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the parameter."
                        },
                        "default": {
                          "type": "string",
                          "description": "The default value for the parameter to be used if the pipeline does not specify a value."
                        }
                      },
                      "type": "object",
                      "required": [
                        "name",
                        "type"
                      ],
                      "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \"${PARAMETER_NAME}\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
                  },
                  "sources": {
                    "type": "array",
                    "items": {
                      "discriminator": "@type",
                      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
                      "properties": {
                        "@type": {
                          "type": "string",
                          "description": "The discriminator for derived types."
                        },
                        "name": {
                          "type": "string",
                          "description": "Node name. Must be unique within the topology."
                        }
                      },
                      "type": "object",
                      "required": [
                        "@type"
                      ],
                      "description": "Base class for topology source nodes."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
                  },
                  "processors": {
                    "type": "array",
                    "items": {
                      "discriminator": "@type",
                      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
                      "properties": {
                        "@type": {
                          "type": "string",
                          "description": "The discriminator for derived types."
                        },
                        "name": {
                          "type": "string",
                          "description": "Node name. Must be unique within the topology."
                        },
                        "inputs": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "nodeName": {
                                "type": "string",
                                "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                              }
                            },
                            "type": "object",
                            "required": [
                              "nodeName"
                            ],
                            "description": "Describes an input signal to be used on a pipeline node."
                          },
                          "x-ms-identifiers": [
                            "nodeName"
                          ],
                          "description": "An array of upstream node references within the topology to be used as inputs for this node."
                        }
                      },
                      "type": "object",
                      "required": [
                        "@type",
                        "inputs"
                      ],
                      "description": "Base class for topology processor nodes."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
                  },
                  "sinks": {
                    "type": "array",
                    "items": {
                      "discriminator": "@type",
                      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
                      "properties": {
                        "@type": {
                          "type": "string",
                          "description": "The discriminator for derived types."
                        },
                        "name": {
                          "type": "string",
                          "description": "Node name. Must be unique within the topology."
                        },
                        "inputs": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "nodeName": {
                                "type": "string",
                                "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
                              }
                            },
                            "type": "object",
                            "required": [
                              "nodeName"
                            ],
                            "description": "Describes an input signal to be used on a pipeline node."
                          },
                          "x-ms-identifiers": [
                            "nodeName"
                          ],
                          "description": "An array of upstream node references within the topology to be used as inputs for this node."
                        }
                      },
                      "type": "object",
                      "required": [
                        "@type",
                        "inputs"
                      ],
                      "description": "Base class for topology sink nodes."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
                  }
                },
                "type": "object",
                "required": [
                  "sources",
                  "sinks"
                ]
              },
              "kind": {
                "type": "string",
                "enum": [
                  "Live",
                  "Batch"
                ],
                "x-ms-enum": {
                  "name": "Kind",
                  "values": [
                    {
                      "value": "Live",
                      "description": "Live pipeline topology resource."
                    },
                    {
                      "value": "Batch",
                      "description": "Batch pipeline topology resource."
                    }
                  ],
                  "modelAsString": true
                },
                "description": "Topology kind."
              },
              "sku": {
                "description": "Describes the properties of a SKU.",
                "properties": {
                  "name": {
                    "type": "string",
                    "enum": [
                      "Live_S1",
                      "Batch_S1"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "values": [
                        {
                          "value": "Live_S1",
                          "description": "Represents the Live S1 SKU name. Using this SKU you can create live pipelines to capture, record, and stream live video from RTSP-capable cameras at bitrate settings from 0.5 Kbps to 3000 Kbps."
                        },
                        {
                          "value": "Batch_S1",
                          "description": "Represents the Batch S1 SKU name. Using this SKU you can create pipeline jobs to process recorded content."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "The SKU name."
                  },
                  "tier": {
                    "type": "string",
                    "enum": [
                      "Standard"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "values": [
                        {
                          "value": "Standard",
                          "description": "Standard tier."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "The SKU tier.",
                    "readOnly": true,
                    "x-nullable": false
                  }
                },
                "type": "object",
                "required": [
                  "name"
                ]
              }
            },
            "type": "object",
            "required": [
              "kind",
              "sku"
            ],
            "description": "Pipeline topology describes the processing steps to be applied when processing content for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which captures content from a RTSP camera and archives the content can be reused across many different cameras, as long as the same processing is to be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized. This allows  individual pipelines refer to different values, such as individual cameras' RTSP endpoints and credentials. Overall a topology is composed of the following:\r\n\r\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\r\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for content to be ingested from cameras.\r\n  - Processors: list of nodes which perform data analysis or transformations.\r\n  - Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
          },
          "description": "A collection of PipelineTopology items."
        },
        "@nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of PipelineTopology items."
    },
    "LivePipelineCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource properties.",
                "x-ms-client-flatten": true,
                "properties": {
                  "topologyName": {
                    "type": "string",
                    "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
                  },
                  "description": {
                    "type": "string",
                    "description": "An optional description for the pipeline."
                  },
                  "bitrateKbps": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Maximum bitrate capacity in Kbps reserved for the live pipeline. The allowed range is from 500 to 3000 Kbps in increments of 100 Kbps. If the RTSP camera exceeds this capacity, then the service will disconnect temporarily from the camera. It will retry to re-establish connection (with exponential backoff), checking to see if the camera bitrate is now below the reserved capacity. Doing so will ensure that one 'noisy neighbor' does not affect other live pipelines in your account."
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "Inactive",
                      "Activating",
                      "Active",
                      "Deactivating"
                    ],
                    "x-ms-enum": {
                      "name": "LivePipelineState",
                      "values": [
                        {
                          "value": "Inactive",
                          "description": "The live pipeline is idle and not processing media."
                        },
                        {
                          "value": "Activating",
                          "description": "The live pipeline is transitioning into the active state."
                        },
                        {
                          "value": "Active",
                          "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
                        },
                        {
                          "value": "Deactivating",
                          "description": "The live pipeline is transitioning into the inactive state."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "Current state of the pipeline (read-only).",
                    "readOnly": true,
                    "x-nullable": false
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the parameter declared in the pipeline topology."
                        },
                        "value": {
                          "type": "string",
                          "description": "Parameter value to be applied on this specific pipeline."
                        }
                      },
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                  }
                },
                "type": "object",
                "required": [
                  "topologyName",
                  "bitrateKbps"
                ]
              }
            },
            "type": "object",
            "description": "Live pipeline represents a unique instance of a live topology, used for real-time ingestion, archiving and publishing of content for a unique RTSP camera."
          },
          "description": "A collection of LivePipeline items."
        },
        "@nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of LivePipeline items."
    },
    "PipelineJobCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource properties.",
                "x-ms-client-flatten": true,
                "properties": {
                  "topologyName": {
                    "type": "string",
                    "description": "Reference to an existing pipeline topology. When activated, this pipeline job will process content according to the pipeline topology definition."
                  },
                  "description": {
                    "type": "string",
                    "description": "An optional description for the pipeline."
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "Processing",
                      "Canceled",
                      "Completed",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PipelineJobState",
                      "values": [
                        {
                          "value": "Processing",
                          "description": "Pipeline job is processing."
                        },
                        {
                          "value": "Canceled",
                          "description": "Pipeline job is canceled."
                        },
                        {
                          "value": "Completed",
                          "description": "Pipeline job completed."
                        },
                        {
                          "value": "Failed",
                          "description": "Pipeline job failed."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "Current state of the pipeline (read-only).",
                    "readOnly": true,
                    "x-nullable": false
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date-time by when this pipeline job will be automatically deleted from your account.",
                    "readOnly": true,
                    "x-nullable": false
                  },
                  "error": {
                    "description": "Details about the error, in case the pipeline job fails.",
                    "readOnly": true,
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The error code."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      }
                    },
                    "type": "object"
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the parameter declared in the pipeline topology."
                        },
                        "value": {
                          "type": "string",
                          "description": "Parameter value to be applied on this specific pipeline."
                        }
                      },
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
                  }
                },
                "type": "object",
                "required": [
                  "topologyName"
                ]
              }
            },
            "type": "object",
            "description": "Pipeline job represents a unique instance of a batch topology, used for offline processing of selected portions of archived content."
          },
          "description": "A collection of PipelineJob items."
        },
        "@nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of PipelineJob items."
    },
    "OperationDisplay": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "The service provider."
        },
        "resource": {
          "type": "string",
          "description": "Resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "description": "The operation type."
        },
        "description": {
          "type": "string",
          "description": "The operation description."
        }
      },
      "type": "object",
      "description": "Operation details."
    },
    "MetricDimension": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The metric dimension name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the dimension.",
          "readOnly": true
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "Whether to export metric to shoebox.",
          "readOnly": true,
          "x-nullable": false
        }
      },
      "type": "object",
      "description": "A metric dimension."
    },
    "MetricSpecification": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The metric name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The metric display name.",
          "readOnly": true
        },
        "displayDescription": {
          "type": "string",
          "description": "The metric display description.",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "enum": [
            "Bytes",
            "Count",
            "Milliseconds"
          ],
          "x-ms-enum": {
            "name": "MetricUnit",
            "values": [
              {
                "value": "Bytes",
                "description": "The number of bytes."
              },
              {
                "value": "Count",
                "description": "The count."
              },
              {
                "value": "Milliseconds",
                "description": "The number of milliseconds."
              }
            ],
            "modelAsString": true
          },
          "description": "The metric unit",
          "readOnly": true,
          "x-nullable": false
        },
        "aggregationType": {
          "type": "string",
          "enum": [
            "Average",
            "Count",
            "Total"
          ],
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "values": [
              {
                "value": "Average",
                "description": "The average."
              },
              {
                "value": "Count",
                "description": "The count of a number of items, usually requests."
              },
              {
                "value": "Total",
                "description": "The sum."
              }
            ],
            "modelAsString": true
          },
          "description": "The metric aggregation type",
          "readOnly": true,
          "x-nullable": false
        },
        "lockAggregationType": {
          "type": "string",
          "enum": [
            "Average",
            "Count",
            "Total"
          ],
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "values": [
              {
                "value": "Average",
                "description": "The average."
              },
              {
                "value": "Count",
                "description": "The count of a number of items, usually requests."
              },
              {
                "value": "Total",
                "description": "The sum."
              }
            ],
            "modelAsString": true
          },
          "description": "The metric lock aggregation type",
          "readOnly": true,
          "x-nullable": true
        },
        "supportedAggregationTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Supported aggregation types."
        },
        "dimensions": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "The metric dimension name.",
                "readOnly": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the dimension.",
                "readOnly": true
              },
              "toBeExportedForShoebox": {
                "type": "boolean",
                "description": "Whether to export metric to shoebox.",
                "readOnly": true,
                "x-nullable": false
              }
            },
            "type": "object",
            "description": "A metric dimension."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The metric dimensions.",
          "readOnly": true
        },
        "enableRegionalMdmAccount": {
          "type": "boolean",
          "description": "Indicates whether regional MDM account is enabled.",
          "readOnly": true,
          "x-nullable": false
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "The source MDM account.",
          "readOnly": true
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "The source MDM namespace.",
          "readOnly": true
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The supported time grain types.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A metric emitted by service."
    },
    "Properties": {
      "properties": {
        "serviceSpecification": {
          "description": "The service specifications.",
          "readOnly": true,
          "properties": {
            "logSpecifications": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The diagnostic log category name.",
                    "readOnly": true
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The diagnostic log category display name.",
                    "readOnly": true
                  },
                  "blobDuration": {
                    "type": "string",
                    "description": "The time range for requests in each blob.",
                    "readOnly": true
                  }
                },
                "type": "object",
                "description": "A diagnostic log emitted by service."
              },
              "x-ms-identifiers": [
                "blobDuration",
                "name"
              ],
              "description": "List of log specifications.",
              "readOnly": true
            },
            "metricSpecifications": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The metric name.",
                    "readOnly": true
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The metric display name.",
                    "readOnly": true
                  },
                  "displayDescription": {
                    "type": "string",
                    "description": "The metric display description.",
                    "readOnly": true
                  },
                  "unit": {
                    "type": "string",
                    "enum": [
                      "Bytes",
                      "Count",
                      "Milliseconds"
                    ],
                    "x-ms-enum": {
                      "name": "MetricUnit",
                      "values": [
                        {
                          "value": "Bytes",
                          "description": "The number of bytes."
                        },
                        {
                          "value": "Count",
                          "description": "The count."
                        },
                        {
                          "value": "Milliseconds",
                          "description": "The number of milliseconds."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "The metric unit",
                    "readOnly": true,
                    "x-nullable": false
                  },
                  "aggregationType": {
                    "type": "string",
                    "enum": [
                      "Average",
                      "Count",
                      "Total"
                    ],
                    "x-ms-enum": {
                      "name": "MetricAggregationType",
                      "values": [
                        {
                          "value": "Average",
                          "description": "The average."
                        },
                        {
                          "value": "Count",
                          "description": "The count of a number of items, usually requests."
                        },
                        {
                          "value": "Total",
                          "description": "The sum."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "The metric aggregation type",
                    "readOnly": true,
                    "x-nullable": false
                  },
                  "lockAggregationType": {
                    "type": "string",
                    "enum": [
                      "Average",
                      "Count",
                      "Total"
                    ],
                    "x-ms-enum": {
                      "name": "MetricAggregationType",
                      "values": [
                        {
                          "value": "Average",
                          "description": "The average."
                        },
                        {
                          "value": "Count",
                          "description": "The count of a number of items, usually requests."
                        },
                        {
                          "value": "Total",
                          "description": "The sum."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "The metric lock aggregation type",
                    "readOnly": true,
                    "x-nullable": true
                  },
                  "supportedAggregationTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Supported aggregation types."
                  },
                  "dimensions": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The metric dimension name.",
                          "readOnly": true
                        },
                        "displayName": {
                          "type": "string",
                          "description": "The display name for the dimension.",
                          "readOnly": true
                        },
                        "toBeExportedForShoebox": {
                          "type": "boolean",
                          "description": "Whether to export metric to shoebox.",
                          "readOnly": true,
                          "x-nullable": false
                        }
                      },
                      "type": "object",
                      "description": "A metric dimension."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "The metric dimensions.",
                    "readOnly": true
                  },
                  "enableRegionalMdmAccount": {
                    "type": "boolean",
                    "description": "Indicates whether regional MDM account is enabled.",
                    "readOnly": true,
                    "x-nullable": false
                  },
                  "sourceMdmAccount": {
                    "type": "string",
                    "description": "The source MDM account.",
                    "readOnly": true
                  },
                  "sourceMdmNamespace": {
                    "type": "string",
                    "description": "The source MDM namespace.",
                    "readOnly": true
                  },
                  "supportedTimeGrainTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The supported time grain types.",
                    "readOnly": true
                  }
                },
                "type": "object",
                "description": "A metric emitted by service."
              },
              "x-ms-identifiers": [
                "name",
                "unit"
              ],
              "description": "List of metric specifications.",
              "readOnly": true
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Metric properties."
    },
    "ServiceSpecification": {
      "properties": {
        "logSpecifications": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "The diagnostic log category name.",
                "readOnly": true
              },
              "displayName": {
                "type": "string",
                "description": "The diagnostic log category display name.",
                "readOnly": true
              },
              "blobDuration": {
                "type": "string",
                "description": "The time range for requests in each blob.",
                "readOnly": true
              }
            },
            "type": "object",
            "description": "A diagnostic log emitted by service."
          },
          "x-ms-identifiers": [
            "blobDuration",
            "name"
          ],
          "description": "List of log specifications.",
          "readOnly": true
        },
        "metricSpecifications": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "The metric name.",
                "readOnly": true
              },
              "displayName": {
                "type": "string",
                "description": "The metric display name.",
                "readOnly": true
              },
              "displayDescription": {
                "type": "string",
                "description": "The metric display description.",
                "readOnly": true
              },
              "unit": {
                "type": "string",
                "enum": [
                  "Bytes",
                  "Count",
                  "Milliseconds"
                ],
                "x-ms-enum": {
                  "name": "MetricUnit",
                  "values": [
                    {
                      "value": "Bytes",
                      "description": "The number of bytes."
                    },
                    {
                      "value": "Count",
                      "description": "The count."
                    },
                    {
                      "value": "Milliseconds",
                      "description": "The number of milliseconds."
                    }
                  ],
                  "modelAsString": true
                },
                "description": "The metric unit",
                "readOnly": true,
                "x-nullable": false
              },
              "aggregationType": {
                "type": "string",
                "enum": [
                  "Average",
                  "Count",
                  "Total"
                ],
                "x-ms-enum": {
                  "name": "MetricAggregationType",
                  "values": [
                    {
                      "value": "Average",
                      "description": "The average."
                    },
                    {
                      "value": "Count",
                      "description": "The count of a number of items, usually requests."
                    },
                    {
                      "value": "Total",
                      "description": "The sum."
                    }
                  ],
                  "modelAsString": true
                },
                "description": "The metric aggregation type",
                "readOnly": true,
                "x-nullable": false
              },
              "lockAggregationType": {
                "type": "string",
                "enum": [
                  "Average",
                  "Count",
                  "Total"
                ],
                "x-ms-enum": {
                  "name": "MetricAggregationType",
                  "values": [
                    {
                      "value": "Average",
                      "description": "The average."
                    },
                    {
                      "value": "Count",
                      "description": "The count of a number of items, usually requests."
                    },
                    {
                      "value": "Total",
                      "description": "The sum."
                    }
                  ],
                  "modelAsString": true
                },
                "description": "The metric lock aggregation type",
                "readOnly": true,
                "x-nullable": true
              },
              "supportedAggregationTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Supported aggregation types."
              },
              "dimensions": {
                "type": "array",
                "items": {
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The metric dimension name.",
                      "readOnly": true
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The display name for the dimension.",
                      "readOnly": true
                    },
                    "toBeExportedForShoebox": {
                      "type": "boolean",
                      "description": "Whether to export metric to shoebox.",
                      "readOnly": true,
                      "x-nullable": false
                    }
                  },
                  "type": "object",
                  "description": "A metric dimension."
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "description": "The metric dimensions.",
                "readOnly": true
              },
              "enableRegionalMdmAccount": {
                "type": "boolean",
                "description": "Indicates whether regional MDM account is enabled.",
                "readOnly": true,
                "x-nullable": false
              },
              "sourceMdmAccount": {
                "type": "string",
                "description": "The source MDM account.",
                "readOnly": true
              },
              "sourceMdmNamespace": {
                "type": "string",
                "description": "The source MDM namespace.",
                "readOnly": true
              },
              "supportedTimeGrainTypes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The supported time grain types.",
                "readOnly": true
              }
            },
            "type": "object",
            "description": "A metric emitted by service."
          },
          "x-ms-identifiers": [
            "name",
            "unit"
          ],
          "description": "List of metric specifications.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "The service metric specifications."
    },
    "LogSpecification": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The diagnostic log category name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The diagnostic log category display name.",
          "readOnly": true
        },
        "blobDuration": {
          "type": "string",
          "description": "The time range for requests in each blob.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A diagnostic log emitted by service."
    },
    "Operation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The operation name."
        },
        "display": {
          "description": "The operation display name.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The service provider."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed."
            },
            "operation": {
              "type": "string",
              "description": "The operation type."
            },
            "description": {
              "type": "string",
              "description": "The operation description."
            }
          },
          "type": "object"
        },
        "origin": {
          "type": "string",
          "description": "Origin of the operation."
        },
        "properties": {
          "description": "Operation properties format.",
          "properties": {
            "serviceSpecification": {
              "description": "The service specifications.",
              "readOnly": true,
              "properties": {
                "logSpecifications": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The diagnostic log category name.",
                        "readOnly": true
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The diagnostic log category display name.",
                        "readOnly": true
                      },
                      "blobDuration": {
                        "type": "string",
                        "description": "The time range for requests in each blob.",
                        "readOnly": true
                      }
                    },
                    "type": "object",
                    "description": "A diagnostic log emitted by service."
                  },
                  "x-ms-identifiers": [
                    "blobDuration",
                    "name"
                  ],
                  "description": "List of log specifications.",
                  "readOnly": true
                },
                "metricSpecifications": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The metric name.",
                        "readOnly": true
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The metric display name.",
                        "readOnly": true
                      },
                      "displayDescription": {
                        "type": "string",
                        "description": "The metric display description.",
                        "readOnly": true
                      },
                      "unit": {
                        "type": "string",
                        "enum": [
                          "Bytes",
                          "Count",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "name": "MetricUnit",
                          "values": [
                            {
                              "value": "Bytes",
                              "description": "The number of bytes."
                            },
                            {
                              "value": "Count",
                              "description": "The count."
                            },
                            {
                              "value": "Milliseconds",
                              "description": "The number of milliseconds."
                            }
                          ],
                          "modelAsString": true
                        },
                        "description": "The metric unit",
                        "readOnly": true,
                        "x-nullable": false
                      },
                      "aggregationType": {
                        "type": "string",
                        "enum": [
                          "Average",
                          "Count",
                          "Total"
                        ],
                        "x-ms-enum": {
                          "name": "MetricAggregationType",
                          "values": [
                            {
                              "value": "Average",
                              "description": "The average."
                            },
                            {
                              "value": "Count",
                              "description": "The count of a number of items, usually requests."
                            },
                            {
                              "value": "Total",
                              "description": "The sum."
                            }
                          ],
                          "modelAsString": true
                        },
                        "description": "The metric aggregation type",
                        "readOnly": true,
                        "x-nullable": false
                      },
                      "lockAggregationType": {
                        "type": "string",
                        "enum": [
                          "Average",
                          "Count",
                          "Total"
                        ],
                        "x-ms-enum": {
                          "name": "MetricAggregationType",
                          "values": [
                            {
                              "value": "Average",
                              "description": "The average."
                            },
                            {
                              "value": "Count",
                              "description": "The count of a number of items, usually requests."
                            },
                            {
                              "value": "Total",
                              "description": "The sum."
                            }
                          ],
                          "modelAsString": true
                        },
                        "description": "The metric lock aggregation type",
                        "readOnly": true,
                        "x-nullable": true
                      },
                      "supportedAggregationTypes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Supported aggregation types."
                      },
                      "dimensions": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The metric dimension name.",
                              "readOnly": true
                            },
                            "displayName": {
                              "type": "string",
                              "description": "The display name for the dimension.",
                              "readOnly": true
                            },
                            "toBeExportedForShoebox": {
                              "type": "boolean",
                              "description": "Whether to export metric to shoebox.",
                              "readOnly": true,
                              "x-nullable": false
                            }
                          },
                          "type": "object",
                          "description": "A metric dimension."
                        },
                        "x-ms-identifiers": [
                          "name"
                        ],
                        "description": "The metric dimensions.",
                        "readOnly": true
                      },
                      "enableRegionalMdmAccount": {
                        "type": "boolean",
                        "description": "Indicates whether regional MDM account is enabled.",
                        "readOnly": true,
                        "x-nullable": false
                      },
                      "sourceMdmAccount": {
                        "type": "string",
                        "description": "The source MDM account.",
                        "readOnly": true
                      },
                      "sourceMdmNamespace": {
                        "type": "string",
                        "description": "The source MDM namespace.",
                        "readOnly": true
                      },
                      "supportedTimeGrainTypes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The supported time grain types.",
                        "readOnly": true
                      }
                    },
                    "type": "object",
                    "description": "A metric emitted by service."
                  },
                  "x-ms-identifiers": [
                    "name",
                    "unit"
                  ],
                  "description": "List of metric specifications.",
                  "readOnly": true
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane.",
          "x-nullable": true
        },
        "actionType": {
          "type": "string",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "values": [
              {
                "value": "Internal",
                "description": "An internal action."
              }
            ],
            "modelAsString": true
          },
          "description": "Indicates the action type.",
          "x-nullable": true
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "An operation."
    },
    "StorageAccount": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
        },
        "identity": {
          "description": "A managed identity that Video Analyzer will use to access the storage account.",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
            }
          },
          "type": "object",
          "required": [
            "userAssignedIdentity"
          ]
        },
        "status": {
          "type": "string",
          "description": "The current status of the storage account mapping.",
          "readOnly": true
        }
      },
      "type": "object",
      "required": [
        "id"
      ],
      "description": "The details about the associated storage account."
    },
    "VideoAnalyzerProperties": {
      "properties": {
        "storageAccounts": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
              },
              "identity": {
                "description": "A managed identity that Video Analyzer will use to access the storage account.",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                  }
                },
                "type": "object",
                "required": [
                  "userAssignedIdentity"
                ]
              },
              "status": {
                "type": "string",
                "description": "The current status of the storage account mapping.",
                "readOnly": true
              }
            },
            "type": "object",
            "required": [
              "id"
            ],
            "description": "The details about the associated storage account."
          },
          "description": "The storage accounts for this resource."
        },
        "endpoints": {
          "type": "array",
          "items": {
            "properties": {
              "endpointUrl": {
                "type": "string",
                "description": "The URL of the endpoint."
              },
              "type": {
                "type": "string",
                "enum": [
                  "ClientApi"
                ],
                "x-ms-enum": {
                  "name": "VideoAnalyzerEndpointType",
                  "values": [
                    {
                      "value": "ClientApi",
                      "description": "The client API endpoint."
                    }
                  ],
                  "modelAsString": true
                },
                "description": "The type of the endpoint."
              }
            },
            "type": "object",
            "required": [
              "type"
            ],
            "description": "The endpoint details."
          },
          "x-ms-identifiers": [
            "endpointUrl"
          ],
          "description": "The endpoints associated with this resource.",
          "readOnly": true
        },
        "encryption": {
          "description": "The account encryption properties.",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "SystemKey",
                "CustomerKey"
              ],
              "x-ms-enum": {
                "name": "AccountEncryptionKeyType",
                "values": [
                  {
                    "value": "SystemKey",
                    "description": "The Account Key is encrypted with a System Key."
                  },
                  {
                    "value": "CustomerKey",
                    "description": "The Account Key is encrypted with a Customer Key."
                  }
                ],
                "modelAsString": true
              },
              "description": "The type of key used to encrypt the Account Key."
            },
            "keyVaultProperties": {
              "description": "The properties of the key used to encrypt the account.",
              "properties": {
                "keyIdentifier": {
                  "type": "string",
                  "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                },
                "currentKeyIdentifier": {
                  "type": "string",
                  "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                  "readOnly": true
                }
              },
              "type": "object",
              "required": [
                "keyIdentifier"
              ]
            },
            "identity": {
              "description": "The Key Vault identity.",
              "properties": {
                "userAssignedIdentity": {
                  "type": "string",
                  "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                }
              },
              "type": "object",
              "required": [
                "userAssignedIdentity"
              ]
            },
            "status": {
              "type": "string",
              "description": "The current status of the Key Vault mapping.",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "type"
          ]
        },
        "iotHubs": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "The IoT Hub resource identifier."
              },
              "identity": {
                "description": "The IoT Hub identity.",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                  }
                },
                "type": "object",
                "required": [
                  "userAssignedIdentity"
                ]
              },
              "status": {
                "type": "string",
                "description": "The current status of the Iot Hub mapping.",
                "readOnly": true
              }
            },
            "type": "object",
            "required": [
              "id",
              "identity"
            ],
            "description": "The IoT Hub details."
          },
          "description": "The IoT Hubs for this resource."
        },
        "publicNetworkAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "values": [
              {
                "value": "Enabled",
                "description": "Public network access is enabled."
              },
              {
                "value": "Disabled",
                "description": "Public network access is disabled."
              }
            ],
            "modelAsString": true
          },
          "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
          "x-nullable": true
        },
        "networkAccessControl": {
          "description": "Network access control for Video Analyzer.",
          "x-nullable": true,
          "properties": {
            "integration": {
              "description": "Public network access for integration group.",
              "x-nullable": true,
              "properties": {
                "publicNetworkAccess": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PublicNetworkAccess",
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Public network access is enabled."
                      },
                      {
                        "value": "Disabled",
                        "description": "Public network access is disabled."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                  "x-nullable": true
                }
              },
              "type": "object"
            },
            "ingestion": {
              "description": "Public network access for ingestion group.",
              "x-nullable": true,
              "properties": {
                "publicNetworkAccess": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PublicNetworkAccess",
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Public network access is enabled."
                      },
                      {
                        "value": "Disabled",
                        "description": "Public network access is disabled."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                  "x-nullable": true
                }
              },
              "type": "object"
            },
            "consumption": {
              "description": "Public network access for consumption group.",
              "x-nullable": true,
              "properties": {
                "publicNetworkAccess": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PublicNetworkAccess",
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Public network access is enabled."
                      },
                      {
                        "value": "Disabled",
                        "description": "Public network access is disabled."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                  "x-nullable": true
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Failed",
            "InProgress",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "values": [
              {
                "value": "Failed",
                "description": "Provisioning state failed."
              },
              {
                "value": "InProgress",
                "description": "Provisioning state in progress."
              },
              {
                "value": "Succeeded",
                "description": "Provisioning state succeeded."
              }
            ],
            "modelAsString": true
          },
          "description": "Provisioning state of the Video Analyzer account.",
          "readOnly": true,
          "x-nullable": false
        },
        "privateEndpointConnections": {
          "items": {
            "type": "object",
            "description": "The Private Endpoint Connection resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The resource of private end point.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for Private Endpoint",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          },
          "type": "array",
          "description": "Private Endpoint Connections created under Video Analyzer account.",
          "readOnly": true
        }
      },
      "type": "object",
      "required": [
        "storageAccounts"
      ],
      "description": "The properties of the Video Analyzer account."
    },
    "VideoAnalyzerPropertiesUpdate": {
      "properties": {
        "storageAccounts": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
              },
              "identity": {
                "description": "A managed identity that Video Analyzer will use to access the storage account.",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                  }
                },
                "type": "object",
                "required": [
                  "userAssignedIdentity"
                ]
              },
              "status": {
                "type": "string",
                "description": "The current status of the storage account mapping.",
                "readOnly": true
              }
            },
            "type": "object",
            "required": [
              "id"
            ],
            "description": "The details about the associated storage account."
          },
          "description": "The storage accounts for this resource."
        },
        "endpoints": {
          "type": "array",
          "items": {
            "properties": {
              "endpointUrl": {
                "type": "string",
                "description": "The URL of the endpoint."
              },
              "type": {
                "type": "string",
                "enum": [
                  "ClientApi"
                ],
                "x-ms-enum": {
                  "name": "VideoAnalyzerEndpointType",
                  "values": [
                    {
                      "value": "ClientApi",
                      "description": "The client API endpoint."
                    }
                  ],
                  "modelAsString": true
                },
                "description": "The type of the endpoint."
              }
            },
            "type": "object",
            "required": [
              "type"
            ],
            "description": "The endpoint details."
          },
          "x-ms-identifiers": [
            "endpointUrl"
          ],
          "description": "The endpoints associated with this resource.",
          "readOnly": true
        },
        "encryption": {
          "description": "The account encryption properties.",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "SystemKey",
                "CustomerKey"
              ],
              "x-ms-enum": {
                "name": "AccountEncryptionKeyType",
                "values": [
                  {
                    "value": "SystemKey",
                    "description": "The Account Key is encrypted with a System Key."
                  },
                  {
                    "value": "CustomerKey",
                    "description": "The Account Key is encrypted with a Customer Key."
                  }
                ],
                "modelAsString": true
              },
              "description": "The type of key used to encrypt the Account Key."
            },
            "keyVaultProperties": {
              "description": "The properties of the key used to encrypt the account.",
              "properties": {
                "keyIdentifier": {
                  "type": "string",
                  "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                },
                "currentKeyIdentifier": {
                  "type": "string",
                  "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                  "readOnly": true
                }
              },
              "type": "object",
              "required": [
                "keyIdentifier"
              ]
            },
            "identity": {
              "description": "The Key Vault identity.",
              "properties": {
                "userAssignedIdentity": {
                  "type": "string",
                  "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                }
              },
              "type": "object",
              "required": [
                "userAssignedIdentity"
              ]
            },
            "status": {
              "type": "string",
              "description": "The current status of the Key Vault mapping.",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "type"
          ]
        },
        "iotHubs": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "The IoT Hub resource identifier."
              },
              "identity": {
                "description": "The IoT Hub identity.",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                  }
                },
                "type": "object",
                "required": [
                  "userAssignedIdentity"
                ]
              },
              "status": {
                "type": "string",
                "description": "The current status of the Iot Hub mapping.",
                "readOnly": true
              }
            },
            "type": "object",
            "required": [
              "id",
              "identity"
            ],
            "description": "The IoT Hub details."
          },
          "description": "The IoT Hubs for this resource."
        },
        "publicNetworkAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "values": [
              {
                "value": "Enabled",
                "description": "Public network access is enabled."
              },
              {
                "value": "Disabled",
                "description": "Public network access is disabled."
              }
            ],
            "modelAsString": true
          },
          "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
          "x-nullable": true
        },
        "networkAccessControl": {
          "description": "Network access control for Video Analyzer.",
          "x-nullable": true,
          "properties": {
            "integration": {
              "description": "Public network access for integration group.",
              "x-nullable": true,
              "properties": {
                "publicNetworkAccess": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PublicNetworkAccess",
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Public network access is enabled."
                      },
                      {
                        "value": "Disabled",
                        "description": "Public network access is disabled."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                  "x-nullable": true
                }
              },
              "type": "object"
            },
            "ingestion": {
              "description": "Public network access for ingestion group.",
              "x-nullable": true,
              "properties": {
                "publicNetworkAccess": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PublicNetworkAccess",
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Public network access is enabled."
                      },
                      {
                        "value": "Disabled",
                        "description": "Public network access is disabled."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                  "x-nullable": true
                }
              },
              "type": "object"
            },
            "consumption": {
              "description": "Public network access for consumption group.",
              "x-nullable": true,
              "properties": {
                "publicNetworkAccess": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PublicNetworkAccess",
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Public network access is enabled."
                      },
                      {
                        "value": "Disabled",
                        "description": "Public network access is disabled."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                  "x-nullable": true
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Failed",
            "InProgress",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "values": [
              {
                "value": "Failed",
                "description": "Provisioning state failed."
              },
              {
                "value": "InProgress",
                "description": "Provisioning state in progress."
              },
              {
                "value": "Succeeded",
                "description": "Provisioning state succeeded."
              }
            ],
            "modelAsString": true
          },
          "description": "Provisioning state of the Video Analyzer account.",
          "readOnly": true,
          "x-nullable": false
        },
        "privateEndpointConnections": {
          "items": {
            "type": "object",
            "description": "The Private Endpoint Connection resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The resource of private end point.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for Private Endpoint",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          },
          "type": "array",
          "description": "Private Endpoint Connections created under Video Analyzer account.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "The properties of the Video Analyzer account."
    },
    "VideoAnalyzer": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "storageAccounts": {
              "type": "array",
              "items": {
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                  },
                  "identity": {
                    "description": "A managed identity that Video Analyzer will use to access the storage account.",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                      }
                    },
                    "type": "object",
                    "required": [
                      "userAssignedIdentity"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the storage account mapping.",
                    "readOnly": true
                  }
                },
                "type": "object",
                "required": [
                  "id"
                ],
                "description": "The details about the associated storage account."
              },
              "description": "The storage accounts for this resource."
            },
            "endpoints": {
              "type": "array",
              "items": {
                "properties": {
                  "endpointUrl": {
                    "type": "string",
                    "description": "The URL of the endpoint."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "ClientApi"
                    ],
                    "x-ms-enum": {
                      "name": "VideoAnalyzerEndpointType",
                      "values": [
                        {
                          "value": "ClientApi",
                          "description": "The client API endpoint."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "The type of the endpoint."
                  }
                },
                "type": "object",
                "required": [
                  "type"
                ],
                "description": "The endpoint details."
              },
              "x-ms-identifiers": [
                "endpointUrl"
              ],
              "description": "The endpoints associated with this resource.",
              "readOnly": true
            },
            "encryption": {
              "description": "The account encryption properties.",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "SystemKey",
                    "CustomerKey"
                  ],
                  "x-ms-enum": {
                    "name": "AccountEncryptionKeyType",
                    "values": [
                      {
                        "value": "SystemKey",
                        "description": "The Account Key is encrypted with a System Key."
                      },
                      {
                        "value": "CustomerKey",
                        "description": "The Account Key is encrypted with a Customer Key."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "The type of key used to encrypt the Account Key."
                },
                "keyVaultProperties": {
                  "description": "The properties of the key used to encrypt the account.",
                  "properties": {
                    "keyIdentifier": {
                      "type": "string",
                      "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                    },
                    "currentKeyIdentifier": {
                      "type": "string",
                      "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                      "readOnly": true
                    }
                  },
                  "type": "object",
                  "required": [
                    "keyIdentifier"
                  ]
                },
                "identity": {
                  "description": "The Key Vault identity.",
                  "properties": {
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                    }
                  },
                  "type": "object",
                  "required": [
                    "userAssignedIdentity"
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the Key Vault mapping.",
                  "readOnly": true
                }
              },
              "type": "object",
              "required": [
                "type"
              ]
            },
            "iotHubs": {
              "type": "array",
              "items": {
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The IoT Hub resource identifier."
                  },
                  "identity": {
                    "description": "The IoT Hub identity.",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                      }
                    },
                    "type": "object",
                    "required": [
                      "userAssignedIdentity"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the Iot Hub mapping.",
                    "readOnly": true
                  }
                },
                "type": "object",
                "required": [
                  "id",
                  "identity"
                ],
                "description": "The IoT Hub details."
              },
              "description": "The IoT Hubs for this resource."
            },
            "publicNetworkAccess": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Public network access is enabled."
                  },
                  {
                    "value": "Disabled",
                    "description": "Public network access is disabled."
                  }
                ],
                "modelAsString": true
              },
              "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
              "x-nullable": true
            },
            "networkAccessControl": {
              "description": "Network access control for Video Analyzer.",
              "x-nullable": true,
              "properties": {
                "integration": {
                  "description": "Public network access for integration group.",
                  "x-nullable": true,
                  "properties": {
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "ingestion": {
                  "description": "Public network access for ingestion group.",
                  "x-nullable": true,
                  "properties": {
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "consumption": {
                  "description": "Public network access for consumption group.",
                  "x-nullable": true,
                  "properties": {
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "provisioningState": {
              "type": "string",
              "enum": [
                "Failed",
                "InProgress",
                "Succeeded"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "values": [
                  {
                    "value": "Failed",
                    "description": "Provisioning state failed."
                  },
                  {
                    "value": "InProgress",
                    "description": "Provisioning state in progress."
                  },
                  {
                    "value": "Succeeded",
                    "description": "Provisioning state succeeded."
                  }
                ],
                "modelAsString": true
              },
              "description": "Provisioning state of the Video Analyzer account.",
              "readOnly": true,
              "x-nullable": false
            },
            "privateEndpointConnections": {
              "items": {
                "type": "object",
                "description": "The Private Endpoint Connection resource.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the resource",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                    "readOnly": true
                  },
                  "systemData": {
                    "type": "object",
                    "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                    "readOnly": true,
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                }
              },
              "type": "array",
              "description": "Private Endpoint Connections created under Video Analyzer account.",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "storageAccounts"
          ]
        },
        "identity": {
          "description": "The identities associated to the Video Analyzer resource.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The identity type."
            },
            "userAssignedIdentities": {
              "description": "The User Assigned Managed Identities.",
              "type": "object",
              "additionalProperties": {
                "properties": {
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID.",
                    "readOnly": true,
                    "x-nullable": true
                  },
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID.",
                    "readOnly": true,
                    "x-nullable": true
                  }
                },
                "type": "object",
                "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
              }
            }
          },
          "type": "object",
          "required": [
            "type"
          ]
        }
      },
      "type": "object",
      "description": "The Video Analyzer account."
    },
    "VideoAnalyzerUpdate": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "storageAccounts": {
              "type": "array",
              "items": {
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                  },
                  "identity": {
                    "description": "A managed identity that Video Analyzer will use to access the storage account.",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                      }
                    },
                    "type": "object",
                    "required": [
                      "userAssignedIdentity"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the storage account mapping.",
                    "readOnly": true
                  }
                },
                "type": "object",
                "required": [
                  "id"
                ],
                "description": "The details about the associated storage account."
              },
              "description": "The storage accounts for this resource."
            },
            "endpoints": {
              "type": "array",
              "items": {
                "properties": {
                  "endpointUrl": {
                    "type": "string",
                    "description": "The URL of the endpoint."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "ClientApi"
                    ],
                    "x-ms-enum": {
                      "name": "VideoAnalyzerEndpointType",
                      "values": [
                        {
                          "value": "ClientApi",
                          "description": "The client API endpoint."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "The type of the endpoint."
                  }
                },
                "type": "object",
                "required": [
                  "type"
                ],
                "description": "The endpoint details."
              },
              "x-ms-identifiers": [
                "endpointUrl"
              ],
              "description": "The endpoints associated with this resource.",
              "readOnly": true
            },
            "encryption": {
              "description": "The account encryption properties.",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "SystemKey",
                    "CustomerKey"
                  ],
                  "x-ms-enum": {
                    "name": "AccountEncryptionKeyType",
                    "values": [
                      {
                        "value": "SystemKey",
                        "description": "The Account Key is encrypted with a System Key."
                      },
                      {
                        "value": "CustomerKey",
                        "description": "The Account Key is encrypted with a Customer Key."
                      }
                    ],
                    "modelAsString": true
                  },
                  "description": "The type of key used to encrypt the Account Key."
                },
                "keyVaultProperties": {
                  "description": "The properties of the key used to encrypt the account.",
                  "properties": {
                    "keyIdentifier": {
                      "type": "string",
                      "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                    },
                    "currentKeyIdentifier": {
                      "type": "string",
                      "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                      "readOnly": true
                    }
                  },
                  "type": "object",
                  "required": [
                    "keyIdentifier"
                  ]
                },
                "identity": {
                  "description": "The Key Vault identity.",
                  "properties": {
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                    }
                  },
                  "type": "object",
                  "required": [
                    "userAssignedIdentity"
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the Key Vault mapping.",
                  "readOnly": true
                }
              },
              "type": "object",
              "required": [
                "type"
              ]
            },
            "iotHubs": {
              "type": "array",
              "items": {
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The IoT Hub resource identifier."
                  },
                  "identity": {
                    "description": "The IoT Hub identity.",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                      }
                    },
                    "type": "object",
                    "required": [
                      "userAssignedIdentity"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the Iot Hub mapping.",
                    "readOnly": true
                  }
                },
                "type": "object",
                "required": [
                  "id",
                  "identity"
                ],
                "description": "The IoT Hub details."
              },
              "description": "The IoT Hubs for this resource."
            },
            "publicNetworkAccess": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Public network access is enabled."
                  },
                  {
                    "value": "Disabled",
                    "description": "Public network access is disabled."
                  }
                ],
                "modelAsString": true
              },
              "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
              "x-nullable": true
            },
            "networkAccessControl": {
              "description": "Network access control for Video Analyzer.",
              "x-nullable": true,
              "properties": {
                "integration": {
                  "description": "Public network access for integration group.",
                  "x-nullable": true,
                  "properties": {
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "ingestion": {
                  "description": "Public network access for ingestion group.",
                  "x-nullable": true,
                  "properties": {
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "consumption": {
                  "description": "Public network access for consumption group.",
                  "x-nullable": true,
                  "properties": {
                    "publicNetworkAccess": {
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Public network access is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Public network access is disabled."
                          }
                        ],
                        "modelAsString": true
                      },
                      "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "provisioningState": {
              "type": "string",
              "enum": [
                "Failed",
                "InProgress",
                "Succeeded"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "values": [
                  {
                    "value": "Failed",
                    "description": "Provisioning state failed."
                  },
                  {
                    "value": "InProgress",
                    "description": "Provisioning state in progress."
                  },
                  {
                    "value": "Succeeded",
                    "description": "Provisioning state succeeded."
                  }
                ],
                "modelAsString": true
              },
              "description": "Provisioning state of the Video Analyzer account.",
              "readOnly": true,
              "x-nullable": false
            },
            "privateEndpointConnections": {
              "items": {
                "type": "object",
                "description": "The Private Endpoint Connection resource.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the resource",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                    "readOnly": true
                  },
                  "systemData": {
                    "type": "object",
                    "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                    "readOnly": true,
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                }
              },
              "type": "array",
              "description": "Private Endpoint Connections created under Video Analyzer account.",
              "readOnly": true
            }
          },
          "type": "object"
        },
        "identity": {
          "description": "The identities associated to the Video Analyzer resource.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The identity type."
            },
            "userAssignedIdentities": {
              "description": "The User Assigned Managed Identities.",
              "type": "object",
              "additionalProperties": {
                "properties": {
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID.",
                    "readOnly": true,
                    "x-nullable": true
                  },
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID.",
                    "readOnly": true,
                    "x-nullable": true
                  }
                },
                "type": "object",
                "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
              }
            }
          },
          "type": "object",
          "required": [
            "type"
          ]
        }
      },
      "type": "object",
      "description": "The update operation for a Video Analyzer account."
    },
    "Endpoint": {
      "properties": {
        "endpointUrl": {
          "type": "string",
          "description": "The URL of the endpoint."
        },
        "type": {
          "type": "string",
          "enum": [
            "ClientApi"
          ],
          "x-ms-enum": {
            "name": "VideoAnalyzerEndpointType",
            "values": [
              {
                "value": "ClientApi",
                "description": "The client API endpoint."
              }
            ],
            "modelAsString": true
          },
          "description": "The type of the endpoint."
        }
      },
      "type": "object",
      "required": [
        "type"
      ],
      "description": "The endpoint details."
    },
    "UserAssignedManagedIdentity": {
      "properties": {
        "clientId": {
          "type": "string",
          "format": "uuid",
          "description": "The client ID.",
          "readOnly": true,
          "x-nullable": true
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID.",
          "readOnly": true,
          "x-nullable": true
        }
      },
      "type": "object",
      "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
    },
    "UserAssignedManagedIdentities": {
      "type": "object",
      "description": "The User Assigned Managed Identities.",
      "additionalProperties": {
        "properties": {
          "clientId": {
            "type": "string",
            "format": "uuid",
            "description": "The client ID.",
            "readOnly": true,
            "x-nullable": true
          },
          "principalId": {
            "type": "string",
            "format": "uuid",
            "description": "The principal ID.",
            "readOnly": true,
            "x-nullable": true
          }
        },
        "type": "object",
        "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
      }
    },
    "VideoAnalyzerIdentity": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The identity type."
        },
        "userAssignedIdentities": {
          "description": "The User Assigned Managed Identities.",
          "type": "object",
          "additionalProperties": {
            "properties": {
              "clientId": {
                "type": "string",
                "format": "uuid",
                "description": "The client ID.",
                "readOnly": true,
                "x-nullable": true
              },
              "principalId": {
                "type": "string",
                "format": "uuid",
                "description": "The principal ID.",
                "readOnly": true,
                "x-nullable": true
              }
            },
            "type": "object",
            "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
          }
        }
      },
      "type": "object",
      "required": [
        "type"
      ],
      "description": "The managed identity for the Video Analyzer resource."
    },
    "ResourceIdentity": {
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
        }
      },
      "type": "object",
      "required": [
        "userAssignedIdentity"
      ],
      "description": "The user assigned managed identity to use when accessing a resource."
    },
    "KeyVaultProperties": {
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
        },
        "currentKeyIdentifier": {
          "type": "string",
          "description": "The current key used to encrypt Video Analyzer account, including the key version.",
          "readOnly": true
        }
      },
      "type": "object",
      "required": [
        "keyIdentifier"
      ],
      "description": "The details for accessing the encryption keys in Key Vault."
    },
    "AccountEncryption": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SystemKey",
            "CustomerKey"
          ],
          "x-ms-enum": {
            "name": "AccountEncryptionKeyType",
            "values": [
              {
                "value": "SystemKey",
                "description": "The Account Key is encrypted with a System Key."
              },
              {
                "value": "CustomerKey",
                "description": "The Account Key is encrypted with a Customer Key."
              }
            ],
            "modelAsString": true
          },
          "description": "The type of key used to encrypt the Account Key."
        },
        "keyVaultProperties": {
          "description": "The properties of the key used to encrypt the account.",
          "properties": {
            "keyIdentifier": {
              "type": "string",
              "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
            },
            "currentKeyIdentifier": {
              "type": "string",
              "description": "The current key used to encrypt Video Analyzer account, including the key version.",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "keyIdentifier"
          ]
        },
        "identity": {
          "description": "The Key Vault identity.",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
            }
          },
          "type": "object",
          "required": [
            "userAssignedIdentity"
          ]
        },
        "status": {
          "type": "string",
          "description": "The current status of the Key Vault mapping.",
          "readOnly": true
        }
      },
      "type": "object",
      "required": [
        "type"
      ],
      "description": "Defines how the Video Analyzer account is (optionally) encrypted."
    },
    "IotHub": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The IoT Hub resource identifier."
        },
        "identity": {
          "description": "The IoT Hub identity.",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
            }
          },
          "type": "object",
          "required": [
            "userAssignedIdentity"
          ]
        },
        "status": {
          "type": "string",
          "description": "The current status of the Iot Hub mapping.",
          "readOnly": true
        }
      },
      "type": "object",
      "required": [
        "id",
        "identity"
      ],
      "description": "The IoT Hub details."
    },
    "GroupLevelAccessControl": {
      "properties": {
        "publicNetworkAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "values": [
              {
                "value": "Enabled",
                "description": "Public network access is enabled."
              },
              {
                "value": "Disabled",
                "description": "Public network access is disabled."
              }
            ],
            "modelAsString": true
          },
          "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
          "x-nullable": true
        }
      },
      "type": "object",
      "description": "Group level network access control."
    },
    "NetworkAccessControl": {
      "properties": {
        "integration": {
          "description": "Public network access for integration group.",
          "x-nullable": true,
          "properties": {
            "publicNetworkAccess": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Public network access is enabled."
                  },
                  {
                    "value": "Disabled",
                    "description": "Public network access is disabled."
                  }
                ],
                "modelAsString": true
              },
              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
              "x-nullable": true
            }
          },
          "type": "object"
        },
        "ingestion": {
          "description": "Public network access for ingestion group.",
          "x-nullable": true,
          "properties": {
            "publicNetworkAccess": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Public network access is enabled."
                  },
                  {
                    "value": "Disabled",
                    "description": "Public network access is disabled."
                  }
                ],
                "modelAsString": true
              },
              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
              "x-nullable": true
            }
          },
          "type": "object"
        },
        "consumption": {
          "description": "Public network access for consumption group.",
          "x-nullable": true,
          "properties": {
            "publicNetworkAccess": {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Public network access is enabled."
                  },
                  {
                    "value": "Disabled",
                    "description": "Public network access is disabled."
                  }
                ],
                "modelAsString": true
              },
              "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
              "x-nullable": true
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Network access control for video analyzer account."
    },
    "VideoAnalyzerPrivateEndpointConnectionOperationStatus": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation identifier."
        },
        "id": {
          "type": "string",
          "description": "Operation resource ID."
        },
        "startTime": {
          "type": "string",
          "description": "Operation start time."
        },
        "endTime": {
          "type": "string",
          "description": "Operation end time."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "x-nullable": true
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "Status of private endpoint connection operation."
    },
    "VideoAnalyzerOperationStatus": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation identifier."
        },
        "id": {
          "type": "string",
          "description": "Operation resource ID."
        },
        "startTime": {
          "type": "string",
          "description": "Operation start time."
        },
        "endTime": {
          "type": "string",
          "description": "Operation end time."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "x-nullable": true
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "Status of video analyzer operation."
    },
    "OperationCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "The operation name."
              },
              "display": {
                "description": "The operation display name.",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "The service provider."
                  },
                  "resource": {
                    "type": "string",
                    "description": "Resource on which the operation is performed."
                  },
                  "operation": {
                    "type": "string",
                    "description": "The operation type."
                  },
                  "description": {
                    "type": "string",
                    "description": "The operation description."
                  }
                },
                "type": "object"
              },
              "origin": {
                "type": "string",
                "description": "Origin of the operation."
              },
              "properties": {
                "description": "Operation properties format.",
                "properties": {
                  "serviceSpecification": {
                    "description": "The service specifications.",
                    "readOnly": true,
                    "properties": {
                      "logSpecifications": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The diagnostic log category name.",
                              "readOnly": true
                            },
                            "displayName": {
                              "type": "string",
                              "description": "The diagnostic log category display name.",
                              "readOnly": true
                            },
                            "blobDuration": {
                              "type": "string",
                              "description": "The time range for requests in each blob.",
                              "readOnly": true
                            }
                          },
                          "type": "object",
                          "description": "A diagnostic log emitted by service."
                        },
                        "x-ms-identifiers": [
                          "blobDuration",
                          "name"
                        ],
                        "description": "List of log specifications.",
                        "readOnly": true
                      },
                      "metricSpecifications": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The metric name.",
                              "readOnly": true
                            },
                            "displayName": {
                              "type": "string",
                              "description": "The metric display name.",
                              "readOnly": true
                            },
                            "displayDescription": {
                              "type": "string",
                              "description": "The metric display description.",
                              "readOnly": true
                            },
                            "unit": {
                              "type": "string",
                              "enum": [
                                "Bytes",
                                "Count",
                                "Milliseconds"
                              ],
                              "x-ms-enum": {
                                "name": "MetricUnit",
                                "values": [
                                  {
                                    "value": "Bytes",
                                    "description": "The number of bytes."
                                  },
                                  {
                                    "value": "Count",
                                    "description": "The count."
                                  },
                                  {
                                    "value": "Milliseconds",
                                    "description": "The number of milliseconds."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "The metric unit",
                              "readOnly": true,
                              "x-nullable": false
                            },
                            "aggregationType": {
                              "type": "string",
                              "enum": [
                                "Average",
                                "Count",
                                "Total"
                              ],
                              "x-ms-enum": {
                                "name": "MetricAggregationType",
                                "values": [
                                  {
                                    "value": "Average",
                                    "description": "The average."
                                  },
                                  {
                                    "value": "Count",
                                    "description": "The count of a number of items, usually requests."
                                  },
                                  {
                                    "value": "Total",
                                    "description": "The sum."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "The metric aggregation type",
                              "readOnly": true,
                              "x-nullable": false
                            },
                            "lockAggregationType": {
                              "type": "string",
                              "enum": [
                                "Average",
                                "Count",
                                "Total"
                              ],
                              "x-ms-enum": {
                                "name": "MetricAggregationType",
                                "values": [
                                  {
                                    "value": "Average",
                                    "description": "The average."
                                  },
                                  {
                                    "value": "Count",
                                    "description": "The count of a number of items, usually requests."
                                  },
                                  {
                                    "value": "Total",
                                    "description": "The sum."
                                  }
                                ],
                                "modelAsString": true
                              },
                              "description": "The metric lock aggregation type",
                              "readOnly": true,
                              "x-nullable": true
                            },
                            "supportedAggregationTypes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Supported aggregation types."
                            },
                            "dimensions": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The metric dimension name.",
                                    "readOnly": true
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "description": "The display name for the dimension.",
                                    "readOnly": true
                                  },
                                  "toBeExportedForShoebox": {
                                    "type": "boolean",
                                    "description": "Whether to export metric to shoebox.",
                                    "readOnly": true,
                                    "x-nullable": false
                                  }
                                },
                                "type": "object",
                                "description": "A metric dimension."
                              },
                              "x-ms-identifiers": [
                                "name"
                              ],
                              "description": "The metric dimensions.",
                              "readOnly": true
                            },
                            "enableRegionalMdmAccount": {
                              "type": "boolean",
                              "description": "Indicates whether regional MDM account is enabled.",
                              "readOnly": true,
                              "x-nullable": false
                            },
                            "sourceMdmAccount": {
                              "type": "string",
                              "description": "The source MDM account.",
                              "readOnly": true
                            },
                            "sourceMdmNamespace": {
                              "type": "string",
                              "description": "The source MDM namespace.",
                              "readOnly": true
                            },
                            "supportedTimeGrainTypes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The supported time grain types.",
                              "readOnly": true
                            }
                          },
                          "type": "object",
                          "description": "A metric emitted by service."
                        },
                        "x-ms-identifiers": [
                          "name",
                          "unit"
                        ],
                        "description": "List of metric specifications.",
                        "readOnly": true
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "isDataAction": {
                "type": "boolean",
                "description": "Whether the operation applies to data-plane.",
                "x-nullable": true
              },
              "actionType": {
                "type": "string",
                "enum": [
                  "Internal"
                ],
                "x-ms-enum": {
                  "name": "ActionType",
                  "values": [
                    {
                      "value": "Internal",
                      "description": "An internal action."
                    }
                  ],
                  "modelAsString": true
                },
                "description": "Indicates the action type.",
                "x-nullable": true
              }
            },
            "type": "object",
            "required": [
              "name"
            ],
            "description": "An operation."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "A collection of Operation items."
        }
      },
      "type": "object",
      "description": "A collection of Operation items."
    },
    "VideoAnalyzerCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource properties.",
                "x-ms-client-flatten": true,
                "properties": {
                  "storageAccounts": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the storage account resource. Video Analyzer relies on tables, queues, and blobs. The primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage)."
                        },
                        "identity": {
                          "description": "A managed identity that Video Analyzer will use to access the storage account.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                            }
                          },
                          "type": "object",
                          "required": [
                            "userAssignedIdentity"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the storage account mapping.",
                          "readOnly": true
                        }
                      },
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "description": "The details about the associated storage account."
                    },
                    "description": "The storage accounts for this resource."
                  },
                  "endpoints": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "endpointUrl": {
                          "type": "string",
                          "description": "The URL of the endpoint."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "ClientApi"
                          ],
                          "x-ms-enum": {
                            "name": "VideoAnalyzerEndpointType",
                            "values": [
                              {
                                "value": "ClientApi",
                                "description": "The client API endpoint."
                              }
                            ],
                            "modelAsString": true
                          },
                          "description": "The type of the endpoint."
                        }
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "description": "The endpoint details."
                    },
                    "x-ms-identifiers": [
                      "endpointUrl"
                    ],
                    "description": "The endpoints associated with this resource.",
                    "readOnly": true
                  },
                  "encryption": {
                    "description": "The account encryption properties.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "SystemKey",
                          "CustomerKey"
                        ],
                        "x-ms-enum": {
                          "name": "AccountEncryptionKeyType",
                          "values": [
                            {
                              "value": "SystemKey",
                              "description": "The Account Key is encrypted with a System Key."
                            },
                            {
                              "value": "CustomerKey",
                              "description": "The Account Key is encrypted with a Customer Key."
                            }
                          ],
                          "modelAsString": true
                        },
                        "description": "The type of key used to encrypt the Account Key."
                      },
                      "keyVaultProperties": {
                        "description": "The properties of the key used to encrypt the account.",
                        "properties": {
                          "keyIdentifier": {
                            "type": "string",
                            "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
                          },
                          "currentKeyIdentifier": {
                            "type": "string",
                            "description": "The current key used to encrypt Video Analyzer account, including the key version.",
                            "readOnly": true
                          }
                        },
                        "type": "object",
                        "required": [
                          "keyIdentifier"
                        ]
                      },
                      "identity": {
                        "description": "The Key Vault identity.",
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                          }
                        },
                        "type": "object",
                        "required": [
                          "userAssignedIdentity"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "description": "The current status of the Key Vault mapping.",
                        "readOnly": true
                      }
                    },
                    "type": "object",
                    "required": [
                      "type"
                    ]
                  },
                  "iotHubs": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The IoT Hub resource identifier."
                        },
                        "identity": {
                          "description": "The IoT Hub identity.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned managed identity's resource identifier to use when accessing a resource."
                            }
                          },
                          "type": "object",
                          "required": [
                            "userAssignedIdentity"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the Iot Hub mapping.",
                          "readOnly": true
                        }
                      },
                      "type": "object",
                      "required": [
                        "id",
                        "identity"
                      ],
                      "description": "The IoT Hub details."
                    },
                    "description": "The IoT Hubs for this resource."
                  },
                  "publicNetworkAccess": {
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "Public network access is enabled."
                        },
                        {
                          "value": "Disabled",
                          "description": "Public network access is disabled."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "Whether or not public network access is allowed for resources under the Video Analyzer account.",
                    "x-nullable": true
                  },
                  "networkAccessControl": {
                    "description": "Network access control for Video Analyzer.",
                    "x-nullable": true,
                    "properties": {
                      "integration": {
                        "description": "Public network access for integration group.",
                        "x-nullable": true,
                        "properties": {
                          "publicNetworkAccess": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Public network access is enabled."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Public network access is disabled."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      },
                      "ingestion": {
                        "description": "Public network access for ingestion group.",
                        "x-nullable": true,
                        "properties": {
                          "publicNetworkAccess": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Public network access is enabled."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Public network access is disabled."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      },
                      "consumption": {
                        "description": "Public network access for consumption group.",
                        "x-nullable": true,
                        "properties": {
                          "publicNetworkAccess": {
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Public network access is enabled."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Public network access is disabled."
                                }
                              ],
                              "modelAsString": true
                            },
                            "description": "Whether or not public network access is allowed for specified resources under the Video Analyzer account.",
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "provisioningState": {
                    "type": "string",
                    "enum": [
                      "Failed",
                      "InProgress",
                      "Succeeded"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "values": [
                        {
                          "value": "Failed",
                          "description": "Provisioning state failed."
                        },
                        {
                          "value": "InProgress",
                          "description": "Provisioning state in progress."
                        },
                        {
                          "value": "Succeeded",
                          "description": "Provisioning state succeeded."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "Provisioning state of the Video Analyzer account.",
                    "readOnly": true,
                    "x-nullable": false
                  },
                  "privateEndpointConnections": {
                    "items": {
                      "type": "object",
                      "description": "The Private Endpoint Connection resource.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                          "readOnly": true
                        },
                        "systemData": {
                          "type": "object",
                          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                          "readOnly": true,
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          }
                        },
                        "properties": {
                          "description": "Resource properties.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The resource of private end point.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ARM identifier for Private Endpoint",
                                  "readOnly": true
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              },
                              "readOnly": true
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      }
                    },
                    "type": "array",
                    "description": "Private Endpoint Connections created under Video Analyzer account.",
                    "readOnly": true
                  }
                },
                "type": "object",
                "required": [
                  "storageAccounts"
                ]
              },
              "identity": {
                "description": "The identities associated to the Video Analyzer resource.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The identity type."
                  },
                  "userAssignedIdentities": {
                    "description": "The User Assigned Managed Identities.",
                    "type": "object",
                    "additionalProperties": {
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID.",
                          "readOnly": true,
                          "x-nullable": true
                        },
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID.",
                          "readOnly": true,
                          "x-nullable": true
                        }
                      },
                      "type": "object",
                      "description": "The details of the user assigned managed identity used by the Video Analyzer resource."
                    }
                  }
                },
                "type": "object",
                "required": [
                  "type"
                ]
              }
            },
            "type": "object",
            "description": "The Video Analyzer account."
          },
          "description": "A collection of VideoAnalyzer items."
        }
      },
      "type": "object",
      "description": "A collection of VideoAnalyzer items."
    },
    "VideoContentUrls": {
      "properties": {
        "downloadUrl": {
          "type": "string",
          "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
        },
        "archiveBaseUrl": {
          "type": "string",
          "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
        },
        "rtspTunnelUrl": {
          "type": "string",
          "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
        },
        "previewImageUrls": {
          "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
          "properties": {
            "small": {
              "type": "string",
              "description": "Low resolution preview image URL."
            },
            "medium": {
              "type": "string",
              "description": "Medium resolution preview image URL."
            },
            "large": {
              "type": "string",
              "description": "High resolution preview image URL."
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Set of URLs to the video content."
    },
    "VideoPreviewImageUrls": {
      "properties": {
        "small": {
          "type": "string",
          "description": "Low resolution preview image URL."
        },
        "medium": {
          "type": "string",
          "description": "Medium resolution preview image URL."
        },
        "large": {
          "type": "string",
          "description": "High resolution preview image URL."
        }
      },
      "type": "object",
      "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled."
    },
    "VideoFlags": {
      "properties": {
        "canStream": {
          "type": "boolean",
          "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
        },
        "hasData": {
          "type": "boolean",
          "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
        },
        "isInUse": {
          "type": "boolean",
          "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
        }
      },
      "type": "object",
      "required": [
        "canStream",
        "hasData",
        "isInUse"
      ],
      "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state."
    },
    "VideoMediaInfo": {
      "properties": {
        "segmentLength": {
          "type": "string",
          "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
        }
      },
      "type": "object",
      "description": "Contains information about the video and audio content."
    },
    "VideoContentToken": {
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The content token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).",
          "readOnly": true,
          "x-nullable": false
        },
        "token": {
          "type": "string",
          "description": "The content token value to be added to the video content URL as the value for the \"token\" query string parameter. The token is specific to a single video.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "\"Video content token grants access to the video content URLs.\""
    },
    "VideoProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional video title provided by the user. Value can be up to 256 characters long."
        },
        "description": {
          "type": "string",
          "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
        },
        "type": {
          "type": "string",
          "enum": [
            "Archive",
            "File"
          ],
          "x-ms-enum": {
            "name": "VideoType",
            "values": [
              {
                "value": "Archive",
                "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
              },
              {
                "value": "File",
                "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
              }
            ],
            "modelAsString": true
          },
          "description": "Video content type. Different content types are suitable for different applications and scenarios.",
          "readOnly": true,
          "x-nullable": false
        },
        "flags": {
          "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
          "readOnly": true,
          "properties": {
            "canStream": {
              "type": "boolean",
              "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
            },
            "hasData": {
              "type": "boolean",
              "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
            },
            "isInUse": {
              "type": "boolean",
              "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
            }
          },
          "type": "object",
          "required": [
            "canStream",
            "hasData",
            "isInUse"
          ]
        },
        "contentUrls": {
          "description": "Set of URLs to the video content.",
          "readOnly": true,
          "properties": {
            "downloadUrl": {
              "type": "string",
              "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
            },
            "archiveBaseUrl": {
              "type": "string",
              "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
            },
            "rtspTunnelUrl": {
              "type": "string",
              "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
            },
            "previewImageUrls": {
              "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
              "properties": {
                "small": {
                  "type": "string",
                  "description": "Low resolution preview image URL."
                },
                "medium": {
                  "type": "string",
                  "description": "Medium resolution preview image URL."
                },
                "large": {
                  "type": "string",
                  "description": "High resolution preview image URL."
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "mediaInfo": {
          "description": "Contains information about the video and audio content.",
          "properties": {
            "segmentLength": {
              "type": "string",
              "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
            }
          },
          "type": "object"
        },
        "archival": {
          "description": "Video archival properties.",
          "properties": {
            "retentionPeriod": {
              "type": "string",
              "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Application level properties for the video resource."
    },
    "VideoArchival": {
      "properties": {
        "retentionPeriod": {
          "type": "string",
          "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
        }
      },
      "type": "object",
      "description": "Video archival properties."
    },
    "AuthenticationBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base class for access policies authentication methods."
    },
    "TokenClaim": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the claim which must be present on the token."
        },
        "value": {
          "type": "string",
          "description": "Expected value of the claim to be present on the token."
        }
      },
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "description": "Properties for expected token claims."
    },
    "JwtAuthentication": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.JwtAuthentication",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base class for access policies authentication methods."
        }
      ],
      "properties": {
        "issuers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of expected token issuers. Token issuer is valid if it matches at least one of the given values."
        },
        "audiences": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of expected token audiences. Token audience is valid if it matches at least one of the given values."
        },
        "claims": {
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the claim which must be present on the token."
              },
              "value": {
                "type": "string",
                "description": "Expected value of the claim to be present on the token."
              }
            },
            "type": "object",
            "required": [
              "name",
              "value"
            ],
            "description": "Properties for expected token claims."
          },
          "x-ms-identifiers": [
            "name",
            "value"
          ],
          "description": "List of additional token claims to be validated. Token must contains all claims and respective values for it to be valid."
        },
        "keys": {
          "type": "array",
          "items": {
            "discriminator": "@type",
            "properties": {
              "@type": {
                "type": "string",
                "description": "The discriminator for derived types."
              },
              "kid": {
                "type": "string",
                "description": "JWT token key id. Validation keys are looked up based on the key id present on the JWT token header."
              }
            },
            "type": "object",
            "required": [
              "@type",
              "kid"
            ],
            "description": "Key properties for JWT token validation."
          },
          "x-ms-identifiers": [
            "kid"
          ],
          "description": "List of keys which can be used to validate access tokens. Having multiple keys allow for seamless key rotation of the token signing key. Token signature must match exactly one key."
        }
      },
      "type": "object",
      "description": "Properties for access validation based on JSON Web Tokens (JWT)."
    },
    "TokenKey": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "kid": {
          "type": "string",
          "description": "JWT token key id. Validation keys are looked up based on the key id present on the JWT token header."
        }
      },
      "type": "object",
      "required": [
        "@type",
        "kid"
      ],
      "description": "Key properties for JWT token validation."
    },
    "RsaTokenKey": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.RsaTokenKey",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "kid": {
              "type": "string",
              "description": "JWT token key id. Validation keys are looked up based on the key id present on the JWT token header."
            }
          },
          "type": "object",
          "required": [
            "@type",
            "kid"
          ],
          "description": "Key properties for JWT token validation."
        }
      ],
      "properties": {
        "alg": {
          "type": "string",
          "enum": [
            "RS256",
            "RS384",
            "RS512"
          ],
          "x-ms-enum": {
            "name": "AccessPolicyRsaAlgo",
            "values": [
              {
                "value": "RS256",
                "description": "RS256"
              },
              {
                "value": "RS384",
                "description": "RS384"
              },
              {
                "value": "RS512",
                "description": "RS512"
              }
            ],
            "modelAsString": true
          },
          "description": "RSA algorithm to be used: RS256, RS384 or RS512."
        },
        "n": {
          "type": "string",
          "description": "RSA public key modulus."
        },
        "e": {
          "type": "string",
          "description": "RSA public key exponent."
        }
      },
      "type": "object",
      "required": [
        "alg",
        "n",
        "e"
      ],
      "description": "Required validation properties for tokens generated with RSA algorithm."
    },
    "EccTokenKey": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.EccTokenKey",
      "allOf": [
        {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            },
            "kid": {
              "type": "string",
              "description": "JWT token key id. Validation keys are looked up based on the key id present on the JWT token header."
            }
          },
          "type": "object",
          "required": [
            "@type",
            "kid"
          ],
          "description": "Key properties for JWT token validation."
        }
      ],
      "properties": {
        "alg": {
          "type": "string",
          "enum": [
            "ES256",
            "ES384",
            "ES512"
          ],
          "x-ms-enum": {
            "name": "AccessPolicyEccAlgo",
            "values": [
              {
                "value": "ES256",
                "description": "ES265"
              },
              {
                "value": "ES384",
                "description": "ES384"
              },
              {
                "value": "ES512",
                "description": "ES512"
              }
            ],
            "modelAsString": true
          },
          "description": "Elliptical curve algorithm to be used: ES256, ES384 or ES512."
        },
        "x": {
          "type": "string",
          "description": "X coordinate."
        },
        "y": {
          "type": "string",
          "description": "Y coordinate."
        }
      },
      "type": "object",
      "required": [
        "alg",
        "x",
        "y"
      ],
      "description": "Required validation properties for tokens generated with Elliptical Curve algorithm."
    },
    "AccessPolicyProperties": {
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "Reader"
          ],
          "x-ms-enum": {
            "name": "AccessPolicyRole",
            "values": [
              {
                "value": "Reader",
                "description": "Reader role allows for read-only operations to be performed through the client APIs."
              }
            ],
            "modelAsString": true
          },
          "description": "Defines the access level granted by this policy.",
          "x-nullable": true
        },
        "authentication": {
          "discriminator": "@type",
          "properties": {
            "@type": {
              "type": "string",
              "description": "The discriminator for derived types."
            }
          },
          "type": "object",
          "required": [
            "@type"
          ],
          "description": "Base class for access policies authentication methods."
        }
      },
      "type": "object",
      "description": "Application level properties for the access policy resource."
    },
    "VideoEntity": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "title": {
              "type": "string",
              "description": "Optional video title provided by the user. Value can be up to 256 characters long."
            },
            "description": {
              "type": "string",
              "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
            },
            "type": {
              "type": "string",
              "enum": [
                "Archive",
                "File"
              ],
              "x-ms-enum": {
                "name": "VideoType",
                "values": [
                  {
                    "value": "Archive",
                    "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
                  },
                  {
                    "value": "File",
                    "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
                  }
                ],
                "modelAsString": true
              },
              "description": "Video content type. Different content types are suitable for different applications and scenarios.",
              "readOnly": true,
              "x-nullable": false
            },
            "flags": {
              "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
              "readOnly": true,
              "properties": {
                "canStream": {
                  "type": "boolean",
                  "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
                },
                "hasData": {
                  "type": "boolean",
                  "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
                },
                "isInUse": {
                  "type": "boolean",
                  "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
                }
              },
              "type": "object",
              "required": [
                "canStream",
                "hasData",
                "isInUse"
              ]
            },
            "contentUrls": {
              "description": "Set of URLs to the video content.",
              "readOnly": true,
              "properties": {
                "downloadUrl": {
                  "type": "string",
                  "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
                },
                "archiveBaseUrl": {
                  "type": "string",
                  "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
                },
                "rtspTunnelUrl": {
                  "type": "string",
                  "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
                },
                "previewImageUrls": {
                  "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
                  "properties": {
                    "small": {
                      "type": "string",
                      "description": "Low resolution preview image URL."
                    },
                    "medium": {
                      "type": "string",
                      "description": "Medium resolution preview image URL."
                    },
                    "large": {
                      "type": "string",
                      "description": "High resolution preview image URL."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "mediaInfo": {
              "description": "Contains information about the video and audio content.",
              "properties": {
                "segmentLength": {
                  "type": "string",
                  "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
                }
              },
              "type": "object"
            },
            "archival": {
              "description": "Video archival properties.",
              "properties": {
                "retentionPeriod": {
                  "type": "string",
                  "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files."
    },
    "AccessPolicyEntity": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource properties.",
          "x-ms-client-flatten": true,
          "properties": {
            "role": {
              "type": "string",
              "enum": [
                "Reader"
              ],
              "x-ms-enum": {
                "name": "AccessPolicyRole",
                "values": [
                  {
                    "value": "Reader",
                    "description": "Reader role allows for read-only operations to be performed through the client APIs."
                  }
                ],
                "modelAsString": true
              },
              "description": "Defines the access level granted by this policy.",
              "x-nullable": true
            },
            "authentication": {
              "discriminator": "@type",
              "properties": {
                "@type": {
                  "type": "string",
                  "description": "The discriminator for derived types."
                }
              },
              "type": "object",
              "required": [
                "@type"
              ],
              "description": "Base class for access policies authentication methods."
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Access policies help define the authentication rules, and control access to specific video resources."
    },
    "VideoEntityCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource properties.",
                "x-ms-client-flatten": true,
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Optional video title provided by the user. Value can be up to 256 characters long."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Archive",
                      "File"
                    ],
                    "x-ms-enum": {
                      "name": "VideoType",
                      "values": [
                        {
                          "value": "Archive",
                          "description": "Archive is flexible format that represents a video stream associated with wall-clock time. The video archive can either be continuous or discontinuous. An archive is discontinuous when there are gaps in the recording due to various reasons, such as the live pipeline being stopped, camera being disconnected or due to the use of event based recordings through the use of a signal gate. There is no limit to the archive duration and new video data can be appended to the existing archive at any time, as long as the same video codec and codec parameters are being used. Videos of this type are suitable for appending and long term archival."
                        },
                        {
                          "value": "File",
                          "description": "File represents a video which is stored as a single media file, such as MP4. Videos of this type are suitable to be downloaded for external consumption."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "Video content type. Different content types are suitable for different applications and scenarios.",
                    "readOnly": true,
                    "x-nullable": false
                  },
                  "flags": {
                    "description": "Video flags contain information about the available video actions and its dynamic properties based on the current video state.",
                    "readOnly": true,
                    "properties": {
                      "canStream": {
                        "type": "boolean",
                        "description": "Value indicating whether or not the video can be streamed. Only \"archive\" type videos can be streamed."
                      },
                      "hasData": {
                        "type": "boolean",
                        "description": "Value indicating whether or not there has ever been data recorded or uploaded into the video. Newly created videos have this value set to false."
                      },
                      "isInUse": {
                        "type": "boolean",
                        "description": "Value indicating whether or not the video is currently being referenced be an active pipeline. The fact that is being referenced, doesn't necessarily indicate that data is being received. For example, video recording may be gated on events or camera may not be accessible at the time."
                      }
                    },
                    "type": "object",
                    "required": [
                      "canStream",
                      "hasData",
                      "isInUse"
                    ]
                  },
                  "contentUrls": {
                    "description": "Set of URLs to the video content.",
                    "readOnly": true,
                    "properties": {
                      "downloadUrl": {
                        "type": "string",
                        "description": "Video file download URL. This URL can be used in conjunction with the video content authorization token to download the video MP4 file. The resulting MP4 file can be played on any standard media player. It is available when the video type is 'file' and video file is available for consumption."
                      },
                      "archiveBaseUrl": {
                        "type": "string",
                        "description": "Video archive streaming base URL. The archived content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token on any compatible DASH or HLS players by appending the following to the base URL:\r\n\r\n    - HLSv4:     /manifest(format=m3u8-aapl).m3u8\r\n    - HLS CMAF:  /manifest(format=m3u8-cmaf)\r\n    - DASH CMAF: /manifest(format=mpd-time-cmaf)\r\n\r\n    Moreover, an ongoing video recording can be played in \"live mode\" with latencies which are approximately double of the chosen video segment length. It is available when the video type is 'archive' and video archiving is enabled."
                      },
                      "rtspTunnelUrl": {
                        "type": "string",
                        "description": "Video low-latency streaming URL. The live content can be automatically played by the Azure Video Analyzer player widget. Alternatively, this URL can be used in conjunction with the video content authorization token to expose a WebSocket tunneled RTSP stream. It is available when the video type is 'archive' and a live, low-latency feed is available from the source."
                      },
                      "previewImageUrls": {
                        "description": "Video preview image URLs. These URLs can be used in conjunction with the video content authorization token to download the most recent still image from the video archive in different resolutions. They are available when the video type is 'archive' and preview images are enabled.",
                        "properties": {
                          "small": {
                            "type": "string",
                            "description": "Low resolution preview image URL."
                          },
                          "medium": {
                            "type": "string",
                            "description": "Medium resolution preview image URL."
                          },
                          "large": {
                            "type": "string",
                            "description": "High resolution preview image URL."
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "mediaInfo": {
                    "description": "Contains information about the video and audio content.",
                    "properties": {
                      "segmentLength": {
                        "type": "string",
                        "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \"PT30S\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments."
                      }
                    },
                    "type": "object"
                  },
                  "archival": {
                    "description": "Video archival properties.",
                    "properties": {
                      "retentionPeriod": {
                        "type": "string",
                        "description": "Video retention period indicates the maximum age of the video archive segments which are intended to be kept in storage. It must be provided in the ISO8601 duration format in the granularity of days, up to a maximum of 10 years. For example, if this is set to P30D (30 days), content older than 30 days will be periodically deleted. This value can be updated at any time and the new desired retention period will be effective within 24 hours."
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object",
            "description": "Represents a video resource within Azure Video Analyzer. Videos can be ingested from RTSP cameras through live pipelines or can be created by exporting sequences from existing captured video through a pipeline job. Videos ingested through live pipelines can be streamed through Azure Video Analyzer Player Widget or compatible players. Exported videos can be downloaded as MP4 files."
          },
          "description": "A collection of VideoEntity items."
        },
        "@nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of VideoEntity items."
    },
    "AccessPolicyEntityCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource properties.",
                "x-ms-client-flatten": true,
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "Reader"
                    ],
                    "x-ms-enum": {
                      "name": "AccessPolicyRole",
                      "values": [
                        {
                          "value": "Reader",
                          "description": "Reader role allows for read-only operations to be performed through the client APIs."
                        }
                      ],
                      "modelAsString": true
                    },
                    "description": "Defines the access level granted by this policy.",
                    "x-nullable": true
                  },
                  "authentication": {
                    "discriminator": "@type",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "description": "The discriminator for derived types."
                      }
                    },
                    "type": "object",
                    "required": [
                      "@type"
                    ],
                    "description": "Base class for access policies authentication methods."
                  }
                },
                "type": "object"
              }
            },
            "type": "object",
            "description": "Access policies help define the authentication rules, and control access to specific video resources."
          },
          "description": "A collection of AccessPolicyEntity items."
        },
        "@nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of AccessPolicyEntity items."
    }
  },
  "parameters": {
    "AzureVideoAnalyzerAccountName": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure Video Analyzer account name.",
      "x-ms-parameter-location": "method"
    }
  }
}