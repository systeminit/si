{
  "swagger": "2.0",
  "info": {
    "title": "Azure iotfirmwaredefense",
    "version": "2025-08-02",
    "description": "Azure iotfirmwaredefense service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.IoTFirmwareDefense/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTFirmwareDefense/workspaces": {
      "get": {
        "operationId": "Workspaces_ListBySubscription",
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all of the firmware analysis workspaces in the specified subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Workspace list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Workspace items on this page",
                  "items": {
                    "type": "object",
                    "description": "Firmware analysis workspace.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces": {
      "get": {
        "operationId": "Workspaces_ListByResourceGroup",
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all of the firmware analysis workspaces in the specified resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Workspace list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Workspace items on this page",
                  "items": {
                    "type": "object",
                    "description": "Firmware analysis workspace.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "tags": [
          "Workspaces"
        ],
        "description": "Get firmware analysis workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Firmware analysis workspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Workspaces_Create",
        "tags": [
          "Workspaces"
        ],
        "description": "The operation to create or update a firmware analysis workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Parameters when creating a firmware analysis workspace.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Firmware analysis workspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Workspace' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Firmware analysis workspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Workspace' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Firmware analysis workspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Workspaces_Update",
        "tags": [
          "Workspaces"
        ],
        "description": "The operation to update a firmware analysis workspaces.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Parameters when updating a firmware analysis workspace.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Workspace.",
              "properties": {
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Firmware analysis workspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "tags": [
          "Workspaces"
        ],
        "description": "The operation to delete a firmware analysis workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares": {
      "get": {
        "operationId": "Firmwares_ListByWorkspace",
        "tags": [
          "Firmwares"
        ],
        "description": "Lists all of firmwares inside a workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Firmware list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Firmware items on this page",
                  "items": {
                    "type": "object",
                    "description": "Firmware definition",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "fileName": {
                            "type": "string",
                            "description": "File name for a firmware that user uploaded."
                          },
                          "vendor": {
                            "type": "string",
                            "description": "Firmware vendor."
                          },
                          "model": {
                            "type": "string",
                            "description": "Firmware model."
                          },
                          "version": {
                            "type": "string",
                            "description": "Firmware version."
                          },
                          "description": {
                            "type": "string",
                            "description": "User-specified description of the firmware."
                          },
                          "fileSize": {
                            "type": "integer",
                            "format": "int64",
                            "description": "File size of the uploaded firmware image."
                          },
                          "status": {
                            "description": "The status of firmware scan.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Extracting",
                              "Analyzing",
                              "Ready",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "Status",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The analysis job is queued"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The firmware is currently being extracted"
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                },
                                {
                                  "name": "Ready",
                                  "value": "Ready",
                                  "description": "Analysis job results are ready"
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred while running firmware analysis"
                                }
                              ]
                            }
                          },
                          "statusMessages": {
                            "type": "array",
                            "description": "A list of errors or other messages generated during firmware analysis",
                            "items": {
                              "type": "object",
                              "description": "Error and status message",
                              "properties": {
                                "errorCode": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The error code"
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The error or status message"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}": {
      "get": {
        "operationId": "Firmwares_Get",
        "tags": [
          "Firmwares"
        ],
        "description": "Get firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Firmware definition",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "fileName": {
                      "type": "string",
                      "description": "File name for a firmware that user uploaded."
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Firmware vendor."
                    },
                    "model": {
                      "type": "string",
                      "description": "Firmware model."
                    },
                    "version": {
                      "type": "string",
                      "description": "Firmware version."
                    },
                    "description": {
                      "type": "string",
                      "description": "User-specified description of the firmware."
                    },
                    "fileSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "File size of the uploaded firmware image."
                    },
                    "status": {
                      "description": "The status of firmware scan.",
                      "type": "string",
                      "enum": [
                        "Pending",
                        "Extracting",
                        "Analyzing",
                        "Ready",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The analysis job is queued"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The firmware is currently being extracted"
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          },
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "Analysis job results are ready"
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred while running firmware analysis"
                          }
                        ]
                      }
                    },
                    "statusMessages": {
                      "type": "array",
                      "description": "A list of errors or other messages generated during firmware analysis",
                      "items": {
                        "type": "object",
                        "description": "Error and status message",
                        "properties": {
                          "errorCode": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "The error or status message"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Firmwares_Create",
        "tags": [
          "Firmwares"
        ],
        "description": "The operation to create a firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Details of the firmware being created or updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Firmware definition",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "fileName": {
                      "type": "string",
                      "description": "File name for a firmware that user uploaded."
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Firmware vendor."
                    },
                    "model": {
                      "type": "string",
                      "description": "Firmware model."
                    },
                    "version": {
                      "type": "string",
                      "description": "Firmware version."
                    },
                    "description": {
                      "type": "string",
                      "description": "User-specified description of the firmware."
                    },
                    "fileSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "File size of the uploaded firmware image."
                    },
                    "status": {
                      "description": "The status of firmware scan.",
                      "type": "string",
                      "enum": [
                        "Pending",
                        "Extracting",
                        "Analyzing",
                        "Ready",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The analysis job is queued"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The firmware is currently being extracted"
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          },
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "Analysis job results are ready"
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred while running firmware analysis"
                          }
                        ]
                      }
                    },
                    "statusMessages": {
                      "type": "array",
                      "description": "A list of errors or other messages generated during firmware analysis",
                      "items": {
                        "type": "object",
                        "description": "Error and status message",
                        "properties": {
                          "errorCode": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "The error or status message"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Firmware' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Firmware definition",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "fileName": {
                      "type": "string",
                      "description": "File name for a firmware that user uploaded."
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Firmware vendor."
                    },
                    "model": {
                      "type": "string",
                      "description": "Firmware model."
                    },
                    "version": {
                      "type": "string",
                      "description": "Firmware version."
                    },
                    "description": {
                      "type": "string",
                      "description": "User-specified description of the firmware."
                    },
                    "fileSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "File size of the uploaded firmware image."
                    },
                    "status": {
                      "description": "The status of firmware scan.",
                      "type": "string",
                      "enum": [
                        "Pending",
                        "Extracting",
                        "Analyzing",
                        "Ready",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The analysis job is queued"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The firmware is currently being extracted"
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          },
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "Analysis job results are ready"
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred while running firmware analysis"
                          }
                        ]
                      }
                    },
                    "statusMessages": {
                      "type": "array",
                      "description": "A list of errors or other messages generated during firmware analysis",
                      "items": {
                        "type": "object",
                        "description": "Error and status message",
                        "properties": {
                          "errorCode": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "The error or status message"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Firmware' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Firmware definition",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "fileName": {
                      "type": "string",
                      "description": "File name for a firmware that user uploaded."
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Firmware vendor."
                    },
                    "model": {
                      "type": "string",
                      "description": "Firmware model."
                    },
                    "version": {
                      "type": "string",
                      "description": "Firmware version."
                    },
                    "description": {
                      "type": "string",
                      "description": "User-specified description of the firmware."
                    },
                    "fileSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "File size of the uploaded firmware image."
                    },
                    "status": {
                      "description": "The status of firmware scan.",
                      "type": "string",
                      "enum": [
                        "Pending",
                        "Extracting",
                        "Analyzing",
                        "Ready",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The analysis job is queued"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The firmware is currently being extracted"
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          },
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "Analysis job results are ready"
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred while running firmware analysis"
                          }
                        ]
                      }
                    },
                    "statusMessages": {
                      "type": "array",
                      "description": "A list of errors or other messages generated during firmware analysis",
                      "items": {
                        "type": "object",
                        "description": "Error and status message",
                        "properties": {
                          "errorCode": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "The error or status message"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Firmwares_Update",
        "tags": [
          "Firmwares"
        ],
        "description": "The operation to update firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Details of the firmware being created or updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Firmware definition",
              "properties": {
                "properties": {
                  "description": "The editable properties of a firmware",
                  "type": "object",
                  "properties": {
                    "fileName": {
                      "type": "string",
                      "description": "File name for a firmware that user uploaded."
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Firmware vendor."
                    },
                    "model": {
                      "type": "string",
                      "description": "Firmware model."
                    },
                    "version": {
                      "type": "string",
                      "description": "Firmware version."
                    },
                    "description": {
                      "type": "string",
                      "description": "User-specified description of the firmware."
                    },
                    "fileSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "File size of the uploaded firmware image."
                    },
                    "status": {
                      "description": "The status of firmware scan.",
                      "type": "string",
                      "enum": [
                        "Pending",
                        "Extracting",
                        "Analyzing",
                        "Ready",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The analysis job is queued"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The firmware is currently being extracted"
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          },
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "Analysis job results are ready"
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred while running firmware analysis"
                          }
                        ]
                      }
                    },
                    "statusMessages": {
                      "type": "array",
                      "description": "A list of errors or other messages generated during firmware analysis",
                      "items": {
                        "type": "object",
                        "description": "Error and status message",
                        "properties": {
                          "errorCode": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "The error or status message"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Firmware definition",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "fileName": {
                      "type": "string",
                      "description": "File name for a firmware that user uploaded."
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Firmware vendor."
                    },
                    "model": {
                      "type": "string",
                      "description": "Firmware model."
                    },
                    "version": {
                      "type": "string",
                      "description": "Firmware version."
                    },
                    "description": {
                      "type": "string",
                      "description": "User-specified description of the firmware."
                    },
                    "fileSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "File size of the uploaded firmware image."
                    },
                    "status": {
                      "description": "The status of firmware scan.",
                      "type": "string",
                      "enum": [
                        "Pending",
                        "Extracting",
                        "Analyzing",
                        "Ready",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The analysis job is queued"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The firmware is currently being extracted"
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          },
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "Analysis job results are ready"
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred while running firmware analysis"
                          }
                        ]
                      }
                    },
                    "statusMessages": {
                      "type": "array",
                      "description": "A list of errors or other messages generated during firmware analysis",
                      "items": {
                        "type": "object",
                        "description": "Error and status message",
                        "properties": {
                          "errorCode": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The error code"
                          },
                          "message": {
                            "type": "string",
                            "description": "The error or status message"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Firmwares_Delete",
        "tags": [
          "Firmwares"
        ],
        "description": "The operation to delete a firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/binaryHardeningResults": {
      "get": {
        "operationId": "BinaryHardening_ListByFirmware",
        "tags": [
          "BinaryHardening"
        ],
        "description": "Lists binary hardening analysis results of a firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a BinaryHardeningResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The BinaryHardeningResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "The object representing a firmware analysis binary hardening result resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "binaryHardeningId": {
                            "type": "string",
                            "description": "ID for the binary hardening result."
                          },
                          "securityHardeningFeatures": {
                            "description": "The security hardening features of the binary.",
                            "type": "object",
                            "properties": {
                              "noExecute": {
                                "type": "boolean",
                                "description": "Flag indicating the binary's stack is set to NX (no-execute)."
                              },
                              "positionIndependentExecutable": {
                                "type": "boolean",
                                "description": "Flag indicating the binary was compiled to be a position independent executable."
                              },
                              "relocationReadOnly": {
                                "type": "boolean",
                                "description": "Flag indicating the binary has enabled relocation read-only protections."
                              },
                              "canary": {
                                "type": "boolean",
                                "description": "Flag indicating if the binary was compiled with stack canaries enabled."
                              },
                              "stripped": {
                                "type": "boolean",
                                "description": "Flag indicating if debug symbols have been stripped from the binary."
                              }
                            }
                          },
                          "executableArchitecture": {
                            "type": "string",
                            "description": "The architecture of the binary being reported on."
                          },
                          "filePath": {
                            "type": "string",
                            "description": "The path to the binary in the firmware."
                          },
                          "executableClass": {
                            "description": "The executable class to indicate 32 or 64 bit.",
                            "type": "string",
                            "enum": [
                              "x86",
                              "x64"
                            ],
                            "x-ms-enum": {
                              "name": "ExecutableClass",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "x86",
                                  "value": "x86",
                                  "description": "The binary is 32-bit."
                                },
                                {
                                  "name": "x64",
                                  "value": "x64",
                                  "description": "The binary is 64-bit."
                                }
                              ]
                            }
                          },
                          "runpath": {
                            "type": "string",
                            "description": "The runpath property of the uploaded binary, which is a method of specifying additional paths to load objects at runtime."
                          },
                          "rpath": {
                            "type": "string",
                            "description": "The rpath property of the uploaded binary, which is a deprecated method of specifying additional paths to load objects at runtime."
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/cryptoCertificates": {
      "get": {
        "operationId": "CryptoCertificates_ListByFirmware",
        "tags": [
          "CryptoCertificates"
        ],
        "description": "Lists crypto certificate analysis results of a firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a CryptoCertificateResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CryptoCertificateResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "The object representing a firmware analysis crypto certificate resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "cryptoCertId": {
                            "type": "string",
                            "description": "ID for the certificate result."
                          },
                          "certificateName": {
                            "type": "string",
                            "description": "Name of the certificate."
                          },
                          "subject": {
                            "description": "Subject information of the certificate.",
                            "type": "object",
                            "properties": {
                              "commonName": {
                                "type": "string",
                                "description": "Common name of the certificate entity."
                              },
                              "organization": {
                                "type": "string",
                                "description": "Organization of the certificate entity."
                              },
                              "organizationalUnit": {
                                "type": "string",
                                "description": "The organizational unit of the certificate entity."
                              },
                              "state": {
                                "type": "string",
                                "description": "Geographical state or province of the certificate entity."
                              },
                              "country": {
                                "type": "string",
                                "description": "Country code of the certificate entity."
                              }
                            }
                          },
                          "issuer": {
                            "description": "Issuer information of the certificate.",
                            "type": "object",
                            "properties": {
                              "commonName": {
                                "type": "string",
                                "description": "Common name of the certificate entity."
                              },
                              "organization": {
                                "type": "string",
                                "description": "Organization of the certificate entity."
                              },
                              "organizationalUnit": {
                                "type": "string",
                                "description": "The organizational unit of the certificate entity."
                              },
                              "state": {
                                "type": "string",
                                "description": "Geographical state or province of the certificate entity."
                              },
                              "country": {
                                "type": "string",
                                "description": "Country code of the certificate entity."
                              }
                            }
                          },
                          "issuedDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Issue date for the certificate."
                          },
                          "expirationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Expiration date for the certificate."
                          },
                          "certificateRole": {
                            "type": "string",
                            "description": "Role of the certificate (Root CA, etc)"
                          },
                          "signatureAlgorithm": {
                            "type": "string",
                            "description": "The signature algorithm used in the certificate."
                          },
                          "certificateKeySize": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Size of the certificate's key in bits"
                          },
                          "certificateKeyAlgorithm": {
                            "type": "string",
                            "description": "Key algorithm used in the certificate."
                          },
                          "encoding": {
                            "type": "string",
                            "description": "Encoding used for the certificate."
                          },
                          "serialNumber": {
                            "type": "string",
                            "description": "Serial number of the certificate."
                          },
                          "fingerprint": {
                            "type": "string",
                            "description": "Fingerprint of the certificate."
                          },
                          "certificateUsage": {
                            "type": "array",
                            "description": "List of functions the certificate can fulfill.",
                            "items": {
                              "type": "string",
                              "description": "Activities for which the cryptographic certificate can be used.",
                              "enum": [
                                "digitalSignature",
                                "nonRepudiation",
                                "contentCommitment",
                                "keyEncipherment",
                                "dataEncipherment",
                                "keyAgreement",
                                "keyCertSign",
                                "crlSign",
                                "encipherOnly",
                                "decipherOnly",
                                "serverAuth",
                                "clientAuth",
                                "codeSigning",
                                "emailProtection",
                                "timeStamping",
                                "ocspSigning"
                              ],
                              "x-ms-enum": {
                                "name": "CertificateUsage",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "DigitalSignature",
                                    "value": "digitalSignature",
                                    "description": "This certificate can be used to add a signature to a message"
                                  },
                                  {
                                    "name": "NonRepudiation",
                                    "value": "nonRepudiation",
                                    "description": "This certificates provides a non-repudiation service that protects against false denial of a message"
                                  },
                                  {
                                    "name": "ContentCommitment",
                                    "value": "contentCommitment",
                                    "description": "A synonym for NonRepudiation used in newer x509 certificates"
                                  },
                                  {
                                    "name": "KeyEncipherment",
                                    "value": "keyEncipherment",
                                    "description": "This certificate can be used to encrypt a private or secret key"
                                  },
                                  {
                                    "name": "DataEncipherment",
                                    "value": "dataEncipherment",
                                    "description": "This certificate can be used to decrypt a private or secret key"
                                  },
                                  {
                                    "name": "KeyAgreement",
                                    "value": "keyAgreement",
                                    "description": "This certificate can be used to perform a key agreement, such as with a Diffie-Hellman key exchange"
                                  },
                                  {
                                    "name": "KeyCertSign",
                                    "value": "keyCertSign",
                                    "description": "This certificate can be used to verify a other public keys"
                                  },
                                  {
                                    "name": "CRLSign",
                                    "value": "crlSign",
                                    "description": "This certificate can be used to verify a certificate revocation list"
                                  },
                                  {
                                    "name": "EncipherOnly",
                                    "value": "encipherOnly",
                                    "description": "This certificate can be only be used to encrypt data"
                                  },
                                  {
                                    "name": "DecipherOnly",
                                    "value": "decipherOnly",
                                    "description": "This certificate can only be used to decrypt data"
                                  },
                                  {
                                    "name": "ServerAuthentication",
                                    "value": "serverAuth",
                                    "description": "This certificate can be used to authenticate a server in a TLS/SSL connection"
                                  },
                                  {
                                    "name": "ClientAuthentication",
                                    "value": "clientAuth",
                                    "description": "This certificate can be used to authenticate a client in a TLS/SSL connection"
                                  },
                                  {
                                    "name": "CodeSigning",
                                    "value": "codeSigning",
                                    "description": "This certificate can be used to authenticate a code object"
                                  },
                                  {
                                    "name": "EmailProtection",
                                    "value": "emailProtection",
                                    "description": "This certificate can be used to authenticate an email address"
                                  },
                                  {
                                    "name": "TimeStamping",
                                    "value": "timeStamping",
                                    "description": "This certificate binds the hash of an object to a time"
                                  },
                                  {
                                    "name": "OCSPSigning",
                                    "value": "ocspSigning",
                                    "description": "This certificate can be used to sign OCSP responses"
                                  }
                                ]
                              }
                            }
                          },
                          "filePaths": {
                            "type": "array",
                            "description": "List of files where this certificate was found.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "pairedKey": {
                            "description": "A matching paired private key.",
                            "type": "object",
                            "properties": {
                              "pairedKeyId": {
                                "type": "string",
                                "description": "ID of the paired key or certificate."
                              },
                              "type": {
                                "type": "string",
                                "description": "The type indicating whether the paired object is a key or certificate."
                              }
                            }
                          },
                          "isExpired": {
                            "type": "boolean",
                            "description": "Indicates if the certificate is expired."
                          },
                          "isSelfSigned": {
                            "type": "boolean",
                            "description": "Indicates if the certificate is self-signed."
                          },
                          "isWeakSignature": {
                            "type": "boolean",
                            "description": "Indicates the signature algorithm used is insecure according to NIST guidance."
                          },
                          "isShortKeySize": {
                            "type": "boolean",
                            "description": "Indicates the certificate's key size is considered too small to be secure for the key algorithm according to NIST guidance."
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/cryptoKeys": {
      "get": {
        "operationId": "CryptoKeys_ListByFirmware",
        "tags": [
          "CryptoKeys"
        ],
        "description": "Lists crypto key analysis results of a firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a CryptoKeyResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CryptoKeyResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "The object representing a firmware analysis crypto key resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "cryptoKeyId": {
                            "type": "string",
                            "description": "ID for the key result."
                          },
                          "keyType": {
                            "description": "Type of the key (public or private).",
                            "type": "string",
                            "enum": [
                              "Public",
                              "Private"
                            ],
                            "x-ms-enum": {
                              "name": "CryptoKeyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Public",
                                  "value": "Public",
                                  "description": "The key is an asymmetric public key."
                                },
                                {
                                  "name": "Private",
                                  "value": "Private",
                                  "description": "The key is an asymmetric private key."
                                }
                              ]
                            }
                          },
                          "cryptoKeySize": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Size of the key in bits."
                          },
                          "keyAlgorithm": {
                            "type": "string",
                            "description": "Key algorithm name."
                          },
                          "usage": {
                            "type": "array",
                            "description": "Functions the key can fulfill.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "filePaths": {
                            "type": "array",
                            "description": "List of files where this key was found.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "pairedKey": {
                            "description": "A matching paired key or certificate.",
                            "type": "object",
                            "properties": {
                              "pairedKeyId": {
                                "type": "string",
                                "description": "ID of the paired key or certificate."
                              },
                              "type": {
                                "type": "string",
                                "description": "The type indicating whether the paired object is a key or certificate."
                              }
                            }
                          },
                          "isShortKeySize": {
                            "type": "boolean",
                            "description": "Indicates the key size is considered too small to be secure for the algorithm according to NIST guidance."
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/cves": {
      "get": {
        "operationId": "Cves_ListByFirmware",
        "tags": [
          "Cves"
        ],
        "description": "Lists CVE analysis results of a firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a CveResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CveResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "The object representing a firmware analysis CVE result resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "cveId": {
                            "type": "string",
                            "description": "ID of the CVE result."
                          },
                          "componentId": {
                            "type": "string",
                            "description": "ID of the affected SBOM component."
                          },
                          "componentName": {
                            "type": "string",
                            "description": "Name of the affected SBOM component."
                          },
                          "componentVersion": {
                            "type": "string",
                            "description": "Version of the affected SBOM component."
                          },
                          "severity": {
                            "type": "string",
                            "description": "Severity of the CVE."
                          },
                          "cveName": {
                            "type": "string",
                            "description": "Name of the CVE."
                          },
                          "component": {
                            "description": "Legacy property for what is now componentName",
                            "type": "object",
                            "properties": {
                              "componentId": {
                                "type": "string",
                                "description": "ID of the SBOM component."
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the SBOM component."
                              },
                              "version": {
                                "type": "string",
                                "description": "Version of the SBOM component."
                              }
                            }
                          },
                          "cvssScore": {
                            "type": "string",
                            "description": "Legacy property for the effective CVE score."
                          },
                          "cvssV2Score": {
                            "type": "string",
                            "description": "Legacy property for the CVE CVSS version 2 score, if one existed."
                          },
                          "cvssV3Score": {
                            "type": "string",
                            "description": "Legacy property for the CVE CVSS version 3 score, if one existed."
                          },
                          "cvssVersion": {
                            "type": "string",
                            "description": "Legacy property for the what CVSS version score was stored in the cvssScore property"
                          },
                          "effectiveCvssScore": {
                            "type": "number",
                            "format": "float",
                            "description": "The most recent CVSS score of the CVE."
                          },
                          "effectiveCvssVersion": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The version of the effectiveCvssScore property."
                          },
                          "cvssScores": {
                            "type": "array",
                            "description": "All known CVSS scores for the CVE.",
                            "items": {
                              "type": "object",
                              "description": "Common Vulnerability Scoring System values.",
                              "properties": {
                                "version": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The version of the Common Vulnerability Scoring System (CVSS)."
                                },
                                "score": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The score of the CVE according to the CVSS specified."
                                }
                              },
                              "required": [
                                "version"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "links": {
                            "type": "array",
                            "description": "The list of reference links for the CVE.",
                            "items": {
                              "type": "object",
                              "description": "Properties of a reference link for a CVE.",
                              "properties": {
                                "href": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The destination of the reference link."
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The label of the reference link."
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "href"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "The CVE description."
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/passwordHashes": {
      "get": {
        "operationId": "PasswordHashes_ListByFirmware",
        "tags": [
          "PasswordHashes"
        ],
        "description": "Lists password hash analysis results of a firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a PasswordHashResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The PasswordHashResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "The object representing a firmware analysis password hash result resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "passwordHashId": {
                            "type": "string",
                            "description": "ID for password hash"
                          },
                          "filePath": {
                            "type": "string",
                            "description": "File path of the password hash"
                          },
                          "salt": {
                            "type": "string",
                            "description": "Salt of the password hash"
                          },
                          "hash": {
                            "type": "string",
                            "description": "Hash of the password"
                          },
                          "context": {
                            "type": "string",
                            "description": "Context of password hash"
                          },
                          "username": {
                            "type": "string",
                            "description": "User name of password hash"
                          },
                          "algorithm": {
                            "type": "string",
                            "description": "Algorithm of the password hash"
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/sbomComponents": {
      "get": {
        "operationId": "SbomComponents_ListByFirmware",
        "tags": [
          "SbomComponents"
        ],
        "description": "Lists sbom analysis results of a firmware.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SbomComponentResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SbomComponentResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "The object representing a firmware analysis SBOM component result resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "componentId": {
                            "type": "string",
                            "description": "ID for the component."
                          },
                          "componentName": {
                            "type": "string",
                            "description": "Name for the component."
                          },
                          "version": {
                            "type": "string",
                            "description": "Version for the component."
                          },
                          "license": {
                            "type": "string",
                            "description": "License for the component."
                          },
                          "filePaths": {
                            "type": "array",
                            "description": "File paths related to the component. Note, relatedFiles should be used instead of this property.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/summaries": {
      "get": {
        "operationId": "Summaries_ListByFirmware",
        "tags": [
          "Summaries"
        ],
        "description": "Lists analysis result summary names of a firmware. To fetch the full summary data, get that summary by name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SummaryResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SummaryResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "The object representing a firmware analysis summary resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "summaryType": {
                            "description": "The type of summary.",
                            "type": "string",
                            "enum": [
                              "Firmware",
                              "CommonVulnerabilitiesAndExposures",
                              "BinaryHardening",
                              "CryptoCertificate",
                              "CryptoKey"
                            ],
                            "x-ms-enum": {
                              "name": "SummaryType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Firmware",
                                  "value": "Firmware",
                                  "description": "The summary contains information about the submitted firmware"
                                },
                                {
                                  "name": "CommonVulnerabilitiesAndExposures",
                                  "value": "CommonVulnerabilitiesAndExposures",
                                  "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                                },
                                {
                                  "name": "BinaryHardening",
                                  "value": "BinaryHardening",
                                  "description": "The summary contains information about the binary hardening analysis results"
                                },
                                {
                                  "name": "CryptoCertificate",
                                  "value": "CryptoCertificate",
                                  "description": "The summary contains information about the cryptographic certificate analysis results"
                                },
                                {
                                  "name": "CryptoKey",
                                  "value": "CryptoKey",
                                  "description": "The summary contains information about the cryptographic key analysis results"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "summaryType",
                        "required": [
                          "summaryType"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/summaries/{summaryType}": {
      "get": {
        "operationId": "Summaries_Get",
        "tags": [
          "Summaries"
        ],
        "description": "Get an analysis result summary of a firmware by name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "summaryType",
            "in": "path",
            "description": "The Firmware analysis summary name describing the type of summary.",
            "required": true,
            "type": "string",
            "enum": [
              "Firmware",
              "CommonVulnerabilitiesAndExposures",
              "BinaryHardening",
              "CryptoCertificate",
              "CryptoKey"
            ],
            "x-ms-enum": {
              "name": "SummaryType",
              "modelAsString": true,
              "values": [
                {
                  "name": "Firmware",
                  "value": "Firmware",
                  "description": "The summary contains information about the submitted firmware"
                },
                {
                  "name": "CommonVulnerabilitiesAndExposures",
                  "value": "CommonVulnerabilitiesAndExposures",
                  "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                },
                {
                  "name": "BinaryHardening",
                  "value": "BinaryHardening",
                  "description": "The summary contains information about the binary hardening analysis results"
                },
                {
                  "name": "CryptoCertificate",
                  "value": "CryptoCertificate",
                  "description": "The summary contains information about the cryptographic certificate analysis results"
                },
                {
                  "name": "CryptoKey",
                  "value": "CryptoKey",
                  "description": "The summary contains information about the cryptographic key analysis results"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The object representing a firmware analysis summary resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "summaryType": {
                      "description": "The type of summary.",
                      "type": "string",
                      "enum": [
                        "Firmware",
                        "CommonVulnerabilitiesAndExposures",
                        "BinaryHardening",
                        "CryptoCertificate",
                        "CryptoKey"
                      ],
                      "x-ms-enum": {
                        "name": "SummaryType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Firmware",
                            "value": "Firmware",
                            "description": "The summary contains information about the submitted firmware"
                          },
                          {
                            "name": "CommonVulnerabilitiesAndExposures",
                            "value": "CommonVulnerabilitiesAndExposures",
                            "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                          },
                          {
                            "name": "BinaryHardening",
                            "value": "BinaryHardening",
                            "description": "The summary contains information about the binary hardening analysis results"
                          },
                          {
                            "name": "CryptoCertificate",
                            "value": "CryptoCertificate",
                            "description": "The summary contains information about the cryptographic certificate analysis results"
                          },
                          {
                            "name": "CryptoKey",
                            "value": "CryptoKey",
                            "description": "The summary contains information about the cryptographic key analysis results"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "summaryType",
                  "required": [
                    "summaryType"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/generateUploadUrl": {
      "post": {
        "operationId": "Workspaces_GenerateUploadUrl",
        "tags": [
          "Workspaces"
        ],
        "description": "Generate a URL for uploading a firmware image.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters when requesting a URL to upload firmware.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties for generating an upload URL",
              "properties": {
                "firmwareId": {
                  "type": "string",
                  "description": "A unique ID for the firmware to be uploaded."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Url data for creating or accessing a blob file.",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "SAS URL for creating or accessing a blob file.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/usageMetrics": {
      "get": {
        "operationId": "UsageMetrics_ListByWorkspace",
        "tags": [
          "UsageMetrics"
        ],
        "description": "Lists monthly usage information for a workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a UsageMetric list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The UsageMetric items on this page",
                  "items": {
                    "type": "object",
                    "description": "The object representing how many firmwares the user has uploaded to the workspace.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "monthlyFirmwareUploadCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The number of firmware analysis jobs that have been submitted in the current month.",
                            "readOnly": true
                          },
                          "totalFirmwareCount": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The total number of firmwares that are in the workspace.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Extracting",
                              "Analyzing"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The request has successfully completed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "There was an error during the request."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The request was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "The request is queued and awaiting execution"
                                },
                                {
                                  "name": "Extracting",
                                  "value": "Extracting",
                                  "description": "The Firmware is currently being extracted."
                                },
                                {
                                  "name": "Analyzing",
                                  "value": "Analyzing",
                                  "description": "Analysis is being run on the firmware"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "monthlyFirmwareUploadCount",
                          "totalFirmwareCount"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/usageMetrics/{name}": {
      "get": {
        "operationId": "UsageMetrics_Get",
        "tags": [
          "UsageMetrics"
        ],
        "description": "Gets monthly usage information for a workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The Firmware analysis summary name describing the type of summary.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The object representing how many firmwares the user has uploaded to the workspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "monthlyFirmwareUploadCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The number of firmware analysis jobs that have been submitted in the current month.",
                      "readOnly": true
                    },
                    "totalFirmwareCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The total number of firmwares that are in the workspace.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Extracting",
                        "Analyzing"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The request has successfully completed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "There was an error during the request."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The request was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "The request is queued and awaiting execution"
                          },
                          {
                            "name": "Extracting",
                            "value": "Extracting",
                            "description": "The Firmware is currently being extracted."
                          },
                          {
                            "name": "Analyzing",
                            "value": "Analyzing",
                            "description": "Analysis is being run on the firmware"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "monthlyFirmwareUploadCount",
                    "totalFirmwareCount"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.ResourceManager.CommonTypes.SkuUpdate": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "type": "string",
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "enum": [
            "Free",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          }
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      }
    },
    "BinaryHardeningFeatures": {
      "type": "object",
      "description": "Binary hardening features.",
      "properties": {
        "noExecute": {
          "type": "boolean",
          "description": "Flag indicating the binary's stack is set to NX (no-execute)."
        },
        "positionIndependentExecutable": {
          "type": "boolean",
          "description": "Flag indicating the binary was compiled to be a position independent executable."
        },
        "relocationReadOnly": {
          "type": "boolean",
          "description": "Flag indicating the binary has enabled relocation read-only protections."
        },
        "canary": {
          "type": "boolean",
          "description": "Flag indicating if the binary was compiled with stack canaries enabled."
        },
        "stripped": {
          "type": "boolean",
          "description": "Flag indicating if debug symbols have been stripped from the binary."
        }
      }
    },
    "BinaryHardeningResource": {
      "type": "object",
      "description": "The object representing a firmware analysis binary hardening result resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "binaryHardeningId": {
              "type": "string",
              "description": "ID for the binary hardening result."
            },
            "securityHardeningFeatures": {
              "description": "The security hardening features of the binary.",
              "type": "object",
              "properties": {
                "noExecute": {
                  "type": "boolean",
                  "description": "Flag indicating the binary's stack is set to NX (no-execute)."
                },
                "positionIndependentExecutable": {
                  "type": "boolean",
                  "description": "Flag indicating the binary was compiled to be a position independent executable."
                },
                "relocationReadOnly": {
                  "type": "boolean",
                  "description": "Flag indicating the binary has enabled relocation read-only protections."
                },
                "canary": {
                  "type": "boolean",
                  "description": "Flag indicating if the binary was compiled with stack canaries enabled."
                },
                "stripped": {
                  "type": "boolean",
                  "description": "Flag indicating if debug symbols have been stripped from the binary."
                }
              }
            },
            "executableArchitecture": {
              "type": "string",
              "description": "The architecture of the binary being reported on."
            },
            "filePath": {
              "type": "string",
              "description": "The path to the binary in the firmware."
            },
            "executableClass": {
              "description": "The executable class to indicate 32 or 64 bit.",
              "type": "string",
              "enum": [
                "x86",
                "x64"
              ],
              "x-ms-enum": {
                "name": "ExecutableClass",
                "modelAsString": true,
                "values": [
                  {
                    "name": "x86",
                    "value": "x86",
                    "description": "The binary is 32-bit."
                  },
                  {
                    "name": "x64",
                    "value": "x64",
                    "description": "The binary is 64-bit."
                  }
                ]
              }
            },
            "runpath": {
              "type": "string",
              "description": "The runpath property of the uploaded binary, which is a method of specifying additional paths to load objects at runtime."
            },
            "rpath": {
              "type": "string",
              "description": "The rpath property of the uploaded binary, which is a deprecated method of specifying additional paths to load objects at runtime."
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "BinaryHardeningResourceListResult": {
      "type": "object",
      "description": "The response of a BinaryHardeningResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BinaryHardeningResource items on this page",
          "items": {
            "type": "object",
            "description": "The object representing a firmware analysis binary hardening result resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "binaryHardeningId": {
                    "type": "string",
                    "description": "ID for the binary hardening result."
                  },
                  "securityHardeningFeatures": {
                    "description": "The security hardening features of the binary.",
                    "type": "object",
                    "properties": {
                      "noExecute": {
                        "type": "boolean",
                        "description": "Flag indicating the binary's stack is set to NX (no-execute)."
                      },
                      "positionIndependentExecutable": {
                        "type": "boolean",
                        "description": "Flag indicating the binary was compiled to be a position independent executable."
                      },
                      "relocationReadOnly": {
                        "type": "boolean",
                        "description": "Flag indicating the binary has enabled relocation read-only protections."
                      },
                      "canary": {
                        "type": "boolean",
                        "description": "Flag indicating if the binary was compiled with stack canaries enabled."
                      },
                      "stripped": {
                        "type": "boolean",
                        "description": "Flag indicating if debug symbols have been stripped from the binary."
                      }
                    }
                  },
                  "executableArchitecture": {
                    "type": "string",
                    "description": "The architecture of the binary being reported on."
                  },
                  "filePath": {
                    "type": "string",
                    "description": "The path to the binary in the firmware."
                  },
                  "executableClass": {
                    "description": "The executable class to indicate 32 or 64 bit.",
                    "type": "string",
                    "enum": [
                      "x86",
                      "x64"
                    ],
                    "x-ms-enum": {
                      "name": "ExecutableClass",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "x86",
                          "value": "x86",
                          "description": "The binary is 32-bit."
                        },
                        {
                          "name": "x64",
                          "value": "x64",
                          "description": "The binary is 64-bit."
                        }
                      ]
                    }
                  },
                  "runpath": {
                    "type": "string",
                    "description": "The runpath property of the uploaded binary, which is a method of specifying additional paths to load objects at runtime."
                  },
                  "rpath": {
                    "type": "string",
                    "description": "The rpath property of the uploaded binary, which is a deprecated method of specifying additional paths to load objects at runtime."
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BinaryHardeningResult": {
      "type": "object",
      "description": "Binary hardening of a firmware.",
      "properties": {
        "binaryHardeningId": {
          "type": "string",
          "description": "ID for the binary hardening result."
        },
        "securityHardeningFeatures": {
          "description": "The security hardening features of the binary.",
          "type": "object",
          "properties": {
            "noExecute": {
              "type": "boolean",
              "description": "Flag indicating the binary's stack is set to NX (no-execute)."
            },
            "positionIndependentExecutable": {
              "type": "boolean",
              "description": "Flag indicating the binary was compiled to be a position independent executable."
            },
            "relocationReadOnly": {
              "type": "boolean",
              "description": "Flag indicating the binary has enabled relocation read-only protections."
            },
            "canary": {
              "type": "boolean",
              "description": "Flag indicating if the binary was compiled with stack canaries enabled."
            },
            "stripped": {
              "type": "boolean",
              "description": "Flag indicating if debug symbols have been stripped from the binary."
            }
          }
        },
        "executableArchitecture": {
          "type": "string",
          "description": "The architecture of the binary being reported on."
        },
        "filePath": {
          "type": "string",
          "description": "The path to the binary in the firmware."
        },
        "executableClass": {
          "description": "The executable class to indicate 32 or 64 bit.",
          "type": "string",
          "enum": [
            "x86",
            "x64"
          ],
          "x-ms-enum": {
            "name": "ExecutableClass",
            "modelAsString": true,
            "values": [
              {
                "name": "x86",
                "value": "x86",
                "description": "The binary is 32-bit."
              },
              {
                "name": "x64",
                "value": "x64",
                "description": "The binary is 64-bit."
              }
            ]
          }
        },
        "runpath": {
          "type": "string",
          "description": "The runpath property of the uploaded binary, which is a method of specifying additional paths to load objects at runtime."
        },
        "rpath": {
          "type": "string",
          "description": "The rpath property of the uploaded binary, which is a deprecated method of specifying additional paths to load objects at runtime."
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      }
    },
    "BinaryHardeningSummaryResource": {
      "type": "object",
      "description": "Properties for a binary hardening analysis summary.",
      "properties": {
        "totalFiles": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of binaries that were analyzed"
        },
        "notExecutableStackCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that were found to have a nonexecutable stack"
        },
        "positionIndependentExecutableCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that were compiled to be a position independent executable"
        },
        "relocationReadOnlyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that have enabled relocation read-only protections"
        },
        "stackCanaryCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that have stack canaries enabled"
        },
        "strippedBinaryCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that have debug symbols stripped"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Properties of an analysis summary.",
          "properties": {
            "summaryType": {
              "description": "The type of summary.",
              "type": "string",
              "enum": [
                "Firmware",
                "CommonVulnerabilitiesAndExposures",
                "BinaryHardening",
                "CryptoCertificate",
                "CryptoKey"
              ],
              "x-ms-enum": {
                "name": "SummaryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Firmware",
                    "value": "Firmware",
                    "description": "The summary contains information about the submitted firmware"
                  },
                  {
                    "name": "CommonVulnerabilitiesAndExposures",
                    "value": "CommonVulnerabilitiesAndExposures",
                    "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                  },
                  {
                    "name": "BinaryHardening",
                    "value": "BinaryHardening",
                    "description": "The summary contains information about the binary hardening analysis results"
                  },
                  {
                    "name": "CryptoCertificate",
                    "value": "CryptoCertificate",
                    "description": "The summary contains information about the cryptographic certificate analysis results"
                  },
                  {
                    "name": "CryptoKey",
                    "value": "CryptoKey",
                    "description": "The summary contains information about the cryptographic key analysis results"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          },
          "discriminator": "summaryType",
          "required": [
            "summaryType"
          ]
        }
      ],
      "x-ms-discriminator-value": "BinaryHardening"
    },
    "CertificateUsage": {
      "type": "string",
      "description": "Activities for which the cryptographic certificate can be used.",
      "enum": [
        "digitalSignature",
        "nonRepudiation",
        "contentCommitment",
        "keyEncipherment",
        "dataEncipherment",
        "keyAgreement",
        "keyCertSign",
        "crlSign",
        "encipherOnly",
        "decipherOnly",
        "serverAuth",
        "clientAuth",
        "codeSigning",
        "emailProtection",
        "timeStamping",
        "ocspSigning"
      ],
      "x-ms-enum": {
        "name": "CertificateUsage",
        "modelAsString": true,
        "values": [
          {
            "name": "DigitalSignature",
            "value": "digitalSignature",
            "description": "This certificate can be used to add a signature to a message"
          },
          {
            "name": "NonRepudiation",
            "value": "nonRepudiation",
            "description": "This certificates provides a non-repudiation service that protects against false denial of a message"
          },
          {
            "name": "ContentCommitment",
            "value": "contentCommitment",
            "description": "A synonym for NonRepudiation used in newer x509 certificates"
          },
          {
            "name": "KeyEncipherment",
            "value": "keyEncipherment",
            "description": "This certificate can be used to encrypt a private or secret key"
          },
          {
            "name": "DataEncipherment",
            "value": "dataEncipherment",
            "description": "This certificate can be used to decrypt a private or secret key"
          },
          {
            "name": "KeyAgreement",
            "value": "keyAgreement",
            "description": "This certificate can be used to perform a key agreement, such as with a Diffie-Hellman key exchange"
          },
          {
            "name": "KeyCertSign",
            "value": "keyCertSign",
            "description": "This certificate can be used to verify a other public keys"
          },
          {
            "name": "CRLSign",
            "value": "crlSign",
            "description": "This certificate can be used to verify a certificate revocation list"
          },
          {
            "name": "EncipherOnly",
            "value": "encipherOnly",
            "description": "This certificate can be only be used to encrypt data"
          },
          {
            "name": "DecipherOnly",
            "value": "decipherOnly",
            "description": "This certificate can only be used to decrypt data"
          },
          {
            "name": "ServerAuthentication",
            "value": "serverAuth",
            "description": "This certificate can be used to authenticate a server in a TLS/SSL connection"
          },
          {
            "name": "ClientAuthentication",
            "value": "clientAuth",
            "description": "This certificate can be used to authenticate a client in a TLS/SSL connection"
          },
          {
            "name": "CodeSigning",
            "value": "codeSigning",
            "description": "This certificate can be used to authenticate a code object"
          },
          {
            "name": "EmailProtection",
            "value": "emailProtection",
            "description": "This certificate can be used to authenticate an email address"
          },
          {
            "name": "TimeStamping",
            "value": "timeStamping",
            "description": "This certificate binds the hash of an object to a time"
          },
          {
            "name": "OCSPSigning",
            "value": "ocspSigning",
            "description": "This certificate can be used to sign OCSP responses"
          }
        ]
      }
    },
    "CryptoCertificate": {
      "type": "object",
      "description": "Crypto certificate properties",
      "properties": {
        "cryptoCertId": {
          "type": "string",
          "description": "ID for the certificate result."
        },
        "certificateName": {
          "type": "string",
          "description": "Name of the certificate."
        },
        "subject": {
          "description": "Subject information of the certificate.",
          "type": "object",
          "properties": {
            "commonName": {
              "type": "string",
              "description": "Common name of the certificate entity."
            },
            "organization": {
              "type": "string",
              "description": "Organization of the certificate entity."
            },
            "organizationalUnit": {
              "type": "string",
              "description": "The organizational unit of the certificate entity."
            },
            "state": {
              "type": "string",
              "description": "Geographical state or province of the certificate entity."
            },
            "country": {
              "type": "string",
              "description": "Country code of the certificate entity."
            }
          }
        },
        "issuer": {
          "description": "Issuer information of the certificate.",
          "type": "object",
          "properties": {
            "commonName": {
              "type": "string",
              "description": "Common name of the certificate entity."
            },
            "organization": {
              "type": "string",
              "description": "Organization of the certificate entity."
            },
            "organizationalUnit": {
              "type": "string",
              "description": "The organizational unit of the certificate entity."
            },
            "state": {
              "type": "string",
              "description": "Geographical state or province of the certificate entity."
            },
            "country": {
              "type": "string",
              "description": "Country code of the certificate entity."
            }
          }
        },
        "issuedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Issue date for the certificate."
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date for the certificate."
        },
        "certificateRole": {
          "type": "string",
          "description": "Role of the certificate (Root CA, etc)"
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "The signature algorithm used in the certificate."
        },
        "certificateKeySize": {
          "type": "integer",
          "format": "int64",
          "description": "Size of the certificate's key in bits"
        },
        "certificateKeyAlgorithm": {
          "type": "string",
          "description": "Key algorithm used in the certificate."
        },
        "encoding": {
          "type": "string",
          "description": "Encoding used for the certificate."
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial number of the certificate."
        },
        "fingerprint": {
          "type": "string",
          "description": "Fingerprint of the certificate."
        },
        "certificateUsage": {
          "type": "array",
          "description": "List of functions the certificate can fulfill.",
          "items": {
            "type": "string",
            "description": "Activities for which the cryptographic certificate can be used.",
            "enum": [
              "digitalSignature",
              "nonRepudiation",
              "contentCommitment",
              "keyEncipherment",
              "dataEncipherment",
              "keyAgreement",
              "keyCertSign",
              "crlSign",
              "encipherOnly",
              "decipherOnly",
              "serverAuth",
              "clientAuth",
              "codeSigning",
              "emailProtection",
              "timeStamping",
              "ocspSigning"
            ],
            "x-ms-enum": {
              "name": "CertificateUsage",
              "modelAsString": true,
              "values": [
                {
                  "name": "DigitalSignature",
                  "value": "digitalSignature",
                  "description": "This certificate can be used to add a signature to a message"
                },
                {
                  "name": "NonRepudiation",
                  "value": "nonRepudiation",
                  "description": "This certificates provides a non-repudiation service that protects against false denial of a message"
                },
                {
                  "name": "ContentCommitment",
                  "value": "contentCommitment",
                  "description": "A synonym for NonRepudiation used in newer x509 certificates"
                },
                {
                  "name": "KeyEncipherment",
                  "value": "keyEncipherment",
                  "description": "This certificate can be used to encrypt a private or secret key"
                },
                {
                  "name": "DataEncipherment",
                  "value": "dataEncipherment",
                  "description": "This certificate can be used to decrypt a private or secret key"
                },
                {
                  "name": "KeyAgreement",
                  "value": "keyAgreement",
                  "description": "This certificate can be used to perform a key agreement, such as with a Diffie-Hellman key exchange"
                },
                {
                  "name": "KeyCertSign",
                  "value": "keyCertSign",
                  "description": "This certificate can be used to verify a other public keys"
                },
                {
                  "name": "CRLSign",
                  "value": "crlSign",
                  "description": "This certificate can be used to verify a certificate revocation list"
                },
                {
                  "name": "EncipherOnly",
                  "value": "encipherOnly",
                  "description": "This certificate can be only be used to encrypt data"
                },
                {
                  "name": "DecipherOnly",
                  "value": "decipherOnly",
                  "description": "This certificate can only be used to decrypt data"
                },
                {
                  "name": "ServerAuthentication",
                  "value": "serverAuth",
                  "description": "This certificate can be used to authenticate a server in a TLS/SSL connection"
                },
                {
                  "name": "ClientAuthentication",
                  "value": "clientAuth",
                  "description": "This certificate can be used to authenticate a client in a TLS/SSL connection"
                },
                {
                  "name": "CodeSigning",
                  "value": "codeSigning",
                  "description": "This certificate can be used to authenticate a code object"
                },
                {
                  "name": "EmailProtection",
                  "value": "emailProtection",
                  "description": "This certificate can be used to authenticate an email address"
                },
                {
                  "name": "TimeStamping",
                  "value": "timeStamping",
                  "description": "This certificate binds the hash of an object to a time"
                },
                {
                  "name": "OCSPSigning",
                  "value": "ocspSigning",
                  "description": "This certificate can be used to sign OCSP responses"
                }
              ]
            }
          }
        },
        "filePaths": {
          "type": "array",
          "description": "List of files where this certificate was found.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "pairedKey": {
          "description": "A matching paired private key.",
          "type": "object",
          "properties": {
            "pairedKeyId": {
              "type": "string",
              "description": "ID of the paired key or certificate."
            },
            "type": {
              "type": "string",
              "description": "The type indicating whether the paired object is a key or certificate."
            }
          }
        },
        "isExpired": {
          "type": "boolean",
          "description": "Indicates if the certificate is expired."
        },
        "isSelfSigned": {
          "type": "boolean",
          "description": "Indicates if the certificate is self-signed."
        },
        "isWeakSignature": {
          "type": "boolean",
          "description": "Indicates the signature algorithm used is insecure according to NIST guidance."
        },
        "isShortKeySize": {
          "type": "boolean",
          "description": "Indicates the certificate's key size is considered too small to be secure for the key algorithm according to NIST guidance."
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      }
    },
    "CryptoCertificateEntity": {
      "type": "object",
      "description": "Information on an entity (distinguished name) in a cryptographic certificate.",
      "properties": {
        "commonName": {
          "type": "string",
          "description": "Common name of the certificate entity."
        },
        "organization": {
          "type": "string",
          "description": "Organization of the certificate entity."
        },
        "organizationalUnit": {
          "type": "string",
          "description": "The organizational unit of the certificate entity."
        },
        "state": {
          "type": "string",
          "description": "Geographical state or province of the certificate entity."
        },
        "country": {
          "type": "string",
          "description": "Country code of the certificate entity."
        }
      }
    },
    "CryptoCertificateResource": {
      "type": "object",
      "description": "The object representing a firmware analysis crypto certificate resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "cryptoCertId": {
              "type": "string",
              "description": "ID for the certificate result."
            },
            "certificateName": {
              "type": "string",
              "description": "Name of the certificate."
            },
            "subject": {
              "description": "Subject information of the certificate.",
              "type": "object",
              "properties": {
                "commonName": {
                  "type": "string",
                  "description": "Common name of the certificate entity."
                },
                "organization": {
                  "type": "string",
                  "description": "Organization of the certificate entity."
                },
                "organizationalUnit": {
                  "type": "string",
                  "description": "The organizational unit of the certificate entity."
                },
                "state": {
                  "type": "string",
                  "description": "Geographical state or province of the certificate entity."
                },
                "country": {
                  "type": "string",
                  "description": "Country code of the certificate entity."
                }
              }
            },
            "issuer": {
              "description": "Issuer information of the certificate.",
              "type": "object",
              "properties": {
                "commonName": {
                  "type": "string",
                  "description": "Common name of the certificate entity."
                },
                "organization": {
                  "type": "string",
                  "description": "Organization of the certificate entity."
                },
                "organizationalUnit": {
                  "type": "string",
                  "description": "The organizational unit of the certificate entity."
                },
                "state": {
                  "type": "string",
                  "description": "Geographical state or province of the certificate entity."
                },
                "country": {
                  "type": "string",
                  "description": "Country code of the certificate entity."
                }
              }
            },
            "issuedDate": {
              "type": "string",
              "format": "date-time",
              "description": "Issue date for the certificate."
            },
            "expirationDate": {
              "type": "string",
              "format": "date-time",
              "description": "Expiration date for the certificate."
            },
            "certificateRole": {
              "type": "string",
              "description": "Role of the certificate (Root CA, etc)"
            },
            "signatureAlgorithm": {
              "type": "string",
              "description": "The signature algorithm used in the certificate."
            },
            "certificateKeySize": {
              "type": "integer",
              "format": "int64",
              "description": "Size of the certificate's key in bits"
            },
            "certificateKeyAlgorithm": {
              "type": "string",
              "description": "Key algorithm used in the certificate."
            },
            "encoding": {
              "type": "string",
              "description": "Encoding used for the certificate."
            },
            "serialNumber": {
              "type": "string",
              "description": "Serial number of the certificate."
            },
            "fingerprint": {
              "type": "string",
              "description": "Fingerprint of the certificate."
            },
            "certificateUsage": {
              "type": "array",
              "description": "List of functions the certificate can fulfill.",
              "items": {
                "type": "string",
                "description": "Activities for which the cryptographic certificate can be used.",
                "enum": [
                  "digitalSignature",
                  "nonRepudiation",
                  "contentCommitment",
                  "keyEncipherment",
                  "dataEncipherment",
                  "keyAgreement",
                  "keyCertSign",
                  "crlSign",
                  "encipherOnly",
                  "decipherOnly",
                  "serverAuth",
                  "clientAuth",
                  "codeSigning",
                  "emailProtection",
                  "timeStamping",
                  "ocspSigning"
                ],
                "x-ms-enum": {
                  "name": "CertificateUsage",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "DigitalSignature",
                      "value": "digitalSignature",
                      "description": "This certificate can be used to add a signature to a message"
                    },
                    {
                      "name": "NonRepudiation",
                      "value": "nonRepudiation",
                      "description": "This certificates provides a non-repudiation service that protects against false denial of a message"
                    },
                    {
                      "name": "ContentCommitment",
                      "value": "contentCommitment",
                      "description": "A synonym for NonRepudiation used in newer x509 certificates"
                    },
                    {
                      "name": "KeyEncipherment",
                      "value": "keyEncipherment",
                      "description": "This certificate can be used to encrypt a private or secret key"
                    },
                    {
                      "name": "DataEncipherment",
                      "value": "dataEncipherment",
                      "description": "This certificate can be used to decrypt a private or secret key"
                    },
                    {
                      "name": "KeyAgreement",
                      "value": "keyAgreement",
                      "description": "This certificate can be used to perform a key agreement, such as with a Diffie-Hellman key exchange"
                    },
                    {
                      "name": "KeyCertSign",
                      "value": "keyCertSign",
                      "description": "This certificate can be used to verify a other public keys"
                    },
                    {
                      "name": "CRLSign",
                      "value": "crlSign",
                      "description": "This certificate can be used to verify a certificate revocation list"
                    },
                    {
                      "name": "EncipherOnly",
                      "value": "encipherOnly",
                      "description": "This certificate can be only be used to encrypt data"
                    },
                    {
                      "name": "DecipherOnly",
                      "value": "decipherOnly",
                      "description": "This certificate can only be used to decrypt data"
                    },
                    {
                      "name": "ServerAuthentication",
                      "value": "serverAuth",
                      "description": "This certificate can be used to authenticate a server in a TLS/SSL connection"
                    },
                    {
                      "name": "ClientAuthentication",
                      "value": "clientAuth",
                      "description": "This certificate can be used to authenticate a client in a TLS/SSL connection"
                    },
                    {
                      "name": "CodeSigning",
                      "value": "codeSigning",
                      "description": "This certificate can be used to authenticate a code object"
                    },
                    {
                      "name": "EmailProtection",
                      "value": "emailProtection",
                      "description": "This certificate can be used to authenticate an email address"
                    },
                    {
                      "name": "TimeStamping",
                      "value": "timeStamping",
                      "description": "This certificate binds the hash of an object to a time"
                    },
                    {
                      "name": "OCSPSigning",
                      "value": "ocspSigning",
                      "description": "This certificate can be used to sign OCSP responses"
                    }
                  ]
                }
              }
            },
            "filePaths": {
              "type": "array",
              "description": "List of files where this certificate was found.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "pairedKey": {
              "description": "A matching paired private key.",
              "type": "object",
              "properties": {
                "pairedKeyId": {
                  "type": "string",
                  "description": "ID of the paired key or certificate."
                },
                "type": {
                  "type": "string",
                  "description": "The type indicating whether the paired object is a key or certificate."
                }
              }
            },
            "isExpired": {
              "type": "boolean",
              "description": "Indicates if the certificate is expired."
            },
            "isSelfSigned": {
              "type": "boolean",
              "description": "Indicates if the certificate is self-signed."
            },
            "isWeakSignature": {
              "type": "boolean",
              "description": "Indicates the signature algorithm used is insecure according to NIST guidance."
            },
            "isShortKeySize": {
              "type": "boolean",
              "description": "Indicates the certificate's key size is considered too small to be secure for the key algorithm according to NIST guidance."
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "CryptoCertificateResourceListResult": {
      "type": "object",
      "description": "The response of a CryptoCertificateResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CryptoCertificateResource items on this page",
          "items": {
            "type": "object",
            "description": "The object representing a firmware analysis crypto certificate resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "cryptoCertId": {
                    "type": "string",
                    "description": "ID for the certificate result."
                  },
                  "certificateName": {
                    "type": "string",
                    "description": "Name of the certificate."
                  },
                  "subject": {
                    "description": "Subject information of the certificate.",
                    "type": "object",
                    "properties": {
                      "commonName": {
                        "type": "string",
                        "description": "Common name of the certificate entity."
                      },
                      "organization": {
                        "type": "string",
                        "description": "Organization of the certificate entity."
                      },
                      "organizationalUnit": {
                        "type": "string",
                        "description": "The organizational unit of the certificate entity."
                      },
                      "state": {
                        "type": "string",
                        "description": "Geographical state or province of the certificate entity."
                      },
                      "country": {
                        "type": "string",
                        "description": "Country code of the certificate entity."
                      }
                    }
                  },
                  "issuer": {
                    "description": "Issuer information of the certificate.",
                    "type": "object",
                    "properties": {
                      "commonName": {
                        "type": "string",
                        "description": "Common name of the certificate entity."
                      },
                      "organization": {
                        "type": "string",
                        "description": "Organization of the certificate entity."
                      },
                      "organizationalUnit": {
                        "type": "string",
                        "description": "The organizational unit of the certificate entity."
                      },
                      "state": {
                        "type": "string",
                        "description": "Geographical state or province of the certificate entity."
                      },
                      "country": {
                        "type": "string",
                        "description": "Country code of the certificate entity."
                      }
                    }
                  },
                  "issuedDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Issue date for the certificate."
                  },
                  "expirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiration date for the certificate."
                  },
                  "certificateRole": {
                    "type": "string",
                    "description": "Role of the certificate (Root CA, etc)"
                  },
                  "signatureAlgorithm": {
                    "type": "string",
                    "description": "The signature algorithm used in the certificate."
                  },
                  "certificateKeySize": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Size of the certificate's key in bits"
                  },
                  "certificateKeyAlgorithm": {
                    "type": "string",
                    "description": "Key algorithm used in the certificate."
                  },
                  "encoding": {
                    "type": "string",
                    "description": "Encoding used for the certificate."
                  },
                  "serialNumber": {
                    "type": "string",
                    "description": "Serial number of the certificate."
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Fingerprint of the certificate."
                  },
                  "certificateUsage": {
                    "type": "array",
                    "description": "List of functions the certificate can fulfill.",
                    "items": {
                      "type": "string",
                      "description": "Activities for which the cryptographic certificate can be used.",
                      "enum": [
                        "digitalSignature",
                        "nonRepudiation",
                        "contentCommitment",
                        "keyEncipherment",
                        "dataEncipherment",
                        "keyAgreement",
                        "keyCertSign",
                        "crlSign",
                        "encipherOnly",
                        "decipherOnly",
                        "serverAuth",
                        "clientAuth",
                        "codeSigning",
                        "emailProtection",
                        "timeStamping",
                        "ocspSigning"
                      ],
                      "x-ms-enum": {
                        "name": "CertificateUsage",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DigitalSignature",
                            "value": "digitalSignature",
                            "description": "This certificate can be used to add a signature to a message"
                          },
                          {
                            "name": "NonRepudiation",
                            "value": "nonRepudiation",
                            "description": "This certificates provides a non-repudiation service that protects against false denial of a message"
                          },
                          {
                            "name": "ContentCommitment",
                            "value": "contentCommitment",
                            "description": "A synonym for NonRepudiation used in newer x509 certificates"
                          },
                          {
                            "name": "KeyEncipherment",
                            "value": "keyEncipherment",
                            "description": "This certificate can be used to encrypt a private or secret key"
                          },
                          {
                            "name": "DataEncipherment",
                            "value": "dataEncipherment",
                            "description": "This certificate can be used to decrypt a private or secret key"
                          },
                          {
                            "name": "KeyAgreement",
                            "value": "keyAgreement",
                            "description": "This certificate can be used to perform a key agreement, such as with a Diffie-Hellman key exchange"
                          },
                          {
                            "name": "KeyCertSign",
                            "value": "keyCertSign",
                            "description": "This certificate can be used to verify a other public keys"
                          },
                          {
                            "name": "CRLSign",
                            "value": "crlSign",
                            "description": "This certificate can be used to verify a certificate revocation list"
                          },
                          {
                            "name": "EncipherOnly",
                            "value": "encipherOnly",
                            "description": "This certificate can be only be used to encrypt data"
                          },
                          {
                            "name": "DecipherOnly",
                            "value": "decipherOnly",
                            "description": "This certificate can only be used to decrypt data"
                          },
                          {
                            "name": "ServerAuthentication",
                            "value": "serverAuth",
                            "description": "This certificate can be used to authenticate a server in a TLS/SSL connection"
                          },
                          {
                            "name": "ClientAuthentication",
                            "value": "clientAuth",
                            "description": "This certificate can be used to authenticate a client in a TLS/SSL connection"
                          },
                          {
                            "name": "CodeSigning",
                            "value": "codeSigning",
                            "description": "This certificate can be used to authenticate a code object"
                          },
                          {
                            "name": "EmailProtection",
                            "value": "emailProtection",
                            "description": "This certificate can be used to authenticate an email address"
                          },
                          {
                            "name": "TimeStamping",
                            "value": "timeStamping",
                            "description": "This certificate binds the hash of an object to a time"
                          },
                          {
                            "name": "OCSPSigning",
                            "value": "ocspSigning",
                            "description": "This certificate can be used to sign OCSP responses"
                          }
                        ]
                      }
                    }
                  },
                  "filePaths": {
                    "type": "array",
                    "description": "List of files where this certificate was found.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "pairedKey": {
                    "description": "A matching paired private key.",
                    "type": "object",
                    "properties": {
                      "pairedKeyId": {
                        "type": "string",
                        "description": "ID of the paired key or certificate."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type indicating whether the paired object is a key or certificate."
                      }
                    }
                  },
                  "isExpired": {
                    "type": "boolean",
                    "description": "Indicates if the certificate is expired."
                  },
                  "isSelfSigned": {
                    "type": "boolean",
                    "description": "Indicates if the certificate is self-signed."
                  },
                  "isWeakSignature": {
                    "type": "boolean",
                    "description": "Indicates the signature algorithm used is insecure according to NIST guidance."
                  },
                  "isShortKeySize": {
                    "type": "boolean",
                    "description": "Indicates the certificate's key size is considered too small to be secure for the key algorithm according to NIST guidance."
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CryptoCertificateSummaryResource": {
      "type": "object",
      "description": "Properties for cryptographic certificate summary.",
      "properties": {
        "totalCertificateCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of certificates found."
        },
        "pairedKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of paired private keys found for the certificates."
        },
        "expiredCertificateCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of expired certificates found."
        },
        "expiringSoonCertificateCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of nearly expired certificates found."
        },
        "weakSignatureCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of certificates found using a weak signature algorithm."
        },
        "selfSignedCertificateCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of certificates found that are self-signed."
        },
        "shortKeySizeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of certificates found that have an insecure key size for the key algorithm."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Properties of an analysis summary.",
          "properties": {
            "summaryType": {
              "description": "The type of summary.",
              "type": "string",
              "enum": [
                "Firmware",
                "CommonVulnerabilitiesAndExposures",
                "BinaryHardening",
                "CryptoCertificate",
                "CryptoKey"
              ],
              "x-ms-enum": {
                "name": "SummaryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Firmware",
                    "value": "Firmware",
                    "description": "The summary contains information about the submitted firmware"
                  },
                  {
                    "name": "CommonVulnerabilitiesAndExposures",
                    "value": "CommonVulnerabilitiesAndExposures",
                    "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                  },
                  {
                    "name": "BinaryHardening",
                    "value": "BinaryHardening",
                    "description": "The summary contains information about the binary hardening analysis results"
                  },
                  {
                    "name": "CryptoCertificate",
                    "value": "CryptoCertificate",
                    "description": "The summary contains information about the cryptographic certificate analysis results"
                  },
                  {
                    "name": "CryptoKey",
                    "value": "CryptoKey",
                    "description": "The summary contains information about the cryptographic key analysis results"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          },
          "discriminator": "summaryType",
          "required": [
            "summaryType"
          ]
        }
      ],
      "x-ms-discriminator-value": "CryptoCertificate"
    },
    "CryptoKey": {
      "type": "object",
      "description": "Crypto key properties",
      "properties": {
        "cryptoKeyId": {
          "type": "string",
          "description": "ID for the key result."
        },
        "keyType": {
          "description": "Type of the key (public or private).",
          "type": "string",
          "enum": [
            "Public",
            "Private"
          ],
          "x-ms-enum": {
            "name": "CryptoKeyType",
            "modelAsString": true,
            "values": [
              {
                "name": "Public",
                "value": "Public",
                "description": "The key is an asymmetric public key."
              },
              {
                "name": "Private",
                "value": "Private",
                "description": "The key is an asymmetric private key."
              }
            ]
          }
        },
        "cryptoKeySize": {
          "type": "integer",
          "format": "int64",
          "description": "Size of the key in bits."
        },
        "keyAlgorithm": {
          "type": "string",
          "description": "Key algorithm name."
        },
        "usage": {
          "type": "array",
          "description": "Functions the key can fulfill.",
          "items": {
            "type": "string"
          }
        },
        "filePaths": {
          "type": "array",
          "description": "List of files where this key was found.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "pairedKey": {
          "description": "A matching paired key or certificate.",
          "type": "object",
          "properties": {
            "pairedKeyId": {
              "type": "string",
              "description": "ID of the paired key or certificate."
            },
            "type": {
              "type": "string",
              "description": "The type indicating whether the paired object is a key or certificate."
            }
          }
        },
        "isShortKeySize": {
          "type": "boolean",
          "description": "Indicates the key size is considered too small to be secure for the algorithm according to NIST guidance."
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      }
    },
    "CryptoKeyResource": {
      "type": "object",
      "description": "The object representing a firmware analysis crypto key resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "cryptoKeyId": {
              "type": "string",
              "description": "ID for the key result."
            },
            "keyType": {
              "description": "Type of the key (public or private).",
              "type": "string",
              "enum": [
                "Public",
                "Private"
              ],
              "x-ms-enum": {
                "name": "CryptoKeyType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Public",
                    "value": "Public",
                    "description": "The key is an asymmetric public key."
                  },
                  {
                    "name": "Private",
                    "value": "Private",
                    "description": "The key is an asymmetric private key."
                  }
                ]
              }
            },
            "cryptoKeySize": {
              "type": "integer",
              "format": "int64",
              "description": "Size of the key in bits."
            },
            "keyAlgorithm": {
              "type": "string",
              "description": "Key algorithm name."
            },
            "usage": {
              "type": "array",
              "description": "Functions the key can fulfill.",
              "items": {
                "type": "string"
              }
            },
            "filePaths": {
              "type": "array",
              "description": "List of files where this key was found.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "pairedKey": {
              "description": "A matching paired key or certificate.",
              "type": "object",
              "properties": {
                "pairedKeyId": {
                  "type": "string",
                  "description": "ID of the paired key or certificate."
                },
                "type": {
                  "type": "string",
                  "description": "The type indicating whether the paired object is a key or certificate."
                }
              }
            },
            "isShortKeySize": {
              "type": "boolean",
              "description": "Indicates the key size is considered too small to be secure for the algorithm according to NIST guidance."
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "CryptoKeyResourceListResult": {
      "type": "object",
      "description": "The response of a CryptoKeyResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CryptoKeyResource items on this page",
          "items": {
            "type": "object",
            "description": "The object representing a firmware analysis crypto key resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "cryptoKeyId": {
                    "type": "string",
                    "description": "ID for the key result."
                  },
                  "keyType": {
                    "description": "Type of the key (public or private).",
                    "type": "string",
                    "enum": [
                      "Public",
                      "Private"
                    ],
                    "x-ms-enum": {
                      "name": "CryptoKeyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Public",
                          "value": "Public",
                          "description": "The key is an asymmetric public key."
                        },
                        {
                          "name": "Private",
                          "value": "Private",
                          "description": "The key is an asymmetric private key."
                        }
                      ]
                    }
                  },
                  "cryptoKeySize": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Size of the key in bits."
                  },
                  "keyAlgorithm": {
                    "type": "string",
                    "description": "Key algorithm name."
                  },
                  "usage": {
                    "type": "array",
                    "description": "Functions the key can fulfill.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "filePaths": {
                    "type": "array",
                    "description": "List of files where this key was found.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "pairedKey": {
                    "description": "A matching paired key or certificate.",
                    "type": "object",
                    "properties": {
                      "pairedKeyId": {
                        "type": "string",
                        "description": "ID of the paired key or certificate."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type indicating whether the paired object is a key or certificate."
                      }
                    }
                  },
                  "isShortKeySize": {
                    "type": "boolean",
                    "description": "Indicates the key size is considered too small to be secure for the algorithm according to NIST guidance."
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CryptoKeySummaryResource": {
      "type": "object",
      "description": "Properties for cryptographic key summary.",
      "properties": {
        "totalKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of cryptographic keys found."
        },
        "publicKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of (non-certificate) public keys found."
        },
        "privateKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of private keys found."
        },
        "pairedKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of keys found that have a matching paired key or certificate."
        },
        "shortKeySizeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of keys found that have an insecure key size for the algorithm."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Properties of an analysis summary.",
          "properties": {
            "summaryType": {
              "description": "The type of summary.",
              "type": "string",
              "enum": [
                "Firmware",
                "CommonVulnerabilitiesAndExposures",
                "BinaryHardening",
                "CryptoCertificate",
                "CryptoKey"
              ],
              "x-ms-enum": {
                "name": "SummaryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Firmware",
                    "value": "Firmware",
                    "description": "The summary contains information about the submitted firmware"
                  },
                  {
                    "name": "CommonVulnerabilitiesAndExposures",
                    "value": "CommonVulnerabilitiesAndExposures",
                    "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                  },
                  {
                    "name": "BinaryHardening",
                    "value": "BinaryHardening",
                    "description": "The summary contains information about the binary hardening analysis results"
                  },
                  {
                    "name": "CryptoCertificate",
                    "value": "CryptoCertificate",
                    "description": "The summary contains information about the cryptographic certificate analysis results"
                  },
                  {
                    "name": "CryptoKey",
                    "value": "CryptoKey",
                    "description": "The summary contains information about the cryptographic key analysis results"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          },
          "discriminator": "summaryType",
          "required": [
            "summaryType"
          ]
        }
      ],
      "x-ms-discriminator-value": "CryptoKey"
    },
    "CryptoKeyType": {
      "type": "string",
      "description": "Different types of cryptographic keys.",
      "enum": [
        "Public",
        "Private"
      ],
      "x-ms-enum": {
        "name": "CryptoKeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Public",
            "value": "Public",
            "description": "The key is an asymmetric public key."
          },
          {
            "name": "Private",
            "value": "Private",
            "description": "The key is an asymmetric private key."
          }
        ]
      }
    },
    "CveComponent": {
      "type": "object",
      "description": "Legacy component of a CVE result.",
      "properties": {
        "componentId": {
          "type": "string",
          "description": "ID of the SBOM component."
        },
        "name": {
          "type": "string",
          "description": "Name of the SBOM component."
        },
        "version": {
          "type": "string",
          "description": "Version of the SBOM component."
        }
      }
    },
    "CveLink": {
      "type": "object",
      "description": "Properties of a reference link for a CVE.",
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "description": "The destination of the reference link."
        },
        "label": {
          "type": "string",
          "description": "The label of the reference link."
        }
      }
    },
    "CveResource": {
      "type": "object",
      "description": "The object representing a firmware analysis CVE result resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "cveId": {
              "type": "string",
              "description": "ID of the CVE result."
            },
            "componentId": {
              "type": "string",
              "description": "ID of the affected SBOM component."
            },
            "componentName": {
              "type": "string",
              "description": "Name of the affected SBOM component."
            },
            "componentVersion": {
              "type": "string",
              "description": "Version of the affected SBOM component."
            },
            "severity": {
              "type": "string",
              "description": "Severity of the CVE."
            },
            "cveName": {
              "type": "string",
              "description": "Name of the CVE."
            },
            "component": {
              "description": "Legacy property for what is now componentName",
              "type": "object",
              "properties": {
                "componentId": {
                  "type": "string",
                  "description": "ID of the SBOM component."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the SBOM component."
                },
                "version": {
                  "type": "string",
                  "description": "Version of the SBOM component."
                }
              }
            },
            "cvssScore": {
              "type": "string",
              "description": "Legacy property for the effective CVE score."
            },
            "cvssV2Score": {
              "type": "string",
              "description": "Legacy property for the CVE CVSS version 2 score, if one existed."
            },
            "cvssV3Score": {
              "type": "string",
              "description": "Legacy property for the CVE CVSS version 3 score, if one existed."
            },
            "cvssVersion": {
              "type": "string",
              "description": "Legacy property for the what CVSS version score was stored in the cvssScore property"
            },
            "effectiveCvssScore": {
              "type": "number",
              "format": "float",
              "description": "The most recent CVSS score of the CVE."
            },
            "effectiveCvssVersion": {
              "type": "integer",
              "format": "int32",
              "description": "The version of the effectiveCvssScore property."
            },
            "cvssScores": {
              "type": "array",
              "description": "All known CVSS scores for the CVE.",
              "items": {
                "type": "object",
                "description": "Common Vulnerability Scoring System values.",
                "properties": {
                  "version": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The version of the Common Vulnerability Scoring System (CVSS)."
                  },
                  "score": {
                    "type": "number",
                    "format": "float",
                    "description": "The score of the CVE according to the CVSS specified."
                  }
                },
                "required": [
                  "version"
                ]
              },
              "x-ms-identifiers": []
            },
            "links": {
              "type": "array",
              "description": "The list of reference links for the CVE.",
              "items": {
                "type": "object",
                "description": "Properties of a reference link for a CVE.",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "The destination of the reference link."
                  },
                  "label": {
                    "type": "string",
                    "description": "The label of the reference link."
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "href"
              ]
            },
            "description": {
              "type": "string",
              "description": "The CVE description."
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "CveResourceListResult": {
      "type": "object",
      "description": "The response of a CveResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CveResource items on this page",
          "items": {
            "type": "object",
            "description": "The object representing a firmware analysis CVE result resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "cveId": {
                    "type": "string",
                    "description": "ID of the CVE result."
                  },
                  "componentId": {
                    "type": "string",
                    "description": "ID of the affected SBOM component."
                  },
                  "componentName": {
                    "type": "string",
                    "description": "Name of the affected SBOM component."
                  },
                  "componentVersion": {
                    "type": "string",
                    "description": "Version of the affected SBOM component."
                  },
                  "severity": {
                    "type": "string",
                    "description": "Severity of the CVE."
                  },
                  "cveName": {
                    "type": "string",
                    "description": "Name of the CVE."
                  },
                  "component": {
                    "description": "Legacy property for what is now componentName",
                    "type": "object",
                    "properties": {
                      "componentId": {
                        "type": "string",
                        "description": "ID of the SBOM component."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the SBOM component."
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the SBOM component."
                      }
                    }
                  },
                  "cvssScore": {
                    "type": "string",
                    "description": "Legacy property for the effective CVE score."
                  },
                  "cvssV2Score": {
                    "type": "string",
                    "description": "Legacy property for the CVE CVSS version 2 score, if one existed."
                  },
                  "cvssV3Score": {
                    "type": "string",
                    "description": "Legacy property for the CVE CVSS version 3 score, if one existed."
                  },
                  "cvssVersion": {
                    "type": "string",
                    "description": "Legacy property for the what CVSS version score was stored in the cvssScore property"
                  },
                  "effectiveCvssScore": {
                    "type": "number",
                    "format": "float",
                    "description": "The most recent CVSS score of the CVE."
                  },
                  "effectiveCvssVersion": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The version of the effectiveCvssScore property."
                  },
                  "cvssScores": {
                    "type": "array",
                    "description": "All known CVSS scores for the CVE.",
                    "items": {
                      "type": "object",
                      "description": "Common Vulnerability Scoring System values.",
                      "properties": {
                        "version": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The version of the Common Vulnerability Scoring System (CVSS)."
                        },
                        "score": {
                          "type": "number",
                          "format": "float",
                          "description": "The score of the CVE according to the CVSS specified."
                        }
                      },
                      "required": [
                        "version"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "links": {
                    "type": "array",
                    "description": "The list of reference links for the CVE.",
                    "items": {
                      "type": "object",
                      "description": "Properties of a reference link for a CVE.",
                      "properties": {
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "The destination of the reference link."
                        },
                        "label": {
                          "type": "string",
                          "description": "The label of the reference link."
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "href"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "The CVE description."
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CveResult": {
      "type": "object",
      "description": "Details of a CVE detected in firmware.",
      "properties": {
        "cveId": {
          "type": "string",
          "description": "ID of the CVE result."
        },
        "componentId": {
          "type": "string",
          "description": "ID of the affected SBOM component."
        },
        "componentName": {
          "type": "string",
          "description": "Name of the affected SBOM component."
        },
        "componentVersion": {
          "type": "string",
          "description": "Version of the affected SBOM component."
        },
        "severity": {
          "type": "string",
          "description": "Severity of the CVE."
        },
        "cveName": {
          "type": "string",
          "description": "Name of the CVE."
        },
        "component": {
          "description": "Legacy property for what is now componentName",
          "type": "object",
          "properties": {
            "componentId": {
              "type": "string",
              "description": "ID of the SBOM component."
            },
            "name": {
              "type": "string",
              "description": "Name of the SBOM component."
            },
            "version": {
              "type": "string",
              "description": "Version of the SBOM component."
            }
          }
        },
        "cvssScore": {
          "type": "string",
          "description": "Legacy property for the effective CVE score."
        },
        "cvssV2Score": {
          "type": "string",
          "description": "Legacy property for the CVE CVSS version 2 score, if one existed."
        },
        "cvssV3Score": {
          "type": "string",
          "description": "Legacy property for the CVE CVSS version 3 score, if one existed."
        },
        "cvssVersion": {
          "type": "string",
          "description": "Legacy property for the what CVSS version score was stored in the cvssScore property"
        },
        "effectiveCvssScore": {
          "type": "number",
          "format": "float",
          "description": "The most recent CVSS score of the CVE."
        },
        "effectiveCvssVersion": {
          "type": "integer",
          "format": "int32",
          "description": "The version of the effectiveCvssScore property."
        },
        "cvssScores": {
          "type": "array",
          "description": "All known CVSS scores for the CVE.",
          "items": {
            "type": "object",
            "description": "Common Vulnerability Scoring System values.",
            "properties": {
              "version": {
                "type": "integer",
                "format": "int32",
                "description": "The version of the Common Vulnerability Scoring System (CVSS)."
              },
              "score": {
                "type": "number",
                "format": "float",
                "description": "The score of the CVE according to the CVSS specified."
              }
            },
            "required": [
              "version"
            ]
          },
          "x-ms-identifiers": []
        },
        "links": {
          "type": "array",
          "description": "The list of reference links for the CVE.",
          "items": {
            "type": "object",
            "description": "Properties of a reference link for a CVE.",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri",
                "description": "The destination of the reference link."
              },
              "label": {
                "type": "string",
                "description": "The label of the reference link."
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "href"
          ]
        },
        "description": {
          "type": "string",
          "description": "The CVE description."
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      }
    },
    "CveSummary": {
      "type": "object",
      "description": "Properties for a CVE analysis summary.",
      "properties": {
        "criticalCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of critical severity CVEs detected"
        },
        "highCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of high severity CVEs detected"
        },
        "mediumCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of medium severity CVEs detected"
        },
        "lowCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of low severity CVEs detected"
        },
        "unknownCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of unknown severity CVEs detected"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Properties of an analysis summary.",
          "properties": {
            "summaryType": {
              "description": "The type of summary.",
              "type": "string",
              "enum": [
                "Firmware",
                "CommonVulnerabilitiesAndExposures",
                "BinaryHardening",
                "CryptoCertificate",
                "CryptoKey"
              ],
              "x-ms-enum": {
                "name": "SummaryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Firmware",
                    "value": "Firmware",
                    "description": "The summary contains information about the submitted firmware"
                  },
                  {
                    "name": "CommonVulnerabilitiesAndExposures",
                    "value": "CommonVulnerabilitiesAndExposures",
                    "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                  },
                  {
                    "name": "BinaryHardening",
                    "value": "BinaryHardening",
                    "description": "The summary contains information about the binary hardening analysis results"
                  },
                  {
                    "name": "CryptoCertificate",
                    "value": "CryptoCertificate",
                    "description": "The summary contains information about the cryptographic certificate analysis results"
                  },
                  {
                    "name": "CryptoKey",
                    "value": "CryptoKey",
                    "description": "The summary contains information about the cryptographic key analysis results"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          },
          "discriminator": "summaryType",
          "required": [
            "summaryType"
          ]
        }
      ],
      "x-ms-discriminator-value": "CommonVulnerabilitiesAndExposures"
    },
    "CvssScore": {
      "type": "object",
      "description": "Common Vulnerability Scoring System values.",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "The version of the Common Vulnerability Scoring System (CVSS)."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "The score of the CVE according to the CVSS specified."
        }
      },
      "required": [
        "version"
      ]
    },
    "ExecutableClass": {
      "type": "string",
      "description": "String to indicate if the executable is 32 or 64 bit.",
      "enum": [
        "x86",
        "x64"
      ],
      "x-ms-enum": {
        "name": "ExecutableClass",
        "modelAsString": true,
        "values": [
          {
            "name": "x86",
            "value": "x86",
            "description": "The binary is 32-bit."
          },
          {
            "name": "x64",
            "value": "x64",
            "description": "The binary is 64-bit."
          }
        ]
      }
    },
    "Firmware": {
      "type": "object",
      "description": "Firmware definition",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "fileName": {
              "type": "string",
              "description": "File name for a firmware that user uploaded."
            },
            "vendor": {
              "type": "string",
              "description": "Firmware vendor."
            },
            "model": {
              "type": "string",
              "description": "Firmware model."
            },
            "version": {
              "type": "string",
              "description": "Firmware version."
            },
            "description": {
              "type": "string",
              "description": "User-specified description of the firmware."
            },
            "fileSize": {
              "type": "integer",
              "format": "int64",
              "description": "File size of the uploaded firmware image."
            },
            "status": {
              "description": "The status of firmware scan.",
              "type": "string",
              "enum": [
                "Pending",
                "Extracting",
                "Analyzing",
                "Ready",
                "Error"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The analysis job is queued"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The firmware is currently being extracted"
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  },
                  {
                    "name": "Ready",
                    "value": "Ready",
                    "description": "Analysis job results are ready"
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "An error occurred while running firmware analysis"
                  }
                ]
              }
            },
            "statusMessages": {
              "type": "array",
              "description": "A list of errors or other messages generated during firmware analysis",
              "items": {
                "type": "object",
                "description": "Error and status message",
                "properties": {
                  "errorCode": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The error code"
                  },
                  "message": {
                    "type": "string",
                    "description": "The error or status message"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "FirmwareListResult": {
      "type": "object",
      "description": "The response of a Firmware list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Firmware items on this page",
          "items": {
            "type": "object",
            "description": "Firmware definition",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string",
                    "description": "File name for a firmware that user uploaded."
                  },
                  "vendor": {
                    "type": "string",
                    "description": "Firmware vendor."
                  },
                  "model": {
                    "type": "string",
                    "description": "Firmware model."
                  },
                  "version": {
                    "type": "string",
                    "description": "Firmware version."
                  },
                  "description": {
                    "type": "string",
                    "description": "User-specified description of the firmware."
                  },
                  "fileSize": {
                    "type": "integer",
                    "format": "int64",
                    "description": "File size of the uploaded firmware image."
                  },
                  "status": {
                    "description": "The status of firmware scan.",
                    "type": "string",
                    "enum": [
                      "Pending",
                      "Extracting",
                      "Analyzing",
                      "Ready",
                      "Error"
                    ],
                    "x-ms-enum": {
                      "name": "Status",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The analysis job is queued"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The firmware is currently being extracted"
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        },
                        {
                          "name": "Ready",
                          "value": "Ready",
                          "description": "Analysis job results are ready"
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "An error occurred while running firmware analysis"
                        }
                      ]
                    }
                  },
                  "statusMessages": {
                    "type": "array",
                    "description": "A list of errors or other messages generated during firmware analysis",
                    "items": {
                      "type": "object",
                      "description": "Error and status message",
                      "properties": {
                        "errorCode": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The error code"
                        },
                        "message": {
                          "type": "string",
                          "description": "The error or status message"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FirmwareProperties": {
      "type": "object",
      "description": "Firmware properties.",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "File name for a firmware that user uploaded."
        },
        "vendor": {
          "type": "string",
          "description": "Firmware vendor."
        },
        "model": {
          "type": "string",
          "description": "Firmware model."
        },
        "version": {
          "type": "string",
          "description": "Firmware version."
        },
        "description": {
          "type": "string",
          "description": "User-specified description of the firmware."
        },
        "fileSize": {
          "type": "integer",
          "format": "int64",
          "description": "File size of the uploaded firmware image."
        },
        "status": {
          "description": "The status of firmware scan.",
          "type": "string",
          "enum": [
            "Pending",
            "Extracting",
            "Analyzing",
            "Ready",
            "Error"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true,
            "values": [
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The analysis job is queued"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The firmware is currently being extracted"
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              },
              {
                "name": "Ready",
                "value": "Ready",
                "description": "Analysis job results are ready"
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "An error occurred while running firmware analysis"
              }
            ]
          }
        },
        "statusMessages": {
          "type": "array",
          "description": "A list of errors or other messages generated during firmware analysis",
          "items": {
            "type": "object",
            "description": "Error and status message",
            "properties": {
              "errorCode": {
                "type": "integer",
                "format": "int64",
                "description": "The error code"
              },
              "message": {
                "type": "string",
                "description": "The error or status message"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      }
    },
    "FirmwareSummary": {
      "type": "object",
      "description": "Properties for high level summary of firmware analysis results.",
      "properties": {
        "extractedSize": {
          "type": "integer",
          "format": "int64",
          "description": "Total extracted size of the firmware in bytes."
        },
        "fileSize": {
          "type": "integer",
          "format": "int64",
          "description": "Firmware file size in bytes."
        },
        "extractedFileCount": {
          "type": "integer",
          "format": "int64",
          "description": "Extracted file count."
        },
        "componentCount": {
          "type": "integer",
          "format": "int64",
          "description": "Components count."
        },
        "binaryCount": {
          "type": "integer",
          "format": "int64",
          "description": "Binary count"
        },
        "analysisTimeSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Time used for analysis"
        },
        "rootFileSystems": {
          "type": "integer",
          "format": "int64",
          "description": "The number of root file systems found."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Properties of an analysis summary.",
          "properties": {
            "summaryType": {
              "description": "The type of summary.",
              "type": "string",
              "enum": [
                "Firmware",
                "CommonVulnerabilitiesAndExposures",
                "BinaryHardening",
                "CryptoCertificate",
                "CryptoKey"
              ],
              "x-ms-enum": {
                "name": "SummaryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Firmware",
                    "value": "Firmware",
                    "description": "The summary contains information about the submitted firmware"
                  },
                  {
                    "name": "CommonVulnerabilitiesAndExposures",
                    "value": "CommonVulnerabilitiesAndExposures",
                    "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                  },
                  {
                    "name": "BinaryHardening",
                    "value": "BinaryHardening",
                    "description": "The summary contains information about the binary hardening analysis results"
                  },
                  {
                    "name": "CryptoCertificate",
                    "value": "CryptoCertificate",
                    "description": "The summary contains information about the cryptographic certificate analysis results"
                  },
                  {
                    "name": "CryptoKey",
                    "value": "CryptoKey",
                    "description": "The summary contains information about the cryptographic key analysis results"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          },
          "discriminator": "summaryType",
          "required": [
            "summaryType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Firmware"
    },
    "FirmwareUpdateDefinition": {
      "type": "object",
      "description": "Firmware definition",
      "properties": {
        "properties": {
          "description": "The editable properties of a firmware",
          "type": "object",
          "properties": {
            "fileName": {
              "type": "string",
              "description": "File name for a firmware that user uploaded."
            },
            "vendor": {
              "type": "string",
              "description": "Firmware vendor."
            },
            "model": {
              "type": "string",
              "description": "Firmware model."
            },
            "version": {
              "type": "string",
              "description": "Firmware version."
            },
            "description": {
              "type": "string",
              "description": "User-specified description of the firmware."
            },
            "fileSize": {
              "type": "integer",
              "format": "int64",
              "description": "File size of the uploaded firmware image."
            },
            "status": {
              "description": "The status of firmware scan.",
              "type": "string",
              "enum": [
                "Pending",
                "Extracting",
                "Analyzing",
                "Ready",
                "Error"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The analysis job is queued"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The firmware is currently being extracted"
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  },
                  {
                    "name": "Ready",
                    "value": "Ready",
                    "description": "Analysis job results are ready"
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "An error occurred while running firmware analysis"
                  }
                ]
              }
            },
            "statusMessages": {
              "type": "array",
              "description": "A list of errors or other messages generated during firmware analysis",
              "items": {
                "type": "object",
                "description": "Error and status message",
                "properties": {
                  "errorCode": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The error code"
                  },
                  "message": {
                    "type": "string",
                    "description": "The error or status message"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "GenerateUploadUrlRequest": {
      "type": "object",
      "description": "Properties for generating an upload URL",
      "properties": {
        "firmwareId": {
          "type": "string",
          "description": "A unique ID for the firmware to be uploaded."
        }
      }
    },
    "PairedKey": {
      "type": "object",
      "description": "Details of a matching paired key or certificate.",
      "properties": {
        "pairedKeyId": {
          "type": "string",
          "description": "ID of the paired key or certificate."
        },
        "type": {
          "type": "string",
          "description": "The type indicating whether the paired object is a key or certificate."
        }
      }
    },
    "PasswordHash": {
      "type": "object",
      "description": "Password hash properties",
      "properties": {
        "passwordHashId": {
          "type": "string",
          "description": "ID for password hash"
        },
        "filePath": {
          "type": "string",
          "description": "File path of the password hash"
        },
        "salt": {
          "type": "string",
          "description": "Salt of the password hash"
        },
        "hash": {
          "type": "string",
          "description": "Hash of the password"
        },
        "context": {
          "type": "string",
          "description": "Context of password hash"
        },
        "username": {
          "type": "string",
          "description": "User name of password hash"
        },
        "algorithm": {
          "type": "string",
          "description": "Algorithm of the password hash"
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      }
    },
    "PasswordHashResource": {
      "type": "object",
      "description": "The object representing a firmware analysis password hash result resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "passwordHashId": {
              "type": "string",
              "description": "ID for password hash"
            },
            "filePath": {
              "type": "string",
              "description": "File path of the password hash"
            },
            "salt": {
              "type": "string",
              "description": "Salt of the password hash"
            },
            "hash": {
              "type": "string",
              "description": "Hash of the password"
            },
            "context": {
              "type": "string",
              "description": "Context of password hash"
            },
            "username": {
              "type": "string",
              "description": "User name of password hash"
            },
            "algorithm": {
              "type": "string",
              "description": "Algorithm of the password hash"
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "PasswordHashResourceListResult": {
      "type": "object",
      "description": "The response of a PasswordHashResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PasswordHashResource items on this page",
          "items": {
            "type": "object",
            "description": "The object representing a firmware analysis password hash result resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "passwordHashId": {
                    "type": "string",
                    "description": "ID for password hash"
                  },
                  "filePath": {
                    "type": "string",
                    "description": "File path of the password hash"
                  },
                  "salt": {
                    "type": "string",
                    "description": "Salt of the password hash"
                  },
                  "hash": {
                    "type": "string",
                    "description": "Hash of the password"
                  },
                  "context": {
                    "type": "string",
                    "description": "Context of password hash"
                  },
                  "username": {
                    "type": "string",
                    "description": "User name of password hash"
                  },
                  "algorithm": {
                    "type": "string",
                    "description": "Algorithm of the password hash"
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of a firmware analysis job.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Extracting",
        "Analyzing"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The request has successfully completed."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "There was an error during the request."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The request was canceled."
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The request is queued and awaiting execution"
          },
          {
            "name": "Extracting",
            "value": "Extracting",
            "description": "The Firmware is currently being extracted."
          },
          {
            "name": "Analyzing",
            "value": "Analyzing",
            "description": "Analysis is being run on the firmware"
          }
        ]
      },
      "readOnly": true
    },
    "SbomComponent": {
      "type": "object",
      "description": "SBOM component of a firmware.",
      "properties": {
        "componentId": {
          "type": "string",
          "description": "ID for the component."
        },
        "componentName": {
          "type": "string",
          "description": "Name for the component."
        },
        "version": {
          "type": "string",
          "description": "Version for the component."
        },
        "license": {
          "type": "string",
          "description": "License for the component."
        },
        "filePaths": {
          "type": "array",
          "description": "File paths related to the component. Note, relatedFiles should be used instead of this property.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      }
    },
    "SbomComponentResource": {
      "type": "object",
      "description": "The object representing a firmware analysis SBOM component result resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "componentId": {
              "type": "string",
              "description": "ID for the component."
            },
            "componentName": {
              "type": "string",
              "description": "Name for the component."
            },
            "version": {
              "type": "string",
              "description": "Version for the component."
            },
            "license": {
              "type": "string",
              "description": "License for the component."
            },
            "filePaths": {
              "type": "array",
              "description": "File paths related to the component. Note, relatedFiles should be used instead of this property.",
              "items": {
                "type": "string"
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "SbomComponentResourceListResult": {
      "type": "object",
      "description": "The response of a SbomComponentResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SbomComponentResource items on this page",
          "items": {
            "type": "object",
            "description": "The object representing a firmware analysis SBOM component result resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "componentId": {
                    "type": "string",
                    "description": "ID for the component."
                  },
                  "componentName": {
                    "type": "string",
                    "description": "Name for the component."
                  },
                  "version": {
                    "type": "string",
                    "description": "Version for the component."
                  },
                  "license": {
                    "type": "string",
                    "description": "License for the component."
                  },
                  "filePaths": {
                    "type": "array",
                    "description": "File paths related to the component. Note, relatedFiles should be used instead of this property.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Status": {
      "type": "string",
      "description": "The status of a firmware analysis job.",
      "enum": [
        "Pending",
        "Extracting",
        "Analyzing",
        "Ready",
        "Error"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The analysis job is queued"
          },
          {
            "name": "Extracting",
            "value": "Extracting",
            "description": "The firmware is currently being extracted"
          },
          {
            "name": "Analyzing",
            "value": "Analyzing",
            "description": "Analysis is being run on the firmware"
          },
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Analysis job results are ready"
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "An error occurred while running firmware analysis"
          }
        ]
      }
    },
    "StatusMessage": {
      "type": "object",
      "description": "Error and status message",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int64",
          "description": "The error code"
        },
        "message": {
          "type": "string",
          "description": "The error or status message"
        }
      }
    },
    "SummaryResource": {
      "type": "object",
      "description": "The object representing a firmware analysis summary resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "summaryType": {
              "description": "The type of summary.",
              "type": "string",
              "enum": [
                "Firmware",
                "CommonVulnerabilitiesAndExposures",
                "BinaryHardening",
                "CryptoCertificate",
                "CryptoKey"
              ],
              "x-ms-enum": {
                "name": "SummaryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Firmware",
                    "value": "Firmware",
                    "description": "The summary contains information about the submitted firmware"
                  },
                  {
                    "name": "CommonVulnerabilitiesAndExposures",
                    "value": "CommonVulnerabilitiesAndExposures",
                    "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                  },
                  {
                    "name": "BinaryHardening",
                    "value": "BinaryHardening",
                    "description": "The summary contains information about the binary hardening analysis results"
                  },
                  {
                    "name": "CryptoCertificate",
                    "value": "CryptoCertificate",
                    "description": "The summary contains information about the cryptographic certificate analysis results"
                  },
                  {
                    "name": "CryptoKey",
                    "value": "CryptoKey",
                    "description": "The summary contains information about the cryptographic key analysis results"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          },
          "discriminator": "summaryType",
          "required": [
            "summaryType"
          ]
        }
      }
    },
    "SummaryResourceListResult": {
      "type": "object",
      "description": "The response of a SummaryResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SummaryResource items on this page",
          "items": {
            "type": "object",
            "description": "The object representing a firmware analysis summary resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "summaryType": {
                    "description": "The type of summary.",
                    "type": "string",
                    "enum": [
                      "Firmware",
                      "CommonVulnerabilitiesAndExposures",
                      "BinaryHardening",
                      "CryptoCertificate",
                      "CryptoKey"
                    ],
                    "x-ms-enum": {
                      "name": "SummaryType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Firmware",
                          "value": "Firmware",
                          "description": "The summary contains information about the submitted firmware"
                        },
                        {
                          "name": "CommonVulnerabilitiesAndExposures",
                          "value": "CommonVulnerabilitiesAndExposures",
                          "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                        },
                        {
                          "name": "BinaryHardening",
                          "value": "BinaryHardening",
                          "description": "The summary contains information about the binary hardening analysis results"
                        },
                        {
                          "name": "CryptoCertificate",
                          "value": "CryptoCertificate",
                          "description": "The summary contains information about the cryptographic certificate analysis results"
                        },
                        {
                          "name": "CryptoKey",
                          "value": "CryptoKey",
                          "description": "The summary contains information about the cryptographic key analysis results"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                },
                "discriminator": "summaryType",
                "required": [
                  "summaryType"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SummaryResourceProperties": {
      "type": "object",
      "description": "Properties of an analysis summary.",
      "properties": {
        "summaryType": {
          "description": "The type of summary.",
          "type": "string",
          "enum": [
            "Firmware",
            "CommonVulnerabilitiesAndExposures",
            "BinaryHardening",
            "CryptoCertificate",
            "CryptoKey"
          ],
          "x-ms-enum": {
            "name": "SummaryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Firmware",
                "value": "Firmware",
                "description": "The summary contains information about the submitted firmware"
              },
              {
                "name": "CommonVulnerabilitiesAndExposures",
                "value": "CommonVulnerabilitiesAndExposures",
                "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
              },
              {
                "name": "BinaryHardening",
                "value": "BinaryHardening",
                "description": "The summary contains information about the binary hardening analysis results"
              },
              {
                "name": "CryptoCertificate",
                "value": "CryptoCertificate",
                "description": "The summary contains information about the cryptographic certificate analysis results"
              },
              {
                "name": "CryptoKey",
                "value": "CryptoKey",
                "description": "The summary contains information about the cryptographic key analysis results"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      },
      "discriminator": "summaryType",
      "required": [
        "summaryType"
      ]
    },
    "SummaryType": {
      "type": "string",
      "description": "Describes the type of summary.",
      "enum": [
        "Firmware",
        "CommonVulnerabilitiesAndExposures",
        "BinaryHardening",
        "CryptoCertificate",
        "CryptoKey"
      ],
      "x-ms-enum": {
        "name": "SummaryType",
        "modelAsString": true,
        "values": [
          {
            "name": "Firmware",
            "value": "Firmware",
            "description": "The summary contains information about the submitted firmware"
          },
          {
            "name": "CommonVulnerabilitiesAndExposures",
            "value": "CommonVulnerabilitiesAndExposures",
            "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
          },
          {
            "name": "BinaryHardening",
            "value": "BinaryHardening",
            "description": "The summary contains information about the binary hardening analysis results"
          },
          {
            "name": "CryptoCertificate",
            "value": "CryptoCertificate",
            "description": "The summary contains information about the cryptographic certificate analysis results"
          },
          {
            "name": "CryptoKey",
            "value": "CryptoKey",
            "description": "The summary contains information about the cryptographic key analysis results"
          }
        ]
      }
    },
    "UrlToken": {
      "type": "object",
      "description": "Url data for creating or accessing a blob file.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "SAS URL for creating or accessing a blob file.",
          "readOnly": true
        }
      }
    },
    "UsageMetric": {
      "type": "object",
      "description": "The object representing how many firmwares the user has uploaded to the workspace.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "monthlyFirmwareUploadCount": {
              "type": "integer",
              "format": "int64",
              "description": "The number of firmware analysis jobs that have been submitted in the current month.",
              "readOnly": true
            },
            "totalFirmwareCount": {
              "type": "integer",
              "format": "int64",
              "description": "The total number of firmwares that are in the workspace.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          },
          "required": [
            "monthlyFirmwareUploadCount",
            "totalFirmwareCount"
          ]
        }
      }
    },
    "UsageMetricListResult": {
      "type": "object",
      "description": "The response of a UsageMetric list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The UsageMetric items on this page",
          "items": {
            "type": "object",
            "description": "The object representing how many firmwares the user has uploaded to the workspace.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "monthlyFirmwareUploadCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The number of firmware analysis jobs that have been submitted in the current month.",
                    "readOnly": true
                  },
                  "totalFirmwareCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The total number of firmwares that are in the workspace.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "monthlyFirmwareUploadCount",
                  "totalFirmwareCount"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UsageMetricProperties": {
      "type": "object",
      "description": "Properties of a workspaces usage metrics.",
      "properties": {
        "monthlyFirmwareUploadCount": {
          "type": "integer",
          "format": "int64",
          "description": "The number of firmware analysis jobs that have been submitted in the current month.",
          "readOnly": true
        },
        "totalFirmwareCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of firmwares that are in the workspace.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      },
      "required": [
        "monthlyFirmwareUploadCount",
        "totalFirmwareCount"
      ]
    },
    "Workspace": {
      "type": "object",
      "description": "Firmware analysis workspace.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Extracting",
                "Analyzing"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The request has successfully completed."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "There was an error during the request."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The request was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The request is queued and awaiting execution"
                  },
                  {
                    "name": "Extracting",
                    "value": "Extracting",
                    "description": "The Firmware is currently being extracted."
                  },
                  {
                    "name": "Analyzing",
                    "value": "Analyzing",
                    "description": "Analysis is being run on the firmware"
                  }
                ]
              }
            }
          }
        },
        "sku": {
          "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          },
          "required": [
            "name"
          ]
        }
      }
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "The response of a Workspace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Workspace items on this page",
          "items": {
            "type": "object",
            "description": "Firmware analysis workspace.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Extracting",
                      "Analyzing"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The request has successfully completed."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "There was an error during the request."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The request was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "The request is queued and awaiting execution"
                        },
                        {
                          "name": "Extracting",
                          "value": "Extracting",
                          "description": "The Firmware is currently being extracted."
                        },
                        {
                          "name": "Analyzing",
                          "value": "Analyzing",
                          "description": "Analysis is being run on the firmware"
                        }
                      ]
                    }
                  }
                }
              },
              "sku": {
                "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                  },
                  "tier": {
                    "type": "string",
                    "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                    "enum": [
                      "Free",
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": false
                    }
                  },
                  "size": {
                    "type": "string",
                    "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                  },
                  "family": {
                    "type": "string",
                    "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "Workspace properties.",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Extracting",
            "Analyzing"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The request has successfully completed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "There was an error during the request."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The request was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The request is queued and awaiting execution"
              },
              {
                "name": "Extracting",
                "value": "Extracting",
                "description": "The Firmware is currently being extracted."
              },
              {
                "name": "Analyzing",
                "value": "Analyzing",
                "description": "Analysis is being run on the firmware"
              }
            ]
          }
        }
      }
    },
    "WorkspaceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Workspace.",
      "properties": {
        "sku": {
          "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {}
}