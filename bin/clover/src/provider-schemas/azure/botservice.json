{
  "swagger": "2.0",
  "info": {
    "title": "Azure botservice",
    "version": "2022-09-15",
    "description": "Azure botservice service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}": {
      "put": {
        "tags": [
          "Bot"
        ],
        "description": "Creates a Bot Service. Bot Service is a resource group wide resource type.",
        "operationId": "Bots_Create",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Bot resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot resource",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The Name of the bot"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the bot"
                    },
                    "iconUrl": {
                      "type": "string",
                      "description": "The Icon Url of the bot",
                      "default": ""
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "The bot's endpoint",
                      "x-nullable": true
                    },
                    "endpointVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The bot's endpoint version"
                    },
                    "allSettings": {
                      "description": "Contains resource all settings defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "parameters": {
                      "description": "Contains resource parameters defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "manifestUrl": {
                      "type": "string",
                      "description": "The bot's manifest url"
                    },
                    "msaAppType": {
                      "type": "string",
                      "description": "Microsoft App Type for the bot",
                      "enum": [
                        "UserAssignedMSI",
                        "SingleTenant",
                        "MultiTenant"
                      ],
                      "x-ms-enum": {
                        "name": "msaAppType",
                        "modelAsString": true
                      }
                    },
                    "msaAppId": {
                      "type": "string",
                      "description": "Microsoft App Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppTenantId": {
                      "type": "string",
                      "description": "Microsoft App Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppMSIResourceId": {
                      "type": "string",
                      "description": "Microsoft App Managed Identity Resource Id for the bot"
                    },
                    "configuredChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is configured"
                    },
                    "enabledChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is enabled"
                    },
                    "developerAppInsightKey": {
                      "type": "string",
                      "description": "The Application Insights key"
                    },
                    "developerAppInsightsApiKey": {
                      "type": "string",
                      "description": "The Application Insights Api Key"
                    },
                    "developerAppInsightsApplicationId": {
                      "type": "string",
                      "description": "The Application Insights App Id"
                    },
                    "luisAppIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Collection of LUIS App Ids"
                    },
                    "luisKey": {
                      "type": "string",
                      "description": "The LUIS Key"
                    },
                    "isCmekEnabled": {
                      "type": "boolean",
                      "description": "Whether Cmek is enabled",
                      "default": false
                    },
                    "cmekKeyVaultUrl": {
                      "type": "string",
                      "description": "The CMK Url"
                    },
                    "cmekEncryptionStatus": {
                      "type": "string",
                      "description": "The CMK encryption status",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether the bot is in an isolated network",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "isStreamingSupported": {
                      "type": "boolean",
                      "description": "Whether the bot is streaming supported",
                      "default": false
                    },
                    "isDeveloperAppInsightsApiKeySet": {
                      "type": "boolean",
                      "description": "Whether the bot is developerAppInsightsApiKey set",
                      "readOnly": true
                    },
                    "migrationToken": {
                      "type": "string",
                      "description": "Token used to migrate non Azure bot to azure subscription",
                      "readOnly": true
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                    },
                    "schemaTransformationVersion": {
                      "type": "string",
                      "description": "The channel schema transformation version for the bot",
                      "x-nullable": true,
                      "default": null
                    },
                    "storageResourceId": {
                      "type": "string",
                      "description": "The storage resourceId for the bot"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the bot",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Group ids"
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "openWithHint": {
                      "type": "string",
                      "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                    },
                    "appPasswordHint": {
                      "type": "string",
                      "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "publishingCredentials": {
                      "type": "string",
                      "description": "Publishing credentials of the resource"
                    }
                  },
                  "required": [
                    "displayName",
                    "endpoint",
                    "msaAppId"
                  ]
                }
              }
            },
            "description": "The parameters to provide for the created bot."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is created successfully or already existed, the service should return 200 (OK).",
            "schema": {
              "type": "object",
              "description": "Bot resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot resource",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The Name of the bot"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the bot"
                    },
                    "iconUrl": {
                      "type": "string",
                      "description": "The Icon Url of the bot",
                      "default": ""
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "The bot's endpoint",
                      "x-nullable": true
                    },
                    "endpointVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The bot's endpoint version"
                    },
                    "allSettings": {
                      "description": "Contains resource all settings defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "parameters": {
                      "description": "Contains resource parameters defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "manifestUrl": {
                      "type": "string",
                      "description": "The bot's manifest url"
                    },
                    "msaAppType": {
                      "type": "string",
                      "description": "Microsoft App Type for the bot",
                      "enum": [
                        "UserAssignedMSI",
                        "SingleTenant",
                        "MultiTenant"
                      ],
                      "x-ms-enum": {
                        "name": "msaAppType",
                        "modelAsString": true
                      }
                    },
                    "msaAppId": {
                      "type": "string",
                      "description": "Microsoft App Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppTenantId": {
                      "type": "string",
                      "description": "Microsoft App Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppMSIResourceId": {
                      "type": "string",
                      "description": "Microsoft App Managed Identity Resource Id for the bot"
                    },
                    "configuredChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is configured"
                    },
                    "enabledChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is enabled"
                    },
                    "developerAppInsightKey": {
                      "type": "string",
                      "description": "The Application Insights key"
                    },
                    "developerAppInsightsApiKey": {
                      "type": "string",
                      "description": "The Application Insights Api Key"
                    },
                    "developerAppInsightsApplicationId": {
                      "type": "string",
                      "description": "The Application Insights App Id"
                    },
                    "luisAppIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Collection of LUIS App Ids"
                    },
                    "luisKey": {
                      "type": "string",
                      "description": "The LUIS Key"
                    },
                    "isCmekEnabled": {
                      "type": "boolean",
                      "description": "Whether Cmek is enabled",
                      "default": false
                    },
                    "cmekKeyVaultUrl": {
                      "type": "string",
                      "description": "The CMK Url"
                    },
                    "cmekEncryptionStatus": {
                      "type": "string",
                      "description": "The CMK encryption status",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether the bot is in an isolated network",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "isStreamingSupported": {
                      "type": "boolean",
                      "description": "Whether the bot is streaming supported",
                      "default": false
                    },
                    "isDeveloperAppInsightsApiKeySet": {
                      "type": "boolean",
                      "description": "Whether the bot is developerAppInsightsApiKey set",
                      "readOnly": true
                    },
                    "migrationToken": {
                      "type": "string",
                      "description": "Token used to migrate non Azure bot to azure subscription",
                      "readOnly": true
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                    },
                    "schemaTransformationVersion": {
                      "type": "string",
                      "description": "The channel schema transformation version for the bot",
                      "x-nullable": true,
                      "default": null
                    },
                    "storageResourceId": {
                      "type": "string",
                      "description": "The storage resourceId for the bot"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the bot",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Group ids"
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "openWithHint": {
                      "type": "string",
                      "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                    },
                    "appPasswordHint": {
                      "type": "string",
                      "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "publishingCredentials": {
                      "type": "string",
                      "description": "Publishing credentials of the resource"
                    }
                  },
                  "required": [
                    "displayName",
                    "endpoint",
                    "msaAppId"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
            "schema": {
              "type": "object",
              "description": "Bot resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot resource",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The Name of the bot"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the bot"
                    },
                    "iconUrl": {
                      "type": "string",
                      "description": "The Icon Url of the bot",
                      "default": ""
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "The bot's endpoint",
                      "x-nullable": true
                    },
                    "endpointVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The bot's endpoint version"
                    },
                    "allSettings": {
                      "description": "Contains resource all settings defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "parameters": {
                      "description": "Contains resource parameters defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "manifestUrl": {
                      "type": "string",
                      "description": "The bot's manifest url"
                    },
                    "msaAppType": {
                      "type": "string",
                      "description": "Microsoft App Type for the bot",
                      "enum": [
                        "UserAssignedMSI",
                        "SingleTenant",
                        "MultiTenant"
                      ],
                      "x-ms-enum": {
                        "name": "msaAppType",
                        "modelAsString": true
                      }
                    },
                    "msaAppId": {
                      "type": "string",
                      "description": "Microsoft App Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppTenantId": {
                      "type": "string",
                      "description": "Microsoft App Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppMSIResourceId": {
                      "type": "string",
                      "description": "Microsoft App Managed Identity Resource Id for the bot"
                    },
                    "configuredChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is configured"
                    },
                    "enabledChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is enabled"
                    },
                    "developerAppInsightKey": {
                      "type": "string",
                      "description": "The Application Insights key"
                    },
                    "developerAppInsightsApiKey": {
                      "type": "string",
                      "description": "The Application Insights Api Key"
                    },
                    "developerAppInsightsApplicationId": {
                      "type": "string",
                      "description": "The Application Insights App Id"
                    },
                    "luisAppIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Collection of LUIS App Ids"
                    },
                    "luisKey": {
                      "type": "string",
                      "description": "The LUIS Key"
                    },
                    "isCmekEnabled": {
                      "type": "boolean",
                      "description": "Whether Cmek is enabled",
                      "default": false
                    },
                    "cmekKeyVaultUrl": {
                      "type": "string",
                      "description": "The CMK Url"
                    },
                    "cmekEncryptionStatus": {
                      "type": "string",
                      "description": "The CMK encryption status",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether the bot is in an isolated network",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "isStreamingSupported": {
                      "type": "boolean",
                      "description": "Whether the bot is streaming supported",
                      "default": false
                    },
                    "isDeveloperAppInsightsApiKeySet": {
                      "type": "boolean",
                      "description": "Whether the bot is developerAppInsightsApiKey set",
                      "readOnly": true
                    },
                    "migrationToken": {
                      "type": "string",
                      "description": "Token used to migrate non Azure bot to azure subscription",
                      "readOnly": true
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                    },
                    "schemaTransformationVersion": {
                      "type": "string",
                      "description": "The channel schema transformation version for the bot",
                      "x-nullable": true,
                      "default": null
                    },
                    "storageResourceId": {
                      "type": "string",
                      "description": "The storage resourceId for the bot"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the bot",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Group ids"
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "openWithHint": {
                      "type": "string",
                      "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                    },
                    "appPasswordHint": {
                      "type": "string",
                      "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "publishingCredentials": {
                      "type": "string",
                      "description": "Publishing credentials of the resource"
                    }
                  },
                  "required": [
                    "displayName",
                    "endpoint",
                    "msaAppId"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Bot"
        ],
        "description": "Updates a Bot Service",
        "operationId": "Bots_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "type": "object",
              "description": "Bot resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot resource",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The Name of the bot"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the bot"
                    },
                    "iconUrl": {
                      "type": "string",
                      "description": "The Icon Url of the bot",
                      "default": ""
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "The bot's endpoint",
                      "x-nullable": true
                    },
                    "endpointVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The bot's endpoint version"
                    },
                    "allSettings": {
                      "description": "Contains resource all settings defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "parameters": {
                      "description": "Contains resource parameters defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "manifestUrl": {
                      "type": "string",
                      "description": "The bot's manifest url"
                    },
                    "msaAppType": {
                      "type": "string",
                      "description": "Microsoft App Type for the bot",
                      "enum": [
                        "UserAssignedMSI",
                        "SingleTenant",
                        "MultiTenant"
                      ],
                      "x-ms-enum": {
                        "name": "msaAppType",
                        "modelAsString": true
                      }
                    },
                    "msaAppId": {
                      "type": "string",
                      "description": "Microsoft App Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppTenantId": {
                      "type": "string",
                      "description": "Microsoft App Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppMSIResourceId": {
                      "type": "string",
                      "description": "Microsoft App Managed Identity Resource Id for the bot"
                    },
                    "configuredChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is configured"
                    },
                    "enabledChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is enabled"
                    },
                    "developerAppInsightKey": {
                      "type": "string",
                      "description": "The Application Insights key"
                    },
                    "developerAppInsightsApiKey": {
                      "type": "string",
                      "description": "The Application Insights Api Key"
                    },
                    "developerAppInsightsApplicationId": {
                      "type": "string",
                      "description": "The Application Insights App Id"
                    },
                    "luisAppIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Collection of LUIS App Ids"
                    },
                    "luisKey": {
                      "type": "string",
                      "description": "The LUIS Key"
                    },
                    "isCmekEnabled": {
                      "type": "boolean",
                      "description": "Whether Cmek is enabled",
                      "default": false
                    },
                    "cmekKeyVaultUrl": {
                      "type": "string",
                      "description": "The CMK Url"
                    },
                    "cmekEncryptionStatus": {
                      "type": "string",
                      "description": "The CMK encryption status",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether the bot is in an isolated network",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "isStreamingSupported": {
                      "type": "boolean",
                      "description": "Whether the bot is streaming supported",
                      "default": false
                    },
                    "isDeveloperAppInsightsApiKeySet": {
                      "type": "boolean",
                      "description": "Whether the bot is developerAppInsightsApiKey set",
                      "readOnly": true
                    },
                    "migrationToken": {
                      "type": "string",
                      "description": "Token used to migrate non Azure bot to azure subscription",
                      "readOnly": true
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                    },
                    "schemaTransformationVersion": {
                      "type": "string",
                      "description": "The channel schema transformation version for the bot",
                      "x-nullable": true,
                      "default": null
                    },
                    "storageResourceId": {
                      "type": "string",
                      "description": "The storage resourceId for the bot"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the bot",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Group ids"
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "openWithHint": {
                      "type": "string",
                      "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                    },
                    "appPasswordHint": {
                      "type": "string",
                      "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "publishingCredentials": {
                      "type": "string",
                      "description": "Publishing credentials of the resource"
                    }
                  },
                  "required": [
                    "displayName",
                    "endpoint",
                    "msaAppId"
                  ]
                }
              }
            },
            "description": "The parameters to provide for the created bot."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "type": "object",
              "description": "Bot resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot resource",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The Name of the bot"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the bot"
                    },
                    "iconUrl": {
                      "type": "string",
                      "description": "The Icon Url of the bot",
                      "default": ""
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "The bot's endpoint",
                      "x-nullable": true
                    },
                    "endpointVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The bot's endpoint version"
                    },
                    "allSettings": {
                      "description": "Contains resource all settings defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "parameters": {
                      "description": "Contains resource parameters defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "manifestUrl": {
                      "type": "string",
                      "description": "The bot's manifest url"
                    },
                    "msaAppType": {
                      "type": "string",
                      "description": "Microsoft App Type for the bot",
                      "enum": [
                        "UserAssignedMSI",
                        "SingleTenant",
                        "MultiTenant"
                      ],
                      "x-ms-enum": {
                        "name": "msaAppType",
                        "modelAsString": true
                      }
                    },
                    "msaAppId": {
                      "type": "string",
                      "description": "Microsoft App Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppTenantId": {
                      "type": "string",
                      "description": "Microsoft App Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppMSIResourceId": {
                      "type": "string",
                      "description": "Microsoft App Managed Identity Resource Id for the bot"
                    },
                    "configuredChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is configured"
                    },
                    "enabledChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is enabled"
                    },
                    "developerAppInsightKey": {
                      "type": "string",
                      "description": "The Application Insights key"
                    },
                    "developerAppInsightsApiKey": {
                      "type": "string",
                      "description": "The Application Insights Api Key"
                    },
                    "developerAppInsightsApplicationId": {
                      "type": "string",
                      "description": "The Application Insights App Id"
                    },
                    "luisAppIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Collection of LUIS App Ids"
                    },
                    "luisKey": {
                      "type": "string",
                      "description": "The LUIS Key"
                    },
                    "isCmekEnabled": {
                      "type": "boolean",
                      "description": "Whether Cmek is enabled",
                      "default": false
                    },
                    "cmekKeyVaultUrl": {
                      "type": "string",
                      "description": "The CMK Url"
                    },
                    "cmekEncryptionStatus": {
                      "type": "string",
                      "description": "The CMK encryption status",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether the bot is in an isolated network",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "isStreamingSupported": {
                      "type": "boolean",
                      "description": "Whether the bot is streaming supported",
                      "default": false
                    },
                    "isDeveloperAppInsightsApiKeySet": {
                      "type": "boolean",
                      "description": "Whether the bot is developerAppInsightsApiKey set",
                      "readOnly": true
                    },
                    "migrationToken": {
                      "type": "string",
                      "description": "Token used to migrate non Azure bot to azure subscription",
                      "readOnly": true
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                    },
                    "schemaTransformationVersion": {
                      "type": "string",
                      "description": "The channel schema transformation version for the bot",
                      "x-nullable": true,
                      "default": null
                    },
                    "storageResourceId": {
                      "type": "string",
                      "description": "The storage resourceId for the bot"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the bot",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Group ids"
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "openWithHint": {
                      "type": "string",
                      "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                    },
                    "appPasswordHint": {
                      "type": "string",
                      "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "publishingCredentials": {
                      "type": "string",
                      "description": "Publishing credentials of the resource"
                    }
                  },
                  "required": [
                    "displayName",
                    "endpoint",
                    "msaAppId"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "If resource is updated successfully, the service should return 201 (Created). Execution to continue asynchronously.",
            "schema": {
              "type": "object",
              "description": "Bot resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot resource",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The Name of the bot"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the bot"
                    },
                    "iconUrl": {
                      "type": "string",
                      "description": "The Icon Url of the bot",
                      "default": ""
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "The bot's endpoint",
                      "x-nullable": true
                    },
                    "endpointVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The bot's endpoint version"
                    },
                    "allSettings": {
                      "description": "Contains resource all settings defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "parameters": {
                      "description": "Contains resource parameters defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "manifestUrl": {
                      "type": "string",
                      "description": "The bot's manifest url"
                    },
                    "msaAppType": {
                      "type": "string",
                      "description": "Microsoft App Type for the bot",
                      "enum": [
                        "UserAssignedMSI",
                        "SingleTenant",
                        "MultiTenant"
                      ],
                      "x-ms-enum": {
                        "name": "msaAppType",
                        "modelAsString": true
                      }
                    },
                    "msaAppId": {
                      "type": "string",
                      "description": "Microsoft App Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppTenantId": {
                      "type": "string",
                      "description": "Microsoft App Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppMSIResourceId": {
                      "type": "string",
                      "description": "Microsoft App Managed Identity Resource Id for the bot"
                    },
                    "configuredChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is configured"
                    },
                    "enabledChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is enabled"
                    },
                    "developerAppInsightKey": {
                      "type": "string",
                      "description": "The Application Insights key"
                    },
                    "developerAppInsightsApiKey": {
                      "type": "string",
                      "description": "The Application Insights Api Key"
                    },
                    "developerAppInsightsApplicationId": {
                      "type": "string",
                      "description": "The Application Insights App Id"
                    },
                    "luisAppIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Collection of LUIS App Ids"
                    },
                    "luisKey": {
                      "type": "string",
                      "description": "The LUIS Key"
                    },
                    "isCmekEnabled": {
                      "type": "boolean",
                      "description": "Whether Cmek is enabled",
                      "default": false
                    },
                    "cmekKeyVaultUrl": {
                      "type": "string",
                      "description": "The CMK Url"
                    },
                    "cmekEncryptionStatus": {
                      "type": "string",
                      "description": "The CMK encryption status",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether the bot is in an isolated network",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "isStreamingSupported": {
                      "type": "boolean",
                      "description": "Whether the bot is streaming supported",
                      "default": false
                    },
                    "isDeveloperAppInsightsApiKeySet": {
                      "type": "boolean",
                      "description": "Whether the bot is developerAppInsightsApiKey set",
                      "readOnly": true
                    },
                    "migrationToken": {
                      "type": "string",
                      "description": "Token used to migrate non Azure bot to azure subscription",
                      "readOnly": true
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                    },
                    "schemaTransformationVersion": {
                      "type": "string",
                      "description": "The channel schema transformation version for the bot",
                      "x-nullable": true,
                      "default": null
                    },
                    "storageResourceId": {
                      "type": "string",
                      "description": "The storage resourceId for the bot"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the bot",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Group ids"
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "openWithHint": {
                      "type": "string",
                      "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                    },
                    "appPasswordHint": {
                      "type": "string",
                      "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "publishingCredentials": {
                      "type": "string",
                      "description": "Publishing credentials of the resource"
                    }
                  },
                  "required": [
                    "displayName",
                    "endpoint",
                    "msaAppId"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bot"
        ],
        "description": "Deletes a Bot Service from the resource group. ",
        "operationId": "Bots_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 (OK) should be returned if the object exists and was deleted successfully;"
          },
          "204": {
            "description": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed."
          }
        }
      },
      "get": {
        "tags": [
          "Bot"
        ],
        "description": "Returns a BotService specified by the parameters.",
        "operationId": "Bots_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "type": "object",
              "description": "Bot resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot resource",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The Name of the bot"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the bot"
                    },
                    "iconUrl": {
                      "type": "string",
                      "description": "The Icon Url of the bot",
                      "default": ""
                    },
                    "endpoint": {
                      "type": "string",
                      "description": "The bot's endpoint",
                      "x-nullable": true
                    },
                    "endpointVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The bot's endpoint version"
                    },
                    "allSettings": {
                      "description": "Contains resource all settings defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "parameters": {
                      "description": "Contains resource parameters defined as key/value pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "manifestUrl": {
                      "type": "string",
                      "description": "The bot's manifest url"
                    },
                    "msaAppType": {
                      "type": "string",
                      "description": "Microsoft App Type for the bot",
                      "enum": [
                        "UserAssignedMSI",
                        "SingleTenant",
                        "MultiTenant"
                      ],
                      "x-ms-enum": {
                        "name": "msaAppType",
                        "modelAsString": true
                      }
                    },
                    "msaAppId": {
                      "type": "string",
                      "description": "Microsoft App Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppTenantId": {
                      "type": "string",
                      "description": "Microsoft App Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "msaAppMSIResourceId": {
                      "type": "string",
                      "description": "Microsoft App Managed Identity Resource Id for the bot"
                    },
                    "configuredChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is configured"
                    },
                    "enabledChannels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Collection of channels for which the bot is enabled"
                    },
                    "developerAppInsightKey": {
                      "type": "string",
                      "description": "The Application Insights key"
                    },
                    "developerAppInsightsApiKey": {
                      "type": "string",
                      "description": "The Application Insights Api Key"
                    },
                    "developerAppInsightsApplicationId": {
                      "type": "string",
                      "description": "The Application Insights App Id"
                    },
                    "luisAppIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Collection of LUIS App Ids"
                    },
                    "luisKey": {
                      "type": "string",
                      "description": "The LUIS Key"
                    },
                    "isCmekEnabled": {
                      "type": "boolean",
                      "description": "Whether Cmek is enabled",
                      "default": false
                    },
                    "cmekKeyVaultUrl": {
                      "type": "string",
                      "description": "The CMK Url"
                    },
                    "cmekEncryptionStatus": {
                      "type": "string",
                      "description": "The CMK encryption status",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The Tenant Id for the bot",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether the bot is in an isolated network",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "isStreamingSupported": {
                      "type": "boolean",
                      "description": "Whether the bot is streaming supported",
                      "default": false
                    },
                    "isDeveloperAppInsightsApiKeySet": {
                      "type": "boolean",
                      "description": "Whether the bot is developerAppInsightsApiKey set",
                      "readOnly": true
                    },
                    "migrationToken": {
                      "type": "string",
                      "description": "Token used to migrate non Azure bot to azure subscription",
                      "readOnly": true
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                    },
                    "schemaTransformationVersion": {
                      "type": "string",
                      "description": "The channel schema transformation version for the bot",
                      "x-nullable": true,
                      "default": null
                    },
                    "storageResourceId": {
                      "type": "string",
                      "description": "The storage resourceId for the bot"
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the bot",
                      "items": {
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              },
                              "groupIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Group ids"
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      }
                    },
                    "openWithHint": {
                      "type": "string",
                      "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                    },
                    "appPasswordHint": {
                      "type": "string",
                      "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "publishingCredentials": {
                      "type": "string",
                      "description": "Publishing credentials of the resource"
                    }
                  },
                  "required": [
                    "displayName",
                    "endpoint",
                    "msaAppId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices": {
      "get": {
        "tags": [
          "Bot"
        ],
        "description": "Returns all the resources of a particular type belonging to a resource group",
        "operationId": "Bots_ListByResourceGroup",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
            "schema": {
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of bot service resources.",
                  "type": "string"
                },
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Bot resource definition",
                    "properties": {
                      "id": {
                        "description": "Specifies the resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Specifies the name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Specifies the location of the resource.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Specifies the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "tags": {
                        "description": "Contains resource tags defined as key/value pairs.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "sku": {
                        "description": "Gets or sets the SKU of the resource.",
                        "properties": {
                          "name": {
                            "description": "The sku name",
                            "type": "string",
                            "enum": [
                              "F0",
                              "S1"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Gets the sku tier. This is based on the SKU name.",
                            "enum": [
                              "Free",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "kind": {
                        "description": "Required. Gets or sets the Kind of the resource.",
                        "x-nullable": true,
                        "type": "string",
                        "enum": [
                          "sdk",
                          "designer",
                          "bot",
                          "function",
                          "azurebot"
                        ],
                        "x-ms-enum": {
                          "name": "Kind",
                          "modelAsString": true
                        },
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "Entity Tag."
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Entity zones",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The set of properties specific to bot resource",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "The Name of the bot"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the bot"
                          },
                          "iconUrl": {
                            "type": "string",
                            "description": "The Icon Url of the bot",
                            "default": ""
                          },
                          "endpoint": {
                            "type": "string",
                            "description": "The bot's endpoint",
                            "x-nullable": true
                          },
                          "endpointVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The bot's endpoint version"
                          },
                          "allSettings": {
                            "description": "Contains resource all settings defined as key/value pairs.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "parameters": {
                            "description": "Contains resource parameters defined as key/value pairs.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "manifestUrl": {
                            "type": "string",
                            "description": "The bot's manifest url"
                          },
                          "msaAppType": {
                            "type": "string",
                            "description": "Microsoft App Type for the bot",
                            "enum": [
                              "UserAssignedMSI",
                              "SingleTenant",
                              "MultiTenant"
                            ],
                            "x-ms-enum": {
                              "name": "msaAppType",
                              "modelAsString": true
                            }
                          },
                          "msaAppId": {
                            "type": "string",
                            "description": "Microsoft App Id for the bot",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "msaAppTenantId": {
                            "type": "string",
                            "description": "Microsoft App Tenant Id for the bot",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "msaAppMSIResourceId": {
                            "type": "string",
                            "description": "Microsoft App Managed Identity Resource Id for the bot"
                          },
                          "configuredChannels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true,
                            "description": "Collection of channels for which the bot is configured"
                          },
                          "enabledChannels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true,
                            "description": "Collection of channels for which the bot is enabled"
                          },
                          "developerAppInsightKey": {
                            "type": "string",
                            "description": "The Application Insights key"
                          },
                          "developerAppInsightsApiKey": {
                            "type": "string",
                            "description": "The Application Insights Api Key"
                          },
                          "developerAppInsightsApplicationId": {
                            "type": "string",
                            "description": "The Application Insights App Id"
                          },
                          "luisAppIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Collection of LUIS App Ids"
                          },
                          "luisKey": {
                            "type": "string",
                            "description": "The LUIS Key"
                          },
                          "isCmekEnabled": {
                            "type": "boolean",
                            "description": "Whether Cmek is enabled",
                            "default": false
                          },
                          "cmekKeyVaultUrl": {
                            "type": "string",
                            "description": "The CMK Url"
                          },
                          "cmekEncryptionStatus": {
                            "type": "string",
                            "description": "The CMK encryption status",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "The Tenant Id for the bot",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "publicNetworkAccess": {
                            "description": "Whether the bot is in an isolated network",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "isStreamingSupported": {
                            "type": "boolean",
                            "description": "Whether the bot is streaming supported",
                            "default": false
                          },
                          "isDeveloperAppInsightsApiKeySet": {
                            "type": "boolean",
                            "description": "Whether the bot is developerAppInsightsApiKey set",
                            "readOnly": true
                          },
                          "migrationToken": {
                            "type": "string",
                            "description": "Token used to migrate non Azure bot to azure subscription",
                            "readOnly": true
                          },
                          "disableLocalAuth": {
                            "type": "boolean",
                            "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                          },
                          "schemaTransformationVersion": {
                            "type": "string",
                            "description": "The channel schema transformation version for the bot",
                            "x-nullable": true,
                            "default": null
                          },
                          "storageResourceId": {
                            "type": "string",
                            "description": "The storage resourceId for the bot"
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "readOnly": true,
                            "description": "List of Private Endpoint Connections configured for the bot",
                            "items": {
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    },
                                    "groupIds": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Group ids"
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            }
                          },
                          "openWithHint": {
                            "type": "string",
                            "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                          },
                          "appPasswordHint": {
                            "type": "string",
                            "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Provisioning state of the resource"
                          },
                          "publishingCredentials": {
                            "type": "string",
                            "description": "Publishing credentials of the resource"
                          }
                        },
                        "required": [
                          "displayName",
                          "endpoint",
                          "msaAppId"
                        ]
                      }
                    }
                  },
                  "description": "Gets the list of bot service results and their properties."
                }
              },
              "description": "The list of bot service operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices": {
      "get": {
        "tags": [
          "Bot"
        ],
        "description": "Returns all the resources of a particular type belonging to a subscription.",
        "operationId": "Bots_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. ",
            "schema": {
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of bot service resources.",
                  "type": "string"
                },
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Bot resource definition",
                    "properties": {
                      "id": {
                        "description": "Specifies the resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Specifies the name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Specifies the location of the resource.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Specifies the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "tags": {
                        "description": "Contains resource tags defined as key/value pairs.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "sku": {
                        "description": "Gets or sets the SKU of the resource.",
                        "properties": {
                          "name": {
                            "description": "The sku name",
                            "type": "string",
                            "enum": [
                              "F0",
                              "S1"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Gets the sku tier. This is based on the SKU name.",
                            "enum": [
                              "Free",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "kind": {
                        "description": "Required. Gets or sets the Kind of the resource.",
                        "x-nullable": true,
                        "type": "string",
                        "enum": [
                          "sdk",
                          "designer",
                          "bot",
                          "function",
                          "azurebot"
                        ],
                        "x-ms-enum": {
                          "name": "Kind",
                          "modelAsString": true
                        },
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "Entity Tag."
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Entity zones",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The set of properties specific to bot resource",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "The Name of the bot"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the bot"
                          },
                          "iconUrl": {
                            "type": "string",
                            "description": "The Icon Url of the bot",
                            "default": ""
                          },
                          "endpoint": {
                            "type": "string",
                            "description": "The bot's endpoint",
                            "x-nullable": true
                          },
                          "endpointVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The bot's endpoint version"
                          },
                          "allSettings": {
                            "description": "Contains resource all settings defined as key/value pairs.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "parameters": {
                            "description": "Contains resource parameters defined as key/value pairs.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "manifestUrl": {
                            "type": "string",
                            "description": "The bot's manifest url"
                          },
                          "msaAppType": {
                            "type": "string",
                            "description": "Microsoft App Type for the bot",
                            "enum": [
                              "UserAssignedMSI",
                              "SingleTenant",
                              "MultiTenant"
                            ],
                            "x-ms-enum": {
                              "name": "msaAppType",
                              "modelAsString": true
                            }
                          },
                          "msaAppId": {
                            "type": "string",
                            "description": "Microsoft App Id for the bot",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "msaAppTenantId": {
                            "type": "string",
                            "description": "Microsoft App Tenant Id for the bot",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "msaAppMSIResourceId": {
                            "type": "string",
                            "description": "Microsoft App Managed Identity Resource Id for the bot"
                          },
                          "configuredChannels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true,
                            "description": "Collection of channels for which the bot is configured"
                          },
                          "enabledChannels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true,
                            "description": "Collection of channels for which the bot is enabled"
                          },
                          "developerAppInsightKey": {
                            "type": "string",
                            "description": "The Application Insights key"
                          },
                          "developerAppInsightsApiKey": {
                            "type": "string",
                            "description": "The Application Insights Api Key"
                          },
                          "developerAppInsightsApplicationId": {
                            "type": "string",
                            "description": "The Application Insights App Id"
                          },
                          "luisAppIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Collection of LUIS App Ids"
                          },
                          "luisKey": {
                            "type": "string",
                            "description": "The LUIS Key"
                          },
                          "isCmekEnabled": {
                            "type": "boolean",
                            "description": "Whether Cmek is enabled",
                            "default": false
                          },
                          "cmekKeyVaultUrl": {
                            "type": "string",
                            "description": "The CMK Url"
                          },
                          "cmekEncryptionStatus": {
                            "type": "string",
                            "description": "The CMK encryption status",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "The Tenant Id for the bot",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "publicNetworkAccess": {
                            "description": "Whether the bot is in an isolated network",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "isStreamingSupported": {
                            "type": "boolean",
                            "description": "Whether the bot is streaming supported",
                            "default": false
                          },
                          "isDeveloperAppInsightsApiKeySet": {
                            "type": "boolean",
                            "description": "Whether the bot is developerAppInsightsApiKey set",
                            "readOnly": true
                          },
                          "migrationToken": {
                            "type": "string",
                            "description": "Token used to migrate non Azure bot to azure subscription",
                            "readOnly": true
                          },
                          "disableLocalAuth": {
                            "type": "boolean",
                            "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                          },
                          "schemaTransformationVersion": {
                            "type": "string",
                            "description": "The channel schema transformation version for the bot",
                            "x-nullable": true,
                            "default": null
                          },
                          "storageResourceId": {
                            "type": "string",
                            "description": "The storage resourceId for the bot"
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "readOnly": true,
                            "description": "List of Private Endpoint Connections configured for the bot",
                            "items": {
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    },
                                    "groupIds": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Group ids"
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            }
                          },
                          "openWithHint": {
                            "type": "string",
                            "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                          },
                          "appPasswordHint": {
                            "type": "string",
                            "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Provisioning state of the resource"
                          },
                          "publishingCredentials": {
                            "type": "string",
                            "description": "Publishing credentials of the resource"
                          }
                        },
                        "required": [
                          "displayName",
                          "endpoint",
                          "msaAppId"
                        ]
                      }
                    }
                  },
                  "description": "Gets the list of bot service results and their properties."
                }
              },
              "description": "The list of bot service operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}": {
      "put": {
        "tags": [
          "Channel"
        ],
        "description": "Creates a Channel registration for a Bot Service",
        "operationId": "Channels_Create",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "channelName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "AlexaChannel",
              "FacebookChannel",
              "EmailChannel",
              "KikChannel",
              "TelegramChannel",
              "SlackChannel",
              "MsTeamsChannel",
              "SkypeChannel",
              "WebChatChannel",
              "DirectLineChannel",
              "SmsChannel",
              "LineChannel",
              "DirectLineSpeechChannel",
              "OutlookChannel",
              "Omnichannel",
              "TelephonyChannel",
              "AcsChatChannel",
              "SearchAssistant",
              "M365Extensions"
            ],
            "x-ms-enum": {
              "name": "channelName",
              "modelAsString": false,
              "values": [
                {
                  "value": "AlexaChannel"
                },
                {
                  "value": "FacebookChannel"
                },
                {
                  "value": "EmailChannel"
                },
                {
                  "value": "KikChannel"
                },
                {
                  "value": "TelegramChannel"
                },
                {
                  "value": "SlackChannel"
                },
                {
                  "value": "MsTeamsChannel"
                },
                {
                  "value": "SkypeChannel"
                },
                {
                  "value": "WebChatChannel"
                },
                {
                  "value": "DirectLineChannel"
                },
                {
                  "value": "SmsChannel"
                },
                {
                  "value": "LineChannel"
                },
                {
                  "value": "DirectLineSpeechChannel"
                },
                {
                  "value": "OutlookChannel"
                },
                {
                  "value": "Omnichannel"
                },
                {
                  "value": "TelephonyChannel"
                },
                {
                  "value": "AcsChatChannel"
                },
                {
                  "value": "SearchAssistant"
                },
                {
                  "value": "M365Extensions"
                }
              ]
            },
            "description": "The name of the Channel resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                }
              }
            },
            "description": "The parameters to provide for the created bot."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is created successfully or already existed, the service should return 200 (OK).",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Channel"
        ],
        "description": "Updates a Channel registration for a Bot Service",
        "operationId": "Channels_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "channelName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "AlexaChannel",
              "FacebookChannel",
              "EmailChannel",
              "KikChannel",
              "TelegramChannel",
              "SlackChannel",
              "MsTeamsChannel",
              "SkypeChannel",
              "WebChatChannel",
              "DirectLineChannel",
              "SmsChannel",
              "LineChannel",
              "DirectLineSpeechChannel",
              "OutlookChannel",
              "Omnichannel",
              "TelephonyChannel",
              "AcsChatChannel",
              "SearchAssistant",
              "M365Extensions"
            ],
            "x-ms-enum": {
              "name": "channelName",
              "modelAsString": false,
              "values": [
                {
                  "value": "AlexaChannel"
                },
                {
                  "value": "FacebookChannel"
                },
                {
                  "value": "EmailChannel"
                },
                {
                  "value": "KikChannel"
                },
                {
                  "value": "TelegramChannel"
                },
                {
                  "value": "SlackChannel"
                },
                {
                  "value": "MsTeamsChannel"
                },
                {
                  "value": "SkypeChannel"
                },
                {
                  "value": "WebChatChannel"
                },
                {
                  "value": "DirectLineChannel"
                },
                {
                  "value": "SmsChannel"
                },
                {
                  "value": "LineChannel"
                },
                {
                  "value": "DirectLineSpeechChannel"
                },
                {
                  "value": "OutlookChannel"
                },
                {
                  "value": "Omnichannel"
                },
                {
                  "value": "TelephonyChannel"
                },
                {
                  "value": "AcsChatChannel"
                },
                {
                  "value": "SearchAssistant"
                },
                {
                  "value": "M365Extensions"
                }
              ]
            },
            "description": "The name of the Channel resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                }
              }
            },
            "description": "The parameters to provide for the created bot."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "If resource is updated successfully, the service should return 201 (Created). Execution to continue asynchronously.",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Channel"
        ],
        "description": "Deletes a Channel registration from a Bot Service",
        "operationId": "Channels_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "channelName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 (OK) should be returned if the object exists and was deleted successfully;"
          },
          "204": {
            "description": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed."
          }
        }
      },
      "get": {
        "tags": [
          "Channel"
        ],
        "description": "Returns a BotService Channel registration specified by the parameters.",
        "operationId": "Channels_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "channelName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/listChannelWithKeys": {
      "post": {
        "tags": [
          "Channel"
        ],
        "description": "Lists a Channel registration for a Bot Service including secrets",
        "operationId": "Channels_ListWithKeys",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "channelName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "AlexaChannel",
              "FacebookChannel",
              "EmailChannel",
              "KikChannel",
              "TelegramChannel",
              "SlackChannel",
              "MsTeamsChannel",
              "SkypeChannel",
              "WebChatChannel",
              "DirectLineChannel",
              "SmsChannel",
              "LineChannel",
              "DirectLineSpeechChannel",
              "OutlookChannel",
              "Omnichannel",
              "TelephonyChannel",
              "AcsChatChannel",
              "SearchAssistant",
              "M365Extensions"
            ],
            "x-ms-enum": {
              "name": "channelName",
              "modelAsString": false,
              "values": [
                {
                  "value": "AlexaChannel"
                },
                {
                  "value": "FacebookChannel"
                },
                {
                  "value": "EmailChannel"
                },
                {
                  "value": "KikChannel"
                },
                {
                  "value": "TelegramChannel"
                },
                {
                  "value": "SlackChannel"
                },
                {
                  "value": "MsTeamsChannel"
                },
                {
                  "value": "SkypeChannel"
                },
                {
                  "value": "WebChatChannel"
                },
                {
                  "value": "DirectLineChannel"
                },
                {
                  "value": "SmsChannel"
                },
                {
                  "value": "LineChannel"
                },
                {
                  "value": "DirectLineSpeechChannel"
                },
                {
                  "value": "OutlookChannel"
                },
                {
                  "value": "Omnichannel"
                },
                {
                  "value": "TelephonyChannel"
                },
                {
                  "value": "AcsChatChannel"
                },
                {
                  "value": "SearchAssistant"
                },
                {
                  "value": "M365Extensions"
                }
              ]
            },
            "description": "The name of the Channel resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is retrieved successfully, the service should return 200 (OK).",
            "schema": {
              "type": "object",
              "description": "The ARM channel of list channel with keys operation response.",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                },
                "resource": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                },
                "setting": {
                  "description": "Channel settings",
                  "type": "object",
                  "properties": {
                    "extensionKey1": {
                      "type": "string",
                      "description": "The extensionKey1",
                      "default": ""
                    },
                    "extensionKey2": {
                      "type": "string",
                      "description": "The extensionKey2",
                      "default": ""
                    },
                    "sites": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string",
                            "description": "Tenant Id"
                          },
                          "siteId": {
                            "type": "string",
                            "description": "Site Id",
                            "x-ms-mutability": [
                              "read"
                            ],
                            "readOnly": true
                          },
                          "siteName": {
                            "type": "string",
                            "description": "Site name",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "key": {
                            "type": "string",
                            "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                            "x-ms-mutability": [
                              "read"
                            ],
                            "readOnly": true
                          },
                          "key2": {
                            "type": "string",
                            "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                            "x-ms-mutability": [
                              "read"
                            ],
                            "readOnly": true
                          },
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Whether this site is enabled for DirectLine channel"
                          },
                          "isTokenEnabled": {
                            "type": "boolean",
                            "description": "Whether this site is token enabled for channel",
                            "readOnly": true
                          },
                          "isEndpointParametersEnabled": {
                            "type": "boolean",
                            "description": "Whether this site is EndpointParameters enabled for channel"
                          },
                          "isDetailedLoggingEnabled": {
                            "type": "boolean",
                            "description": "Whether this site is disabled detailed logging for"
                          },
                          "isBlockUserUploadEnabled": {
                            "type": "boolean",
                            "description": "Whether this site is enabled for block user upload.",
                            "x-nullable": true,
                            "default": null
                          },
                          "isNoStorageEnabled": {
                            "type": "boolean",
                            "description": "Whether this no-storage site is disabled detailed logging for"
                          },
                          "eTag": {
                            "type": "string",
                            "description": "Entity Tag"
                          },
                          "appId": {
                            "type": "string",
                            "description": "DirectLine application id"
                          },
                          "isV1Enabled": {
                            "type": "boolean",
                            "description": "Whether this site is enabled for Bot Framework V1 protocol.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "isV3Enabled": {
                            "type": "boolean",
                            "description": "Whether this site is enabled for Bot Framework V3 protocol."
                          },
                          "isSecureSiteEnabled": {
                            "type": "boolean",
                            "description": "Whether this site is enabled for authentication with Bot Framework."
                          },
                          "trustedOrigins": {
                            "type": "array",
                            "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "isWebChatSpeechEnabled": {
                            "type": "boolean",
                            "description": "Whether this site is enabled for Webchat Speech",
                            "default": false
                          },
                          "isWebchatPreviewEnabled": {
                            "type": "boolean",
                            "description": "Whether this site is enabled for preview versions of Webchat",
                            "default": false
                          }
                        },
                        "required": [
                          "isEnabled",
                          "siteName"
                        ],
                        "description": "A site for the channel"
                      },
                      "description": "The list of sites"
                    },
                    "channelId": {
                      "type": "string",
                      "description": "The channel id"
                    },
                    "channelDisplayName": {
                      "type": "string",
                      "description": "The channel display name"
                    },
                    "botId": {
                      "type": "string",
                      "description": "The bot id"
                    },
                    "botIconUrl": {
                      "type": "string",
                      "description": "The bot icon url"
                    },
                    "isEnabled": {
                      "type": "boolean",
                      "description": "Whether this channel is enabled for the bot"
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                    },
                    "requireTermsAgreement": {
                      "type": "boolean",
                      "description": "Whether customer needs to agree to new terms.",
                      "x-ms-nullable": true
                    }
                  }
                },
                "provisioningState": {
                  "type": "string",
                  "description": "Provisioning state of the resource"
                },
                "entityTag": {
                  "type": "string",
                  "description": "Entity tag of the resource"
                },
                "changedTime": {
                  "type": "string",
                  "description": "Changed time of the resource"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels": {
      "get": {
        "tags": [
          "Channel"
        ],
        "description": "Returns all the Channel registrations of a particular BotService resource",
        "operationId": "Channels_ListByResourceGroup",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
            "schema": {
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of bot service channel resources.",
                  "type": "string"
                },
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Bot channel resource definition",
                    "properties": {
                      "id": {
                        "description": "Specifies the resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Specifies the name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Specifies the location of the resource.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Specifies the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "tags": {
                        "description": "Contains resource tags defined as key/value pairs.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "sku": {
                        "description": "Gets or sets the SKU of the resource.",
                        "properties": {
                          "name": {
                            "description": "The sku name",
                            "type": "string",
                            "enum": [
                              "F0",
                              "S1"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Gets the sku tier. This is based on the SKU name.",
                            "enum": [
                              "Free",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "kind": {
                        "description": "Required. Gets or sets the Kind of the resource.",
                        "x-nullable": true,
                        "type": "string",
                        "enum": [
                          "sdk",
                          "designer",
                          "bot",
                          "function",
                          "azurebot"
                        ],
                        "x-ms-enum": {
                          "name": "Kind",
                          "modelAsString": true
                        },
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "Entity Tag."
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Entity zones",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The set of properties specific to bot channel resource",
                        "type": "object",
                        "discriminator": "channelName",
                        "properties": {
                          "channelName": {
                            "type": "string",
                            "description": "The channel name"
                          },
                          "etag": {
                            "type": "string",
                            "description": "Entity Tag of the resource",
                            "x-nullable": true,
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Provisioning state of the resource"
                          },
                          "location": {
                            "description": "Specifies the location of the resource.",
                            "type": "string",
                            "default": "global"
                          }
                        },
                        "required": [
                          "channelName"
                        ]
                      }
                    }
                  },
                  "description": "Gets the list of bot service channel results and their properties."
                }
              },
              "description": "The list of bot service channel operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/regeneratekeys": {
      "post": {
        "tags": [
          "Channel"
        ],
        "description": "Regenerates secret keys and returns them for the DirectLine Channel of a particular BotService resource",
        "operationId": "DirectLine_RegenerateKeys",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "channelName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "WebChatChannel",
              "DirectLineChannel"
            ],
            "x-ms-enum": {
              "name": "regenerateKeysChannelName",
              "modelAsString": false,
              "values": [
                {
                  "value": "WebChatChannel"
                },
                {
                  "value": "DirectLineChannel"
                }
              ]
            },
            "description": "The name of the Channel resource for which keys are to be regenerated."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "siteName": {
                  "type": "string",
                  "description": "The site name",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "key": {
                  "type": "string",
                  "description": "Determines which key is to be regenerated",
                  "enum": [
                    "key1",
                    "key2"
                  ],
                  "x-ms-enum": {
                    "name": "key",
                    "modelAsString": false
                  }
                }
              },
              "description": "Site information for WebChat or DirectLine Channels to identify which site to regenerate keys for.",
              "type": "object",
              "required": [
                "siteName",
                "key"
              ]
            },
            "description": "The parameters to provide for the created bot."
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "type": "object",
                  "discriminator": "channelName",
                  "properties": {
                    "channelName": {
                      "type": "string",
                      "description": "The channel name"
                    },
                    "etag": {
                      "type": "string",
                      "description": "Entity Tag of the resource",
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Provisioning state of the resource"
                    },
                    "location": {
                      "description": "Specifies the location of the resource.",
                      "type": "string",
                      "default": "global"
                    }
                  },
                  "required": [
                    "channelName"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/createEmailSignInUrl": {
      "post": {
        "tags": [
          "Channel"
        ],
        "description": "Creates an email channel sign in url for a Bot Service",
        "operationId": "Email_CreateSignInUrl",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If url is created successfully, the service should return 200 (OK).",
            "schema": {
              "type": "object",
              "description": "The ARM create email sign in url operation response.",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "properties": {
                  "description": "The set of properties specific to sign in url",
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "Sign in url.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.BotService/checkNameAvailability": {
      "post": {
        "tags": [
          "Bot"
        ],
        "description": "Check whether a bot name is available.",
        "operationId": "Bots_GetCheckNameAvailability",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The request body for a request to Bot Service Management to check availability of a bot name.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "the name of the bot for which availability needs to be checked.",
                  "type": "string"
                },
                "type": {
                  "description": "the type of the bot for which availability needs to be checked",
                  "type": "string"
                }
              }
            },
            "description": "The request body parameters to provide for the check name availability request"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. ",
            "schema": {
              "description": "The response body returned for a request to Bot Service Management to check availability of a bot name.",
              "type": "object",
              "properties": {
                "valid": {
                  "description": "indicates if the bot name is valid.",
                  "type": "boolean"
                },
                "message": {
                  "description": "additional message from the bot management api showing why a bot name is not available",
                  "type": "string"
                },
                "absCode": {
                  "description": "response code from ABS",
                  "type": "string",
                  "x-ms-nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.BotService/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all the available BotService operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "The list of bot service operation response.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of operations.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of operations.",
                  "type": "array",
                  "items": {
                    "description": "The operations supported by Bot Service Management.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Operation name: {provider}/{resource}/{operation}.",
                        "type": "string"
                      },
                      "display": {
                        "description": "The operation supported by Bot Service Management.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "The description of the operation.",
                            "type": "string"
                          },
                          "operation": {
                            "description": "The action that users can perform, based on their permission level.",
                            "type": "string"
                          },
                          "provider": {
                            "description": "Service provider: Microsoft Bot Service.",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource on which the operation is performed.",
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "description": "The origin of the operation.",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Additional properties.",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/listAuthServiceProviders": {
      "post": {
        "tags": [
          "ListServiceProviders"
        ],
        "description": "Lists the available Service Providers for creating Connection Settings",
        "operationId": "BotConnection_ListServiceProviders",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is retrieved successfully, the service should return 200 (OK).",
            "schema": {
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of bot service providers.",
                  "type": "string"
                },
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Service Provider Definition",
                    "properties": {
                      "properties": {
                        "description": "The Properties of a Service Provider Object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Id for Service Provider",
                            "readOnly": true
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display Name of the Service Provider",
                            "readOnly": true
                          },
                          "serviceProviderName": {
                            "type": "string",
                            "description": "Name of the Service Provider",
                            "readOnly": true
                          },
                          "devPortalUrl": {
                            "type": "string",
                            "description": "URL of Dev Portal",
                            "readOnly": true
                          },
                          "iconUrl": {
                            "type": "string",
                            "description": "The URL of icon",
                            "default": ""
                          },
                          "parameters": {
                            "description": "The list of parameters for the Service Provider",
                            "type": "array",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the Service Provider",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of the Service Provider",
                                  "readOnly": true
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "Display Name of the Service Provider",
                                  "readOnly": true
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description of the Service Provider",
                                  "readOnly": true
                                },
                                "helpUrl": {
                                  "type": "string",
                                  "description": "Help Url for the  Service Provider",
                                  "readOnly": true
                                },
                                "default": {
                                  "type": "string",
                                  "description": "Default Name for the Service Provider",
                                  "readOnly": true
                                },
                                "metadata": {
                                  "type": "object",
                                  "description": "Meta data for the Service Provider",
                                  "readOnly": true,
                                  "properties": {
                                    "constraints": {
                                      "description": "the constraints of the bot meta data.",
                                      "type": "object",
                                      "properties": {
                                        "required": {
                                          "description": "Whether required the constraints of the bot meta data.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "description": "Extra Parameters specific to each Service Provider"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Gets the list of bot service providers and their properties."
                }
              },
              "description": "The list of bot service providers response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/listQnAMakerEndpointKeys": {
      "post": {
        "tags": [
          "ListQnAMakerEndpointKeys"
        ],
        "description": "Lists the QnA Maker endpoint keys",
        "operationId": "QnAMakerEndpointKeys_Get",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The request body for a request to Bot Service Management to list QnA Maker endpoint keys.",
              "type": "object",
              "properties": {
                "hostname": {
                  "description": "the host name of the QnA Maker endpoint",
                  "type": "string"
                },
                "authkey": {
                  "description": "Subscription key which provides access to this API.",
                  "type": "string"
                }
              }
            },
            "description": "The request body parameters to provide for the check name availability request"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is retrieved successfully, the service should return 200 (OK).",
            "schema": {
              "type": "object",
              "description": "Schema for EndpointKeys generate/refresh operations.",
              "properties": {
                "primaryEndpointKey": {
                  "type": "string",
                  "description": "Primary Access Key."
                },
                "secondaryEndpointKey": {
                  "type": "string",
                  "description": "Secondary Access Key."
                },
                "installedVersion": {
                  "type": "string",
                  "description": "Current version of runtime."
                },
                "lastStableVersion": {
                  "type": "string",
                  "description": "Latest version of runtime."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}/listWithSecrets": {
      "post": {
        "tags": [
          "BotConnection"
        ],
        "description": "Get a Connection Setting registration for a Bot Service",
        "operationId": "BotConnection_ListWithSecrets",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "connectionName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$",
            "description": "The name of the Bot Service Connection Setting resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the Connection Setting."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the Connection Setting."
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Client Id associated with the Connection Setting."
                    },
                    "settingId": {
                      "type": "string",
                      "description": "Setting Id set by the service for the Connection Setting.",
                      "readOnly": true
                    },
                    "clientSecret": {
                      "x-ms-secret": true,
                      "type": "string",
                      "description": "Client Secret associated with the Connection Setting"
                    },
                    "scopes": {
                      "type": "string",
                      "description": "Scopes associated with the Connection Setting",
                      "default": ""
                    },
                    "serviceProviderId": {
                      "type": "string",
                      "description": "Service Provider Id associated with the Connection Setting"
                    },
                    "serviceProviderDisplayName": {
                      "type": "string",
                      "description": "Service Provider Display Name associated with the Connection Setting"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Service Provider Parameters associated with the Connection Setting",
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for the Connection Setting Parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the Connection Setting Parameter.",
                            "x-nullable": true
                          }
                        },
                        "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}": {
      "put": {
        "tags": [
          "BotConnection"
        ],
        "description": "Register a new Auth Connection for a Bot Service",
        "operationId": "BotConnection_Create",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "connectionName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$",
            "description": "The name of the Bot Service Connection Setting resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the Connection Setting."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the Connection Setting."
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Client Id associated with the Connection Setting."
                    },
                    "settingId": {
                      "type": "string",
                      "description": "Setting Id set by the service for the Connection Setting.",
                      "readOnly": true
                    },
                    "clientSecret": {
                      "x-ms-secret": true,
                      "type": "string",
                      "description": "Client Secret associated with the Connection Setting"
                    },
                    "scopes": {
                      "type": "string",
                      "description": "Scopes associated with the Connection Setting",
                      "default": ""
                    },
                    "serviceProviderId": {
                      "type": "string",
                      "description": "Service Provider Id associated with the Connection Setting"
                    },
                    "serviceProviderDisplayName": {
                      "type": "string",
                      "description": "Service Provider Display Name associated with the Connection Setting"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Service Provider Parameters associated with the Connection Setting",
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for the Connection Setting Parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the Connection Setting Parameter.",
                            "x-nullable": true
                          }
                        },
                        "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource"
                    }
                  }
                }
              }
            },
            "description": "The parameters to provide for creating the Connection Setting."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is created successfully or already existed, the service should return 200 (OK).",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the Connection Setting."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the Connection Setting."
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Client Id associated with the Connection Setting."
                    },
                    "settingId": {
                      "type": "string",
                      "description": "Setting Id set by the service for the Connection Setting.",
                      "readOnly": true
                    },
                    "clientSecret": {
                      "x-ms-secret": true,
                      "type": "string",
                      "description": "Client Secret associated with the Connection Setting"
                    },
                    "scopes": {
                      "type": "string",
                      "description": "Scopes associated with the Connection Setting",
                      "default": ""
                    },
                    "serviceProviderId": {
                      "type": "string",
                      "description": "Service Provider Id associated with the Connection Setting"
                    },
                    "serviceProviderDisplayName": {
                      "type": "string",
                      "description": "Service Provider Display Name associated with the Connection Setting"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Service Provider Parameters associated with the Connection Setting",
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for the Connection Setting Parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the Connection Setting Parameter.",
                            "x-nullable": true
                          }
                        },
                        "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the Connection Setting."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the Connection Setting."
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Client Id associated with the Connection Setting."
                    },
                    "settingId": {
                      "type": "string",
                      "description": "Setting Id set by the service for the Connection Setting.",
                      "readOnly": true
                    },
                    "clientSecret": {
                      "x-ms-secret": true,
                      "type": "string",
                      "description": "Client Secret associated with the Connection Setting"
                    },
                    "scopes": {
                      "type": "string",
                      "description": "Scopes associated with the Connection Setting",
                      "default": ""
                    },
                    "serviceProviderId": {
                      "type": "string",
                      "description": "Service Provider Id associated with the Connection Setting"
                    },
                    "serviceProviderDisplayName": {
                      "type": "string",
                      "description": "Service Provider Display Name associated with the Connection Setting"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Service Provider Parameters associated with the Connection Setting",
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for the Connection Setting Parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the Connection Setting Parameter.",
                            "x-nullable": true
                          }
                        },
                        "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BotConnection"
        ],
        "description": "Updates a Connection Setting registration for a Bot Service",
        "operationId": "BotConnection_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "connectionName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$",
            "description": "The name of the Bot Service Connection Setting resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the Connection Setting."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the Connection Setting."
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Client Id associated with the Connection Setting."
                    },
                    "settingId": {
                      "type": "string",
                      "description": "Setting Id set by the service for the Connection Setting.",
                      "readOnly": true
                    },
                    "clientSecret": {
                      "x-ms-secret": true,
                      "type": "string",
                      "description": "Client Secret associated with the Connection Setting"
                    },
                    "scopes": {
                      "type": "string",
                      "description": "Scopes associated with the Connection Setting",
                      "default": ""
                    },
                    "serviceProviderId": {
                      "type": "string",
                      "description": "Service Provider Id associated with the Connection Setting"
                    },
                    "serviceProviderDisplayName": {
                      "type": "string",
                      "description": "Service Provider Display Name associated with the Connection Setting"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Service Provider Parameters associated with the Connection Setting",
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for the Connection Setting Parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the Connection Setting Parameter.",
                            "x-nullable": true
                          }
                        },
                        "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource"
                    }
                  }
                }
              }
            },
            "description": "The parameters to provide for updating the Connection Setting."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is created successfully or already existed, the service should return 200 (OK).",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the Connection Setting."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the Connection Setting."
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Client Id associated with the Connection Setting."
                    },
                    "settingId": {
                      "type": "string",
                      "description": "Setting Id set by the service for the Connection Setting.",
                      "readOnly": true
                    },
                    "clientSecret": {
                      "x-ms-secret": true,
                      "type": "string",
                      "description": "Client Secret associated with the Connection Setting"
                    },
                    "scopes": {
                      "type": "string",
                      "description": "Scopes associated with the Connection Setting",
                      "default": ""
                    },
                    "serviceProviderId": {
                      "type": "string",
                      "description": "Service Provider Id associated with the Connection Setting"
                    },
                    "serviceProviderDisplayName": {
                      "type": "string",
                      "description": "Service Provider Display Name associated with the Connection Setting"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Service Provider Parameters associated with the Connection Setting",
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for the Connection Setting Parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the Connection Setting Parameter.",
                            "x-nullable": true
                          }
                        },
                        "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the Connection Setting."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the Connection Setting."
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Client Id associated with the Connection Setting."
                    },
                    "settingId": {
                      "type": "string",
                      "description": "Setting Id set by the service for the Connection Setting.",
                      "readOnly": true
                    },
                    "clientSecret": {
                      "x-ms-secret": true,
                      "type": "string",
                      "description": "Client Secret associated with the Connection Setting"
                    },
                    "scopes": {
                      "type": "string",
                      "description": "Scopes associated with the Connection Setting",
                      "default": ""
                    },
                    "serviceProviderId": {
                      "type": "string",
                      "description": "Service Provider Id associated with the Connection Setting"
                    },
                    "serviceProviderDisplayName": {
                      "type": "string",
                      "description": "Service Provider Display Name associated with the Connection Setting"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Service Provider Parameters associated with the Connection Setting",
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for the Connection Setting Parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the Connection Setting Parameter.",
                            "x-nullable": true
                          }
                        },
                        "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "BotConnection"
        ],
        "description": "Get a Connection Setting registration for a Bot Service",
        "operationId": "BotConnection_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "connectionName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$",
            "description": "The name of the Bot Service Connection Setting resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "type": "object",
              "description": "Bot channel resource definition",
              "properties": {
                "id": {
                  "description": "Specifies the resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Specifies the name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "location": {
                  "description": "Specifies the location of the resource.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "tags": {
                  "description": "Contains resource tags defined as key/value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "Gets or sets the SKU of the resource.",
                  "properties": {
                    "name": {
                      "description": "The sku name",
                      "type": "string",
                      "enum": [
                        "F0",
                        "S1"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the sku tier. This is based on the SKU name.",
                      "enum": [
                        "Free",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "Required. Gets or sets the Kind of the resource.",
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "sdk",
                    "designer",
                    "bot",
                    "function",
                    "azurebot"
                  ],
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Entity Tag."
                },
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Entity zones",
                  "readOnly": true
                },
                "properties": {
                  "description": "The set of properties specific to bot channel resource",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the Connection Setting."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the Connection Setting."
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Client Id associated with the Connection Setting."
                    },
                    "settingId": {
                      "type": "string",
                      "description": "Setting Id set by the service for the Connection Setting.",
                      "readOnly": true
                    },
                    "clientSecret": {
                      "x-ms-secret": true,
                      "type": "string",
                      "description": "Client Secret associated with the Connection Setting"
                    },
                    "scopes": {
                      "type": "string",
                      "description": "Scopes associated with the Connection Setting",
                      "default": ""
                    },
                    "serviceProviderId": {
                      "type": "string",
                      "description": "Service Provider Id associated with the Connection Setting"
                    },
                    "serviceProviderDisplayName": {
                      "type": "string",
                      "description": "Service Provider Display Name associated with the Connection Setting"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Service Provider Parameters associated with the Connection Setting",
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for the Connection Setting Parameter."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value associated with the Connection Setting Parameter.",
                            "x-nullable": true
                          }
                        },
                        "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BotConnection"
        ],
        "description": "Deletes a Connection Setting registration for a Bot Service",
        "operationId": "BotConnection_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "connectionName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$",
            "description": "The name of the Bot Service Connection Setting resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 (OK) should be returned if the object exists and was deleted successfully;"
          },
          "204": {
            "description": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections": {
      "get": {
        "tags": [
          "BotConnection"
        ],
        "description": "Returns all the Connection Settings registered to a particular BotService resource",
        "operationId": "BotConnection_ListByBotService",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
            "schema": {
              "properties": {
                "nextLink": {
                  "description": "The link used to get the next page of bot service connection setting resources.",
                  "type": "string"
                },
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Bot channel resource definition",
                    "properties": {
                      "id": {
                        "description": "Specifies the resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Specifies the name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "location": {
                        "description": "Specifies the location of the resource.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Specifies the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "tags": {
                        "description": "Contains resource tags defined as key/value pairs.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "sku": {
                        "description": "Gets or sets the SKU of the resource.",
                        "properties": {
                          "name": {
                            "description": "The sku name",
                            "type": "string",
                            "enum": [
                              "F0",
                              "S1"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Gets the sku tier. This is based on the SKU name.",
                            "enum": [
                              "Free",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "kind": {
                        "description": "Required. Gets or sets the Kind of the resource.",
                        "x-nullable": true,
                        "type": "string",
                        "enum": [
                          "sdk",
                          "designer",
                          "bot",
                          "function",
                          "azurebot"
                        ],
                        "x-ms-enum": {
                          "name": "Kind",
                          "modelAsString": true
                        },
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "Entity Tag."
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Entity zones",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The set of properties specific to bot channel resource",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Id of the Connection Setting."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the Connection Setting."
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Client Id associated with the Connection Setting."
                          },
                          "settingId": {
                            "type": "string",
                            "description": "Setting Id set by the service for the Connection Setting.",
                            "readOnly": true
                          },
                          "clientSecret": {
                            "x-ms-secret": true,
                            "type": "string",
                            "description": "Client Secret associated with the Connection Setting"
                          },
                          "scopes": {
                            "type": "string",
                            "description": "Scopes associated with the Connection Setting",
                            "default": ""
                          },
                          "serviceProviderId": {
                            "type": "string",
                            "description": "Service Provider Id associated with the Connection Setting"
                          },
                          "serviceProviderDisplayName": {
                            "type": "string",
                            "description": "Service Provider Display Name associated with the Connection Setting"
                          },
                          "parameters": {
                            "type": "array",
                            "description": "Service Provider Parameters associated with the Connection Setting",
                            "items": {
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Key for the Connection Setting Parameter."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value associated with the Connection Setting Parameter.",
                                  "x-nullable": true
                                }
                              },
                              "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Provisioning state of the resource"
                          }
                        }
                      }
                    }
                  },
                  "description": "Gets the list of bot service connection settings and their properties."
                }
              },
              "description": "The list of bot service connection settings response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/hostSettings": {
      "get": {
        "tags": [
          "BotHostSettings"
        ],
        "description": "Get per subscription settings needed to host bot in compute resource such as Azure App Service",
        "operationId": "HostSettings_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is retrieved successfully, the service should return 200 (OK).",
            "schema": {
              "description": "The response body returned for a request to Bot Service Management to check per subscription hostSettings",
              "type": "object",
              "properties": {
                "OAuthUrl": {
                  "description": "For in-conversation bot user authentication",
                  "type": "string"
                },
                "ToBotFromChannelOpenIdMetadataUrl": {
                  "description": "For verifying incoming tokens from the channels",
                  "type": "string"
                },
                "ToBotFromChannelTokenIssuer": {
                  "description": "For verifying incoming tokens from the channels",
                  "type": "string"
                },
                "ToBotFromEmulatorOpenIdMetadataUrl": {
                  "description": "For verifying incoming tokens from bot emulator",
                  "type": "string"
                },
                "ToChannelFromBotLoginUrl": {
                  "description": "For getting access token to channels from bot host",
                  "type": "string"
                },
                "ToChannelFromBotOAuthScope": {
                  "description": "For getting access token to channels from bot host",
                  "type": "string"
                },
                "ValidateAuthority": {
                  "description": "Per cloud OAuth setting on whether authority is validated",
                  "type": "boolean"
                },
                "BotOpenIdMetadata": {
                  "description": "Same as toBotFromChannelOpenIdMetadataUrl, used by SDK < v4.12",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/operationresults/{operationResultId}": {
      "get": {
        "tags": [
          "OperationResults"
        ],
        "description": "Get the operation result for a long running operation.",
        "operationId": "OperationResults_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationResultId",
            "in": "path",
            "description": "The ID of the operation result to get.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all of the properties of the operation result.",
            "schema": {
              "description": "The properties indicating the operation result of an operation on a service.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ID of the operation returned.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the operation result.",
                  "readOnly": true,
                  "type": "string"
                },
                "status": {
                  "description": "The status of the operation being performed.",
                  "enum": [
                    "Canceled",
                    "Succeeded",
                    "Failed",
                    "Requested",
                    "Running"
                  ],
                  "readOnly": true,
                  "type": "string",
                  "x-ms-enum": {
                    "name": "OperationResultStatus",
                    "modelAsString": true
                  }
                },
                "startTime": {
                  "format": "date-time",
                  "description": "The time that the operation was started.",
                  "readOnly": true,
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Get request accepted; the operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "description": "List all the private endpoint connections associated with the Bot.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Successfully retrieved private endpoint connections.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private endpoint connections",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "properties": {
                          "privateEndpoint": {
                            "description": "The resource of private end point.",
                            "properties": {
                              "id": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The ARM identifier for Private Endpoint"
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "groupIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Group ids"
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      }
                    },
                    "description": "The Private Endpoint Connection resource."
                  }
                }
              },
              "description": "List of private endpoint connection associated with the specified storage account"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the Bot.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the private endpoint connection properties successfully.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "groupIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Group ids"
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Create",
        "description": "Update the state of specified private endpoint connection associated with the Bot.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "groupIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Group ids"
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            },
            "description": "The private endpoint connection properties."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Update the private endpoint connection properties successfully.",
            "schema": {
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "groupIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Group ids"
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes the specified private endpoint connection associated with the Bot.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the private endpoint connection successfully."
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByBotResource",
        "description": "Gets the private link resources that need to be created for a Bot.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource group in the user subscription."
          },
          {
            "name": "resourceName",
            "x-ms-parameter-location": "method",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Version of the API to be used with the client request."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The private link resource Private link DNS zone name."
                          }
                        }
                      }
                    },
                    "description": "A private link resource"
                  }
                }
              },
              "description": "A list of private link resources"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "Azure resource",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "description": "Gets or sets the SKU of the resource.",
          "properties": {
            "name": {
              "description": "The sku name",
              "type": "string",
              "enum": [
                "F0",
                "S1"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "tier": {
              "readOnly": true,
              "type": "string",
              "description": "Gets the sku tier. This is based on the SKU name.",
              "enum": [
                "Free",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": true
              }
            }
          },
          "required": [
            "name"
          ]
        },
        "kind": {
          "description": "Required. Gets or sets the Kind of the resource.",
          "x-nullable": true,
          "type": "string",
          "enum": [
            "sdk",
            "designer",
            "bot",
            "function",
            "azurebot"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "etag": {
          "type": "string",
          "description": "Entity Tag."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Entity zones",
          "readOnly": true
        }
      }
    },
    "Sku": {
      "properties": {
        "name": {
          "description": "The sku name",
          "type": "string",
          "enum": [
            "F0",
            "S1"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the sku tier. This is based on the SKU name.",
          "enum": [
            "Free",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "name"
      ],
      "description": "The SKU of the cognitive services account."
    },
    "SkuName": {
      "type": "string",
      "description": "The name of SKU.",
      "enum": [
        "F0",
        "S1"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true
      }
    },
    "Kind": {
      "type": "string",
      "description": "Indicates the type of bot service",
      "enum": [
        "sdk",
        "designer",
        "bot",
        "function",
        "azurebot"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true
      },
      "x-ms-mutability": [
        "create",
        "read"
      ]
    },
    "Bot": {
      "type": "object",
      "description": "Bot resource definition",
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "description": "Gets or sets the SKU of the resource.",
          "properties": {
            "name": {
              "description": "The sku name",
              "type": "string",
              "enum": [
                "F0",
                "S1"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "tier": {
              "readOnly": true,
              "type": "string",
              "description": "Gets the sku tier. This is based on the SKU name.",
              "enum": [
                "Free",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": true
              }
            }
          },
          "required": [
            "name"
          ]
        },
        "kind": {
          "description": "Required. Gets or sets the Kind of the resource.",
          "x-nullable": true,
          "type": "string",
          "enum": [
            "sdk",
            "designer",
            "bot",
            "function",
            "azurebot"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "etag": {
          "type": "string",
          "description": "Entity Tag."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Entity zones",
          "readOnly": true
        },
        "properties": {
          "description": "The set of properties specific to bot resource",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "The Name of the bot"
            },
            "description": {
              "type": "string",
              "description": "The description of the bot"
            },
            "iconUrl": {
              "type": "string",
              "description": "The Icon Url of the bot",
              "default": ""
            },
            "endpoint": {
              "type": "string",
              "description": "The bot's endpoint",
              "x-nullable": true
            },
            "endpointVersion": {
              "type": "string",
              "readOnly": true,
              "description": "The bot's endpoint version"
            },
            "allSettings": {
              "description": "Contains resource all settings defined as key/value pairs.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "parameters": {
              "description": "Contains resource parameters defined as key/value pairs.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "manifestUrl": {
              "type": "string",
              "description": "The bot's manifest url"
            },
            "msaAppType": {
              "type": "string",
              "description": "Microsoft App Type for the bot",
              "enum": [
                "UserAssignedMSI",
                "SingleTenant",
                "MultiTenant"
              ],
              "x-ms-enum": {
                "name": "msaAppType",
                "modelAsString": true
              }
            },
            "msaAppId": {
              "type": "string",
              "description": "Microsoft App Id for the bot",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "msaAppTenantId": {
              "type": "string",
              "description": "Microsoft App Tenant Id for the bot",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "msaAppMSIResourceId": {
              "type": "string",
              "description": "Microsoft App Managed Identity Resource Id for the bot"
            },
            "configuredChannels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Collection of channels for which the bot is configured"
            },
            "enabledChannels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Collection of channels for which the bot is enabled"
            },
            "developerAppInsightKey": {
              "type": "string",
              "description": "The Application Insights key"
            },
            "developerAppInsightsApiKey": {
              "type": "string",
              "description": "The Application Insights Api Key"
            },
            "developerAppInsightsApplicationId": {
              "type": "string",
              "description": "The Application Insights App Id"
            },
            "luisAppIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Collection of LUIS App Ids"
            },
            "luisKey": {
              "type": "string",
              "description": "The LUIS Key"
            },
            "isCmekEnabled": {
              "type": "boolean",
              "description": "Whether Cmek is enabled",
              "default": false
            },
            "cmekKeyVaultUrl": {
              "type": "string",
              "description": "The CMK Url"
            },
            "cmekEncryptionStatus": {
              "type": "string",
              "description": "The CMK encryption status",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "The Tenant Id for the bot",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "publicNetworkAccess": {
              "description": "Whether the bot is in an isolated network",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "isStreamingSupported": {
              "type": "boolean",
              "description": "Whether the bot is streaming supported",
              "default": false
            },
            "isDeveloperAppInsightsApiKeySet": {
              "type": "boolean",
              "description": "Whether the bot is developerAppInsightsApiKey set",
              "readOnly": true
            },
            "migrationToken": {
              "type": "string",
              "description": "Token used to migrate non Azure bot to azure subscription",
              "readOnly": true
            },
            "disableLocalAuth": {
              "type": "boolean",
              "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
            },
            "schemaTransformationVersion": {
              "type": "string",
              "description": "The channel schema transformation version for the bot",
              "x-nullable": true,
              "default": null
            },
            "storageResourceId": {
              "type": "string",
              "description": "The storage resourceId for the bot"
            },
            "privateEndpointConnections": {
              "type": "array",
              "readOnly": true,
              "description": "List of Private Endpoint Connections configured for the bot",
              "items": {
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      },
                      "groupIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Group ids"
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              }
            },
            "openWithHint": {
              "type": "string",
              "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
            },
            "appPasswordHint": {
              "type": "string",
              "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "publishingCredentials": {
              "type": "string",
              "description": "Publishing credentials of the resource"
            }
          },
          "required": [
            "displayName",
            "endpoint",
            "msaAppId"
          ]
        }
      }
    },
    "BotProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The Name of the bot"
        },
        "description": {
          "type": "string",
          "description": "The description of the bot"
        },
        "iconUrl": {
          "type": "string",
          "description": "The Icon Url of the bot",
          "default": ""
        },
        "endpoint": {
          "type": "string",
          "description": "The bot's endpoint",
          "x-nullable": true
        },
        "endpointVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The bot's endpoint version"
        },
        "allSettings": {
          "description": "Contains resource all settings defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parameters": {
          "description": "Contains resource parameters defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "manifestUrl": {
          "type": "string",
          "description": "The bot's manifest url"
        },
        "msaAppType": {
          "type": "string",
          "description": "Microsoft App Type for the bot",
          "enum": [
            "UserAssignedMSI",
            "SingleTenant",
            "MultiTenant"
          ],
          "x-ms-enum": {
            "name": "msaAppType",
            "modelAsString": true
          }
        },
        "msaAppId": {
          "type": "string",
          "description": "Microsoft App Id for the bot",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "msaAppTenantId": {
          "type": "string",
          "description": "Microsoft App Tenant Id for the bot",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "msaAppMSIResourceId": {
          "type": "string",
          "description": "Microsoft App Managed Identity Resource Id for the bot"
        },
        "configuredChannels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Collection of channels for which the bot is configured"
        },
        "enabledChannels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Collection of channels for which the bot is enabled"
        },
        "developerAppInsightKey": {
          "type": "string",
          "description": "The Application Insights key"
        },
        "developerAppInsightsApiKey": {
          "type": "string",
          "description": "The Application Insights Api Key"
        },
        "developerAppInsightsApplicationId": {
          "type": "string",
          "description": "The Application Insights App Id"
        },
        "luisAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Collection of LUIS App Ids"
        },
        "luisKey": {
          "type": "string",
          "description": "The LUIS Key"
        },
        "isCmekEnabled": {
          "type": "boolean",
          "description": "Whether Cmek is enabled",
          "default": false
        },
        "cmekKeyVaultUrl": {
          "type": "string",
          "description": "The CMK Url"
        },
        "cmekEncryptionStatus": {
          "type": "string",
          "description": "The CMK encryption status",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The Tenant Id for the bot",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "publicNetworkAccess": {
          "description": "Whether the bot is in an isolated network",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "isStreamingSupported": {
          "type": "boolean",
          "description": "Whether the bot is streaming supported",
          "default": false
        },
        "isDeveloperAppInsightsApiKeySet": {
          "type": "boolean",
          "description": "Whether the bot is developerAppInsightsApiKey set",
          "readOnly": true
        },
        "migrationToken": {
          "type": "string",
          "description": "Token used to migrate non Azure bot to azure subscription",
          "readOnly": true
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
        },
        "schemaTransformationVersion": {
          "type": "string",
          "description": "The channel schema transformation version for the bot",
          "x-nullable": true,
          "default": null
        },
        "storageResourceId": {
          "type": "string",
          "description": "The storage resourceId for the bot"
        },
        "privateEndpointConnections": {
          "type": "array",
          "readOnly": true,
          "description": "List of Private Endpoint Connections configured for the bot",
          "items": {
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "properties": {
                  "privateEndpoint": {
                    "description": "The resource of private end point.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The ARM identifier for Private Endpoint"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "groupIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Group ids"
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            },
            "description": "The Private Endpoint Connection resource."
          }
        },
        "openWithHint": {
          "type": "string",
          "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
        },
        "appPasswordHint": {
          "type": "string",
          "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Provisioning state of the resource"
        },
        "publishingCredentials": {
          "type": "string",
          "description": "Publishing credentials of the resource"
        }
      },
      "description": "The parameters to provide for the Bot.",
      "required": [
        "displayName",
        "endpoint",
        "msaAppId"
      ]
    },
    "BotResponseList": {
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of bot service resources.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Bot resource definition",
            "properties": {
              "id": {
                "description": "Specifies the resource ID.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Specifies the name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Specifies the location of the resource.",
                "type": "string"
              },
              "type": {
                "description": "Specifies the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "tags": {
                "description": "Contains resource tags defined as key/value pairs.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "sku": {
                "description": "Gets or sets the SKU of the resource.",
                "properties": {
                  "name": {
                    "description": "The sku name",
                    "type": "string",
                    "enum": [
                      "F0",
                      "S1"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": true
                    }
                  },
                  "tier": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Gets the sku tier. This is based on the SKU name.",
                    "enum": [
                      "Free",
                      "Standard"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "kind": {
                "description": "Required. Gets or sets the Kind of the resource.",
                "x-nullable": true,
                "type": "string",
                "enum": [
                  "sdk",
                  "designer",
                  "bot",
                  "function",
                  "azurebot"
                ],
                "x-ms-enum": {
                  "name": "Kind",
                  "modelAsString": true
                },
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "etag": {
                "type": "string",
                "description": "Entity Tag."
              },
              "zones": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Entity zones",
                "readOnly": true
              },
              "properties": {
                "description": "The set of properties specific to bot resource",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "The Name of the bot"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the bot"
                  },
                  "iconUrl": {
                    "type": "string",
                    "description": "The Icon Url of the bot",
                    "default": ""
                  },
                  "endpoint": {
                    "type": "string",
                    "description": "The bot's endpoint",
                    "x-nullable": true
                  },
                  "endpointVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The bot's endpoint version"
                  },
                  "allSettings": {
                    "description": "Contains resource all settings defined as key/value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "parameters": {
                    "description": "Contains resource parameters defined as key/value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "manifestUrl": {
                    "type": "string",
                    "description": "The bot's manifest url"
                  },
                  "msaAppType": {
                    "type": "string",
                    "description": "Microsoft App Type for the bot",
                    "enum": [
                      "UserAssignedMSI",
                      "SingleTenant",
                      "MultiTenant"
                    ],
                    "x-ms-enum": {
                      "name": "msaAppType",
                      "modelAsString": true
                    }
                  },
                  "msaAppId": {
                    "type": "string",
                    "description": "Microsoft App Id for the bot",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "msaAppTenantId": {
                    "type": "string",
                    "description": "Microsoft App Tenant Id for the bot",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "msaAppMSIResourceId": {
                    "type": "string",
                    "description": "Microsoft App Managed Identity Resource Id for the bot"
                  },
                  "configuredChannels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true,
                    "description": "Collection of channels for which the bot is configured"
                  },
                  "enabledChannels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true,
                    "description": "Collection of channels for which the bot is enabled"
                  },
                  "developerAppInsightKey": {
                    "type": "string",
                    "description": "The Application Insights key"
                  },
                  "developerAppInsightsApiKey": {
                    "type": "string",
                    "description": "The Application Insights Api Key"
                  },
                  "developerAppInsightsApplicationId": {
                    "type": "string",
                    "description": "The Application Insights App Id"
                  },
                  "luisAppIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Collection of LUIS App Ids"
                  },
                  "luisKey": {
                    "type": "string",
                    "description": "The LUIS Key"
                  },
                  "isCmekEnabled": {
                    "type": "boolean",
                    "description": "Whether Cmek is enabled",
                    "default": false
                  },
                  "cmekKeyVaultUrl": {
                    "type": "string",
                    "description": "The CMK Url"
                  },
                  "cmekEncryptionStatus": {
                    "type": "string",
                    "description": "The CMK encryption status",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "The Tenant Id for the bot",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "publicNetworkAccess": {
                    "description": "Whether the bot is in an isolated network",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "default": "Enabled"
                  },
                  "isStreamingSupported": {
                    "type": "boolean",
                    "description": "Whether the bot is streaming supported",
                    "default": false
                  },
                  "isDeveloperAppInsightsApiKeySet": {
                    "type": "boolean",
                    "description": "Whether the bot is developerAppInsightsApiKey set",
                    "readOnly": true
                  },
                  "migrationToken": {
                    "type": "string",
                    "description": "Token used to migrate non Azure bot to azure subscription",
                    "readOnly": true
                  },
                  "disableLocalAuth": {
                    "type": "boolean",
                    "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
                  },
                  "schemaTransformationVersion": {
                    "type": "string",
                    "description": "The channel schema transformation version for the bot",
                    "x-nullable": true,
                    "default": null
                  },
                  "storageResourceId": {
                    "type": "string",
                    "description": "The storage resourceId for the bot"
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "readOnly": true,
                    "description": "List of Private Endpoint Connections configured for the bot",
                    "items": {
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Resource properties.",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The resource of private end point.",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The ARM identifier for Private Endpoint"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              }
                            },
                            "groupIds": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Group ids"
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      },
                      "description": "The Private Endpoint Connection resource."
                    }
                  },
                  "openWithHint": {
                    "type": "string",
                    "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
                  },
                  "appPasswordHint": {
                    "type": "string",
                    "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Provisioning state of the resource"
                  },
                  "publishingCredentials": {
                    "type": "string",
                    "description": "Publishing credentials of the resource"
                  }
                },
                "required": [
                  "displayName",
                  "endpoint",
                  "msaAppId"
                ]
              }
            }
          },
          "description": "Gets the list of bot service results and their properties."
        }
      },
      "description": "The list of bot service operation response."
    },
    "CreateEmailSignInUrlResponse": {
      "type": "object",
      "description": "The ARM create email sign in url operation response.",
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "properties": {
          "description": "The set of properties specific to sign in url",
          "type": "object",
          "properties": {
            "url": {
              "description": "Sign in url.",
              "type": "string"
            }
          }
        }
      }
    },
    "CreateEmailSignInUrlResponseProperties": {
      "type": "object",
      "description": "The set of properties specific to sign in url",
      "properties": {
        "url": {
          "description": "Sign in url.",
          "type": "string"
        }
      }
    },
    "ListChannelWithKeysResponse": {
      "type": "object",
      "description": "The ARM channel of list channel with keys operation response.",
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "description": "Gets or sets the SKU of the resource.",
          "properties": {
            "name": {
              "description": "The sku name",
              "type": "string",
              "enum": [
                "F0",
                "S1"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "tier": {
              "readOnly": true,
              "type": "string",
              "description": "Gets the sku tier. This is based on the SKU name.",
              "enum": [
                "Free",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": true
              }
            }
          },
          "required": [
            "name"
          ]
        },
        "kind": {
          "description": "Required. Gets or sets the Kind of the resource.",
          "x-nullable": true,
          "type": "string",
          "enum": [
            "sdk",
            "designer",
            "bot",
            "function",
            "azurebot"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "etag": {
          "type": "string",
          "description": "Entity Tag."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Entity zones",
          "readOnly": true
        },
        "properties": {
          "description": "The set of properties specific to bot channel resource",
          "type": "object",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        },
        "resource": {
          "description": "The set of properties specific to bot channel resource",
          "type": "object",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        },
        "setting": {
          "description": "Channel settings",
          "type": "object",
          "properties": {
            "extensionKey1": {
              "type": "string",
              "description": "The extensionKey1",
              "default": ""
            },
            "extensionKey2": {
              "type": "string",
              "description": "The extensionKey2",
              "default": ""
            },
            "sites": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "description": "Tenant Id"
                  },
                  "siteId": {
                    "type": "string",
                    "description": "Site Id",
                    "x-ms-mutability": [
                      "read"
                    ],
                    "readOnly": true
                  },
                  "siteName": {
                    "type": "string",
                    "description": "Site name",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "key": {
                    "type": "string",
                    "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                    "x-ms-mutability": [
                      "read"
                    ],
                    "readOnly": true
                  },
                  "key2": {
                    "type": "string",
                    "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                    "x-ms-mutability": [
                      "read"
                    ],
                    "readOnly": true
                  },
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for DirectLine channel"
                  },
                  "isTokenEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is token enabled for channel",
                    "readOnly": true
                  },
                  "isEndpointParametersEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is EndpointParameters enabled for channel"
                  },
                  "isDetailedLoggingEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is disabled detailed logging for"
                  },
                  "isBlockUserUploadEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for block user upload.",
                    "x-nullable": true,
                    "default": null
                  },
                  "isNoStorageEnabled": {
                    "type": "boolean",
                    "description": "Whether this no-storage site is disabled detailed logging for"
                  },
                  "eTag": {
                    "type": "string",
                    "description": "Entity Tag"
                  },
                  "appId": {
                    "type": "string",
                    "description": "DirectLine application id"
                  },
                  "isV1Enabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for Bot Framework V1 protocol.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "isV3Enabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for Bot Framework V3 protocol."
                  },
                  "isSecureSiteEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for authentication with Bot Framework."
                  },
                  "trustedOrigins": {
                    "type": "array",
                    "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isWebChatSpeechEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for Webchat Speech",
                    "default": false
                  },
                  "isWebchatPreviewEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for preview versions of Webchat",
                    "default": false
                  }
                },
                "required": [
                  "isEnabled",
                  "siteName"
                ],
                "description": "A site for the channel"
              },
              "description": "The list of sites"
            },
            "channelId": {
              "type": "string",
              "description": "The channel id"
            },
            "channelDisplayName": {
              "type": "string",
              "description": "The channel display name"
            },
            "botId": {
              "type": "string",
              "description": "The bot id"
            },
            "botIconUrl": {
              "type": "string",
              "description": "The bot icon url"
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            },
            "disableLocalAuth": {
              "type": "boolean",
              "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
            },
            "requireTermsAgreement": {
              "type": "boolean",
              "description": "Whether customer needs to agree to new terms.",
              "x-ms-nullable": true
            }
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource"
        },
        "entityTag": {
          "type": "string",
          "description": "Entity tag of the resource"
        },
        "changedTime": {
          "type": "string",
          "description": "Changed time of the resource"
        }
      }
    },
    "BotChannel": {
      "type": "object",
      "description": "Bot channel resource definition",
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "description": "Gets or sets the SKU of the resource.",
          "properties": {
            "name": {
              "description": "The sku name",
              "type": "string",
              "enum": [
                "F0",
                "S1"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "tier": {
              "readOnly": true,
              "type": "string",
              "description": "Gets the sku tier. This is based on the SKU name.",
              "enum": [
                "Free",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": true
              }
            }
          },
          "required": [
            "name"
          ]
        },
        "kind": {
          "description": "Required. Gets or sets the Kind of the resource.",
          "x-nullable": true,
          "type": "string",
          "enum": [
            "sdk",
            "designer",
            "bot",
            "function",
            "azurebot"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "etag": {
          "type": "string",
          "description": "Entity Tag."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Entity zones",
          "readOnly": true
        },
        "properties": {
          "description": "The set of properties specific to bot channel resource",
          "type": "object",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      }
    },
    "ChannelSettings": {
      "type": "object",
      "description": "Channel settings definition",
      "properties": {
        "extensionKey1": {
          "type": "string",
          "description": "The extensionKey1",
          "default": ""
        },
        "extensionKey2": {
          "type": "string",
          "description": "The extensionKey2",
          "default": ""
        },
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tenantId": {
                "type": "string",
                "description": "Tenant Id"
              },
              "siteId": {
                "type": "string",
                "description": "Site Id",
                "x-ms-mutability": [
                  "read"
                ],
                "readOnly": true
              },
              "siteName": {
                "type": "string",
                "description": "Site name",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "key": {
                "type": "string",
                "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                "x-ms-mutability": [
                  "read"
                ],
                "readOnly": true
              },
              "key2": {
                "type": "string",
                "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                "x-ms-mutability": [
                  "read"
                ],
                "readOnly": true
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for DirectLine channel"
              },
              "isTokenEnabled": {
                "type": "boolean",
                "description": "Whether this site is token enabled for channel",
                "readOnly": true
              },
              "isEndpointParametersEnabled": {
                "type": "boolean",
                "description": "Whether this site is EndpointParameters enabled for channel"
              },
              "isDetailedLoggingEnabled": {
                "type": "boolean",
                "description": "Whether this site is disabled detailed logging for"
              },
              "isBlockUserUploadEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for block user upload.",
                "x-nullable": true,
                "default": null
              },
              "isNoStorageEnabled": {
                "type": "boolean",
                "description": "Whether this no-storage site is disabled detailed logging for"
              },
              "eTag": {
                "type": "string",
                "description": "Entity Tag"
              },
              "appId": {
                "type": "string",
                "description": "DirectLine application id"
              },
              "isV1Enabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for Bot Framework V1 protocol.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "isV3Enabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for Bot Framework V3 protocol."
              },
              "isSecureSiteEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for authentication with Bot Framework."
              },
              "trustedOrigins": {
                "type": "array",
                "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
                "items": {
                  "type": "string"
                }
              },
              "isWebChatSpeechEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for Webchat Speech",
                "default": false
              },
              "isWebchatPreviewEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for preview versions of Webchat",
                "default": false
              }
            },
            "required": [
              "isEnabled",
              "siteName"
            ],
            "description": "A site for the channel"
          },
          "description": "The list of sites"
        },
        "channelId": {
          "type": "string",
          "description": "The channel id"
        },
        "channelDisplayName": {
          "type": "string",
          "description": "The channel display name"
        },
        "botId": {
          "type": "string",
          "description": "The bot id"
        },
        "botIconUrl": {
          "type": "string",
          "description": "The bot icon url"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
        },
        "requireTermsAgreement": {
          "type": "boolean",
          "description": "Whether customer needs to agree to new terms.",
          "x-ms-nullable": true
        }
      }
    },
    "Channel": {
      "type": "object",
      "description": "Channel definition",
      "discriminator": "channelName",
      "properties": {
        "channelName": {
          "type": "string",
          "description": "The channel name"
        },
        "etag": {
          "type": "string",
          "description": "Entity Tag of the resource",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Provisioning state of the resource"
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string",
          "default": "global"
        }
      },
      "required": [
        "channelName"
      ]
    },
    "AlexaChannel": {
      "type": "object",
      "x-ms-discriminator-value": "AlexaChannel",
      "description": "Alexa channel definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Alexa channel resource",
          "properties": {
            "alexaSkillId": {
              "type": "string",
              "description": "The Alexa skill Id"
            },
            "urlFragment": {
              "type": "string",
              "readOnly": true,
              "description": "Url fragment used in part of the Uri configured in Alexa"
            },
            "serviceEndpointUri": {
              "type": "string",
              "readOnly": true,
              "description": "Full Uri used to configured the skill in Alexa"
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            }
          },
          "required": [
            "alexaSkillId",
            "isEnabled"
          ]
        }
      }
    },
    "AlexaChannelProperties": {
      "properties": {
        "alexaSkillId": {
          "type": "string",
          "description": "The Alexa skill Id"
        },
        "urlFragment": {
          "type": "string",
          "readOnly": true,
          "description": "Url fragment used in part of the Uri configured in Alexa"
        },
        "serviceEndpointUri": {
          "type": "string",
          "readOnly": true,
          "description": "Full Uri used to configured the skill in Alexa"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "description": "The parameters to provide for the Alexa channel.",
      "required": [
        "alexaSkillId",
        "isEnabled"
      ]
    },
    "FacebookChannel": {
      "type": "object",
      "description": "Facebook channel definition",
      "x-ms-discriminator-value": "FacebookChannel",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to bot facebook channel",
          "properties": {
            "verifyToken": {
              "x-ms-secret": true,
              "type": "string",
              "readOnly": true,
              "description": "Verify token. Value only returned through POST to the action Channel List API, otherwise empty."
            },
            "pages": {
              "type": "array",
              "items": {
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Page id"
                  },
                  "accessToken": {
                    "x-ms-secret": true,
                    "type": "string",
                    "description": "Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty."
                  }
                },
                "description": "A Facebook page for Facebook channel registration",
                "required": [
                  "id"
                ]
              },
              "description": "The list of Facebook pages"
            },
            "appId": {
              "type": "string",
              "description": "Facebook application id"
            },
            "appSecret": {
              "x-ms-secret": true,
              "type": "string",
              "description": "Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty."
            },
            "callbackUrl": {
              "type": "string",
              "readOnly": true,
              "description": "Callback Url"
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            }
          },
          "required": [
            "appId",
            "isEnabled"
          ]
        }
      }
    },
    "FacebookChannelProperties": {
      "properties": {
        "verifyToken": {
          "x-ms-secret": true,
          "type": "string",
          "readOnly": true,
          "description": "Verify token. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "pages": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "Page id"
              },
              "accessToken": {
                "x-ms-secret": true,
                "type": "string",
                "description": "Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty."
              }
            },
            "description": "A Facebook page for Facebook channel registration",
            "required": [
              "id"
            ]
          },
          "description": "The list of Facebook pages"
        },
        "appId": {
          "type": "string",
          "description": "Facebook application id"
        },
        "appSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "callbackUrl": {
          "type": "string",
          "readOnly": true,
          "description": "Callback Url"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "description": "The parameters to provide for the Facebook channel.",
      "required": [
        "appId",
        "isEnabled"
      ]
    },
    "FacebookPage": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Page id"
        },
        "accessToken": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty."
        }
      },
      "description": "A Facebook page for Facebook channel registration",
      "required": [
        "id"
      ]
    },
    "EmailChannel": {
      "type": "object",
      "description": "Email channel definition",
      "x-ms-discriminator-value": "EmailChannel",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to email channel resource",
          "properties": {
            "emailAddress": {
              "type": "string",
              "description": "The email address"
            },
            "authMethod": {
              "description": "Email channel auth method. 0 Password (Default); 1 Graph.",
              "type": "number",
              "enum": [
                0,
                1
              ],
              "x-ms-enum": {
                "name": "EmailChannelAuthMethod",
                "modelAsString": false,
                "values": [
                  {
                    "value": 0,
                    "name": "Password",
                    "description": "Basic authentication."
                  },
                  {
                    "value": 1,
                    "name": "Graph",
                    "description": "Modern authentication."
                  }
                ]
              }
            },
            "password": {
              "type": "string",
              "description": "The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty."
            },
            "magicCode": {
              "type": "string",
              "description": "The magic code for setting up the modern authentication."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            }
          },
          "required": [
            "emailAddress",
            "isEnabled"
          ]
        }
      }
    },
    "EmailChannelProperties": {
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "The email address"
        },
        "authMethod": {
          "description": "Email channel auth method. 0 Password (Default); 1 Graph.",
          "type": "number",
          "enum": [
            0,
            1
          ],
          "x-ms-enum": {
            "name": "EmailChannelAuthMethod",
            "modelAsString": false,
            "values": [
              {
                "value": 0,
                "name": "Password",
                "description": "Basic authentication."
              },
              {
                "value": 1,
                "name": "Graph",
                "description": "Modern authentication."
              }
            ]
          }
        },
        "password": {
          "type": "string",
          "description": "The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "magicCode": {
          "type": "string",
          "description": "The magic code for setting up the modern authentication."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "description": "The parameters to provide for the Email channel.",
      "required": [
        "emailAddress",
        "isEnabled"
      ]
    },
    "EmailChannelAuthMethod": {
      "type": "number",
      "description": "Email channel auth method. 0 Password (Default); 1 Graph.",
      "enum": [
        0,
        1
      ],
      "x-ms-enum": {
        "name": "EmailChannelAuthMethod",
        "modelAsString": false,
        "values": [
          {
            "value": 0,
            "name": "Password",
            "description": "Basic authentication."
          },
          {
            "value": 1,
            "name": "Graph",
            "description": "Modern authentication."
          }
        ]
      }
    },
    "OutlookChannel": {
      "type": "object",
      "x-ms-discriminator-value": "OutlookChannel",
      "description": "Outlook channel definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ]
    },
    "MsTeamsChannel": {
      "type": "object",
      "x-ms-discriminator-value": "MsTeamsChannel",
      "description": "Microsoft Teams channel definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Microsoft Teams channel resource",
          "properties": {
            "enableCalling": {
              "type": "boolean",
              "description": "Enable calling for Microsoft Teams channel",
              "default": false
            },
            "callingWebhook": {
              "type": "string",
              "description": "Webhook for Microsoft Teams channel calls"
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            },
            "incomingCallRoute": {
              "type": "string",
              "description": "Webhook for Microsoft Teams channel calls"
            },
            "deploymentEnvironment": {
              "type": "string",
              "description": "Deployment environment for Microsoft Teams channel calls",
              "default": "FallbackDeploymentEnvironment"
            },
            "acceptedTerms": {
              "type": "boolean",
              "description": "Whether this channel accepted terms",
              "x-nullable": true,
              "default": null
            }
          },
          "required": [
            "isEnabled"
          ]
        }
      }
    },
    "MsTeamsChannelProperties": {
      "properties": {
        "enableCalling": {
          "type": "boolean",
          "description": "Enable calling for Microsoft Teams channel",
          "default": false
        },
        "callingWebhook": {
          "type": "string",
          "description": "Webhook for Microsoft Teams channel calls"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        },
        "incomingCallRoute": {
          "type": "string",
          "description": "Webhook for Microsoft Teams channel calls"
        },
        "deploymentEnvironment": {
          "type": "string",
          "description": "Deployment environment for Microsoft Teams channel calls",
          "default": "FallbackDeploymentEnvironment"
        },
        "acceptedTerms": {
          "type": "boolean",
          "description": "Whether this channel accepted terms",
          "x-nullable": true,
          "default": null
        }
      },
      "description": "The parameters to provide for the Microsoft Teams channel.",
      "required": [
        "isEnabled"
      ]
    },
    "SkypeChannel": {
      "type": "object",
      "description": "Skype channel definition",
      "x-ms-discriminator-value": "SkypeChannel",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Skype channel resource",
          "properties": {
            "enableMessaging": {
              "type": "boolean",
              "description": "Enable messaging for Skype channel"
            },
            "enableMediaCards": {
              "type": "boolean",
              "description": "Enable media cards for Skype channel"
            },
            "enableVideo": {
              "type": "boolean",
              "description": "Enable video for Skype channel"
            },
            "enableCalling": {
              "type": "boolean",
              "description": "Enable calling for Skype channel",
              "default": false
            },
            "enableScreenSharing": {
              "type": "boolean",
              "description": "Enable screen sharing for Skype channel"
            },
            "enableGroups": {
              "type": "boolean",
              "description": "Enable groups for Skype channel"
            },
            "groupsMode": {
              "type": "string",
              "description": "Group mode for Skype channel"
            },
            "callingWebHook": {
              "type": "string",
              "description": "Calling web hook for Skype channel"
            },
            "incomingCallRoute": {
              "type": "string",
              "description": "Incoming call route for Skype channel"
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            }
          },
          "required": [
            "isEnabled"
          ]
        }
      }
    },
    "SkypeChannelProperties": {
      "properties": {
        "enableMessaging": {
          "type": "boolean",
          "description": "Enable messaging for Skype channel"
        },
        "enableMediaCards": {
          "type": "boolean",
          "description": "Enable media cards for Skype channel"
        },
        "enableVideo": {
          "type": "boolean",
          "description": "Enable video for Skype channel"
        },
        "enableCalling": {
          "type": "boolean",
          "description": "Enable calling for Skype channel",
          "default": false
        },
        "enableScreenSharing": {
          "type": "boolean",
          "description": "Enable screen sharing for Skype channel"
        },
        "enableGroups": {
          "type": "boolean",
          "description": "Enable groups for Skype channel"
        },
        "groupsMode": {
          "type": "string",
          "description": "Group mode for Skype channel"
        },
        "callingWebHook": {
          "type": "string",
          "description": "Calling web hook for Skype channel"
        },
        "incomingCallRoute": {
          "type": "string",
          "description": "Incoming call route for Skype channel"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "description": "The parameters to provide for the Microsoft Teams channel.",
      "required": [
        "isEnabled"
      ]
    },
    "KikChannel": {
      "type": "object",
      "x-ms-discriminator-value": "KikChannel",
      "description": "Kik channel definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Kik channel resource",
          "properties": {
            "userName": {
              "type": "string",
              "description": "The Kik user name"
            },
            "apiKey": {
              "type": "string",
              "description": "Kik API key. Value only returned through POST to the action Channel List API, otherwise empty."
            },
            "isValidated": {
              "type": "boolean",
              "description": "Whether this channel is validated for the bot"
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            }
          },
          "required": [
            "userName",
            "isEnabled"
          ]
        }
      }
    },
    "KikChannelProperties": {
      "properties": {
        "userName": {
          "type": "string",
          "description": "The Kik user name"
        },
        "apiKey": {
          "type": "string",
          "description": "Kik API key. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "isValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "description": "The parameters to provide for the Kik channel.",
      "required": [
        "userName",
        "isEnabled"
      ]
    },
    "WebChatChannel": {
      "type": "object",
      "x-ms-discriminator-value": "WebChatChannel",
      "description": "Web Chat channel definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Web Chat channel resource",
          "properties": {
            "webChatEmbedCode": {
              "type": "string",
              "x-ms-mutability": [
                "read"
              ],
              "readOnly": true,
              "description": "Web chat control embed code"
            },
            "sites": {
              "type": "array",
              "items": {
                "required": [
                  "isWebchatPreviewEnabled"
                ],
                "description": "A site for the Webchat channel",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "description": "Tenant Id"
                  },
                  "siteId": {
                    "type": "string",
                    "description": "Site Id",
                    "x-ms-mutability": [
                      "read"
                    ],
                    "readOnly": true
                  },
                  "siteName": {
                    "type": "string",
                    "description": "Site name",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "key": {
                    "type": "string",
                    "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                    "x-ms-mutability": [
                      "read"
                    ],
                    "readOnly": true
                  },
                  "key2": {
                    "type": "string",
                    "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                    "x-ms-mutability": [
                      "read"
                    ],
                    "readOnly": true
                  },
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for DirectLine channel"
                  },
                  "isTokenEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is token enabled for channel",
                    "readOnly": true
                  },
                  "isEndpointParametersEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is EndpointParameters enabled for channel"
                  },
                  "isDetailedLoggingEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is disabled detailed logging for"
                  },
                  "isBlockUserUploadEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for block user upload.",
                    "x-nullable": true,
                    "default": null
                  },
                  "isNoStorageEnabled": {
                    "type": "boolean",
                    "description": "Whether this no-storage site is disabled detailed logging for"
                  },
                  "eTag": {
                    "type": "string",
                    "description": "Entity Tag"
                  },
                  "appId": {
                    "type": "string",
                    "description": "DirectLine application id"
                  },
                  "isV1Enabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for Bot Framework V1 protocol.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "isV3Enabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for Bot Framework V3 protocol."
                  },
                  "isSecureSiteEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for authentication with Bot Framework."
                  },
                  "trustedOrigins": {
                    "type": "array",
                    "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isWebChatSpeechEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for Webchat Speech",
                    "default": false
                  },
                  "isWebchatPreviewEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for preview versions of Webchat",
                    "default": false
                  }
                }
              },
              "description": "The list of Web Chat sites"
            }
          }
        }
      }
    },
    "WebChatChannelProperties": {
      "properties": {
        "webChatEmbedCode": {
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true,
          "description": "Web chat control embed code"
        },
        "sites": {
          "type": "array",
          "items": {
            "required": [
              "isWebchatPreviewEnabled"
            ],
            "description": "A site for the Webchat channel",
            "properties": {
              "tenantId": {
                "type": "string",
                "description": "Tenant Id"
              },
              "siteId": {
                "type": "string",
                "description": "Site Id",
                "x-ms-mutability": [
                  "read"
                ],
                "readOnly": true
              },
              "siteName": {
                "type": "string",
                "description": "Site name",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "key": {
                "type": "string",
                "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                "x-ms-mutability": [
                  "read"
                ],
                "readOnly": true
              },
              "key2": {
                "type": "string",
                "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                "x-ms-mutability": [
                  "read"
                ],
                "readOnly": true
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for DirectLine channel"
              },
              "isTokenEnabled": {
                "type": "boolean",
                "description": "Whether this site is token enabled for channel",
                "readOnly": true
              },
              "isEndpointParametersEnabled": {
                "type": "boolean",
                "description": "Whether this site is EndpointParameters enabled for channel"
              },
              "isDetailedLoggingEnabled": {
                "type": "boolean",
                "description": "Whether this site is disabled detailed logging for"
              },
              "isBlockUserUploadEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for block user upload.",
                "x-nullable": true,
                "default": null
              },
              "isNoStorageEnabled": {
                "type": "boolean",
                "description": "Whether this no-storage site is disabled detailed logging for"
              },
              "eTag": {
                "type": "string",
                "description": "Entity Tag"
              },
              "appId": {
                "type": "string",
                "description": "DirectLine application id"
              },
              "isV1Enabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for Bot Framework V1 protocol.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "isV3Enabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for Bot Framework V3 protocol."
              },
              "isSecureSiteEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for authentication with Bot Framework."
              },
              "trustedOrigins": {
                "type": "array",
                "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
                "items": {
                  "type": "string"
                }
              },
              "isWebChatSpeechEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for Webchat Speech",
                "default": false
              },
              "isWebchatPreviewEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for preview versions of Webchat",
                "default": false
              }
            }
          },
          "description": "The list of Web Chat sites"
        }
      },
      "description": "The parameters to provide for the Web Chat channel."
    },
    "DirectLineChannel": {
      "type": "object",
      "x-ms-discriminator-value": "DirectLineChannel",
      "description": "Direct Line channel definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Direct Line channel resource",
          "properties": {
            "sites": {
              "type": "array",
              "items": {
                "description": "A site for the Direct Line channel",
                "required": [
                  "isV1Enabled",
                  "isV3Enabled"
                ],
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "description": "Tenant Id"
                  },
                  "siteId": {
                    "type": "string",
                    "description": "Site Id",
                    "x-ms-mutability": [
                      "read"
                    ],
                    "readOnly": true
                  },
                  "siteName": {
                    "type": "string",
                    "description": "Site name",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "key": {
                    "type": "string",
                    "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                    "x-ms-mutability": [
                      "read"
                    ],
                    "readOnly": true
                  },
                  "key2": {
                    "type": "string",
                    "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                    "x-ms-mutability": [
                      "read"
                    ],
                    "readOnly": true
                  },
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for DirectLine channel"
                  },
                  "isTokenEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is token enabled for channel",
                    "readOnly": true
                  },
                  "isEndpointParametersEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is EndpointParameters enabled for channel"
                  },
                  "isDetailedLoggingEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is disabled detailed logging for"
                  },
                  "isBlockUserUploadEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for block user upload.",
                    "x-nullable": true,
                    "default": null
                  },
                  "isNoStorageEnabled": {
                    "type": "boolean",
                    "description": "Whether this no-storage site is disabled detailed logging for"
                  },
                  "eTag": {
                    "type": "string",
                    "description": "Entity Tag"
                  },
                  "appId": {
                    "type": "string",
                    "description": "DirectLine application id"
                  },
                  "isV1Enabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for Bot Framework V1 protocol.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "isV3Enabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for Bot Framework V3 protocol."
                  },
                  "isSecureSiteEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for authentication with Bot Framework."
                  },
                  "trustedOrigins": {
                    "type": "array",
                    "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isWebChatSpeechEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for Webchat Speech",
                    "default": false
                  },
                  "isWebchatPreviewEnabled": {
                    "type": "boolean",
                    "description": "Whether this site is enabled for preview versions of Webchat",
                    "default": false
                  }
                }
              },
              "description": "The list of Direct Line sites"
            },
            "extensionKey1": {
              "type": "string",
              "description": "The extensionKey1",
              "default": ""
            },
            "extensionKey2": {
              "type": "string",
              "description": "The extensionKey2",
              "default": ""
            },
            "DirectLineEmbedCode": {
              "type": "string",
              "description": "Direct Line embed code of the resource"
            }
          }
        }
      }
    },
    "DirectLineChannelProperties": {
      "properties": {
        "sites": {
          "type": "array",
          "items": {
            "description": "A site for the Direct Line channel",
            "required": [
              "isV1Enabled",
              "isV3Enabled"
            ],
            "properties": {
              "tenantId": {
                "type": "string",
                "description": "Tenant Id"
              },
              "siteId": {
                "type": "string",
                "description": "Site Id",
                "x-ms-mutability": [
                  "read"
                ],
                "readOnly": true
              },
              "siteName": {
                "type": "string",
                "description": "Site name",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "key": {
                "type": "string",
                "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                "x-ms-mutability": [
                  "read"
                ],
                "readOnly": true
              },
              "key2": {
                "type": "string",
                "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
                "x-ms-mutability": [
                  "read"
                ],
                "readOnly": true
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for DirectLine channel"
              },
              "isTokenEnabled": {
                "type": "boolean",
                "description": "Whether this site is token enabled for channel",
                "readOnly": true
              },
              "isEndpointParametersEnabled": {
                "type": "boolean",
                "description": "Whether this site is EndpointParameters enabled for channel"
              },
              "isDetailedLoggingEnabled": {
                "type": "boolean",
                "description": "Whether this site is disabled detailed logging for"
              },
              "isBlockUserUploadEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for block user upload.",
                "x-nullable": true,
                "default": null
              },
              "isNoStorageEnabled": {
                "type": "boolean",
                "description": "Whether this no-storage site is disabled detailed logging for"
              },
              "eTag": {
                "type": "string",
                "description": "Entity Tag"
              },
              "appId": {
                "type": "string",
                "description": "DirectLine application id"
              },
              "isV1Enabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for Bot Framework V1 protocol.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "isV3Enabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for Bot Framework V3 protocol."
              },
              "isSecureSiteEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for authentication with Bot Framework."
              },
              "trustedOrigins": {
                "type": "array",
                "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
                "items": {
                  "type": "string"
                }
              },
              "isWebChatSpeechEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for Webchat Speech",
                "default": false
              },
              "isWebchatPreviewEnabled": {
                "type": "boolean",
                "description": "Whether this site is enabled for preview versions of Webchat",
                "default": false
              }
            }
          },
          "description": "The list of Direct Line sites"
        },
        "extensionKey1": {
          "type": "string",
          "description": "The extensionKey1",
          "default": ""
        },
        "extensionKey2": {
          "type": "string",
          "description": "The extensionKey2",
          "default": ""
        },
        "DirectLineEmbedCode": {
          "type": "string",
          "description": "Direct Line embed code of the resource"
        }
      },
      "description": "The parameters to provide for the Direct Line channel."
    },
    "TelegramChannel": {
      "type": "object",
      "description": "Telegram channel definition",
      "x-ms-discriminator-value": "TelegramChannel",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Telegram channel resource",
          "properties": {
            "accessToken": {
              "x-ms-secret": true,
              "type": "string",
              "description": "The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty."
            },
            "isValidated": {
              "type": "boolean",
              "description": "Whether this channel is validated for the bot"
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            }
          },
          "required": [
            "isEnabled"
          ]
        }
      }
    },
    "TelegramChannelProperties": {
      "properties": {
        "accessToken": {
          "x-ms-secret": true,
          "type": "string",
          "description": "The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "isValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "description": "The parameters to provide for the Telegram channel.",
      "required": [
        "isEnabled"
      ]
    },
    "SmsChannel": {
      "type": "object",
      "description": "Sms channel definition",
      "x-ms-discriminator-value": "SmsChannel",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Sms channel resource",
          "properties": {
            "phone": {
              "type": "string",
              "description": "The Sms phone"
            },
            "accountSID": {
              "type": "string",
              "description": "The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty."
            },
            "authToken": {
              "x-ms-secret": true,
              "type": "string",
              "description": "The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty."
            },
            "isValidated": {
              "type": "boolean",
              "description": "Whether this channel is validated for the bot"
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            }
          },
          "required": [
            "phone",
            "accountSID",
            "isEnabled"
          ]
        }
      }
    },
    "SmsChannelProperties": {
      "properties": {
        "phone": {
          "type": "string",
          "description": "The Sms phone"
        },
        "accountSID": {
          "type": "string",
          "description": "The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "authToken": {
          "x-ms-secret": true,
          "type": "string",
          "description": "The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "isValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "description": "The parameters to provide for the Sms channel.",
      "required": [
        "phone",
        "accountSID",
        "isEnabled"
      ]
    },
    "SlackChannel": {
      "type": "object",
      "description": "Slack channel definition",
      "x-ms-discriminator-value": "SlackChannel",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Slack channel resource",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "The Slack client id"
            },
            "clientSecret": {
              "x-ms-secret": true,
              "type": "string",
              "description": "The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty."
            },
            "verificationToken": {
              "x-ms-secret": true,
              "type": "string",
              "description": "The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty."
            },
            "scopes": {
              "type": "string",
              "description": "The Slack permission scopes."
            },
            "landingPageUrl": {
              "type": "string",
              "description": "The Slack landing page Url"
            },
            "redirectAction": {
              "type": "string",
              "description": "The Slack redirect action",
              "readOnly": true
            },
            "lastSubmissionId": {
              "type": "string",
              "description": "The Sms auth token",
              "readOnly": true
            },
            "registerBeforeOAuthFlow": {
              "type": "boolean",
              "description": "Whether to register the settings before OAuth validation is performed. Recommended to True."
            },
            "IsValidated": {
              "type": "boolean",
              "description": "Whether this channel is validated for the bot",
              "readOnly": true
            },
            "signingSecret": {
              "x-ms-secret": true,
              "type": "string",
              "description": "The Slack signing secret."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled for the bot"
            }
          },
          "required": [
            "isEnabled"
          ]
        }
      }
    },
    "SlackChannelProperties": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The Slack client id"
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "verificationToken": {
          "x-ms-secret": true,
          "type": "string",
          "description": "The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "scopes": {
          "type": "string",
          "description": "The Slack permission scopes."
        },
        "landingPageUrl": {
          "type": "string",
          "description": "The Slack landing page Url"
        },
        "redirectAction": {
          "type": "string",
          "description": "The Slack redirect action",
          "readOnly": true
        },
        "lastSubmissionId": {
          "type": "string",
          "description": "The Sms auth token",
          "readOnly": true
        },
        "registerBeforeOAuthFlow": {
          "type": "boolean",
          "description": "Whether to register the settings before OAuth validation is performed. Recommended to True."
        },
        "IsValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot",
          "readOnly": true
        },
        "signingSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "The Slack signing secret."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "description": "The parameters to provide for the Slack channel.",
      "required": [
        "isEnabled"
      ]
    },
    "LineChannel": {
      "type": "object",
      "description": "Line channel definition",
      "x-ms-discriminator-value": "LineChannel",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to line channel resource",
          "properties": {
            "lineRegistrations": {
              "type": "array",
              "description": "The list of line channel registrations",
              "items": {
                "properties": {
                  "generatedId": {
                    "x-ms-mutability": [
                      "read"
                    ],
                    "type": "string",
                    "description": "Id generated for the line channel registration",
                    "readOnly": true
                  },
                  "channelSecret": {
                    "x-ms-secret": true,
                    "type": "string",
                    "description": "Secret for the line channel registration"
                  },
                  "channelAccessToken": {
                    "x-ms-secret": true,
                    "type": "string",
                    "description": "Access token for the line channel registration"
                  }
                },
                "description": "The properties corresponding to a line channel registration"
              }
            },
            "callbackUrl": {
              "type": "string",
              "description": "Callback Url to enter in line registration.",
              "readOnly": true
            },
            "isValidated": {
              "type": "boolean",
              "description": "Whether this channel is validated for the bot",
              "readOnly": true
            }
          },
          "required": [
            "lineRegistrations"
          ]
        }
      }
    },
    "LineChannelProperties": {
      "properties": {
        "lineRegistrations": {
          "type": "array",
          "description": "The list of line channel registrations",
          "items": {
            "properties": {
              "generatedId": {
                "x-ms-mutability": [
                  "read"
                ],
                "type": "string",
                "description": "Id generated for the line channel registration",
                "readOnly": true
              },
              "channelSecret": {
                "x-ms-secret": true,
                "type": "string",
                "description": "Secret for the line channel registration"
              },
              "channelAccessToken": {
                "x-ms-secret": true,
                "type": "string",
                "description": "Access token for the line channel registration"
              }
            },
            "description": "The properties corresponding to a line channel registration"
          }
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback Url to enter in line registration.",
          "readOnly": true
        },
        "isValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot",
          "readOnly": true
        }
      },
      "description": "The parameters to provide for the Line channel.",
      "required": [
        "lineRegistrations"
      ]
    },
    "LineRegistration": {
      "properties": {
        "generatedId": {
          "x-ms-mutability": [
            "read"
          ],
          "type": "string",
          "description": "Id generated for the line channel registration",
          "readOnly": true
        },
        "channelSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Secret for the line channel registration"
        },
        "channelAccessToken": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Access token for the line channel registration"
        }
      },
      "description": "The properties corresponding to a line channel registration"
    },
    "DirectLineSpeechChannel": {
      "type": "object",
      "description": "DirectLine Speech channel definition",
      "x-ms-discriminator-value": "DirectLineSpeechChannel",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to DirectLine Speech channel resource",
          "properties": {
            "cognitiveServiceResourceId": {
              "type": "string",
              "description": "The cognitive service id with this channel registration."
            },
            "cognitiveServiceRegion": {
              "type": "string",
              "description": "The cognitive service region with this channel registration.",
              "x-nullable": true
            },
            "cognitiveServiceSubscriptionKey": {
              "x-ms-secret": true,
              "type": "string",
              "description": "The cognitive service subscription key to use with this channel registration.",
              "x-nullable": true
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether this channel is enabled or not."
            },
            "customVoiceDeploymentId": {
              "type": "string",
              "description": "Custom speech model id (optional)."
            },
            "customSpeechModelId": {
              "type": "string",
              "description": "Custom voice deployment id (optional)."
            },
            "isDefaultBotForCogSvcAccount": {
              "type": "boolean",
              "description": "Make this a default bot for chosen cognitive service account."
            }
          }
        }
      }
    },
    "DirectLineSpeechChannelProperties": {
      "properties": {
        "cognitiveServiceResourceId": {
          "type": "string",
          "description": "The cognitive service id with this channel registration."
        },
        "cognitiveServiceRegion": {
          "type": "string",
          "description": "The cognitive service region with this channel registration.",
          "x-nullable": true
        },
        "cognitiveServiceSubscriptionKey": {
          "x-ms-secret": true,
          "type": "string",
          "description": "The cognitive service subscription key to use with this channel registration.",
          "x-nullable": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled or not."
        },
        "customVoiceDeploymentId": {
          "type": "string",
          "description": "Custom speech model id (optional)."
        },
        "customSpeechModelId": {
          "type": "string",
          "description": "Custom voice deployment id (optional)."
        },
        "isDefaultBotForCogSvcAccount": {
          "type": "boolean",
          "description": "Make this a default bot for chosen cognitive service account."
        }
      },
      "description": "The parameters to provide for the DirectLine Speech channel."
    },
    "Omnichannel": {
      "type": "object",
      "x-ms-discriminator-value": "Omnichannel",
      "description": "Omnichannel channel definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ]
    },
    "TelephonyChannel": {
      "type": "object",
      "x-ms-discriminator-value": "TelephonyChannel",
      "description": "Telephony channel definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ],
      "properties": {
        "properties": {
          "description": "The set of properties specific to Telephony channel resource",
          "type": "object",
          "properties": {
            "phoneNumbers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The element id."
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "The phone number."
                  },
                  "acsEndpoint": {
                    "type": "string",
                    "description": "The endpoint of ACS.",
                    "x-nullable": true
                  },
                  "acsSecret": {
                    "type": "string",
                    "description": "The secret of ACS.",
                    "x-nullable": true
                  },
                  "acsResourceId": {
                    "type": "string",
                    "description": "The resource id of ACS.",
                    "x-nullable": true
                  },
                  "cognitiveServiceSubscriptionKey": {
                    "type": "string",
                    "description": "The subscription key of cognitive service.",
                    "x-nullable": true
                  },
                  "cognitiveServiceRegion": {
                    "type": "string",
                    "description": "The service region of cognitive service.",
                    "x-nullable": true
                  },
                  "cognitiveServiceResourceId": {
                    "type": "string",
                    "description": "The resource id of cognitive service.",
                    "x-nullable": true
                  },
                  "defaultLocale": {
                    "type": "string",
                    "description": "The default locale of the phone number.",
                    "x-nullable": true
                  },
                  "offerType": {
                    "type": "string",
                    "description": "Optional Property that will determine the offering type of the phone.",
                    "x-nullable": true
                  }
                },
                "description": "A telephone number for the Telephony channel"
              },
              "description": "The list of Telephony phone numbers"
            },
            "apiConfigurations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The id of config."
                  },
                  "providerName": {
                    "type": "string",
                    "description": "The provider name.",
                    "x-nullable": true
                  },
                  "cognitiveServiceSubscriptionKey": {
                    "type": "string",
                    "description": "The cognitive service subscription key.",
                    "x-nullable": true
                  },
                  "cognitiveServiceRegion": {
                    "type": "string",
                    "description": "The cognitive service region.",
                    "x-nullable": true
                  },
                  "cognitiveServiceResourceId": {
                    "type": "string",
                    "description": "The cognitive service resourceId.",
                    "x-nullable": true
                  },
                  "defaultLocale": {
                    "type": "string",
                    "description": "The default locale.",
                    "x-nullable": true
                  }
                },
                "description": "A resource Api configuration for the Telephony channel"
              },
              "description": "The list of Telephony api configuration"
            },
            "cognitiveServiceSubscriptionKey": {
              "type": "string",
              "description": "The extensionKey1",
              "x-nullable": true
            },
            "cognitiveServiceRegion": {
              "type": "string",
              "description": "The extensionKey2",
              "x-nullable": true
            },
            "defaultLocale": {
              "type": "string",
              "description": "The default locale of the channel",
              "x-nullable": true
            },
            "premiumSKU": {
              "type": "string",
              "description": "The premium SKU applied to the channel",
              "x-nullable": true
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Whether the channel is enabled"
            }
          }
        }
      }
    },
    "TelephonyChannelProperties": {
      "type": "object",
      "properties": {
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The element id."
              },
              "phoneNumber": {
                "type": "string",
                "description": "The phone number."
              },
              "acsEndpoint": {
                "type": "string",
                "description": "The endpoint of ACS.",
                "x-nullable": true
              },
              "acsSecret": {
                "type": "string",
                "description": "The secret of ACS.",
                "x-nullable": true
              },
              "acsResourceId": {
                "type": "string",
                "description": "The resource id of ACS.",
                "x-nullable": true
              },
              "cognitiveServiceSubscriptionKey": {
                "type": "string",
                "description": "The subscription key of cognitive service.",
                "x-nullable": true
              },
              "cognitiveServiceRegion": {
                "type": "string",
                "description": "The service region of cognitive service.",
                "x-nullable": true
              },
              "cognitiveServiceResourceId": {
                "type": "string",
                "description": "The resource id of cognitive service.",
                "x-nullable": true
              },
              "defaultLocale": {
                "type": "string",
                "description": "The default locale of the phone number.",
                "x-nullable": true
              },
              "offerType": {
                "type": "string",
                "description": "Optional Property that will determine the offering type of the phone.",
                "x-nullable": true
              }
            },
            "description": "A telephone number for the Telephony channel"
          },
          "description": "The list of Telephony phone numbers"
        },
        "apiConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The id of config."
              },
              "providerName": {
                "type": "string",
                "description": "The provider name.",
                "x-nullable": true
              },
              "cognitiveServiceSubscriptionKey": {
                "type": "string",
                "description": "The cognitive service subscription key.",
                "x-nullable": true
              },
              "cognitiveServiceRegion": {
                "type": "string",
                "description": "The cognitive service region.",
                "x-nullable": true
              },
              "cognitiveServiceResourceId": {
                "type": "string",
                "description": "The cognitive service resourceId.",
                "x-nullable": true
              },
              "defaultLocale": {
                "type": "string",
                "description": "The default locale.",
                "x-nullable": true
              }
            },
            "description": "A resource Api configuration for the Telephony channel"
          },
          "description": "The list of Telephony api configuration"
        },
        "cognitiveServiceSubscriptionKey": {
          "type": "string",
          "description": "The extensionKey1",
          "x-nullable": true
        },
        "cognitiveServiceRegion": {
          "type": "string",
          "description": "The extensionKey2",
          "x-nullable": true
        },
        "defaultLocale": {
          "type": "string",
          "description": "The default locale of the channel",
          "x-nullable": true
        },
        "premiumSKU": {
          "type": "string",
          "description": "The premium SKU applied to the channel",
          "x-nullable": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether the channel is enabled"
        }
      },
      "description": "The parameters to provide for the Direct Line channel."
    },
    "AcsChatChannel": {
      "type": "object",
      "x-ms-discriminator-value": "AcsChatChannel",
      "description": "AcsChat channel definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ]
    },
    "SearchAssistant": {
      "type": "object",
      "x-ms-discriminator-value": "SearchAssistant",
      "description": "SearchAssistant definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ]
    },
    "M365Extensions": {
      "type": "object",
      "x-ms-discriminator-value": "M365Extensions",
      "description": "M365 Extensions definition",
      "allOf": [
        {
          "type": "object",
          "description": "Channel definition",
          "discriminator": "channelName",
          "properties": {
            "channelName": {
              "type": "string",
              "description": "The channel name"
            },
            "etag": {
              "type": "string",
              "description": "Entity Tag of the resource",
              "x-nullable": true,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Provisioning state of the resource"
            },
            "location": {
              "description": "Specifies the location of the resource.",
              "type": "string",
              "default": "global"
            }
          },
          "required": [
            "channelName"
          ]
        }
      ]
    },
    "ChannelResponseList": {
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of bot service channel resources.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Bot channel resource definition",
            "properties": {
              "id": {
                "description": "Specifies the resource ID.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Specifies the name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Specifies the location of the resource.",
                "type": "string"
              },
              "type": {
                "description": "Specifies the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "tags": {
                "description": "Contains resource tags defined as key/value pairs.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "sku": {
                "description": "Gets or sets the SKU of the resource.",
                "properties": {
                  "name": {
                    "description": "The sku name",
                    "type": "string",
                    "enum": [
                      "F0",
                      "S1"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": true
                    }
                  },
                  "tier": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Gets the sku tier. This is based on the SKU name.",
                    "enum": [
                      "Free",
                      "Standard"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "kind": {
                "description": "Required. Gets or sets the Kind of the resource.",
                "x-nullable": true,
                "type": "string",
                "enum": [
                  "sdk",
                  "designer",
                  "bot",
                  "function",
                  "azurebot"
                ],
                "x-ms-enum": {
                  "name": "Kind",
                  "modelAsString": true
                },
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "etag": {
                "type": "string",
                "description": "Entity Tag."
              },
              "zones": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Entity zones",
                "readOnly": true
              },
              "properties": {
                "description": "The set of properties specific to bot channel resource",
                "type": "object",
                "discriminator": "channelName",
                "properties": {
                  "channelName": {
                    "type": "string",
                    "description": "The channel name"
                  },
                  "etag": {
                    "type": "string",
                    "description": "Entity Tag of the resource",
                    "x-nullable": true,
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Provisioning state of the resource"
                  },
                  "location": {
                    "description": "Specifies the location of the resource.",
                    "type": "string",
                    "default": "global"
                  }
                },
                "required": [
                  "channelName"
                ]
              }
            }
          },
          "description": "Gets the list of bot service channel results and their properties."
        }
      },
      "description": "The list of bot service channel operation response."
    },
    "WebChatSite": {
      "required": [
        "isWebchatPreviewEnabled"
      ],
      "description": "A site for the Webchat channel",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "siteId": {
          "type": "string",
          "description": "Site Id",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "siteName": {
          "type": "string",
          "description": "Site name",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "key": {
          "type": "string",
          "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "key2": {
          "type": "string",
          "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for DirectLine channel"
        },
        "isTokenEnabled": {
          "type": "boolean",
          "description": "Whether this site is token enabled for channel",
          "readOnly": true
        },
        "isEndpointParametersEnabled": {
          "type": "boolean",
          "description": "Whether this site is EndpointParameters enabled for channel"
        },
        "isDetailedLoggingEnabled": {
          "type": "boolean",
          "description": "Whether this site is disabled detailed logging for"
        },
        "isBlockUserUploadEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for block user upload.",
          "x-nullable": true,
          "default": null
        },
        "isNoStorageEnabled": {
          "type": "boolean",
          "description": "Whether this no-storage site is disabled detailed logging for"
        },
        "eTag": {
          "type": "string",
          "description": "Entity Tag"
        },
        "appId": {
          "type": "string",
          "description": "DirectLine application id"
        },
        "isV1Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V1 protocol.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isV3Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V3 protocol."
        },
        "isSecureSiteEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for authentication with Bot Framework."
        },
        "trustedOrigins": {
          "type": "array",
          "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
          "items": {
            "type": "string"
          }
        },
        "isWebChatSpeechEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Webchat Speech",
          "default": false
        },
        "isWebchatPreviewEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for preview versions of Webchat",
          "default": false
        }
      }
    },
    "DirectLineSite": {
      "description": "A site for the Direct Line channel",
      "required": [
        "isV1Enabled",
        "isV3Enabled"
      ],
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "siteId": {
          "type": "string",
          "description": "Site Id",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "siteName": {
          "type": "string",
          "description": "Site name",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "key": {
          "type": "string",
          "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "key2": {
          "type": "string",
          "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for DirectLine channel"
        },
        "isTokenEnabled": {
          "type": "boolean",
          "description": "Whether this site is token enabled for channel",
          "readOnly": true
        },
        "isEndpointParametersEnabled": {
          "type": "boolean",
          "description": "Whether this site is EndpointParameters enabled for channel"
        },
        "isDetailedLoggingEnabled": {
          "type": "boolean",
          "description": "Whether this site is disabled detailed logging for"
        },
        "isBlockUserUploadEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for block user upload.",
          "x-nullable": true,
          "default": null
        },
        "isNoStorageEnabled": {
          "type": "boolean",
          "description": "Whether this no-storage site is disabled detailed logging for"
        },
        "eTag": {
          "type": "string",
          "description": "Entity Tag"
        },
        "appId": {
          "type": "string",
          "description": "DirectLine application id"
        },
        "isV1Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V1 protocol.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isV3Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V3 protocol."
        },
        "isSecureSiteEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for authentication with Bot Framework."
        },
        "trustedOrigins": {
          "type": "array",
          "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
          "items": {
            "type": "string"
          }
        },
        "isWebChatSpeechEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Webchat Speech",
          "default": false
        },
        "isWebchatPreviewEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for preview versions of Webchat",
          "default": false
        }
      }
    },
    "Site": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "siteId": {
          "type": "string",
          "description": "Site Id",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "siteName": {
          "type": "string",
          "description": "Site name",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "key": {
          "type": "string",
          "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "key2": {
          "type": "string",
          "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for DirectLine channel"
        },
        "isTokenEnabled": {
          "type": "boolean",
          "description": "Whether this site is token enabled for channel",
          "readOnly": true
        },
        "isEndpointParametersEnabled": {
          "type": "boolean",
          "description": "Whether this site is EndpointParameters enabled for channel"
        },
        "isDetailedLoggingEnabled": {
          "type": "boolean",
          "description": "Whether this site is disabled detailed logging for"
        },
        "isBlockUserUploadEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for block user upload.",
          "x-nullable": true,
          "default": null
        },
        "isNoStorageEnabled": {
          "type": "boolean",
          "description": "Whether this no-storage site is disabled detailed logging for"
        },
        "eTag": {
          "type": "string",
          "description": "Entity Tag"
        },
        "appId": {
          "type": "string",
          "description": "DirectLine application id"
        },
        "isV1Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V1 protocol.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isV3Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V3 protocol."
        },
        "isSecureSiteEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for authentication with Bot Framework."
        },
        "trustedOrigins": {
          "type": "array",
          "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
          "items": {
            "type": "string"
          }
        },
        "isWebChatSpeechEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Webchat Speech",
          "default": false
        },
        "isWebchatPreviewEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for preview versions of Webchat",
          "default": false
        }
      },
      "required": [
        "isEnabled",
        "siteName"
      ],
      "description": "A site for the channel"
    },
    "SiteInfo": {
      "properties": {
        "siteName": {
          "type": "string",
          "description": "The site name",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "key": {
          "type": "string",
          "description": "Determines which key is to be regenerated",
          "enum": [
            "key1",
            "key2"
          ],
          "x-ms-enum": {
            "name": "key",
            "modelAsString": false
          }
        }
      },
      "description": "Site information for WebChat or DirectLine Channels to identify which site to regenerate keys for.",
      "type": "object",
      "required": [
        "siteName",
        "key"
      ]
    },
    "TelephonyPhoneNumbers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The element id."
        },
        "phoneNumber": {
          "type": "string",
          "description": "The phone number."
        },
        "acsEndpoint": {
          "type": "string",
          "description": "The endpoint of ACS.",
          "x-nullable": true
        },
        "acsSecret": {
          "type": "string",
          "description": "The secret of ACS.",
          "x-nullable": true
        },
        "acsResourceId": {
          "type": "string",
          "description": "The resource id of ACS.",
          "x-nullable": true
        },
        "cognitiveServiceSubscriptionKey": {
          "type": "string",
          "description": "The subscription key of cognitive service.",
          "x-nullable": true
        },
        "cognitiveServiceRegion": {
          "type": "string",
          "description": "The service region of cognitive service.",
          "x-nullable": true
        },
        "cognitiveServiceResourceId": {
          "type": "string",
          "description": "The resource id of cognitive service.",
          "x-nullable": true
        },
        "defaultLocale": {
          "type": "string",
          "description": "The default locale of the phone number.",
          "x-nullable": true
        },
        "offerType": {
          "type": "string",
          "description": "Optional Property that will determine the offering type of the phone.",
          "x-nullable": true
        }
      },
      "description": "A telephone number for the Telephony channel"
    },
    "TelephonyChannelResourceApiConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of config."
        },
        "providerName": {
          "type": "string",
          "description": "The provider name.",
          "x-nullable": true
        },
        "cognitiveServiceSubscriptionKey": {
          "type": "string",
          "description": "The cognitive service subscription key.",
          "x-nullable": true
        },
        "cognitiveServiceRegion": {
          "type": "string",
          "description": "The cognitive service region.",
          "x-nullable": true
        },
        "cognitiveServiceResourceId": {
          "type": "string",
          "description": "The cognitive service resourceId.",
          "x-nullable": true
        },
        "defaultLocale": {
          "type": "string",
          "description": "The default locale.",
          "x-nullable": true
        }
      },
      "description": "A resource Api configuration for the Telephony channel"
    },
    "ConnectionItemName": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Connection Item name that has been added in the API",
          "readOnly": true
        }
      },
      "description": "The display name of a connection Item Setting registered with the Bot"
    },
    "ConnectionSettingParameter": {
      "properties": {
        "key": {
          "type": "string",
          "description": "Key for the Connection Setting Parameter."
        },
        "value": {
          "type": "string",
          "description": "Value associated with the Connection Setting Parameter.",
          "x-nullable": true
        }
      },
      "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
    },
    "ConnectionSettingProperties": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the Connection Setting."
        },
        "name": {
          "type": "string",
          "description": "Name of the Connection Setting."
        },
        "clientId": {
          "type": "string",
          "description": "Client Id associated with the Connection Setting."
        },
        "settingId": {
          "type": "string",
          "description": "Setting Id set by the service for the Connection Setting.",
          "readOnly": true
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Client Secret associated with the Connection Setting"
        },
        "scopes": {
          "type": "string",
          "description": "Scopes associated with the Connection Setting",
          "default": ""
        },
        "serviceProviderId": {
          "type": "string",
          "description": "Service Provider Id associated with the Connection Setting"
        },
        "serviceProviderDisplayName": {
          "type": "string",
          "description": "Service Provider Display Name associated with the Connection Setting"
        },
        "parameters": {
          "type": "array",
          "description": "Service Provider Parameters associated with the Connection Setting",
          "items": {
            "properties": {
              "key": {
                "type": "string",
                "description": "Key for the Connection Setting Parameter."
              },
              "value": {
                "type": "string",
                "description": "Value associated with the Connection Setting Parameter.",
                "x-nullable": true
              }
            },
            "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource"
        }
      },
      "description": "Properties for a Connection Setting Item"
    },
    "ConnectionSetting": {
      "type": "object",
      "description": "Bot channel resource definition",
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "description": "Gets or sets the SKU of the resource.",
          "properties": {
            "name": {
              "description": "The sku name",
              "type": "string",
              "enum": [
                "F0",
                "S1"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true
              }
            },
            "tier": {
              "readOnly": true,
              "type": "string",
              "description": "Gets the sku tier. This is based on the SKU name.",
              "enum": [
                "Free",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": true
              }
            }
          },
          "required": [
            "name"
          ]
        },
        "kind": {
          "description": "Required. Gets or sets the Kind of the resource.",
          "x-nullable": true,
          "type": "string",
          "enum": [
            "sdk",
            "designer",
            "bot",
            "function",
            "azurebot"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "etag": {
          "type": "string",
          "description": "Entity Tag."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Entity zones",
          "readOnly": true
        },
        "properties": {
          "description": "The set of properties specific to bot channel resource",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id of the Connection Setting."
            },
            "name": {
              "type": "string",
              "description": "Name of the Connection Setting."
            },
            "clientId": {
              "type": "string",
              "description": "Client Id associated with the Connection Setting."
            },
            "settingId": {
              "type": "string",
              "description": "Setting Id set by the service for the Connection Setting.",
              "readOnly": true
            },
            "clientSecret": {
              "x-ms-secret": true,
              "type": "string",
              "description": "Client Secret associated with the Connection Setting"
            },
            "scopes": {
              "type": "string",
              "description": "Scopes associated with the Connection Setting",
              "default": ""
            },
            "serviceProviderId": {
              "type": "string",
              "description": "Service Provider Id associated with the Connection Setting"
            },
            "serviceProviderDisplayName": {
              "type": "string",
              "description": "Service Provider Display Name associated with the Connection Setting"
            },
            "parameters": {
              "type": "array",
              "description": "Service Provider Parameters associated with the Connection Setting",
              "items": {
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Key for the Connection Setting Parameter."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value associated with the Connection Setting Parameter.",
                    "x-nullable": true
                  }
                },
                "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
              }
            },
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the resource"
            }
          }
        }
      }
    },
    "ConnectionSettingResponseList": {
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of bot service connection setting resources.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Bot channel resource definition",
            "properties": {
              "id": {
                "description": "Specifies the resource ID.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Specifies the name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "location": {
                "description": "Specifies the location of the resource.",
                "type": "string"
              },
              "type": {
                "description": "Specifies the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "tags": {
                "description": "Contains resource tags defined as key/value pairs.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "sku": {
                "description": "Gets or sets the SKU of the resource.",
                "properties": {
                  "name": {
                    "description": "The sku name",
                    "type": "string",
                    "enum": [
                      "F0",
                      "S1"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": true
                    }
                  },
                  "tier": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Gets the sku tier. This is based on the SKU name.",
                    "enum": [
                      "Free",
                      "Standard"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "kind": {
                "description": "Required. Gets or sets the Kind of the resource.",
                "x-nullable": true,
                "type": "string",
                "enum": [
                  "sdk",
                  "designer",
                  "bot",
                  "function",
                  "azurebot"
                ],
                "x-ms-enum": {
                  "name": "Kind",
                  "modelAsString": true
                },
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "etag": {
                "type": "string",
                "description": "Entity Tag."
              },
              "zones": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Entity zones",
                "readOnly": true
              },
              "properties": {
                "description": "The set of properties specific to bot channel resource",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Id of the Connection Setting."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the Connection Setting."
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Client Id associated with the Connection Setting."
                  },
                  "settingId": {
                    "type": "string",
                    "description": "Setting Id set by the service for the Connection Setting.",
                    "readOnly": true
                  },
                  "clientSecret": {
                    "x-ms-secret": true,
                    "type": "string",
                    "description": "Client Secret associated with the Connection Setting"
                  },
                  "scopes": {
                    "type": "string",
                    "description": "Scopes associated with the Connection Setting",
                    "default": ""
                  },
                  "serviceProviderId": {
                    "type": "string",
                    "description": "Service Provider Id associated with the Connection Setting"
                  },
                  "serviceProviderDisplayName": {
                    "type": "string",
                    "description": "Service Provider Display Name associated with the Connection Setting"
                  },
                  "parameters": {
                    "type": "array",
                    "description": "Service Provider Parameters associated with the Connection Setting",
                    "items": {
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key for the Connection Setting Parameter."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value associated with the Connection Setting Parameter.",
                          "x-nullable": true
                        }
                      },
                      "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties"
                    }
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning state of the resource"
                  }
                }
              }
            }
          },
          "description": "Gets the list of bot service connection settings and their properties."
        }
      },
      "description": "The list of bot service connection settings response."
    },
    "ServiceProviderResponseList": {
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of bot service providers.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Service Provider Definition",
            "properties": {
              "properties": {
                "description": "The Properties of a Service Provider Object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Id for Service Provider",
                    "readOnly": true
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display Name of the Service Provider",
                    "readOnly": true
                  },
                  "serviceProviderName": {
                    "type": "string",
                    "description": "Name of the Service Provider",
                    "readOnly": true
                  },
                  "devPortalUrl": {
                    "type": "string",
                    "description": "URL of Dev Portal",
                    "readOnly": true
                  },
                  "iconUrl": {
                    "type": "string",
                    "description": "The URL of icon",
                    "default": ""
                  },
                  "parameters": {
                    "description": "The list of parameters for the Service Provider",
                    "type": "array",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the Service Provider",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of the Service Provider",
                          "readOnly": true
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Display Name of the Service Provider",
                          "readOnly": true
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the Service Provider",
                          "readOnly": true
                        },
                        "helpUrl": {
                          "type": "string",
                          "description": "Help Url for the  Service Provider",
                          "readOnly": true
                        },
                        "default": {
                          "type": "string",
                          "description": "Default Name for the Service Provider",
                          "readOnly": true
                        },
                        "metadata": {
                          "type": "object",
                          "description": "Meta data for the Service Provider",
                          "readOnly": true,
                          "properties": {
                            "constraints": {
                              "description": "the constraints of the bot meta data.",
                              "type": "object",
                              "properties": {
                                "required": {
                                  "description": "Whether required the constraints of the bot meta data.",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Extra Parameters specific to each Service Provider"
                    }
                  }
                }
              }
            }
          },
          "description": "Gets the list of bot service providers and their properties."
        }
      },
      "description": "The list of bot service providers response."
    },
    "ServiceProviderParameter": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Service Provider",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of the Service Provider",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Service Provider",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the Service Provider",
          "readOnly": true
        },
        "helpUrl": {
          "type": "string",
          "description": "Help Url for the  Service Provider",
          "readOnly": true
        },
        "default": {
          "type": "string",
          "description": "Default Name for the Service Provider",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "Meta data for the Service Provider",
          "readOnly": true,
          "properties": {
            "constraints": {
              "description": "the constraints of the bot meta data.",
              "type": "object",
              "properties": {
                "required": {
                  "description": "Whether required the constraints of the bot meta data.",
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "description": "Extra Parameters specific to each Service Provider"
    },
    "ServiceProviderProperties": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Id for Service Provider",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Service Provider",
          "readOnly": true
        },
        "serviceProviderName": {
          "type": "string",
          "description": "Name of the Service Provider",
          "readOnly": true
        },
        "devPortalUrl": {
          "type": "string",
          "description": "URL of Dev Portal",
          "readOnly": true
        },
        "iconUrl": {
          "type": "string",
          "description": "The URL of icon",
          "default": ""
        },
        "parameters": {
          "description": "The list of parameters for the Service Provider",
          "type": "array",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the Service Provider",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Type of the Service Provider",
                "readOnly": true
              },
              "displayName": {
                "type": "string",
                "description": "Display Name of the Service Provider",
                "readOnly": true
              },
              "description": {
                "type": "string",
                "description": "Description of the Service Provider",
                "readOnly": true
              },
              "helpUrl": {
                "type": "string",
                "description": "Help Url for the  Service Provider",
                "readOnly": true
              },
              "default": {
                "type": "string",
                "description": "Default Name for the Service Provider",
                "readOnly": true
              },
              "metadata": {
                "type": "object",
                "description": "Meta data for the Service Provider",
                "readOnly": true,
                "properties": {
                  "constraints": {
                    "description": "the constraints of the bot meta data.",
                    "type": "object",
                    "properties": {
                      "required": {
                        "description": "Whether required the constraints of the bot meta data.",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "description": "Extra Parameters specific to each Service Provider"
          }
        }
      },
      "description": "The Object used to describe a Service Provider supported by Bot Service"
    },
    "ServiceProvider": {
      "type": "object",
      "description": "Service Provider Definition",
      "properties": {
        "properties": {
          "description": "The Properties of a Service Provider Object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id for Service Provider",
              "readOnly": true
            },
            "displayName": {
              "type": "string",
              "description": "Display Name of the Service Provider",
              "readOnly": true
            },
            "serviceProviderName": {
              "type": "string",
              "description": "Name of the Service Provider",
              "readOnly": true
            },
            "devPortalUrl": {
              "type": "string",
              "description": "URL of Dev Portal",
              "readOnly": true
            },
            "iconUrl": {
              "type": "string",
              "description": "The URL of icon",
              "default": ""
            },
            "parameters": {
              "description": "The list of parameters for the Service Provider",
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Service Provider",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the Service Provider",
                    "readOnly": true
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display Name of the Service Provider",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the Service Provider",
                    "readOnly": true
                  },
                  "helpUrl": {
                    "type": "string",
                    "description": "Help Url for the  Service Provider",
                    "readOnly": true
                  },
                  "default": {
                    "type": "string",
                    "description": "Default Name for the Service Provider",
                    "readOnly": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Meta data for the Service Provider",
                    "readOnly": true,
                    "properties": {
                      "constraints": {
                        "description": "the constraints of the bot meta data.",
                        "type": "object",
                        "properties": {
                          "required": {
                            "description": "Whether required the constraints of the bot meta data.",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Extra Parameters specific to each Service Provider"
              }
            }
          }
        }
      }
    },
    "Error": {
      "properties": {
        "error": {
          "description": "The error body.",
          "properties": {
            "code": {
              "type": "string",
              "description": "error code"
            },
            "message": {
              "type": "string",
              "description": "error message"
            }
          },
          "required": [
            "code",
            "message"
          ]
        }
      },
      "description": "Bot Service error object."
    },
    "ErrorBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "error code"
        },
        "message": {
          "type": "string",
          "description": "error message"
        }
      },
      "description": "Bot Service error body.",
      "required": [
        "code",
        "message"
      ]
    },
    "OperationEntityListResult": {
      "description": "The list of bot service operation response.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of operations.",
          "type": "array",
          "items": {
            "description": "The operations supported by Bot Service Management.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Operation name: {provider}/{resource}/{operation}.",
                "type": "string"
              },
              "display": {
                "description": "The operation supported by Bot Service Management.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description of the operation.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "The action that users can perform, based on their permission level.",
                    "type": "string"
                  },
                  "provider": {
                    "description": "Service provider: Microsoft Bot Service.",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Resource on which the operation is performed.",
                    "type": "string"
                  }
                }
              },
              "origin": {
                "description": "The origin of the operation.",
                "type": "string"
              },
              "properties": {
                "description": "Additional properties.",
                "type": "object"
              }
            }
          }
        }
      }
    },
    "OperationEntity": {
      "description": "The operations supported by Bot Service Management.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "description": "The operation supported by Bot Service Management.",
          "type": "object",
          "properties": {
            "description": {
              "description": "The description of the operation.",
              "type": "string"
            },
            "operation": {
              "description": "The action that users can perform, based on their permission level.",
              "type": "string"
            },
            "provider": {
              "description": "Service provider: Microsoft Bot Service.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed.",
              "type": "string"
            }
          }
        },
        "origin": {
          "description": "The origin of the operation.",
          "type": "string"
        },
        "properties": {
          "description": "Additional properties.",
          "type": "object"
        }
      }
    },
    "OperationDisplayInfo": {
      "description": "The operation supported by Bot Service Management.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the operation.",
          "type": "string"
        },
        "operation": {
          "description": "The action that users can perform, based on their permission level.",
          "type": "string"
        },
        "provider": {
          "description": "Service provider: Microsoft Bot Service.",
          "type": "string"
        },
        "resource": {
          "description": "Resource on which the operation is performed.",
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityRequestBody": {
      "description": "The request body for a request to Bot Service Management to check availability of a bot name.",
      "type": "object",
      "properties": {
        "name": {
          "description": "the name of the bot for which availability needs to be checked.",
          "type": "string"
        },
        "type": {
          "description": "the type of the bot for which availability needs to be checked",
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityResponseBody": {
      "description": "The response body returned for a request to Bot Service Management to check availability of a bot name.",
      "type": "object",
      "properties": {
        "valid": {
          "description": "indicates if the bot name is valid.",
          "type": "boolean"
        },
        "message": {
          "description": "additional message from the bot management api showing why a bot name is not available",
          "type": "string"
        },
        "absCode": {
          "description": "response code from ABS",
          "type": "string",
          "x-ms-nullable": true
        }
      }
    },
    "HostSettingsResponse": {
      "description": "The response body returned for a request to Bot Service Management to check per subscription hostSettings",
      "type": "object",
      "properties": {
        "OAuthUrl": {
          "description": "For in-conversation bot user authentication",
          "type": "string"
        },
        "ToBotFromChannelOpenIdMetadataUrl": {
          "description": "For verifying incoming tokens from the channels",
          "type": "string"
        },
        "ToBotFromChannelTokenIssuer": {
          "description": "For verifying incoming tokens from the channels",
          "type": "string"
        },
        "ToBotFromEmulatorOpenIdMetadataUrl": {
          "description": "For verifying incoming tokens from bot emulator",
          "type": "string"
        },
        "ToChannelFromBotLoginUrl": {
          "description": "For getting access token to channels from bot host",
          "type": "string"
        },
        "ToChannelFromBotOAuthScope": {
          "description": "For getting access token to channels from bot host",
          "type": "string"
        },
        "ValidateAuthority": {
          "description": "Per cloud OAuth setting on whether authority is validated",
          "type": "boolean"
        },
        "BotOpenIdMetadata": {
          "description": "Same as toBotFromChannelOpenIdMetadataUrl, used by SDK < v4.12",
          "type": "string"
        }
      }
    },
    "QnAMakerEndpointKeysRequestBody": {
      "description": "The request body for a request to Bot Service Management to list QnA Maker endpoint keys.",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "the host name of the QnA Maker endpoint",
          "type": "string"
        },
        "authkey": {
          "description": "Subscription key which provides access to this API.",
          "type": "string"
        }
      }
    },
    "QnAMakerEndpointKeysResponse": {
      "type": "object",
      "description": "Schema for EndpointKeys generate/refresh operations.",
      "properties": {
        "primaryEndpointKey": {
          "type": "string",
          "description": "Primary Access Key."
        },
        "secondaryEndpointKey": {
          "type": "string",
          "description": "Secondary Access Key."
        },
        "installedVersion": {
          "type": "string",
          "description": "Current version of runtime."
        },
        "lastStableVersion": {
          "type": "string",
          "description": "Latest version of runtime."
        }
      }
    },
    "OperationResultsDescription": {
      "description": "The properties indicating the operation result of an operation on a service.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the operation returned.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the operation result.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the operation being performed.",
          "enum": [
            "Canceled",
            "Succeeded",
            "Failed",
            "Requested",
            "Running"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "OperationResultStatus",
            "modelAsString": true
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "The time that the operation was started.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 2,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
      "description": "The name of the Bot resource group in the user subscription."
    },
    "resourceNameParameter": {
      "name": "resourceName",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 2,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
      "description": "The name of the Bot resource."
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Azure Subscription ID.",
      "required": true,
      "type": "string"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request."
    },
    "operationResultIdParameter": {
      "name": "operationResultId",
      "in": "path",
      "description": "The ID of the operation result to get.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "connectionNameParameter": {
      "name": "connectionName",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 2,
      "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$",
      "description": "The name of the Bot Service Connection Setting resource."
    },
    "channelNameParameter": {
      "name": "channelName",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "AlexaChannel",
        "FacebookChannel",
        "EmailChannel",
        "KikChannel",
        "TelegramChannel",
        "SlackChannel",
        "MsTeamsChannel",
        "SkypeChannel",
        "WebChatChannel",
        "DirectLineChannel",
        "SmsChannel",
        "LineChannel",
        "DirectLineSpeechChannel",
        "OutlookChannel",
        "Omnichannel",
        "TelephonyChannel",
        "AcsChatChannel",
        "SearchAssistant",
        "M365Extensions"
      ],
      "x-ms-enum": {
        "name": "channelName",
        "modelAsString": false,
        "values": [
          {
            "value": "AlexaChannel"
          },
          {
            "value": "FacebookChannel"
          },
          {
            "value": "EmailChannel"
          },
          {
            "value": "KikChannel"
          },
          {
            "value": "TelegramChannel"
          },
          {
            "value": "SlackChannel"
          },
          {
            "value": "MsTeamsChannel"
          },
          {
            "value": "SkypeChannel"
          },
          {
            "value": "WebChatChannel"
          },
          {
            "value": "DirectLineChannel"
          },
          {
            "value": "SmsChannel"
          },
          {
            "value": "LineChannel"
          },
          {
            "value": "DirectLineSpeechChannel"
          },
          {
            "value": "OutlookChannel"
          },
          {
            "value": "Omnichannel"
          },
          {
            "value": "TelephonyChannel"
          },
          {
            "value": "AcsChatChannel"
          },
          {
            "value": "SearchAssistant"
          },
          {
            "value": "M365Extensions"
          }
        ]
      },
      "description": "The name of the Channel resource."
    },
    "regenerateKeyschannelNameParameter": {
      "name": "channelName",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "WebChatChannel",
        "DirectLineChannel"
      ],
      "x-ms-enum": {
        "name": "regenerateKeysChannelName",
        "modelAsString": false,
        "values": [
          {
            "value": "WebChatChannel"
          },
          {
            "value": "DirectLineChannel"
          }
        ]
      },
      "description": "The name of the Channel resource for which keys are to be regenerated."
    }
  }
}