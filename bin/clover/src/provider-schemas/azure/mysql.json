{
  "swagger": "2.0",
  "info": {
    "title": "Azure mysql",
    "version": "2024-12-30",
    "description": "Azure mysql service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.DBforMySQL/getPrivateDnsZoneSuffix": {
      "post": {
        "operationId": "GetPrivateDnsZoneSuffix_Execute",
        "description": "Get private DNS zone suffix in the cloud.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response of get private dns zone suffix.",
              "properties": {
                "privateDnsZoneSuffix": {
                  "type": "string",
                  "description": "Represents the private DNS zone suffix."
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.DBforMySQL/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The static parameters for a resource group based resource",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Operation items on this page",
                  "items": {
                    "type": "object",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "display": {
                        "description": "Localized display information for this particular operation.",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "user",
                              "value": "user",
                              "description": "Indicates the operation is initiated by a user."
                            },
                            {
                              "name": "system",
                              "value": "system",
                              "description": "Indicates the operation is initiated by a system."
                            },
                            {
                              "name": "user,system",
                              "value": "user,system",
                              "description": "Indicates the operation is initiated by a user or system."
                            }
                          ]
                        }
                      },
                      "properties": {
                        "type": "object",
                        "description": "Additional descriptions for the operation.",
                        "additionalProperties": {}
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvailabilityWithoutLocation_Execute",
        "description": "Check the availability of name for server",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request from client to check resource name availability.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Resource name to verify."
                },
                "type": {
                  "type": "string",
                  "description": "Resource type used for verification."
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Represents a resource name availability.",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error Message."
                },
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates whether the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "Reason for name being unavailable."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers": {
      "get": {
        "operationId": "Servers_List",
        "tags": [
          "Servers"
        ],
        "description": "List all the servers in a given subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Server list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Server items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a server.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of the server.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "administratorLogin": {
                            "type": "string",
                            "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "administratorLoginPassword": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the administrator login (required for server creation).",
                            "x-ms-mutability": [
                              "update",
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "version": {
                            "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                            "type": "string",
                            "enum": [
                              "5.7",
                              "8.0.21"
                            ],
                            "x-ms-enum": {
                              "name": "ServerVersion",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "5.7",
                                  "value": "5.7"
                                },
                                {
                                  "name": "8.0.21",
                                  "value": "8.0.21"
                                }
                              ]
                            }
                          },
                          "fullVersion": {
                            "type": "string",
                            "description": "Major version and actual engine version",
                            "readOnly": true
                          },
                          "availabilityZone": {
                            "type": "string",
                            "description": "availability Zone information of the server.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "createMode": {
                            "description": "The mode to create a new MySQL server.",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Default",
                              "PointInTimeRestore",
                              "Replica",
                              "GeoRestore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "PointInTimeRestore",
                                  "value": "PointInTimeRestore"
                                },
                                {
                                  "name": "Replica",
                                  "value": "Replica"
                                },
                                {
                                  "name": "GeoRestore",
                                  "value": "GeoRestore"
                                }
                              ]
                            }
                          },
                          "sourceServerResourceId": {
                            "type": "string",
                            "description": "The source MySQL server id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "restorePointInTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                            "x-ms-mutability": [
                              "create"
                            ]
                          },
                          "replicationRole": {
                            "description": "The replication role.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Source",
                              "Replica"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "Source",
                                  "value": "Source"
                                },
                                {
                                  "name": "Replica",
                                  "value": "Replica"
                                }
                              ]
                            }
                          },
                          "replicaCapacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of replicas that a primary server can have.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "dataEncryption": {
                            "description": "The Data Encryption for CMK.",
                            "type": "object",
                            "properties": {
                              "primaryUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Primary user identity resource id"
                              },
                              "primaryKeyURI": {
                                "type": "string",
                                "description": "Primary key uri"
                              },
                              "geoBackupUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                              },
                              "geoBackupKeyURI": {
                                "type": "string",
                                "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                              },
                              "type": {
                                "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                                "type": "string",
                                "enum": [
                                  "AzureKeyVault",
                                  "SystemManaged"
                                ],
                                "x-ms-enum": {
                                  "name": "DataEncryptionType",
                                  "modelAsString": false
                                }
                              }
                            }
                          },
                          "state": {
                            "description": "The state of a server.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Ready",
                              "Dropping",
                              "Disabled",
                              "Starting",
                              "Stopping",
                              "Stopped",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ServerState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Ready",
                                  "value": "Ready"
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                },
                                {
                                  "name": "Starting",
                                  "value": "Starting"
                                },
                                {
                                  "name": "Stopping",
                                  "value": "Stopping"
                                },
                                {
                                  "name": "Stopped",
                                  "value": "Stopped"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating"
                                }
                              ]
                            }
                          },
                          "fullyQualifiedDomainName": {
                            "type": "string",
                            "description": "The fully qualified domain name of a server.",
                            "readOnly": true
                          },
                          "databasePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The server database port. Can only be specified when the server is being created.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "storage": {
                            "description": "Storage related properties of a server.",
                            "type": "object",
                            "properties": {
                              "storageSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max storage size allowed for a server."
                              },
                              "iops": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Storage IOPS for a server."
                              },
                              "autoGrow": {
                                "type": "string",
                                "description": "Enable Storage Auto Grow or not.",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "logOnDisk": {
                                "type": "string",
                                "description": "Enable Log On Disk or not.",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "storageSku": {
                                "type": "string",
                                "description": "The sku name of the server storage.",
                                "readOnly": true
                              },
                              "autoIoScaling": {
                                "type": "string",
                                "description": "Enable IO Auto Scaling or not.",
                                "default": "Enabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "storageRedundancy": {
                                "type": "string",
                                "description": "The redundant type of the server storage. The parameter is used for server creation.",
                                "default": "LocalRedundancy",
                                "enum": [
                                  "LocalRedundancy",
                                  "ZoneRedundancy"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageRedundancyEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "LocalRedundancy",
                                      "value": "LocalRedundancy"
                                    },
                                    {
                                      "name": "ZoneRedundancy",
                                      "value": "ZoneRedundancy"
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          },
                          "backup": {
                            "description": "Backup related properties of a server.",
                            "type": "object",
                            "properties": {
                              "backupRetentionDays": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Backup retention days for the server."
                              },
                              "backupIntervalHours": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Backup interval hours for the server."
                              },
                              "geoRedundantBackup": {
                                "type": "string",
                                "description": "Whether or not geo redundant backup is enabled.",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "earliestRestoreDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Earliest restore point creation time (ISO8601 format)",
                                "readOnly": true
                              }
                            }
                          },
                          "highAvailability": {
                            "description": "High availability related properties of a server.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "High availability mode for a server.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "ZoneRedundant",
                                  "SameZone"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    },
                                    {
                                      "name": "ZoneRedundant",
                                      "value": "ZoneRedundant"
                                    },
                                    {
                                      "name": "SameZone",
                                      "value": "SameZone"
                                    }
                                  ]
                                }
                              },
                              "state": {
                                "description": "The state of server high availability.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "NotEnabled",
                                  "CreatingStandby",
                                  "Healthy",
                                  "FailingOver",
                                  "RemovingStandby"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "NotEnabled",
                                      "value": "NotEnabled"
                                    },
                                    {
                                      "name": "CreatingStandby",
                                      "value": "CreatingStandby"
                                    },
                                    {
                                      "name": "Healthy",
                                      "value": "Healthy"
                                    },
                                    {
                                      "name": "FailingOver",
                                      "value": "FailingOver"
                                    },
                                    {
                                      "name": "RemovingStandby",
                                      "value": "RemovingStandby"
                                    }
                                  ]
                                }
                              },
                              "standbyAvailabilityZone": {
                                "type": "string",
                                "description": "Availability zone of the standby server."
                              }
                            }
                          },
                          "network": {
                            "description": "Network related properties of a server.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "publicNetworkAccess": {
                                "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "delegatedSubnetResourceId": {
                                "type": "string",
                                "description": "Delegated subnet resource id used to setup vnet for a server."
                              },
                              "privateDnsZoneResourceId": {
                                "type": "string",
                                "description": "Private DNS zone resource id."
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "PrivateEndpointConnections related properties of a server.",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "maintenancePolicy": {
                            "description": "Maintenance policy of a server.",
                            "type": "object",
                            "properties": {
                              "patchStrategy": {
                                "description": "The patch strategy of this server",
                                "type": "string",
                                "enum": [
                                  "Regular",
                                  "VirtualCanary"
                                ],
                                "x-ms-enum": {
                                  "name": "PatchStrategy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Regular",
                                      "value": "Regular"
                                    },
                                    {
                                      "name": "VirtualCanary",
                                      "value": "VirtualCanary"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "maintenanceWindow": {
                            "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                            "x-ms-mutability": [
                              "read",
                              "update"
                            ],
                            "type": "object",
                            "properties": {
                              "customWindow": {
                                "type": "string",
                                "description": "indicates whether custom window is enabled or disabled"
                              },
                              "startHour": {
                                "type": "integer",
                                "format": "int32",
                                "description": "start hour for maintenance window"
                              },
                              "startMinute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "start minute for maintenance window"
                              },
                              "dayOfWeek": {
                                "type": "integer",
                                "format": "int32",
                                "description": "day of week for maintenance window"
                              },
                              "batchOfMaintenance": {
                                "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "Batch1",
                                  "Batch2"
                                ],
                                "x-ms-enum": {
                                  "name": "BatchOfMaintenance",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Default",
                                      "value": "Default"
                                    },
                                    {
                                      "name": "Batch1",
                                      "value": "Batch1"
                                    },
                                    {
                                      "name": "Batch2",
                                      "value": "Batch2"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "importSourceProperties": {
                            "description": "Source properties for import from storage.",
                            "type": "object",
                            "properties": {
                              "storageType": {
                                "description": "Storage type of import source.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "AzureBlob"
                                ],
                                "x-ms-enum": {
                                  "name": "ImportSourceStorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "AzureBlob",
                                      "value": "AzureBlob"
                                    }
                                  ]
                                }
                              },
                              "storageUrl": {
                                "type": "string",
                                "description": "Uri of the import source storage.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "sasToken": {
                                "type": "string",
                                "format": "password",
                                "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                                "x-ms-mutability": [
                                  "create"
                                ],
                                "x-ms-secret": true
                              },
                              "dataDirPath": {
                                "type": "string",
                                "description": "Relative path of data directory in storage.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "The cmk identity for the server.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "ObjectId from the KeyVault",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "TenantId from the KeyVault",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of managed service identity.",
                            "type": "string",
                            "enum": [
                              "UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "UserAssigned",
                                  "value": "UserAssigned"
                                }
                              ]
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "Metadata of user assigned identity.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Metadata of user assigned identity.",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "description": "Principal Id of user assigned identity",
                                  "readOnly": true,
                                  "x-ms-client-name": "PrincipalId"
                                },
                                "clientId": {
                                  "type": "string",
                                  "description": "Client Id of user assigned identity",
                                  "readOnly": true,
                                  "x-ms-client-name": "ClientId"
                                }
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "The SKU (pricing tier) of the server.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the sku, e.g. Standard_D32s_v3."
                          },
                          "tier": {
                            "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                            "type": "string",
                            "enum": [
                              "Burstable",
                              "GeneralPurpose",
                              "MemoryOptimized"
                            ],
                            "x-ms-enum": {
                              "name": "ServerSkuTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Burstable",
                                  "value": "Burstable"
                                },
                                {
                                  "name": "GeneralPurpose",
                                  "value": "GeneralPurpose"
                                },
                                {
                                  "name": "MemoryOptimized",
                                  "value": "MemoryOptimized"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "tier"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilities": {
      "get": {
        "operationId": "LocationBasedCapabilities_List",
        "description": "Get capabilities at specified location in a given subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The name of the location.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[ \\w]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "location capability",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CapabilityProperties items on this page",
                  "items": {
                    "type": "object",
                    "description": "Location capabilities.",
                    "properties": {
                      "zone": {
                        "type": "string",
                        "description": "zone name",
                        "readOnly": true
                      },
                      "supportedHAMode": {
                        "type": "array",
                        "description": "Supported high availability mode",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "supportedGeoBackupRegions": {
                        "type": "array",
                        "description": "supported geo backup regions",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "supportedFlexibleServerEditions": {
                        "type": "array",
                        "description": "A list of supported flexible server editions.",
                        "items": {
                          "type": "object",
                          "description": "Server edition capabilities.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Server edition name",
                              "readOnly": true
                            },
                            "supportedStorageEditions": {
                              "type": "array",
                              "description": "A list of supported storage editions",
                              "items": {
                                "type": "object",
                                "description": "storage edition capability",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "storage edition name",
                                    "readOnly": true
                                  },
                                  "minStorageSize": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The minimal supported storage size.",
                                    "readOnly": true
                                  },
                                  "maxStorageSize": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The maximum supported storage size.",
                                    "readOnly": true
                                  },
                                  "minBackupRetentionDays": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Minimal backup retention days",
                                    "readOnly": true
                                  },
                                  "maxBackupRetentionDays": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Maximum backup retention days",
                                    "readOnly": true
                                  },
                                  "minBackupIntervalHours": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Minimal backup interval hours",
                                    "readOnly": true
                                  },
                                  "maxBackupIntervalHours": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Maximum backup interval hours",
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": []
                            },
                            "supportedServerVersions": {
                              "type": "array",
                              "description": "A list of supported server versions.",
                              "items": {
                                "type": "object",
                                "description": "Server version capabilities.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "server version",
                                    "readOnly": true
                                  },
                                  "supportedSkus": {
                                    "type": "array",
                                    "description": "A list of supported Skus",
                                    "items": {
                                      "type": "object",
                                      "description": "Sku capability",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "vCore name",
                                          "readOnly": true
                                        },
                                        "vCores": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "supported vCores",
                                          "readOnly": true
                                        },
                                        "supportedIops": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "supported IOPS",
                                          "readOnly": true
                                        },
                                        "supportedMemoryPerVCoreMB": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "supported memory per vCore in MB",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "readOnly": true,
                                    "x-ms-identifiers": []
                                  }
                                }
                              },
                              "readOnly": true,
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilitySets": {
      "get": {
        "operationId": "LocationBasedCapabilitySet_List",
        "tags": [
          "LocationBasedCapabilitySet"
        ],
        "description": "Get capabilities at specified location in a given subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The name of the location.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[ \\w]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "location capability set",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CapabilitySetsList items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a location capability set.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of a location capability set.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "supportedGeoBackupRegions": {
                            "type": "array",
                            "description": "supported geo backup regions",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "supportedFlexibleServerEditions": {
                            "type": "array",
                            "description": "A list of supported flexible server editions.",
                            "items": {
                              "type": "object",
                              "description": "Server edition capabilities.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Server edition name",
                                  "readOnly": true
                                },
                                "defaultSku": {
                                  "type": "string",
                                  "description": "Default Sku name",
                                  "readOnly": true
                                },
                                "defaultStorageSize": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Default storage size",
                                  "readOnly": true
                                },
                                "supportedStorageEditions": {
                                  "type": "array",
                                  "description": "A list of supported storage editions",
                                  "items": {
                                    "type": "object",
                                    "description": "storage edition capability",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "storage edition name",
                                        "readOnly": true
                                      },
                                      "minStorageSize": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The minimal supported storage size.",
                                        "readOnly": true
                                      },
                                      "maxStorageSize": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The maximum supported storage size.",
                                        "readOnly": true
                                      },
                                      "minBackupRetentionDays": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Minimal backup retention days",
                                        "readOnly": true
                                      },
                                      "maxBackupRetentionDays": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Maximum backup retention days",
                                        "readOnly": true
                                      },
                                      "minBackupIntervalHours": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Minimal backup interval hours",
                                        "readOnly": true
                                      },
                                      "maxBackupIntervalHours": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Maximum backup interval hours",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "x-ms-identifiers": []
                                },
                                "supportedSkus": {
                                  "type": "array",
                                  "description": "A list of supported Skus",
                                  "items": {
                                    "type": "object",
                                    "description": "Sku capability",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "vCore name",
                                        "readOnly": true
                                      },
                                      "vCores": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "supported vCores",
                                        "readOnly": true
                                      },
                                      "supportedIops": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "supported IOPS",
                                        "readOnly": true
                                      },
                                      "supportedMemoryPerVCoreMB": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "supported memory per vCore in MB",
                                        "readOnly": true
                                      },
                                      "supportedZones": {
                                        "type": "array",
                                        "description": "Supported zones",
                                        "items": {
                                          "type": "string"
                                        },
                                        "readOnly": true
                                      },
                                      "supportedHAMode": {
                                        "type": "array",
                                        "description": "Supported high availability mode",
                                        "items": {
                                          "type": "string"
                                        },
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "supportedServerVersions": {
                            "type": "array",
                            "description": "A list of supported server versions.",
                            "items": {
                              "type": "object",
                              "description": "Server version capabilities.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "server version",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "supportedFeatures": {
                            "type": "array",
                            "description": "A list of supported features.",
                            "items": {
                              "type": "object",
                              "description": "Server version capabilities.",
                              "properties": {
                                "featureName": {
                                  "type": "string",
                                  "description": "feature name",
                                  "readOnly": true
                                },
                                "featureValue": {
                                  "type": "string",
                                  "description": "feature value",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilitySets/{capabilitySetName}": {
      "get": {
        "operationId": "LocationBasedCapabilitySet_Get",
        "tags": [
          "LocationBasedCapabilitySet"
        ],
        "description": "Get capabilities at specified location in a given subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The name of the location.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[ \\w]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "capabilitySetName",
            "in": "path",
            "description": "Name of capability set",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a location capability set.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a location capability set.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "supportedGeoBackupRegions": {
                      "type": "array",
                      "description": "supported geo backup regions",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "supportedFlexibleServerEditions": {
                      "type": "array",
                      "description": "A list of supported flexible server editions.",
                      "items": {
                        "type": "object",
                        "description": "Server edition capabilities.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Server edition name",
                            "readOnly": true
                          },
                          "defaultSku": {
                            "type": "string",
                            "description": "Default Sku name",
                            "readOnly": true
                          },
                          "defaultStorageSize": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Default storage size",
                            "readOnly": true
                          },
                          "supportedStorageEditions": {
                            "type": "array",
                            "description": "A list of supported storage editions",
                            "items": {
                              "type": "object",
                              "description": "storage edition capability",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "storage edition name",
                                  "readOnly": true
                                },
                                "minStorageSize": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The minimal supported storage size.",
                                  "readOnly": true
                                },
                                "maxStorageSize": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum supported storage size.",
                                  "readOnly": true
                                },
                                "minBackupRetentionDays": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Minimal backup retention days",
                                  "readOnly": true
                                },
                                "maxBackupRetentionDays": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Maximum backup retention days",
                                  "readOnly": true
                                },
                                "minBackupIntervalHours": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Minimal backup interval hours",
                                  "readOnly": true
                                },
                                "maxBackupIntervalHours": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Maximum backup interval hours",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "supportedSkus": {
                            "type": "array",
                            "description": "A list of supported Skus",
                            "items": {
                              "type": "object",
                              "description": "Sku capability",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "vCore name",
                                  "readOnly": true
                                },
                                "vCores": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "supported vCores",
                                  "readOnly": true
                                },
                                "supportedIops": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "supported IOPS",
                                  "readOnly": true
                                },
                                "supportedMemoryPerVCoreMB": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "supported memory per vCore in MB",
                                  "readOnly": true
                                },
                                "supportedZones": {
                                  "type": "array",
                                  "description": "Supported zones",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                },
                                "supportedHAMode": {
                                  "type": "array",
                                  "description": "Supported high availability mode",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "supportedServerVersions": {
                      "type": "array",
                      "description": "A list of supported server versions.",
                      "items": {
                        "type": "object",
                        "description": "Server version capabilities.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "server version",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "supportedFeatures": {
                      "type": "array",
                      "description": "A list of supported features.",
                      "items": {
                        "type": "object",
                        "description": "Server version capabilities.",
                        "properties": {
                          "featureName": {
                            "type": "string",
                            "description": "feature name",
                            "readOnly": true
                          },
                          "featureValue": {
                            "type": "string",
                            "description": "feature value",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvailability_Execute",
        "description": "Check the availability of name for server",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The name of the location.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[ \\w]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request from client to check resource name availability.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Resource name to verify."
                },
                "type": {
                  "type": "string",
                  "description": "Resource type used for verification."
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Represents a resource name availability.",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error Message."
                },
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates whether the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "Reason for name being unavailable."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkVirtualNetworkSubnetUsage": {
      "post": {
        "operationId": "CheckVirtualNetworkSubnetUsage_Execute",
        "description": "Get virtual network subnet usage for a given vNet resource id.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The name of the location.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[ \\w]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Virtual network subnet usage parameter",
              "properties": {
                "virtualNetworkResourceId": {
                  "type": "string",
                  "description": "Virtual network resource id."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Virtual network subnet usage data.",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The location name.",
                  "readOnly": true
                },
                "subscriptionId": {
                  "type": "string",
                  "description": "The subscription id.",
                  "readOnly": true
                },
                "delegatedSubnetsUsage": {
                  "type": "array",
                  "description": "A list of delegated subnet usage",
                  "items": {
                    "type": "object",
                    "description": "Delegated subnet usage data.",
                    "properties": {
                      "subnetName": {
                        "type": "string",
                        "description": "name of the subnet",
                        "readOnly": true
                      },
                      "usage": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of used delegated subnets",
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/operationProgress/{operationId}": {
      "get": {
        "operationId": "OperationProgress_Get",
        "summary": "Get the operation result for a long running operation.",
        "description": "Get the operation result for a long running operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The name of the location.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[ \\w]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The ID of an ongoing async operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationProgressResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/operationResults/{operationId}": {
      "get": {
        "operationId": "OperationResults_Get",
        "summary": "Get the operation result for a long running operation.",
        "description": "Get the operation result for a long running operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The name of the location.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[ \\w]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The ID of an ongoing async operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatusExtendedResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers": {
      "get": {
        "operationId": "Servers_ListByResourceGroup",
        "tags": [
          "Servers"
        ],
        "description": "List all the servers in a given resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Server list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Server items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a server.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of the server.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "administratorLogin": {
                            "type": "string",
                            "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "administratorLoginPassword": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the administrator login (required for server creation).",
                            "x-ms-mutability": [
                              "update",
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "version": {
                            "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                            "type": "string",
                            "enum": [
                              "5.7",
                              "8.0.21"
                            ],
                            "x-ms-enum": {
                              "name": "ServerVersion",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "5.7",
                                  "value": "5.7"
                                },
                                {
                                  "name": "8.0.21",
                                  "value": "8.0.21"
                                }
                              ]
                            }
                          },
                          "fullVersion": {
                            "type": "string",
                            "description": "Major version and actual engine version",
                            "readOnly": true
                          },
                          "availabilityZone": {
                            "type": "string",
                            "description": "availability Zone information of the server.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "createMode": {
                            "description": "The mode to create a new MySQL server.",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Default",
                              "PointInTimeRestore",
                              "Replica",
                              "GeoRestore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "PointInTimeRestore",
                                  "value": "PointInTimeRestore"
                                },
                                {
                                  "name": "Replica",
                                  "value": "Replica"
                                },
                                {
                                  "name": "GeoRestore",
                                  "value": "GeoRestore"
                                }
                              ]
                            }
                          },
                          "sourceServerResourceId": {
                            "type": "string",
                            "description": "The source MySQL server id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "restorePointInTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                            "x-ms-mutability": [
                              "create"
                            ]
                          },
                          "replicationRole": {
                            "description": "The replication role.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Source",
                              "Replica"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "Source",
                                  "value": "Source"
                                },
                                {
                                  "name": "Replica",
                                  "value": "Replica"
                                }
                              ]
                            }
                          },
                          "replicaCapacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of replicas that a primary server can have.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "dataEncryption": {
                            "description": "The Data Encryption for CMK.",
                            "type": "object",
                            "properties": {
                              "primaryUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Primary user identity resource id"
                              },
                              "primaryKeyURI": {
                                "type": "string",
                                "description": "Primary key uri"
                              },
                              "geoBackupUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                              },
                              "geoBackupKeyURI": {
                                "type": "string",
                                "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                              },
                              "type": {
                                "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                                "type": "string",
                                "enum": [
                                  "AzureKeyVault",
                                  "SystemManaged"
                                ],
                                "x-ms-enum": {
                                  "name": "DataEncryptionType",
                                  "modelAsString": false
                                }
                              }
                            }
                          },
                          "state": {
                            "description": "The state of a server.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Ready",
                              "Dropping",
                              "Disabled",
                              "Starting",
                              "Stopping",
                              "Stopped",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ServerState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Ready",
                                  "value": "Ready"
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                },
                                {
                                  "name": "Starting",
                                  "value": "Starting"
                                },
                                {
                                  "name": "Stopping",
                                  "value": "Stopping"
                                },
                                {
                                  "name": "Stopped",
                                  "value": "Stopped"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating"
                                }
                              ]
                            }
                          },
                          "fullyQualifiedDomainName": {
                            "type": "string",
                            "description": "The fully qualified domain name of a server.",
                            "readOnly": true
                          },
                          "databasePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The server database port. Can only be specified when the server is being created.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "storage": {
                            "description": "Storage related properties of a server.",
                            "type": "object",
                            "properties": {
                              "storageSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max storage size allowed for a server."
                              },
                              "iops": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Storage IOPS for a server."
                              },
                              "autoGrow": {
                                "type": "string",
                                "description": "Enable Storage Auto Grow or not.",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "logOnDisk": {
                                "type": "string",
                                "description": "Enable Log On Disk or not.",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "storageSku": {
                                "type": "string",
                                "description": "The sku name of the server storage.",
                                "readOnly": true
                              },
                              "autoIoScaling": {
                                "type": "string",
                                "description": "Enable IO Auto Scaling or not.",
                                "default": "Enabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "storageRedundancy": {
                                "type": "string",
                                "description": "The redundant type of the server storage. The parameter is used for server creation.",
                                "default": "LocalRedundancy",
                                "enum": [
                                  "LocalRedundancy",
                                  "ZoneRedundancy"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageRedundancyEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "LocalRedundancy",
                                      "value": "LocalRedundancy"
                                    },
                                    {
                                      "name": "ZoneRedundancy",
                                      "value": "ZoneRedundancy"
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          },
                          "backup": {
                            "description": "Backup related properties of a server.",
                            "type": "object",
                            "properties": {
                              "backupRetentionDays": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Backup retention days for the server."
                              },
                              "backupIntervalHours": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Backup interval hours for the server."
                              },
                              "geoRedundantBackup": {
                                "type": "string",
                                "description": "Whether or not geo redundant backup is enabled.",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "earliestRestoreDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Earliest restore point creation time (ISO8601 format)",
                                "readOnly": true
                              }
                            }
                          },
                          "highAvailability": {
                            "description": "High availability related properties of a server.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "High availability mode for a server.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "ZoneRedundant",
                                  "SameZone"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    },
                                    {
                                      "name": "ZoneRedundant",
                                      "value": "ZoneRedundant"
                                    },
                                    {
                                      "name": "SameZone",
                                      "value": "SameZone"
                                    }
                                  ]
                                }
                              },
                              "state": {
                                "description": "The state of server high availability.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "NotEnabled",
                                  "CreatingStandby",
                                  "Healthy",
                                  "FailingOver",
                                  "RemovingStandby"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "NotEnabled",
                                      "value": "NotEnabled"
                                    },
                                    {
                                      "name": "CreatingStandby",
                                      "value": "CreatingStandby"
                                    },
                                    {
                                      "name": "Healthy",
                                      "value": "Healthy"
                                    },
                                    {
                                      "name": "FailingOver",
                                      "value": "FailingOver"
                                    },
                                    {
                                      "name": "RemovingStandby",
                                      "value": "RemovingStandby"
                                    }
                                  ]
                                }
                              },
                              "standbyAvailabilityZone": {
                                "type": "string",
                                "description": "Availability zone of the standby server."
                              }
                            }
                          },
                          "network": {
                            "description": "Network related properties of a server.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "publicNetworkAccess": {
                                "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "delegatedSubnetResourceId": {
                                "type": "string",
                                "description": "Delegated subnet resource id used to setup vnet for a server."
                              },
                              "privateDnsZoneResourceId": {
                                "type": "string",
                                "description": "Private DNS zone resource id."
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "PrivateEndpointConnections related properties of a server.",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "maintenancePolicy": {
                            "description": "Maintenance policy of a server.",
                            "type": "object",
                            "properties": {
                              "patchStrategy": {
                                "description": "The patch strategy of this server",
                                "type": "string",
                                "enum": [
                                  "Regular",
                                  "VirtualCanary"
                                ],
                                "x-ms-enum": {
                                  "name": "PatchStrategy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Regular",
                                      "value": "Regular"
                                    },
                                    {
                                      "name": "VirtualCanary",
                                      "value": "VirtualCanary"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "maintenanceWindow": {
                            "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                            "x-ms-mutability": [
                              "read",
                              "update"
                            ],
                            "type": "object",
                            "properties": {
                              "customWindow": {
                                "type": "string",
                                "description": "indicates whether custom window is enabled or disabled"
                              },
                              "startHour": {
                                "type": "integer",
                                "format": "int32",
                                "description": "start hour for maintenance window"
                              },
                              "startMinute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "start minute for maintenance window"
                              },
                              "dayOfWeek": {
                                "type": "integer",
                                "format": "int32",
                                "description": "day of week for maintenance window"
                              },
                              "batchOfMaintenance": {
                                "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "Batch1",
                                  "Batch2"
                                ],
                                "x-ms-enum": {
                                  "name": "BatchOfMaintenance",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Default",
                                      "value": "Default"
                                    },
                                    {
                                      "name": "Batch1",
                                      "value": "Batch1"
                                    },
                                    {
                                      "name": "Batch2",
                                      "value": "Batch2"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "importSourceProperties": {
                            "description": "Source properties for import from storage.",
                            "type": "object",
                            "properties": {
                              "storageType": {
                                "description": "Storage type of import source.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "AzureBlob"
                                ],
                                "x-ms-enum": {
                                  "name": "ImportSourceStorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "AzureBlob",
                                      "value": "AzureBlob"
                                    }
                                  ]
                                }
                              },
                              "storageUrl": {
                                "type": "string",
                                "description": "Uri of the import source storage.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "sasToken": {
                                "type": "string",
                                "format": "password",
                                "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                                "x-ms-mutability": [
                                  "create"
                                ],
                                "x-ms-secret": true
                              },
                              "dataDirPath": {
                                "type": "string",
                                "description": "Relative path of data directory in storage.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "The cmk identity for the server.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "ObjectId from the KeyVault",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "TenantId from the KeyVault",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of managed service identity.",
                            "type": "string",
                            "enum": [
                              "UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "UserAssigned",
                                  "value": "UserAssigned"
                                }
                              ]
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "Metadata of user assigned identity.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Metadata of user assigned identity.",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "description": "Principal Id of user assigned identity",
                                  "readOnly": true,
                                  "x-ms-client-name": "PrincipalId"
                                },
                                "clientId": {
                                  "type": "string",
                                  "description": "Client Id of user assigned identity",
                                  "readOnly": true,
                                  "x-ms-client-name": "ClientId"
                                }
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "The SKU (pricing tier) of the server.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the sku, e.g. Standard_D32s_v3."
                          },
                          "tier": {
                            "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                            "type": "string",
                            "enum": [
                              "Burstable",
                              "GeneralPurpose",
                              "MemoryOptimized"
                            ],
                            "x-ms-enum": {
                              "name": "ServerSkuTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Burstable",
                                  "value": "Burstable"
                                },
                                {
                                  "name": "GeneralPurpose",
                                  "value": "GeneralPurpose"
                                },
                                {
                                  "name": "MemoryOptimized",
                                  "value": "MemoryOptimized"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "tier"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}": {
      "get": {
        "operationId": "Servers_Get",
        "tags": [
          "Servers"
        ],
        "description": "Gets information about a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a server.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the administrator login (required for server creation).",
                      "x-ms-mutability": [
                        "update",
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "version": {
                      "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                      "type": "string",
                      "enum": [
                        "5.7",
                        "8.0.21"
                      ],
                      "x-ms-enum": {
                        "name": "ServerVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "5.7",
                            "value": "5.7"
                          },
                          {
                            "name": "8.0.21",
                            "value": "8.0.21"
                          }
                        ]
                      }
                    },
                    "fullVersion": {
                      "type": "string",
                      "description": "Major version and actual engine version",
                      "readOnly": true
                    },
                    "availabilityZone": {
                      "type": "string",
                      "description": "availability Zone information of the server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "createMode": {
                      "description": "The mode to create a new MySQL server.",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Replica",
                        "GeoRestore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          },
                          {
                            "name": "GeoRestore",
                            "value": "GeoRestore"
                          }
                        ]
                      }
                    },
                    "sourceServerResourceId": {
                      "type": "string",
                      "description": "The source MySQL server id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                      "x-ms-mutability": [
                        "create"
                      ]
                    },
                    "replicationRole": {
                      "description": "The replication role.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Source",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Source",
                            "value": "Source"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          }
                        ]
                      }
                    },
                    "replicaCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of replicas that a primary server can have.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "dataEncryption": {
                      "description": "The Data Encryption for CMK.",
                      "type": "object",
                      "properties": {
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Primary user identity resource id"
                        },
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "Primary key uri"
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                        },
                        "type": {
                          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                          "type": "string",
                          "enum": [
                            "AzureKeyVault",
                            "SystemManaged"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": false
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "The state of a server.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Dropping",
                        "Disabled",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServerState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready"
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Starting",
                            "value": "Starting"
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping"
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          }
                        ]
                      }
                    },
                    "fullyQualifiedDomainName": {
                      "type": "string",
                      "description": "The fully qualified domain name of a server.",
                      "readOnly": true
                    },
                    "databasePort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The server database port. Can only be specified when the server is being created.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "storage": {
                      "description": "Storage related properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max storage size allowed for a server."
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Storage IOPS for a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Enable Storage Auto Grow or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "logOnDisk": {
                          "type": "string",
                          "description": "Enable Log On Disk or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageSku": {
                          "type": "string",
                          "description": "The sku name of the server storage.",
                          "readOnly": true
                        },
                        "autoIoScaling": {
                          "type": "string",
                          "description": "Enable IO Auto Scaling or not.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageRedundancy": {
                          "type": "string",
                          "description": "The redundant type of the server storage. The parameter is used for server creation.",
                          "default": "LocalRedundancy",
                          "enum": [
                            "LocalRedundancy",
                            "ZoneRedundancy"
                          ],
                          "x-ms-enum": {
                            "name": "StorageRedundancyEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "LocalRedundancy",
                                "value": "LocalRedundancy"
                              },
                              {
                                "name": "ZoneRedundancy",
                                "value": "ZoneRedundancy"
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "backup": {
                      "description": "Backup related properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup retention days for the server."
                        },
                        "backupIntervalHours": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup interval hours for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "description": "Whether or not geo redundant backup is enabled.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point creation time (ISO8601 format)",
                          "readOnly": true
                        }
                      }
                    },
                    "highAvailability": {
                      "description": "High availability related properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "High availability mode for a server.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone"
                              }
                            ]
                          }
                        },
                        "state": {
                          "description": "The state of server high availability.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "Healthy",
                            "FailingOver",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotEnabled",
                                "value": "NotEnabled"
                              },
                              {
                                "name": "CreatingStandby",
                                "value": "CreatingStandby"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "FailingOver",
                                "value": "FailingOver"
                              },
                              {
                                "name": "RemovingStandby",
                                "value": "RemovingStandby"
                              }
                            ]
                          }
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "description": "Availability zone of the standby server."
                        }
                      }
                    },
                    "network": {
                      "description": "Network related properties of a server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "description": "Delegated subnet resource id used to setup vnet for a server."
                        },
                        "privateDnsZoneResourceId": {
                          "type": "string",
                          "description": "Private DNS zone resource id."
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "PrivateEndpointConnections related properties of a server.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "maintenancePolicy": {
                      "description": "Maintenance policy of a server.",
                      "type": "object",
                      "properties": {
                        "patchStrategy": {
                          "description": "The patch strategy of this server",
                          "type": "string",
                          "enum": [
                            "Regular",
                            "VirtualCanary"
                          ],
                          "x-ms-enum": {
                            "name": "PatchStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Regular",
                                "value": "Regular"
                              },
                              {
                                "name": "VirtualCanary",
                                "value": "VirtualCanary"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "description": "indicates whether custom window is enabled or disabled"
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start hour for maintenance window"
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start minute for maintenance window"
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "description": "day of week for maintenance window"
                        },
                        "batchOfMaintenance": {
                          "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Batch1",
                            "Batch2"
                          ],
                          "x-ms-enum": {
                            "name": "BatchOfMaintenance",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Batch1",
                                "value": "Batch1"
                              },
                              {
                                "name": "Batch2",
                                "value": "Batch2"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "importSourceProperties": {
                      "description": "Source properties for import from storage.",
                      "type": "object",
                      "properties": {
                        "storageType": {
                          "description": "Storage type of import source.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "AzureBlob"
                          ],
                          "x-ms-enum": {
                            "name": "ImportSourceStorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlob",
                                "value": "AzureBlob"
                              }
                            ]
                          }
                        },
                        "storageUrl": {
                          "type": "string",
                          "description": "Uri of the import source storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "sasToken": {
                          "type": "string",
                          "format": "password",
                          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "dataDirPath": {
                          "type": "string",
                          "description": "Relative path of data directory in storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The cmk identity for the server.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "type": "string",
                      "enum": [
                        "UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "Metadata of user assigned identity.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Metadata of user assigned identity.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Principal Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "PrincipalId"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Client Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "ClientId"
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (pricing tier) of the server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the sku, e.g. Standard_D32s_v3."
                    },
                    "tier": {
                      "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                      "type": "string",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "ServerSkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Burstable",
                            "value": "Burstable"
                          },
                          {
                            "name": "GeneralPurpose",
                            "value": "GeneralPurpose"
                          },
                          {
                            "name": "MemoryOptimized",
                            "value": "MemoryOptimized"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Servers_Create",
        "tags": [
          "Servers"
        ],
        "description": "Creates a new server or updates an existing server. The update action will overwrite the existing server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for creating or updating a server.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Represents a server.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the administrator login (required for server creation).",
                      "x-ms-mutability": [
                        "update",
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "version": {
                      "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                      "type": "string",
                      "enum": [
                        "5.7",
                        "8.0.21"
                      ],
                      "x-ms-enum": {
                        "name": "ServerVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "5.7",
                            "value": "5.7"
                          },
                          {
                            "name": "8.0.21",
                            "value": "8.0.21"
                          }
                        ]
                      }
                    },
                    "fullVersion": {
                      "type": "string",
                      "description": "Major version and actual engine version",
                      "readOnly": true
                    },
                    "availabilityZone": {
                      "type": "string",
                      "description": "availability Zone information of the server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "createMode": {
                      "description": "The mode to create a new MySQL server.",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Replica",
                        "GeoRestore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          },
                          {
                            "name": "GeoRestore",
                            "value": "GeoRestore"
                          }
                        ]
                      }
                    },
                    "sourceServerResourceId": {
                      "type": "string",
                      "description": "The source MySQL server id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                      "x-ms-mutability": [
                        "create"
                      ]
                    },
                    "replicationRole": {
                      "description": "The replication role.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Source",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Source",
                            "value": "Source"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          }
                        ]
                      }
                    },
                    "replicaCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of replicas that a primary server can have.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "dataEncryption": {
                      "description": "The Data Encryption for CMK.",
                      "type": "object",
                      "properties": {
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Primary user identity resource id"
                        },
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "Primary key uri"
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                        },
                        "type": {
                          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                          "type": "string",
                          "enum": [
                            "AzureKeyVault",
                            "SystemManaged"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": false
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "The state of a server.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Dropping",
                        "Disabled",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServerState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready"
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Starting",
                            "value": "Starting"
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping"
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          }
                        ]
                      }
                    },
                    "fullyQualifiedDomainName": {
                      "type": "string",
                      "description": "The fully qualified domain name of a server.",
                      "readOnly": true
                    },
                    "databasePort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The server database port. Can only be specified when the server is being created.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "storage": {
                      "description": "Storage related properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max storage size allowed for a server."
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Storage IOPS for a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Enable Storage Auto Grow or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "logOnDisk": {
                          "type": "string",
                          "description": "Enable Log On Disk or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageSku": {
                          "type": "string",
                          "description": "The sku name of the server storage.",
                          "readOnly": true
                        },
                        "autoIoScaling": {
                          "type": "string",
                          "description": "Enable IO Auto Scaling or not.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageRedundancy": {
                          "type": "string",
                          "description": "The redundant type of the server storage. The parameter is used for server creation.",
                          "default": "LocalRedundancy",
                          "enum": [
                            "LocalRedundancy",
                            "ZoneRedundancy"
                          ],
                          "x-ms-enum": {
                            "name": "StorageRedundancyEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "LocalRedundancy",
                                "value": "LocalRedundancy"
                              },
                              {
                                "name": "ZoneRedundancy",
                                "value": "ZoneRedundancy"
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "backup": {
                      "description": "Backup related properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup retention days for the server."
                        },
                        "backupIntervalHours": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup interval hours for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "description": "Whether or not geo redundant backup is enabled.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point creation time (ISO8601 format)",
                          "readOnly": true
                        }
                      }
                    },
                    "highAvailability": {
                      "description": "High availability related properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "High availability mode for a server.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone"
                              }
                            ]
                          }
                        },
                        "state": {
                          "description": "The state of server high availability.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "Healthy",
                            "FailingOver",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotEnabled",
                                "value": "NotEnabled"
                              },
                              {
                                "name": "CreatingStandby",
                                "value": "CreatingStandby"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "FailingOver",
                                "value": "FailingOver"
                              },
                              {
                                "name": "RemovingStandby",
                                "value": "RemovingStandby"
                              }
                            ]
                          }
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "description": "Availability zone of the standby server."
                        }
                      }
                    },
                    "network": {
                      "description": "Network related properties of a server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "description": "Delegated subnet resource id used to setup vnet for a server."
                        },
                        "privateDnsZoneResourceId": {
                          "type": "string",
                          "description": "Private DNS zone resource id."
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "PrivateEndpointConnections related properties of a server.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "maintenancePolicy": {
                      "description": "Maintenance policy of a server.",
                      "type": "object",
                      "properties": {
                        "patchStrategy": {
                          "description": "The patch strategy of this server",
                          "type": "string",
                          "enum": [
                            "Regular",
                            "VirtualCanary"
                          ],
                          "x-ms-enum": {
                            "name": "PatchStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Regular",
                                "value": "Regular"
                              },
                              {
                                "name": "VirtualCanary",
                                "value": "VirtualCanary"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "description": "indicates whether custom window is enabled or disabled"
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start hour for maintenance window"
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start minute for maintenance window"
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "description": "day of week for maintenance window"
                        },
                        "batchOfMaintenance": {
                          "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Batch1",
                            "Batch2"
                          ],
                          "x-ms-enum": {
                            "name": "BatchOfMaintenance",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Batch1",
                                "value": "Batch1"
                              },
                              {
                                "name": "Batch2",
                                "value": "Batch2"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "importSourceProperties": {
                      "description": "Source properties for import from storage.",
                      "type": "object",
                      "properties": {
                        "storageType": {
                          "description": "Storage type of import source.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "AzureBlob"
                          ],
                          "x-ms-enum": {
                            "name": "ImportSourceStorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlob",
                                "value": "AzureBlob"
                              }
                            ]
                          }
                        },
                        "storageUrl": {
                          "type": "string",
                          "description": "Uri of the import source storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "sasToken": {
                          "type": "string",
                          "format": "password",
                          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "dataDirPath": {
                          "type": "string",
                          "description": "Relative path of data directory in storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The cmk identity for the server.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "type": "string",
                      "enum": [
                        "UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "Metadata of user assigned identity.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Metadata of user assigned identity.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Principal Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "PrincipalId"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Client Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "ClientId"
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (pricing tier) of the server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the sku, e.g. Standard_D32s_v3."
                    },
                    "tier": {
                      "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                      "type": "string",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "ServerSkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Burstable",
                            "value": "Burstable"
                          },
                          {
                            "name": "GeneralPurpose",
                            "value": "GeneralPurpose"
                          },
                          {
                            "name": "MemoryOptimized",
                            "value": "MemoryOptimized"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Server' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a server.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the administrator login (required for server creation).",
                      "x-ms-mutability": [
                        "update",
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "version": {
                      "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                      "type": "string",
                      "enum": [
                        "5.7",
                        "8.0.21"
                      ],
                      "x-ms-enum": {
                        "name": "ServerVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "5.7",
                            "value": "5.7"
                          },
                          {
                            "name": "8.0.21",
                            "value": "8.0.21"
                          }
                        ]
                      }
                    },
                    "fullVersion": {
                      "type": "string",
                      "description": "Major version and actual engine version",
                      "readOnly": true
                    },
                    "availabilityZone": {
                      "type": "string",
                      "description": "availability Zone information of the server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "createMode": {
                      "description": "The mode to create a new MySQL server.",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Replica",
                        "GeoRestore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          },
                          {
                            "name": "GeoRestore",
                            "value": "GeoRestore"
                          }
                        ]
                      }
                    },
                    "sourceServerResourceId": {
                      "type": "string",
                      "description": "The source MySQL server id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                      "x-ms-mutability": [
                        "create"
                      ]
                    },
                    "replicationRole": {
                      "description": "The replication role.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Source",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Source",
                            "value": "Source"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          }
                        ]
                      }
                    },
                    "replicaCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of replicas that a primary server can have.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "dataEncryption": {
                      "description": "The Data Encryption for CMK.",
                      "type": "object",
                      "properties": {
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Primary user identity resource id"
                        },
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "Primary key uri"
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                        },
                        "type": {
                          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                          "type": "string",
                          "enum": [
                            "AzureKeyVault",
                            "SystemManaged"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": false
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "The state of a server.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Dropping",
                        "Disabled",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServerState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready"
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Starting",
                            "value": "Starting"
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping"
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          }
                        ]
                      }
                    },
                    "fullyQualifiedDomainName": {
                      "type": "string",
                      "description": "The fully qualified domain name of a server.",
                      "readOnly": true
                    },
                    "databasePort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The server database port. Can only be specified when the server is being created.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "storage": {
                      "description": "Storage related properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max storage size allowed for a server."
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Storage IOPS for a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Enable Storage Auto Grow or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "logOnDisk": {
                          "type": "string",
                          "description": "Enable Log On Disk or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageSku": {
                          "type": "string",
                          "description": "The sku name of the server storage.",
                          "readOnly": true
                        },
                        "autoIoScaling": {
                          "type": "string",
                          "description": "Enable IO Auto Scaling or not.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageRedundancy": {
                          "type": "string",
                          "description": "The redundant type of the server storage. The parameter is used for server creation.",
                          "default": "LocalRedundancy",
                          "enum": [
                            "LocalRedundancy",
                            "ZoneRedundancy"
                          ],
                          "x-ms-enum": {
                            "name": "StorageRedundancyEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "LocalRedundancy",
                                "value": "LocalRedundancy"
                              },
                              {
                                "name": "ZoneRedundancy",
                                "value": "ZoneRedundancy"
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "backup": {
                      "description": "Backup related properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup retention days for the server."
                        },
                        "backupIntervalHours": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup interval hours for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "description": "Whether or not geo redundant backup is enabled.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point creation time (ISO8601 format)",
                          "readOnly": true
                        }
                      }
                    },
                    "highAvailability": {
                      "description": "High availability related properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "High availability mode for a server.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone"
                              }
                            ]
                          }
                        },
                        "state": {
                          "description": "The state of server high availability.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "Healthy",
                            "FailingOver",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotEnabled",
                                "value": "NotEnabled"
                              },
                              {
                                "name": "CreatingStandby",
                                "value": "CreatingStandby"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "FailingOver",
                                "value": "FailingOver"
                              },
                              {
                                "name": "RemovingStandby",
                                "value": "RemovingStandby"
                              }
                            ]
                          }
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "description": "Availability zone of the standby server."
                        }
                      }
                    },
                    "network": {
                      "description": "Network related properties of a server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "description": "Delegated subnet resource id used to setup vnet for a server."
                        },
                        "privateDnsZoneResourceId": {
                          "type": "string",
                          "description": "Private DNS zone resource id."
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "PrivateEndpointConnections related properties of a server.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "maintenancePolicy": {
                      "description": "Maintenance policy of a server.",
                      "type": "object",
                      "properties": {
                        "patchStrategy": {
                          "description": "The patch strategy of this server",
                          "type": "string",
                          "enum": [
                            "Regular",
                            "VirtualCanary"
                          ],
                          "x-ms-enum": {
                            "name": "PatchStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Regular",
                                "value": "Regular"
                              },
                              {
                                "name": "VirtualCanary",
                                "value": "VirtualCanary"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "description": "indicates whether custom window is enabled or disabled"
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start hour for maintenance window"
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start minute for maintenance window"
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "description": "day of week for maintenance window"
                        },
                        "batchOfMaintenance": {
                          "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Batch1",
                            "Batch2"
                          ],
                          "x-ms-enum": {
                            "name": "BatchOfMaintenance",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Batch1",
                                "value": "Batch1"
                              },
                              {
                                "name": "Batch2",
                                "value": "Batch2"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "importSourceProperties": {
                      "description": "Source properties for import from storage.",
                      "type": "object",
                      "properties": {
                        "storageType": {
                          "description": "Storage type of import source.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "AzureBlob"
                          ],
                          "x-ms-enum": {
                            "name": "ImportSourceStorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlob",
                                "value": "AzureBlob"
                              }
                            ]
                          }
                        },
                        "storageUrl": {
                          "type": "string",
                          "description": "Uri of the import source storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "sasToken": {
                          "type": "string",
                          "format": "password",
                          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "dataDirPath": {
                          "type": "string",
                          "description": "Relative path of data directory in storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The cmk identity for the server.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "type": "string",
                      "enum": [
                        "UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "Metadata of user assigned identity.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Metadata of user assigned identity.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Principal Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "PrincipalId"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Client Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "ClientId"
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (pricing tier) of the server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the sku, e.g. Standard_D32s_v3."
                    },
                    "tier": {
                      "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                      "type": "string",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "ServerSkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Burstable",
                            "value": "Burstable"
                          },
                          {
                            "name": "GeneralPurpose",
                            "value": "GeneralPurpose"
                          },
                          {
                            "name": "MemoryOptimized",
                            "value": "MemoryOptimized"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Server' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a server.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the administrator login (required for server creation).",
                      "x-ms-mutability": [
                        "update",
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "version": {
                      "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                      "type": "string",
                      "enum": [
                        "5.7",
                        "8.0.21"
                      ],
                      "x-ms-enum": {
                        "name": "ServerVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "5.7",
                            "value": "5.7"
                          },
                          {
                            "name": "8.0.21",
                            "value": "8.0.21"
                          }
                        ]
                      }
                    },
                    "fullVersion": {
                      "type": "string",
                      "description": "Major version and actual engine version",
                      "readOnly": true
                    },
                    "availabilityZone": {
                      "type": "string",
                      "description": "availability Zone information of the server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "createMode": {
                      "description": "The mode to create a new MySQL server.",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Replica",
                        "GeoRestore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          },
                          {
                            "name": "GeoRestore",
                            "value": "GeoRestore"
                          }
                        ]
                      }
                    },
                    "sourceServerResourceId": {
                      "type": "string",
                      "description": "The source MySQL server id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                      "x-ms-mutability": [
                        "create"
                      ]
                    },
                    "replicationRole": {
                      "description": "The replication role.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Source",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Source",
                            "value": "Source"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          }
                        ]
                      }
                    },
                    "replicaCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of replicas that a primary server can have.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "dataEncryption": {
                      "description": "The Data Encryption for CMK.",
                      "type": "object",
                      "properties": {
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Primary user identity resource id"
                        },
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "Primary key uri"
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                        },
                        "type": {
                          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                          "type": "string",
                          "enum": [
                            "AzureKeyVault",
                            "SystemManaged"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": false
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "The state of a server.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Dropping",
                        "Disabled",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServerState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready"
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Starting",
                            "value": "Starting"
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping"
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          }
                        ]
                      }
                    },
                    "fullyQualifiedDomainName": {
                      "type": "string",
                      "description": "The fully qualified domain name of a server.",
                      "readOnly": true
                    },
                    "databasePort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The server database port. Can only be specified when the server is being created.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "storage": {
                      "description": "Storage related properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max storage size allowed for a server."
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Storage IOPS for a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Enable Storage Auto Grow or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "logOnDisk": {
                          "type": "string",
                          "description": "Enable Log On Disk or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageSku": {
                          "type": "string",
                          "description": "The sku name of the server storage.",
                          "readOnly": true
                        },
                        "autoIoScaling": {
                          "type": "string",
                          "description": "Enable IO Auto Scaling or not.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageRedundancy": {
                          "type": "string",
                          "description": "The redundant type of the server storage. The parameter is used for server creation.",
                          "default": "LocalRedundancy",
                          "enum": [
                            "LocalRedundancy",
                            "ZoneRedundancy"
                          ],
                          "x-ms-enum": {
                            "name": "StorageRedundancyEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "LocalRedundancy",
                                "value": "LocalRedundancy"
                              },
                              {
                                "name": "ZoneRedundancy",
                                "value": "ZoneRedundancy"
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "backup": {
                      "description": "Backup related properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup retention days for the server."
                        },
                        "backupIntervalHours": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup interval hours for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "description": "Whether or not geo redundant backup is enabled.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point creation time (ISO8601 format)",
                          "readOnly": true
                        }
                      }
                    },
                    "highAvailability": {
                      "description": "High availability related properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "High availability mode for a server.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone"
                              }
                            ]
                          }
                        },
                        "state": {
                          "description": "The state of server high availability.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "Healthy",
                            "FailingOver",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotEnabled",
                                "value": "NotEnabled"
                              },
                              {
                                "name": "CreatingStandby",
                                "value": "CreatingStandby"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "FailingOver",
                                "value": "FailingOver"
                              },
                              {
                                "name": "RemovingStandby",
                                "value": "RemovingStandby"
                              }
                            ]
                          }
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "description": "Availability zone of the standby server."
                        }
                      }
                    },
                    "network": {
                      "description": "Network related properties of a server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "description": "Delegated subnet resource id used to setup vnet for a server."
                        },
                        "privateDnsZoneResourceId": {
                          "type": "string",
                          "description": "Private DNS zone resource id."
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "PrivateEndpointConnections related properties of a server.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "maintenancePolicy": {
                      "description": "Maintenance policy of a server.",
                      "type": "object",
                      "properties": {
                        "patchStrategy": {
                          "description": "The patch strategy of this server",
                          "type": "string",
                          "enum": [
                            "Regular",
                            "VirtualCanary"
                          ],
                          "x-ms-enum": {
                            "name": "PatchStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Regular",
                                "value": "Regular"
                              },
                              {
                                "name": "VirtualCanary",
                                "value": "VirtualCanary"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "description": "indicates whether custom window is enabled or disabled"
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start hour for maintenance window"
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start minute for maintenance window"
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "description": "day of week for maintenance window"
                        },
                        "batchOfMaintenance": {
                          "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Batch1",
                            "Batch2"
                          ],
                          "x-ms-enum": {
                            "name": "BatchOfMaintenance",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Batch1",
                                "value": "Batch1"
                              },
                              {
                                "name": "Batch2",
                                "value": "Batch2"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "importSourceProperties": {
                      "description": "Source properties for import from storage.",
                      "type": "object",
                      "properties": {
                        "storageType": {
                          "description": "Storage type of import source.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "AzureBlob"
                          ],
                          "x-ms-enum": {
                            "name": "ImportSourceStorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlob",
                                "value": "AzureBlob"
                              }
                            ]
                          }
                        },
                        "storageUrl": {
                          "type": "string",
                          "description": "Uri of the import source storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "sasToken": {
                          "type": "string",
                          "format": "password",
                          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "dataDirPath": {
                          "type": "string",
                          "description": "Relative path of data directory in storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The cmk identity for the server.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "type": "string",
                      "enum": [
                        "UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "Metadata of user assigned identity.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Metadata of user assigned identity.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Principal Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "PrincipalId"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Client Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "ClientId"
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (pricing tier) of the server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the sku, e.g. Standard_D32s_v3."
                    },
                    "tier": {
                      "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                      "type": "string",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "ServerSkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Burstable",
                            "value": "Burstable"
                          },
                          {
                            "name": "GeneralPurpose",
                            "value": "GeneralPurpose"
                          },
                          {
                            "name": "MemoryOptimized",
                            "value": "MemoryOptimized"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Servers_Update",
        "tags": [
          "Servers"
        ],
        "description": "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for updating a server.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters allowed to update for a server.",
              "properties": {
                "identity": {
                  "description": "The cmk identity for the server.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "type": "string",
                      "enum": [
                        "UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "Metadata of user assigned identity.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Metadata of user assigned identity.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Principal Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "PrincipalId"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Client Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "ClientId"
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (pricing tier) of the server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the sku, e.g. Standard_D32s_v3."
                    },
                    "tier": {
                      "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                      "type": "string",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "ServerSkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Burstable",
                            "value": "Burstable"
                          },
                          {
                            "name": "GeneralPurpose",
                            "value": "GeneralPurpose"
                          },
                          {
                            "name": "MemoryOptimized",
                            "value": "MemoryOptimized"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                },
                "properties": {
                  "description": "The properties that can be updated for a server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorLoginPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the administrator login.",
                      "x-ms-secret": true
                    },
                    "version": {
                      "description": "Server version.",
                      "type": "string",
                      "enum": [
                        "5.7",
                        "8.0.21"
                      ],
                      "x-ms-enum": {
                        "name": "ServerVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "5.7",
                            "value": "5.7"
                          },
                          {
                            "name": "8.0.21",
                            "value": "8.0.21"
                          }
                        ]
                      }
                    },
                    "storage": {
                      "description": "Storage related properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max storage size allowed for a server."
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Storage IOPS for a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Enable Storage Auto Grow or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "logOnDisk": {
                          "type": "string",
                          "description": "Enable Log On Disk or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageSku": {
                          "type": "string",
                          "description": "The sku name of the server storage.",
                          "readOnly": true
                        },
                        "autoIoScaling": {
                          "type": "string",
                          "description": "Enable IO Auto Scaling or not.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageRedundancy": {
                          "type": "string",
                          "description": "The redundant type of the server storage. The parameter is used for server creation.",
                          "default": "LocalRedundancy",
                          "enum": [
                            "LocalRedundancy",
                            "ZoneRedundancy"
                          ],
                          "x-ms-enum": {
                            "name": "StorageRedundancyEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "LocalRedundancy",
                                "value": "LocalRedundancy"
                              },
                              {
                                "name": "ZoneRedundancy",
                                "value": "ZoneRedundancy"
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "backup": {
                      "description": "Backup related properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup retention days for the server."
                        },
                        "backupIntervalHours": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup interval hours for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "description": "Whether or not geo redundant backup is enabled.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point creation time (ISO8601 format)",
                          "readOnly": true
                        }
                      }
                    },
                    "highAvailability": {
                      "description": "High availability related properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "High availability mode for a server.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone"
                              }
                            ]
                          }
                        },
                        "state": {
                          "description": "The state of server high availability.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "Healthy",
                            "FailingOver",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotEnabled",
                                "value": "NotEnabled"
                              },
                              {
                                "name": "CreatingStandby",
                                "value": "CreatingStandby"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "FailingOver",
                                "value": "FailingOver"
                              },
                              {
                                "name": "RemovingStandby",
                                "value": "RemovingStandby"
                              }
                            ]
                          }
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "description": "Availability zone of the standby server."
                        }
                      }
                    },
                    "maintenancePolicy": {
                      "description": "Maintenance policy of a server.",
                      "type": "object",
                      "properties": {
                        "patchStrategy": {
                          "description": "The patch strategy of this server",
                          "type": "string",
                          "enum": [
                            "Regular",
                            "VirtualCanary"
                          ],
                          "x-ms-enum": {
                            "name": "PatchStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Regular",
                                "value": "Regular"
                              },
                              {
                                "name": "VirtualCanary",
                                "value": "VirtualCanary"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Maintenance window of a server.",
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "description": "indicates whether custom window is enabled or disabled"
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start hour for maintenance window"
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start minute for maintenance window"
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "description": "day of week for maintenance window"
                        },
                        "batchOfMaintenance": {
                          "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Batch1",
                            "Batch2"
                          ],
                          "x-ms-enum": {
                            "name": "BatchOfMaintenance",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Batch1",
                                "value": "Batch1"
                              },
                              {
                                "name": "Batch2",
                                "value": "Batch2"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "replicationRole": {
                      "description": "The replication role of the server.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Source",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Source",
                            "value": "Source"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          }
                        ]
                      }
                    },
                    "dataEncryption": {
                      "description": "The Data Encryption for CMK.",
                      "type": "object",
                      "properties": {
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Primary user identity resource id"
                        },
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "Primary key uri"
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                        },
                        "type": {
                          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                          "type": "string",
                          "enum": [
                            "AzureKeyVault",
                            "SystemManaged"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": false
                          }
                        }
                      }
                    },
                    "network": {
                      "description": "Network related properties of a server",
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "description": "Delegated subnet resource id used to setup vnet for a server."
                        },
                        "privateDnsZoneResourceId": {
                          "type": "string",
                          "description": "Private DNS zone resource id."
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Application-specific metadata in the form of key-value pairs.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a server.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the administrator login (required for server creation).",
                      "x-ms-mutability": [
                        "update",
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "version": {
                      "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                      "type": "string",
                      "enum": [
                        "5.7",
                        "8.0.21"
                      ],
                      "x-ms-enum": {
                        "name": "ServerVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "5.7",
                            "value": "5.7"
                          },
                          {
                            "name": "8.0.21",
                            "value": "8.0.21"
                          }
                        ]
                      }
                    },
                    "fullVersion": {
                      "type": "string",
                      "description": "Major version and actual engine version",
                      "readOnly": true
                    },
                    "availabilityZone": {
                      "type": "string",
                      "description": "availability Zone information of the server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "createMode": {
                      "description": "The mode to create a new MySQL server.",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Replica",
                        "GeoRestore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          },
                          {
                            "name": "GeoRestore",
                            "value": "GeoRestore"
                          }
                        ]
                      }
                    },
                    "sourceServerResourceId": {
                      "type": "string",
                      "description": "The source MySQL server id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                      "x-ms-mutability": [
                        "create"
                      ]
                    },
                    "replicationRole": {
                      "description": "The replication role.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Source",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Source",
                            "value": "Source"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          }
                        ]
                      }
                    },
                    "replicaCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of replicas that a primary server can have.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "dataEncryption": {
                      "description": "The Data Encryption for CMK.",
                      "type": "object",
                      "properties": {
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Primary user identity resource id"
                        },
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "Primary key uri"
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                        },
                        "type": {
                          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                          "type": "string",
                          "enum": [
                            "AzureKeyVault",
                            "SystemManaged"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": false
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "The state of a server.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Dropping",
                        "Disabled",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServerState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready"
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Starting",
                            "value": "Starting"
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping"
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          }
                        ]
                      }
                    },
                    "fullyQualifiedDomainName": {
                      "type": "string",
                      "description": "The fully qualified domain name of a server.",
                      "readOnly": true
                    },
                    "databasePort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The server database port. Can only be specified when the server is being created.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "storage": {
                      "description": "Storage related properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max storage size allowed for a server."
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Storage IOPS for a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Enable Storage Auto Grow or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "logOnDisk": {
                          "type": "string",
                          "description": "Enable Log On Disk or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageSku": {
                          "type": "string",
                          "description": "The sku name of the server storage.",
                          "readOnly": true
                        },
                        "autoIoScaling": {
                          "type": "string",
                          "description": "Enable IO Auto Scaling or not.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageRedundancy": {
                          "type": "string",
                          "description": "The redundant type of the server storage. The parameter is used for server creation.",
                          "default": "LocalRedundancy",
                          "enum": [
                            "LocalRedundancy",
                            "ZoneRedundancy"
                          ],
                          "x-ms-enum": {
                            "name": "StorageRedundancyEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "LocalRedundancy",
                                "value": "LocalRedundancy"
                              },
                              {
                                "name": "ZoneRedundancy",
                                "value": "ZoneRedundancy"
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "backup": {
                      "description": "Backup related properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup retention days for the server."
                        },
                        "backupIntervalHours": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup interval hours for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "description": "Whether or not geo redundant backup is enabled.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point creation time (ISO8601 format)",
                          "readOnly": true
                        }
                      }
                    },
                    "highAvailability": {
                      "description": "High availability related properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "High availability mode for a server.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone"
                              }
                            ]
                          }
                        },
                        "state": {
                          "description": "The state of server high availability.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "Healthy",
                            "FailingOver",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotEnabled",
                                "value": "NotEnabled"
                              },
                              {
                                "name": "CreatingStandby",
                                "value": "CreatingStandby"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "FailingOver",
                                "value": "FailingOver"
                              },
                              {
                                "name": "RemovingStandby",
                                "value": "RemovingStandby"
                              }
                            ]
                          }
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "description": "Availability zone of the standby server."
                        }
                      }
                    },
                    "network": {
                      "description": "Network related properties of a server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "description": "Delegated subnet resource id used to setup vnet for a server."
                        },
                        "privateDnsZoneResourceId": {
                          "type": "string",
                          "description": "Private DNS zone resource id."
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "PrivateEndpointConnections related properties of a server.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "maintenancePolicy": {
                      "description": "Maintenance policy of a server.",
                      "type": "object",
                      "properties": {
                        "patchStrategy": {
                          "description": "The patch strategy of this server",
                          "type": "string",
                          "enum": [
                            "Regular",
                            "VirtualCanary"
                          ],
                          "x-ms-enum": {
                            "name": "PatchStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Regular",
                                "value": "Regular"
                              },
                              {
                                "name": "VirtualCanary",
                                "value": "VirtualCanary"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "description": "indicates whether custom window is enabled or disabled"
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start hour for maintenance window"
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start minute for maintenance window"
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "description": "day of week for maintenance window"
                        },
                        "batchOfMaintenance": {
                          "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Batch1",
                            "Batch2"
                          ],
                          "x-ms-enum": {
                            "name": "BatchOfMaintenance",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Batch1",
                                "value": "Batch1"
                              },
                              {
                                "name": "Batch2",
                                "value": "Batch2"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "importSourceProperties": {
                      "description": "Source properties for import from storage.",
                      "type": "object",
                      "properties": {
                        "storageType": {
                          "description": "Storage type of import source.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "AzureBlob"
                          ],
                          "x-ms-enum": {
                            "name": "ImportSourceStorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlob",
                                "value": "AzureBlob"
                              }
                            ]
                          }
                        },
                        "storageUrl": {
                          "type": "string",
                          "description": "Uri of the import source storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "sasToken": {
                          "type": "string",
                          "format": "password",
                          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "dataDirPath": {
                          "type": "string",
                          "description": "Relative path of data directory in storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The cmk identity for the server.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "type": "string",
                      "enum": [
                        "UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "Metadata of user assigned identity.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Metadata of user assigned identity.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Principal Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "PrincipalId"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Client Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "ClientId"
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (pricing tier) of the server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the sku, e.g. Standard_D32s_v3."
                    },
                    "tier": {
                      "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                      "type": "string",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "ServerSkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Burstable",
                            "value": "Burstable"
                          },
                          {
                            "name": "GeneralPurpose",
                            "value": "GeneralPurpose"
                          },
                          {
                            "name": "MemoryOptimized",
                            "value": "MemoryOptimized"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Servers_Delete",
        "tags": [
          "Servers"
        ],
        "description": "Deletes a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/administrators": {
      "get": {
        "operationId": "AzureADAdministrators_ListByServer",
        "tags": [
          "AzureADAdministrators"
        ],
        "description": "List all the AAD administrators in a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A List of azure ad administrators.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The list of azure ad administrator of a server.",
                  "items": {
                    "type": "object",
                    "description": "Represents a Administrator.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of an administrator.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "administratorType": {
                            "description": "Type of the sever administrator.",
                            "type": "string",
                            "enum": [
                              "ActiveDirectory"
                            ],
                            "x-ms-enum": {
                              "name": "AdministratorType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ActiveDirectory",
                                  "value": "ActiveDirectory"
                                }
                              ]
                            }
                          },
                          "login": {
                            "type": "string",
                            "description": "Login name of the server administrator."
                          },
                          "sid": {
                            "type": "string",
                            "description": "SID (object ID) of the server administrator."
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "Tenant ID of the administrator."
                          },
                          "identityResourceId": {
                            "type": "string",
                            "description": "The resource id of the identity used for AAD Authentication."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link used to get the next page of operations."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/administrators/{administratorName}": {
      "get": {
        "operationId": "AzureADAdministrators_Get",
        "tags": [
          "AzureADAdministrators"
        ],
        "description": "Gets information about an azure ad administrator.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "administratorName",
            "in": "path",
            "description": "The name of the Azure AD Administrator.",
            "required": true,
            "type": "string",
            "enum": [
              "ActiveDirectory"
            ],
            "x-ms-enum": {
              "name": "AdministratorName",
              "modelAsString": true,
              "values": [
                {
                  "name": "ActiveDirectory",
                  "value": "ActiveDirectory"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a Administrator.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of an administrator.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorType": {
                      "description": "Type of the sever administrator.",
                      "type": "string",
                      "enum": [
                        "ActiveDirectory"
                      ],
                      "x-ms-enum": {
                        "name": "AdministratorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ActiveDirectory",
                            "value": "ActiveDirectory"
                          }
                        ]
                      }
                    },
                    "login": {
                      "type": "string",
                      "description": "Login name of the server administrator."
                    },
                    "sid": {
                      "type": "string",
                      "description": "SID (object ID) of the server administrator."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID of the administrator."
                    },
                    "identityResourceId": {
                      "type": "string",
                      "description": "The resource id of the identity used for AAD Authentication."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "AzureADAdministrators_CreateOrUpdate",
        "tags": [
          "AzureADAdministrators"
        ],
        "description": "Creates or updates an existing Azure Active Directory administrator.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "administratorName",
            "in": "path",
            "description": "The name of the Azure AD Administrator.",
            "required": true,
            "type": "string",
            "enum": [
              "ActiveDirectory"
            ],
            "x-ms-enum": {
              "name": "AdministratorName",
              "modelAsString": true,
              "values": [
                {
                  "name": "ActiveDirectory",
                  "value": "ActiveDirectory"
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for creating or updating an aad administrator.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Represents a Administrator.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of an administrator.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorType": {
                      "description": "Type of the sever administrator.",
                      "type": "string",
                      "enum": [
                        "ActiveDirectory"
                      ],
                      "x-ms-enum": {
                        "name": "AdministratorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ActiveDirectory",
                            "value": "ActiveDirectory"
                          }
                        ]
                      }
                    },
                    "login": {
                      "type": "string",
                      "description": "Login name of the server administrator."
                    },
                    "sid": {
                      "type": "string",
                      "description": "SID (object ID) of the server administrator."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID of the administrator."
                    },
                    "identityResourceId": {
                      "type": "string",
                      "description": "The resource id of the identity used for AAD Authentication."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AzureADAdministrator' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a Administrator.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of an administrator.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorType": {
                      "description": "Type of the sever administrator.",
                      "type": "string",
                      "enum": [
                        "ActiveDirectory"
                      ],
                      "x-ms-enum": {
                        "name": "AdministratorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ActiveDirectory",
                            "value": "ActiveDirectory"
                          }
                        ]
                      }
                    },
                    "login": {
                      "type": "string",
                      "description": "Login name of the server administrator."
                    },
                    "sid": {
                      "type": "string",
                      "description": "SID (object ID) of the server administrator."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID of the administrator."
                    },
                    "identityResourceId": {
                      "type": "string",
                      "description": "The resource id of the identity used for AAD Authentication."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'AzureADAdministrator' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a Administrator.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of an administrator.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorType": {
                      "description": "Type of the sever administrator.",
                      "type": "string",
                      "enum": [
                        "ActiveDirectory"
                      ],
                      "x-ms-enum": {
                        "name": "AdministratorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ActiveDirectory",
                            "value": "ActiveDirectory"
                          }
                        ]
                      }
                    },
                    "login": {
                      "type": "string",
                      "description": "Login name of the server administrator."
                    },
                    "sid": {
                      "type": "string",
                      "description": "SID (object ID) of the server administrator."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID of the administrator."
                    },
                    "identityResourceId": {
                      "type": "string",
                      "description": "The resource id of the identity used for AAD Authentication."
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "AzureADAdministrators_Delete",
        "tags": [
          "AzureADAdministrators"
        ],
        "description": "Deletes an Azure AD Administrator.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "administratorName",
            "in": "path",
            "description": "The name of the Azure AD Administrator.",
            "required": true,
            "type": "string",
            "enum": [
              "ActiveDirectory"
            ],
            "x-ms-enum": {
              "name": "AdministratorName",
              "modelAsString": true,
              "values": [
                {
                  "name": "ActiveDirectory",
                  "value": "ActiveDirectory"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/advancedThreatProtectionSettings": {
      "get": {
        "operationId": "AdvancedThreatProtectionSettings_List",
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Gets a list of server's Advanced Threat Protection states.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a AdvancedThreatProtection list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The AdvancedThreatProtection items on this page",
                  "items": {
                    "type": "object",
                    "description": "A server's Advanced Threat Protection.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "creationTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Specifies the UTC creation time of the policy.",
                            "readOnly": true
                          },
                          "state": {
                            "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "AdvancedThreatProtectionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Threat Protection.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Updating",
                              "Canceled",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "AdvancedThreatProtectionProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating"
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/advancedThreatProtectionSettings/{advancedThreatProtectionName}": {
      "get": {
        "operationId": "AdvancedThreatProtectionSettings_Get",
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Get a server's Advanced Threat Protection state",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "advancedThreatProtectionName",
            "in": "path",
            "description": "The name of the Advanced Threat Protection state.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "AdvancedThreatProtectionName",
              "modelAsString": true,
              "values": [
                {
                  "name": "Default",
                  "value": "Default"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A server's Advanced Threat Protection.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Threat Protection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Updating",
                        "Canceled",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "AdvancedThreatProtectionSettings_UpdatePut",
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Updates a server's Advanced Threat Protection state.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "advancedThreatProtectionName",
            "in": "path",
            "description": "The name of the Advanced Threat Protection state.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "AdvancedThreatProtectionName",
              "modelAsString": true,
              "values": [
                {
                  "name": "Default",
                  "value": "Default"
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The server's Advanced Threat Protection body to update.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A server's Advanced Threat Protection.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Threat Protection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Updating",
                        "Canceled",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AdvancedThreatProtection' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A server's Advanced Threat Protection.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Threat Protection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Updating",
                        "Canceled",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'AdvancedThreatProtection' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A server's Advanced Threat Protection.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Threat Protection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Updating",
                        "Canceled",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "AdvancedThreatProtectionSettings_Update",
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Updates a server's Advanced Threat Protection state.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "advancedThreatProtectionName",
            "in": "path",
            "description": "The name of the Advanced Threat Protection state.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "AdvancedThreatProtectionName",
              "modelAsString": true,
              "values": [
                {
                  "name": "Default",
                  "value": "Default"
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The server's Advanced Threat Protection body to update.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters allowed to update advanced threat protection for a server.",
              "properties": {
                "properties": {
                  "description": "Resource update properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "state"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A server's Advanced Threat Protection.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Specifies the UTC creation time of the policy.",
                      "readOnly": true
                    },
                    "state": {
                      "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Threat Protection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Updating",
                        "Canceled",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "AdvancedThreatProtectionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backupAndExport": {
      "post": {
        "operationId": "BackupAndExport_Create",
        "tags": [
          "BackupAndExport"
        ],
        "description": "Exports the backup of the given server by creating a backup if not existing.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for creating and exporting backup of the given server.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "BackupAndExport API Request",
              "properties": {
                "backupSettings": {
                  "description": "Backup Settings",
                  "type": "object",
                  "properties": {
                    "backupName": {
                      "type": "string",
                      "description": "The name of the backup.",
                      "pattern": "(^[a-z0-9]$)|(^[a-z0-9][a-z0-9-]*[a-z0-9]$)"
                    },
                    "backupFormat": {
                      "description": "Backup Format for the current backup. (CollatedFormat is INTERNAL – DO NOT USE)",
                      "type": "string",
                      "enum": [
                        "CollatedFormat",
                        "Raw"
                      ],
                      "x-ms-enum": {
                        "name": "BackupFormat",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CollatedFormat",
                            "value": "CollatedFormat"
                          },
                          {
                            "name": "Raw",
                            "value": "Raw"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "backupName"
                  ]
                },
                "targetDetails": {
                  "description": "Backup Target Store Details",
                  "type": "object",
                  "properties": {
                    "objectType": {
                      "type": "string",
                      "description": "Type of the specific object - used for deserializing"
                    }
                  },
                  "discriminator": "objectType",
                  "required": [
                    "objectType"
                  ]
                }
              },
              "required": [
                "targetDetails"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupAndExportResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups": {
      "get": {
        "operationId": "Backups_ListByServer",
        "tags": [
          "Backups"
        ],
        "description": "List all the backups for a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ServerBackup list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ServerBackup items on this page",
                  "items": {
                    "type": "object",
                    "description": "Server backup properties",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of a server backup.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "backupType": {
                            "type": "string",
                            "description": "Backup type."
                          },
                          "completedTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Backup completed time (ISO8601 format)."
                          },
                          "source": {
                            "type": "string",
                            "description": "Backup source"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backups/{backupName}": {
      "get": {
        "operationId": "Backups_Get",
        "tags": [
          "Backups"
        ],
        "description": "List all the backups for a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The name of the backup.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Server backup properties",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a server backup.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupType": {
                      "type": "string",
                      "description": "Backup type."
                    },
                    "completedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Backup completed time (ISO8601 format)."
                    },
                    "source": {
                      "type": "string",
                      "description": "Backup source"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Backups_Put",
        "tags": [
          "Backups"
        ],
        "description": "Create backup for a given server with specified backup name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The name of the backup.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServerBackup' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Server backup properties",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a server backup.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupType": {
                      "type": "string",
                      "description": "Backup type."
                    },
                    "completedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Backup completed time (ISO8601 format)."
                    },
                    "source": {
                      "type": "string",
                      "description": "Backup source"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backupsV2": {
      "get": {
        "operationId": "LongRunningBackups_List",
        "tags": [
          "LongRunningBackups"
        ],
        "description": "List all the backups for a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ServerBackupV2 list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ServerBackupV2 items on this page",
                  "items": {
                    "type": "object",
                    "description": "Server backup properties",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of a server backup.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "backupNameV2": {
                            "type": "string",
                            "description": "Backup name"
                          },
                          "backupType": {
                            "type": "string",
                            "enum": [
                              "FULL"
                            ],
                            "x-ms-enum": {
                              "name": "BackupType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "FULL",
                                  "value": "FULL"
                                }
                              ]
                            }
                          },
                          "completedTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Backup completed time (ISO8601 format)."
                          },
                          "source": {
                            "type": "string",
                            "description": "Backup source"
                          },
                          "provisioningState": {
                            "description": "The provisioning state of backup resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed"
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/backupsV2/{backupName}": {
      "get": {
        "operationId": "LongRunningBackups_Get",
        "tags": [
          "LongRunningBackups"
        ],
        "description": "Get backup for a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The name of the backup.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Server backup properties",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a server backup.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupNameV2": {
                      "type": "string",
                      "description": "Backup name"
                    },
                    "backupType": {
                      "type": "string",
                      "enum": [
                        "FULL"
                      ],
                      "x-ms-enum": {
                        "name": "BackupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FULL",
                            "value": "FULL"
                          }
                        ]
                      }
                    },
                    "completedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Backup completed time (ISO8601 format)."
                    },
                    "source": {
                      "type": "string",
                      "description": "Backup source"
                    },
                    "provisioningState": {
                      "description": "The provisioning state of backup resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "LongRunningBackup_Create",
        "tags": [
          "LongRunningBackup"
        ],
        "description": "Create backup for a given server with specified backup name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The name of the backup.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for creating and exporting backup of the given server.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Server backup properties",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a server backup.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupNameV2": {
                      "type": "string",
                      "description": "Backup name"
                    },
                    "backupType": {
                      "type": "string",
                      "enum": [
                        "FULL"
                      ],
                      "x-ms-enum": {
                        "name": "BackupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FULL",
                            "value": "FULL"
                          }
                        ]
                      }
                    },
                    "completedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Backup completed time (ISO8601 format)."
                    },
                    "source": {
                      "type": "string",
                      "description": "Backup source"
                    },
                    "provisioningState": {
                      "description": "The provisioning state of backup resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServerBackupV2' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Server backup properties",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a server backup.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupNameV2": {
                      "type": "string",
                      "description": "Backup name"
                    },
                    "backupType": {
                      "type": "string",
                      "enum": [
                        "FULL"
                      ],
                      "x-ms-enum": {
                        "name": "BackupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FULL",
                            "value": "FULL"
                          }
                        ]
                      }
                    },
                    "completedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Backup completed time (ISO8601 format)."
                    },
                    "source": {
                      "type": "string",
                      "description": "Backup source"
                    },
                    "provisioningState": {
                      "description": "The provisioning state of backup resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'ServerBackupV2' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Server backup properties",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a server backup.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupNameV2": {
                      "type": "string",
                      "description": "Backup name"
                    },
                    "backupType": {
                      "type": "string",
                      "enum": [
                        "FULL"
                      ],
                      "x-ms-enum": {
                        "name": "BackupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FULL",
                            "value": "FULL"
                          }
                        ]
                      }
                    },
                    "completedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Backup completed time (ISO8601 format)."
                    },
                    "source": {
                      "type": "string",
                      "description": "Backup source"
                    },
                    "provisioningState": {
                      "description": "The provisioning state of backup resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations": {
      "get": {
        "operationId": "Configurations_ListByServer",
        "tags": [
          "Configurations"
        ],
        "description": "List all the configurations in a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "The tags of the server configuration.",
            "required": false,
            "type": "string"
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword of the server configuration.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of the server configuration.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The pageSize of the server configuration.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Configuration list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Configuration items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a Configuration.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of a configuration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Value of the configuration."
                          },
                          "currentValue": {
                            "type": "string",
                            "description": "Current value of the configuration."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the configuration.",
                            "readOnly": true
                          },
                          "documentationLink": {
                            "type": "string",
                            "description": "The link used to get the document from community or Azure site.",
                            "readOnly": true
                          },
                          "defaultValue": {
                            "type": "string",
                            "description": "Default value of the configuration.",
                            "readOnly": true
                          },
                          "dataType": {
                            "type": "string",
                            "description": "Data type of the configuration.",
                            "readOnly": true
                          },
                          "allowedValues": {
                            "type": "string",
                            "description": "Allowed values of the configuration.",
                            "readOnly": true
                          },
                          "source": {
                            "description": "Source of the configuration.",
                            "type": "string",
                            "enum": [
                              "system-default",
                              "user-override"
                            ],
                            "x-ms-enum": {
                              "name": "ConfigurationSource",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "system-default",
                                  "value": "system-default"
                                },
                                {
                                  "name": "user-override",
                                  "value": "user-override"
                                }
                              ]
                            }
                          },
                          "isReadOnly": {
                            "description": "If is the configuration read only.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "IsReadOnly",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "True"
                                },
                                {
                                  "name": "False",
                                  "value": "False"
                                }
                              ]
                            }
                          },
                          "isConfigPendingRestart": {
                            "description": "If is the configuration pending restart or not.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "IsConfigPendingRestart",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "True"
                                },
                                {
                                  "name": "False",
                                  "value": "False"
                                }
                              ]
                            }
                          },
                          "isDynamicConfig": {
                            "description": "If is the configuration dynamic.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "IsDynamicConfig",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "True"
                                },
                                {
                                  "name": "False",
                                  "value": "False"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/configurations/{configurationName}": {
      "get": {
        "operationId": "Configurations_Get",
        "tags": [
          "Configurations"
        ],
        "description": "Gets information about a configuration of server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "The name of the server configuration.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a Configuration.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of the configuration."
                    },
                    "currentValue": {
                      "type": "string",
                      "description": "Current value of the configuration."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the configuration.",
                      "readOnly": true
                    },
                    "documentationLink": {
                      "type": "string",
                      "description": "The link used to get the document from community or Azure site.",
                      "readOnly": true
                    },
                    "defaultValue": {
                      "type": "string",
                      "description": "Default value of the configuration.",
                      "readOnly": true
                    },
                    "dataType": {
                      "type": "string",
                      "description": "Data type of the configuration.",
                      "readOnly": true
                    },
                    "allowedValues": {
                      "type": "string",
                      "description": "Allowed values of the configuration.",
                      "readOnly": true
                    },
                    "source": {
                      "description": "Source of the configuration.",
                      "type": "string",
                      "enum": [
                        "system-default",
                        "user-override"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "system-default",
                            "value": "system-default"
                          },
                          {
                            "name": "user-override",
                            "value": "user-override"
                          }
                        ]
                      }
                    },
                    "isReadOnly": {
                      "description": "If is the configuration read only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsReadOnly",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isConfigPendingRestart": {
                      "description": "If is the configuration pending restart or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsConfigPendingRestart",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isDynamicConfig": {
                      "description": "If is the configuration dynamic.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsDynamicConfig",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Configurations_CreateOrUpdate",
        "tags": [
          "Configurations"
        ],
        "description": "Updates a configuration of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "The name of the server configuration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for updating a server configuration.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Represents a Configuration.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of the configuration."
                    },
                    "currentValue": {
                      "type": "string",
                      "description": "Current value of the configuration."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the configuration.",
                      "readOnly": true
                    },
                    "documentationLink": {
                      "type": "string",
                      "description": "The link used to get the document from community or Azure site.",
                      "readOnly": true
                    },
                    "defaultValue": {
                      "type": "string",
                      "description": "Default value of the configuration.",
                      "readOnly": true
                    },
                    "dataType": {
                      "type": "string",
                      "description": "Data type of the configuration.",
                      "readOnly": true
                    },
                    "allowedValues": {
                      "type": "string",
                      "description": "Allowed values of the configuration.",
                      "readOnly": true
                    },
                    "source": {
                      "description": "Source of the configuration.",
                      "type": "string",
                      "enum": [
                        "system-default",
                        "user-override"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "system-default",
                            "value": "system-default"
                          },
                          {
                            "name": "user-override",
                            "value": "user-override"
                          }
                        ]
                      }
                    },
                    "isReadOnly": {
                      "description": "If is the configuration read only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsReadOnly",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isConfigPendingRestart": {
                      "description": "If is the configuration pending restart or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsConfigPendingRestart",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isDynamicConfig": {
                      "description": "If is the configuration dynamic.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsDynamicConfig",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Configuration' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a Configuration.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of the configuration."
                    },
                    "currentValue": {
                      "type": "string",
                      "description": "Current value of the configuration."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the configuration.",
                      "readOnly": true
                    },
                    "documentationLink": {
                      "type": "string",
                      "description": "The link used to get the document from community or Azure site.",
                      "readOnly": true
                    },
                    "defaultValue": {
                      "type": "string",
                      "description": "Default value of the configuration.",
                      "readOnly": true
                    },
                    "dataType": {
                      "type": "string",
                      "description": "Data type of the configuration.",
                      "readOnly": true
                    },
                    "allowedValues": {
                      "type": "string",
                      "description": "Allowed values of the configuration.",
                      "readOnly": true
                    },
                    "source": {
                      "description": "Source of the configuration.",
                      "type": "string",
                      "enum": [
                        "system-default",
                        "user-override"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "system-default",
                            "value": "system-default"
                          },
                          {
                            "name": "user-override",
                            "value": "user-override"
                          }
                        ]
                      }
                    },
                    "isReadOnly": {
                      "description": "If is the configuration read only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsReadOnly",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isConfigPendingRestart": {
                      "description": "If is the configuration pending restart or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsConfigPendingRestart",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isDynamicConfig": {
                      "description": "If is the configuration dynamic.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsDynamicConfig",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Configurations_Update",
        "tags": [
          "Configurations"
        ],
        "description": "Updates a configuration of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "The name of the server configuration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for updating a server configuration.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Represents a Configuration.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of the configuration."
                    },
                    "currentValue": {
                      "type": "string",
                      "description": "Current value of the configuration."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the configuration.",
                      "readOnly": true
                    },
                    "documentationLink": {
                      "type": "string",
                      "description": "The link used to get the document from community or Azure site.",
                      "readOnly": true
                    },
                    "defaultValue": {
                      "type": "string",
                      "description": "Default value of the configuration.",
                      "readOnly": true
                    },
                    "dataType": {
                      "type": "string",
                      "description": "Data type of the configuration.",
                      "readOnly": true
                    },
                    "allowedValues": {
                      "type": "string",
                      "description": "Allowed values of the configuration.",
                      "readOnly": true
                    },
                    "source": {
                      "description": "Source of the configuration.",
                      "type": "string",
                      "enum": [
                        "system-default",
                        "user-override"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "system-default",
                            "value": "system-default"
                          },
                          {
                            "name": "user-override",
                            "value": "user-override"
                          }
                        ]
                      }
                    },
                    "isReadOnly": {
                      "description": "If is the configuration read only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsReadOnly",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isConfigPendingRestart": {
                      "description": "If is the configuration pending restart or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsConfigPendingRestart",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isDynamicConfig": {
                      "description": "If is the configuration dynamic.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsDynamicConfig",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a Configuration.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a configuration.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of the configuration."
                    },
                    "currentValue": {
                      "type": "string",
                      "description": "Current value of the configuration."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the configuration.",
                      "readOnly": true
                    },
                    "documentationLink": {
                      "type": "string",
                      "description": "The link used to get the document from community or Azure site.",
                      "readOnly": true
                    },
                    "defaultValue": {
                      "type": "string",
                      "description": "Default value of the configuration.",
                      "readOnly": true
                    },
                    "dataType": {
                      "type": "string",
                      "description": "Data type of the configuration.",
                      "readOnly": true
                    },
                    "allowedValues": {
                      "type": "string",
                      "description": "Allowed values of the configuration.",
                      "readOnly": true
                    },
                    "source": {
                      "description": "Source of the configuration.",
                      "type": "string",
                      "enum": [
                        "system-default",
                        "user-override"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "system-default",
                            "value": "system-default"
                          },
                          {
                            "name": "user-override",
                            "value": "user-override"
                          }
                        ]
                      }
                    },
                    "isReadOnly": {
                      "description": "If is the configuration read only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsReadOnly",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isConfigPendingRestart": {
                      "description": "If is the configuration pending restart or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsConfigPendingRestart",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    },
                    "isDynamicConfig": {
                      "description": "If is the configuration dynamic.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "IsDynamicConfig",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "True"
                          },
                          {
                            "name": "False",
                            "value": "False"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/cutoverMigration": {
      "post": {
        "operationId": "ServersMigration_CutoverMigration",
        "tags": [
          "ServersMigration"
        ],
        "description": "Cutover migration for MySQL import, it will switch source elastic server DNS to flexible server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a server.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the administrator login (required for server creation).",
                      "x-ms-mutability": [
                        "update",
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "version": {
                      "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                      "type": "string",
                      "enum": [
                        "5.7",
                        "8.0.21"
                      ],
                      "x-ms-enum": {
                        "name": "ServerVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "5.7",
                            "value": "5.7"
                          },
                          {
                            "name": "8.0.21",
                            "value": "8.0.21"
                          }
                        ]
                      }
                    },
                    "fullVersion": {
                      "type": "string",
                      "description": "Major version and actual engine version",
                      "readOnly": true
                    },
                    "availabilityZone": {
                      "type": "string",
                      "description": "availability Zone information of the server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "createMode": {
                      "description": "The mode to create a new MySQL server.",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Replica",
                        "GeoRestore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          },
                          {
                            "name": "GeoRestore",
                            "value": "GeoRestore"
                          }
                        ]
                      }
                    },
                    "sourceServerResourceId": {
                      "type": "string",
                      "description": "The source MySQL server id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                      "x-ms-mutability": [
                        "create"
                      ]
                    },
                    "replicationRole": {
                      "description": "The replication role.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Source",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Source",
                            "value": "Source"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          }
                        ]
                      }
                    },
                    "replicaCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of replicas that a primary server can have.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "dataEncryption": {
                      "description": "The Data Encryption for CMK.",
                      "type": "object",
                      "properties": {
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Primary user identity resource id"
                        },
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "Primary key uri"
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                        },
                        "type": {
                          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                          "type": "string",
                          "enum": [
                            "AzureKeyVault",
                            "SystemManaged"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": false
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "The state of a server.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Dropping",
                        "Disabled",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServerState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready"
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Starting",
                            "value": "Starting"
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping"
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          }
                        ]
                      }
                    },
                    "fullyQualifiedDomainName": {
                      "type": "string",
                      "description": "The fully qualified domain name of a server.",
                      "readOnly": true
                    },
                    "databasePort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The server database port. Can only be specified when the server is being created.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "storage": {
                      "description": "Storage related properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max storage size allowed for a server."
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Storage IOPS for a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Enable Storage Auto Grow or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "logOnDisk": {
                          "type": "string",
                          "description": "Enable Log On Disk or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageSku": {
                          "type": "string",
                          "description": "The sku name of the server storage.",
                          "readOnly": true
                        },
                        "autoIoScaling": {
                          "type": "string",
                          "description": "Enable IO Auto Scaling or not.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageRedundancy": {
                          "type": "string",
                          "description": "The redundant type of the server storage. The parameter is used for server creation.",
                          "default": "LocalRedundancy",
                          "enum": [
                            "LocalRedundancy",
                            "ZoneRedundancy"
                          ],
                          "x-ms-enum": {
                            "name": "StorageRedundancyEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "LocalRedundancy",
                                "value": "LocalRedundancy"
                              },
                              {
                                "name": "ZoneRedundancy",
                                "value": "ZoneRedundancy"
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "backup": {
                      "description": "Backup related properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup retention days for the server."
                        },
                        "backupIntervalHours": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup interval hours for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "description": "Whether or not geo redundant backup is enabled.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point creation time (ISO8601 format)",
                          "readOnly": true
                        }
                      }
                    },
                    "highAvailability": {
                      "description": "High availability related properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "High availability mode for a server.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone"
                              }
                            ]
                          }
                        },
                        "state": {
                          "description": "The state of server high availability.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "Healthy",
                            "FailingOver",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotEnabled",
                                "value": "NotEnabled"
                              },
                              {
                                "name": "CreatingStandby",
                                "value": "CreatingStandby"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "FailingOver",
                                "value": "FailingOver"
                              },
                              {
                                "name": "RemovingStandby",
                                "value": "RemovingStandby"
                              }
                            ]
                          }
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "description": "Availability zone of the standby server."
                        }
                      }
                    },
                    "network": {
                      "description": "Network related properties of a server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "description": "Delegated subnet resource id used to setup vnet for a server."
                        },
                        "privateDnsZoneResourceId": {
                          "type": "string",
                          "description": "Private DNS zone resource id."
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "PrivateEndpointConnections related properties of a server.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "maintenancePolicy": {
                      "description": "Maintenance policy of a server.",
                      "type": "object",
                      "properties": {
                        "patchStrategy": {
                          "description": "The patch strategy of this server",
                          "type": "string",
                          "enum": [
                            "Regular",
                            "VirtualCanary"
                          ],
                          "x-ms-enum": {
                            "name": "PatchStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Regular",
                                "value": "Regular"
                              },
                              {
                                "name": "VirtualCanary",
                                "value": "VirtualCanary"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "description": "indicates whether custom window is enabled or disabled"
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start hour for maintenance window"
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start minute for maintenance window"
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "description": "day of week for maintenance window"
                        },
                        "batchOfMaintenance": {
                          "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Batch1",
                            "Batch2"
                          ],
                          "x-ms-enum": {
                            "name": "BatchOfMaintenance",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Batch1",
                                "value": "Batch1"
                              },
                              {
                                "name": "Batch2",
                                "value": "Batch2"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "importSourceProperties": {
                      "description": "Source properties for import from storage.",
                      "type": "object",
                      "properties": {
                        "storageType": {
                          "description": "Storage type of import source.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "AzureBlob"
                          ],
                          "x-ms-enum": {
                            "name": "ImportSourceStorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlob",
                                "value": "AzureBlob"
                              }
                            ]
                          }
                        },
                        "storageUrl": {
                          "type": "string",
                          "description": "Uri of the import source storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "sasToken": {
                          "type": "string",
                          "format": "password",
                          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "dataDirPath": {
                          "type": "string",
                          "description": "Relative path of data directory in storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The cmk identity for the server.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "type": "string",
                      "enum": [
                        "UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "Metadata of user assigned identity.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Metadata of user assigned identity.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Principal Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "PrincipalId"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Client Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "ClientId"
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (pricing tier) of the server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the sku, e.g. Standard_D32s_v3."
                    },
                    "tier": {
                      "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                      "type": "string",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "ServerSkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Burstable",
                            "value": "Burstable"
                          },
                          {
                            "name": "GeneralPurpose",
                            "value": "GeneralPurpose"
                          },
                          {
                            "name": "MemoryOptimized",
                            "value": "MemoryOptimized"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases": {
      "get": {
        "operationId": "Databases_ListByServer",
        "tags": [
          "Databases"
        ],
        "description": "List all the databases in a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Database list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Database items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a Database.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of a database.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "charset": {
                            "type": "string",
                            "description": "The charset of the database."
                          },
                          "collation": {
                            "type": "string",
                            "description": "The collation of the database."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/databases/{databaseName}": {
      "get": {
        "operationId": "Databases_Get",
        "tags": [
          "Databases"
        ],
        "description": "Gets information about a database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a Database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a database.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "charset": {
                      "type": "string",
                      "description": "The charset of the database."
                    },
                    "collation": {
                      "type": "string",
                      "description": "The collation of the database."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Databases_CreateOrUpdate",
        "tags": [
          "Databases"
        ],
        "description": "Creates a new database or updates an existing database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for creating or updating a database.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Represents a Database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a database.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "charset": {
                      "type": "string",
                      "description": "The charset of the database."
                    },
                    "collation": {
                      "type": "string",
                      "description": "The collation of the database."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Database' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a Database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a database.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "charset": {
                      "type": "string",
                      "description": "The charset of the database."
                    },
                    "collation": {
                      "type": "string",
                      "description": "The collation of the database."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Database' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a Database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a database.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "charset": {
                      "type": "string",
                      "description": "The charset of the database."
                    },
                    "collation": {
                      "type": "string",
                      "description": "The collation of the database."
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Databases_Delete",
        "tags": [
          "Databases"
        ],
        "description": "Deletes a database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/detachVNet": {
      "post": {
        "operationId": "Servers_DetachVNet",
        "tags": [
          "Servers"
        ],
        "description": "Detach VNet on a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for detach vnet on a server.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters to detach Vnet.",
              "properties": {
                "publicNetworkAccess": {
                  "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a server.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of the server.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "The password of the administrator login (required for server creation).",
                      "x-ms-mutability": [
                        "update",
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "version": {
                      "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                      "type": "string",
                      "enum": [
                        "5.7",
                        "8.0.21"
                      ],
                      "x-ms-enum": {
                        "name": "ServerVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "5.7",
                            "value": "5.7"
                          },
                          {
                            "name": "8.0.21",
                            "value": "8.0.21"
                          }
                        ]
                      }
                    },
                    "fullVersion": {
                      "type": "string",
                      "description": "Major version and actual engine version",
                      "readOnly": true
                    },
                    "availabilityZone": {
                      "type": "string",
                      "description": "availability Zone information of the server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "createMode": {
                      "description": "The mode to create a new MySQL server.",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "Replica",
                        "GeoRestore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default"
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          },
                          {
                            "name": "GeoRestore",
                            "value": "GeoRestore"
                          }
                        ]
                      }
                    },
                    "sourceServerResourceId": {
                      "type": "string",
                      "description": "The source MySQL server id.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "restorePointInTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                      "x-ms-mutability": [
                        "create"
                      ]
                    },
                    "replicationRole": {
                      "description": "The replication role.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Source",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "Source",
                            "value": "Source"
                          },
                          {
                            "name": "Replica",
                            "value": "Replica"
                          }
                        ]
                      }
                    },
                    "replicaCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of replicas that a primary server can have.",
                      "minimum": 0,
                      "readOnly": true
                    },
                    "dataEncryption": {
                      "description": "The Data Encryption for CMK.",
                      "type": "object",
                      "properties": {
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Primary user identity resource id"
                        },
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "Primary key uri"
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                        },
                        "type": {
                          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                          "type": "string",
                          "enum": [
                            "AzureKeyVault",
                            "SystemManaged"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": false
                          }
                        }
                      }
                    },
                    "state": {
                      "description": "The state of a server.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Dropping",
                        "Disabled",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ServerState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready"
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Starting",
                            "value": "Starting"
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping"
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          }
                        ]
                      }
                    },
                    "fullyQualifiedDomainName": {
                      "type": "string",
                      "description": "The fully qualified domain name of a server.",
                      "readOnly": true
                    },
                    "databasePort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The server database port. Can only be specified when the server is being created.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "storage": {
                      "description": "Storage related properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max storage size allowed for a server."
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Storage IOPS for a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Enable Storage Auto Grow or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "logOnDisk": {
                          "type": "string",
                          "description": "Enable Log On Disk or not.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageSku": {
                          "type": "string",
                          "description": "The sku name of the server storage.",
                          "readOnly": true
                        },
                        "autoIoScaling": {
                          "type": "string",
                          "description": "Enable IO Auto Scaling or not.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "storageRedundancy": {
                          "type": "string",
                          "description": "The redundant type of the server storage. The parameter is used for server creation.",
                          "default": "LocalRedundancy",
                          "enum": [
                            "LocalRedundancy",
                            "ZoneRedundancy"
                          ],
                          "x-ms-enum": {
                            "name": "StorageRedundancyEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "LocalRedundancy",
                                "value": "LocalRedundancy"
                              },
                              {
                                "name": "ZoneRedundancy",
                                "value": "ZoneRedundancy"
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "backup": {
                      "description": "Backup related properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup retention days for the server."
                        },
                        "backupIntervalHours": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup interval hours for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "description": "Whether or not geo redundant backup is enabled.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point creation time (ISO8601 format)",
                          "readOnly": true
                        }
                      }
                    },
                    "highAvailability": {
                      "description": "High availability related properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "High availability mode for a server.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              },
                              {
                                "name": "ZoneRedundant",
                                "value": "ZoneRedundant"
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone"
                              }
                            ]
                          }
                        },
                        "state": {
                          "description": "The state of server high availability.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "Healthy",
                            "FailingOver",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotEnabled",
                                "value": "NotEnabled"
                              },
                              {
                                "name": "CreatingStandby",
                                "value": "CreatingStandby"
                              },
                              {
                                "name": "Healthy",
                                "value": "Healthy"
                              },
                              {
                                "name": "FailingOver",
                                "value": "FailingOver"
                              },
                              {
                                "name": "RemovingStandby",
                                "value": "RemovingStandby"
                              }
                            ]
                          }
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "description": "Availability zone of the standby server."
                        }
                      }
                    },
                    "network": {
                      "description": "Network related properties of a server.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatusEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "description": "Delegated subnet resource id used to setup vnet for a server."
                        },
                        "privateDnsZoneResourceId": {
                          "type": "string",
                          "description": "Private DNS zone resource id."
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "PrivateEndpointConnections related properties of a server.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "maintenancePolicy": {
                      "description": "Maintenance policy of a server.",
                      "type": "object",
                      "properties": {
                        "patchStrategy": {
                          "description": "The patch strategy of this server",
                          "type": "string",
                          "enum": [
                            "Regular",
                            "VirtualCanary"
                          ],
                          "x-ms-enum": {
                            "name": "PatchStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Regular",
                                "value": "Regular"
                              },
                              {
                                "name": "VirtualCanary",
                                "value": "VirtualCanary"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "description": "indicates whether custom window is enabled or disabled"
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start hour for maintenance window"
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "start minute for maintenance window"
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "description": "day of week for maintenance window"
                        },
                        "batchOfMaintenance": {
                          "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Batch1",
                            "Batch2"
                          ],
                          "x-ms-enum": {
                            "name": "BatchOfMaintenance",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Batch1",
                                "value": "Batch1"
                              },
                              {
                                "name": "Batch2",
                                "value": "Batch2"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "importSourceProperties": {
                      "description": "Source properties for import from storage.",
                      "type": "object",
                      "properties": {
                        "storageType": {
                          "description": "Storage type of import source.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "AzureBlob"
                          ],
                          "x-ms-enum": {
                            "name": "ImportSourceStorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlob",
                                "value": "AzureBlob"
                              }
                            ]
                          }
                        },
                        "storageUrl": {
                          "type": "string",
                          "description": "Uri of the import source storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "sasToken": {
                          "type": "string",
                          "format": "password",
                          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "dataDirPath": {
                          "type": "string",
                          "description": "Relative path of data directory in storage.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The cmk identity for the server.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "type": "string",
                      "enum": [
                        "UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "Metadata of user assigned identity.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Metadata of user assigned identity.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Principal Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "PrincipalId"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Client Id of user assigned identity",
                            "readOnly": true,
                            "x-ms-client-name": "ClientId"
                          }
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The SKU (pricing tier) of the server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the sku, e.g. Standard_D32s_v3."
                    },
                    "tier": {
                      "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                      "type": "string",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "ServerSkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Burstable",
                            "value": "Burstable"
                          },
                          {
                            "name": "GeneralPurpose",
                            "value": "GeneralPurpose"
                          },
                          {
                            "name": "MemoryOptimized",
                            "value": "MemoryOptimized"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/failover": {
      "post": {
        "operationId": "Servers_Failover",
        "tags": [
          "Servers"
        ],
        "description": "Manual failover a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules": {
      "get": {
        "operationId": "FirewallRules_ListByServer",
        "tags": [
          "FirewallRules"
        ],
        "description": "List all the firewall rules in a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a FirewallRule list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The FirewallRule items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a server firewall rule.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of a firewall rule.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "startIpAddress": {
                            "type": "string",
                            "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
                            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                          },
                          "endIpAddress": {
                            "type": "string",
                            "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
                            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                          }
                        },
                        "required": [
                          "startIpAddress",
                          "endIpAddress"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}": {
      "get": {
        "operationId": "FirewallRules_Get",
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets information about a server firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the server firewall rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a server firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a firewall rule.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "FirewallRules_CreateOrUpdate",
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates a new firewall rule or updates an existing firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the server firewall rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for creating or updating a firewall rule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Represents a server firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a firewall rule.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FirewallRule' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a server firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a firewall rule.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'FirewallRule' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a server firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a firewall rule.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "FirewallRules_Delete",
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes a firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the server firewall rule.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/logFiles": {
      "get": {
        "operationId": "LogFiles_ListByServer",
        "tags": [
          "LogFiles"
        ],
        "description": "List all the server log files in a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a LogFile list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The LogFile items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a logFile.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of a logFile.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "sizeInKB": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The size in kb of the logFile."
                          },
                          "createdTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp of the log file."
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the log file."
                          },
                          "lastModifiedTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last modified timestamp of the log file."
                          },
                          "url": {
                            "type": "string",
                            "description": "The url to download the log file from."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/maintenances": {
      "get": {
        "operationId": "Maintenances_List",
        "tags": [
          "Maintenances"
        ],
        "description": "List maintenances.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Maintenance list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Maintenance items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a maintenance.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of a maintenance",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "maintenanceType": {
                            "description": "A string defines maintenance type.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "RoutineMaintenance",
                              "MinorVersionUpgrade",
                              "SecurityPatches",
                              "HotFixes"
                            ],
                            "x-ms-enum": {
                              "name": "MaintenanceType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "RoutineMaintenance",
                                  "value": "RoutineMaintenance"
                                },
                                {
                                  "name": "MinorVersionUpgrade",
                                  "value": "MinorVersionUpgrade"
                                },
                                {
                                  "name": "SecurityPatches",
                                  "value": "SecurityPatches"
                                },
                                {
                                  "name": "HotFixes",
                                  "value": "HotFixes"
                                }
                              ]
                            }
                          },
                          "maintenanceState": {
                            "description": "A string describes the maintenance status",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Scheduled",
                              "ReScheduled",
                              "InPreparation",
                              "Processing",
                              "Completed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "MaintenanceState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Scheduled",
                                  "value": "Scheduled"
                                },
                                {
                                  "name": "ReScheduled",
                                  "value": "ReScheduled"
                                },
                                {
                                  "name": "InPreparation",
                                  "value": "InPreparation"
                                },
                                {
                                  "name": "Processing",
                                  "value": "Processing"
                                },
                                {
                                  "name": "Completed",
                                  "value": "Completed"
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled"
                                }
                              ]
                            }
                          },
                          "maintenanceStartTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The start time for a maintenance."
                          },
                          "maintenanceEndTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The end time for a maintenance.",
                            "readOnly": true
                          },
                          "maintenanceExecutionStartTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The start time for a maintenance execution.",
                            "readOnly": true
                          },
                          "maintenanceExecutionEndTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The end time for a maintenance execution.",
                            "readOnly": true
                          },
                          "maintenanceAvailableScheduleMinTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The min time the maintenance can be rescheduled.",
                            "readOnly": true
                          },
                          "maintenanceAvailableScheduleMaxTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The max time the maintenance can be rescheduled.",
                            "readOnly": true
                          },
                          "maintenanceTitle": {
                            "type": "string",
                            "description": "The maintenance title.",
                            "readOnly": true
                          },
                          "maintenanceDescription": {
                            "type": "string",
                            "description": "The maintenance description.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Maintenance.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "MaintenanceProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/maintenances/{maintenanceName}": {
      "get": {
        "operationId": "Maintenances_Read",
        "tags": [
          "Maintenances"
        ],
        "description": "Read maintenance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "maintenanceName",
            "in": "path",
            "description": "The name of the maintenance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a maintenance.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a maintenance",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceType": {
                      "description": "A string defines maintenance type.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "RoutineMaintenance",
                        "MinorVersionUpgrade",
                        "SecurityPatches",
                        "HotFixes"
                      ],
                      "x-ms-enum": {
                        "name": "MaintenanceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "RoutineMaintenance",
                            "value": "RoutineMaintenance"
                          },
                          {
                            "name": "MinorVersionUpgrade",
                            "value": "MinorVersionUpgrade"
                          },
                          {
                            "name": "SecurityPatches",
                            "value": "SecurityPatches"
                          },
                          {
                            "name": "HotFixes",
                            "value": "HotFixes"
                          }
                        ]
                      }
                    },
                    "maintenanceState": {
                      "description": "A string describes the maintenance status",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Scheduled",
                        "ReScheduled",
                        "InPreparation",
                        "Processing",
                        "Completed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "MaintenanceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Scheduled",
                            "value": "Scheduled"
                          },
                          {
                            "name": "ReScheduled",
                            "value": "ReScheduled"
                          },
                          {
                            "name": "InPreparation",
                            "value": "InPreparation"
                          },
                          {
                            "name": "Processing",
                            "value": "Processing"
                          },
                          {
                            "name": "Completed",
                            "value": "Completed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          }
                        ]
                      }
                    },
                    "maintenanceStartTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time for a maintenance."
                    },
                    "maintenanceEndTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time for a maintenance.",
                      "readOnly": true
                    },
                    "maintenanceExecutionStartTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time for a maintenance execution.",
                      "readOnly": true
                    },
                    "maintenanceExecutionEndTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time for a maintenance execution.",
                      "readOnly": true
                    },
                    "maintenanceAvailableScheduleMinTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The min time the maintenance can be rescheduled.",
                      "readOnly": true
                    },
                    "maintenanceAvailableScheduleMaxTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The max time the maintenance can be rescheduled.",
                      "readOnly": true
                    },
                    "maintenanceTitle": {
                      "type": "string",
                      "description": "The maintenance title.",
                      "readOnly": true
                    },
                    "maintenanceDescription": {
                      "type": "string",
                      "description": "The maintenance description.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Maintenance.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "MaintenanceProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "operationId": "Maintenances_Update",
        "tags": [
          "Maintenances"
        ],
        "description": "Update maintenances.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "maintenanceName",
            "in": "path",
            "description": "The name of the maintenance.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for update maintenance on a server.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Represents a maintenance update parameter.",
              "properties": {
                "properties": {
                  "description": "The properties of a maintenance update parameter",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceStartTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time for a maintenance."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a maintenance.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of a maintenance",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceType": {
                      "description": "A string defines maintenance type.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "RoutineMaintenance",
                        "MinorVersionUpgrade",
                        "SecurityPatches",
                        "HotFixes"
                      ],
                      "x-ms-enum": {
                        "name": "MaintenanceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "RoutineMaintenance",
                            "value": "RoutineMaintenance"
                          },
                          {
                            "name": "MinorVersionUpgrade",
                            "value": "MinorVersionUpgrade"
                          },
                          {
                            "name": "SecurityPatches",
                            "value": "SecurityPatches"
                          },
                          {
                            "name": "HotFixes",
                            "value": "HotFixes"
                          }
                        ]
                      }
                    },
                    "maintenanceState": {
                      "description": "A string describes the maintenance status",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Scheduled",
                        "ReScheduled",
                        "InPreparation",
                        "Processing",
                        "Completed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "MaintenanceState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Scheduled",
                            "value": "Scheduled"
                          },
                          {
                            "name": "ReScheduled",
                            "value": "ReScheduled"
                          },
                          {
                            "name": "InPreparation",
                            "value": "InPreparation"
                          },
                          {
                            "name": "Processing",
                            "value": "Processing"
                          },
                          {
                            "name": "Completed",
                            "value": "Completed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          }
                        ]
                      }
                    },
                    "maintenanceStartTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time for a maintenance."
                    },
                    "maintenanceEndTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time for a maintenance.",
                      "readOnly": true
                    },
                    "maintenanceExecutionStartTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time for a maintenance execution.",
                      "readOnly": true
                    },
                    "maintenanceExecutionEndTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time for a maintenance execution.",
                      "readOnly": true
                    },
                    "maintenanceAvailableScheduleMinTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The min time the maintenance can be rescheduled.",
                      "readOnly": true
                    },
                    "maintenanceAvailableScheduleMaxTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The max time the maintenance can be rescheduled.",
                      "readOnly": true
                    },
                    "maintenanceTitle": {
                      "type": "string",
                      "description": "The maintenance title.",
                      "readOnly": true
                    },
                    "maintenanceDescription": {
                      "type": "string",
                      "description": "The maintenance description.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Maintenance.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "MaintenanceProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByServer",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets all private endpoint connections on a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a PrivateEndpointConnection list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The PrivateEndpointConnection items on this page",
                  "items": {
                    "type": "object",
                    "description": "The private endpoint connection resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupIds": {
                            "type": "array",
                            "description": "The group ids for the private endpoint resource.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "privateEndpoint": {
                            "description": "The private endpoint resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ARM identifier for private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The private endpoint connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approve or reject a private endpoint connection with a given name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The private endpoint connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The private endpoint connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The private endpoint connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection with a given name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByServer",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Lists the private link resources for MySQL server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of private link resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "type": "object",
                    "description": "A private link resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string",
                            "description": "The private link resource group id.",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "type": "array",
                            "description": "The private link resource required member names.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "description": "The private link resource private link DNS zone name.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/privateLinkResources/{groupName}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets a private link resource for MySQL server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A private link resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "description": "The private link resource group id.",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "type": "array",
                      "description": "The private link resource required member names.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "type": "array",
                      "description": "The private link resource private link DNS zone name.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/replicas": {
      "get": {
        "operationId": "Replicas_ListByServer",
        "tags": [
          "Replicas"
        ],
        "description": "List all the replicas for a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Server list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Server items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a server.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of the server.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "administratorLogin": {
                            "type": "string",
                            "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "administratorLoginPassword": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the administrator login (required for server creation).",
                            "x-ms-mutability": [
                              "update",
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "version": {
                            "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                            "type": "string",
                            "enum": [
                              "5.7",
                              "8.0.21"
                            ],
                            "x-ms-enum": {
                              "name": "ServerVersion",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "5.7",
                                  "value": "5.7"
                                },
                                {
                                  "name": "8.0.21",
                                  "value": "8.0.21"
                                }
                              ]
                            }
                          },
                          "fullVersion": {
                            "type": "string",
                            "description": "Major version and actual engine version",
                            "readOnly": true
                          },
                          "availabilityZone": {
                            "type": "string",
                            "description": "availability Zone information of the server.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "createMode": {
                            "description": "The mode to create a new MySQL server.",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Default",
                              "PointInTimeRestore",
                              "Replica",
                              "GeoRestore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "PointInTimeRestore",
                                  "value": "PointInTimeRestore"
                                },
                                {
                                  "name": "Replica",
                                  "value": "Replica"
                                },
                                {
                                  "name": "GeoRestore",
                                  "value": "GeoRestore"
                                }
                              ]
                            }
                          },
                          "sourceServerResourceId": {
                            "type": "string",
                            "description": "The source MySQL server id.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "restorePointInTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                            "x-ms-mutability": [
                              "create"
                            ]
                          },
                          "replicationRole": {
                            "description": "The replication role.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Source",
                              "Replica"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "Source",
                                  "value": "Source"
                                },
                                {
                                  "name": "Replica",
                                  "value": "Replica"
                                }
                              ]
                            }
                          },
                          "replicaCapacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of replicas that a primary server can have.",
                            "minimum": 0,
                            "readOnly": true
                          },
                          "dataEncryption": {
                            "description": "The Data Encryption for CMK.",
                            "type": "object",
                            "properties": {
                              "primaryUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Primary user identity resource id"
                              },
                              "primaryKeyURI": {
                                "type": "string",
                                "description": "Primary key uri"
                              },
                              "geoBackupUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                              },
                              "geoBackupKeyURI": {
                                "type": "string",
                                "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                              },
                              "type": {
                                "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                                "type": "string",
                                "enum": [
                                  "AzureKeyVault",
                                  "SystemManaged"
                                ],
                                "x-ms-enum": {
                                  "name": "DataEncryptionType",
                                  "modelAsString": false
                                }
                              }
                            }
                          },
                          "state": {
                            "description": "The state of a server.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Ready",
                              "Dropping",
                              "Disabled",
                              "Starting",
                              "Stopping",
                              "Stopped",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ServerState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Ready",
                                  "value": "Ready"
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                },
                                {
                                  "name": "Starting",
                                  "value": "Starting"
                                },
                                {
                                  "name": "Stopping",
                                  "value": "Stopping"
                                },
                                {
                                  "name": "Stopped",
                                  "value": "Stopped"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating"
                                }
                              ]
                            }
                          },
                          "fullyQualifiedDomainName": {
                            "type": "string",
                            "description": "The fully qualified domain name of a server.",
                            "readOnly": true
                          },
                          "databasePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The server database port. Can only be specified when the server is being created.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "storage": {
                            "description": "Storage related properties of a server.",
                            "type": "object",
                            "properties": {
                              "storageSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max storage size allowed for a server."
                              },
                              "iops": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Storage IOPS for a server."
                              },
                              "autoGrow": {
                                "type": "string",
                                "description": "Enable Storage Auto Grow or not.",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "logOnDisk": {
                                "type": "string",
                                "description": "Enable Log On Disk or not.",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "storageSku": {
                                "type": "string",
                                "description": "The sku name of the server storage.",
                                "readOnly": true
                              },
                              "autoIoScaling": {
                                "type": "string",
                                "description": "Enable IO Auto Scaling or not.",
                                "default": "Enabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "storageRedundancy": {
                                "type": "string",
                                "description": "The redundant type of the server storage. The parameter is used for server creation.",
                                "default": "LocalRedundancy",
                                "enum": [
                                  "LocalRedundancy",
                                  "ZoneRedundancy"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageRedundancyEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "LocalRedundancy",
                                      "value": "LocalRedundancy"
                                    },
                                    {
                                      "name": "ZoneRedundancy",
                                      "value": "ZoneRedundancy"
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          },
                          "backup": {
                            "description": "Backup related properties of a server.",
                            "type": "object",
                            "properties": {
                              "backupRetentionDays": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Backup retention days for the server."
                              },
                              "backupIntervalHours": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Backup interval hours for the server."
                              },
                              "geoRedundantBackup": {
                                "type": "string",
                                "description": "Whether or not geo redundant backup is enabled.",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "earliestRestoreDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Earliest restore point creation time (ISO8601 format)",
                                "readOnly": true
                              }
                            }
                          },
                          "highAvailability": {
                            "description": "High availability related properties of a server.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "High availability mode for a server.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "ZoneRedundant",
                                  "SameZone"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    },
                                    {
                                      "name": "ZoneRedundant",
                                      "value": "ZoneRedundant"
                                    },
                                    {
                                      "name": "SameZone",
                                      "value": "SameZone"
                                    }
                                  ]
                                }
                              },
                              "state": {
                                "description": "The state of server high availability.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "NotEnabled",
                                  "CreatingStandby",
                                  "Healthy",
                                  "FailingOver",
                                  "RemovingStandby"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "NotEnabled",
                                      "value": "NotEnabled"
                                    },
                                    {
                                      "name": "CreatingStandby",
                                      "value": "CreatingStandby"
                                    },
                                    {
                                      "name": "Healthy",
                                      "value": "Healthy"
                                    },
                                    {
                                      "name": "FailingOver",
                                      "value": "FailingOver"
                                    },
                                    {
                                      "name": "RemovingStandby",
                                      "value": "RemovingStandby"
                                    }
                                  ]
                                }
                              },
                              "standbyAvailabilityZone": {
                                "type": "string",
                                "description": "Availability zone of the standby server."
                              }
                            }
                          },
                          "network": {
                            "description": "Network related properties of a server.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "publicNetworkAccess": {
                                "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "delegatedSubnetResourceId": {
                                "type": "string",
                                "description": "Delegated subnet resource id used to setup vnet for a server."
                              },
                              "privateDnsZoneResourceId": {
                                "type": "string",
                                "description": "Private DNS zone resource id."
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "PrivateEndpointConnections related properties of a server.",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "maintenancePolicy": {
                            "description": "Maintenance policy of a server.",
                            "type": "object",
                            "properties": {
                              "patchStrategy": {
                                "description": "The patch strategy of this server",
                                "type": "string",
                                "enum": [
                                  "Regular",
                                  "VirtualCanary"
                                ],
                                "x-ms-enum": {
                                  "name": "PatchStrategy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Regular",
                                      "value": "Regular"
                                    },
                                    {
                                      "name": "VirtualCanary",
                                      "value": "VirtualCanary"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "maintenanceWindow": {
                            "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                            "x-ms-mutability": [
                              "read",
                              "update"
                            ],
                            "type": "object",
                            "properties": {
                              "customWindow": {
                                "type": "string",
                                "description": "indicates whether custom window is enabled or disabled"
                              },
                              "startHour": {
                                "type": "integer",
                                "format": "int32",
                                "description": "start hour for maintenance window"
                              },
                              "startMinute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "start minute for maintenance window"
                              },
                              "dayOfWeek": {
                                "type": "integer",
                                "format": "int32",
                                "description": "day of week for maintenance window"
                              },
                              "batchOfMaintenance": {
                                "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "Batch1",
                                  "Batch2"
                                ],
                                "x-ms-enum": {
                                  "name": "BatchOfMaintenance",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Default",
                                      "value": "Default"
                                    },
                                    {
                                      "name": "Batch1",
                                      "value": "Batch1"
                                    },
                                    {
                                      "name": "Batch2",
                                      "value": "Batch2"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "importSourceProperties": {
                            "description": "Source properties for import from storage.",
                            "type": "object",
                            "properties": {
                              "storageType": {
                                "description": "Storage type of import source.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "AzureBlob"
                                ],
                                "x-ms-enum": {
                                  "name": "ImportSourceStorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "AzureBlob",
                                      "value": "AzureBlob"
                                    }
                                  ]
                                }
                              },
                              "storageUrl": {
                                "type": "string",
                                "description": "Uri of the import source storage.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "sasToken": {
                                "type": "string",
                                "format": "password",
                                "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                                "x-ms-mutability": [
                                  "create"
                                ],
                                "x-ms-secret": true
                              },
                              "dataDirPath": {
                                "type": "string",
                                "description": "Relative path of data directory in storage.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "The cmk identity for the server.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "ObjectId from the KeyVault",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "TenantId from the KeyVault",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of managed service identity.",
                            "type": "string",
                            "enum": [
                              "UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "UserAssigned",
                                  "value": "UserAssigned"
                                }
                              ]
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "Metadata of user assigned identity.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Metadata of user assigned identity.",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "description": "Principal Id of user assigned identity",
                                  "readOnly": true,
                                  "x-ms-client-name": "PrincipalId"
                                },
                                "clientId": {
                                  "type": "string",
                                  "description": "Client Id of user assigned identity",
                                  "readOnly": true,
                                  "x-ms-client-name": "ClientId"
                                }
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "The SKU (pricing tier) of the server.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the sku, e.g. Standard_D32s_v3."
                          },
                          "tier": {
                            "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                            "type": "string",
                            "enum": [
                              "Burstable",
                              "GeneralPurpose",
                              "MemoryOptimized"
                            ],
                            "x-ms-enum": {
                              "name": "ServerSkuTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Burstable",
                                  "value": "Burstable"
                                },
                                {
                                  "name": "GeneralPurpose",
                                  "value": "GeneralPurpose"
                                },
                                {
                                  "name": "MemoryOptimized",
                                  "value": "MemoryOptimized"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "tier"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/resetGtid": {
      "post": {
        "operationId": "Servers_ResetGtid",
        "tags": [
          "Servers"
        ],
        "description": "Resets GTID on a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for resetting GTID on a server.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Server Gtid set parameters: Replication with Global Transaction Identifiers.",
              "properties": {
                "gtidSet": {
                  "type": "string",
                  "description": "The Gtid set of server."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/restart": {
      "post": {
        "operationId": "Servers_Restart",
        "tags": [
          "Servers"
        ],
        "description": "Restarts a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for restarting a server.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Server restart parameters.",
              "properties": {
                "restartWithFailover": {
                  "description": "Whether or not failover to standby server when restarting a server with high availability enabled.",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "maxFailoverSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed failover time in seconds."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/start": {
      "post": {
        "operationId": "Servers_Start",
        "tags": [
          "Servers"
        ],
        "description": "Starts a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/stop": {
      "post": {
        "operationId": "Servers_Stop",
        "tags": [
          "Servers"
        ],
        "description": "Stops a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/updateConfigurations": {
      "post": {
        "operationId": "Configurations_BatchUpdate",
        "tags": [
          "Configurations"
        ],
        "description": "Update a list of configurations in a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for updating a list of server configuration.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A list of server configurations to update.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The list of server configurations.",
                  "items": {
                    "type": "object",
                    "description": "Represents a Configuration.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the configuration."
                      },
                      "properties": {
                        "description": "The properties can be updated for a configuration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Value of the configuration."
                          },
                          "source": {
                            "type": "string",
                            "description": "Source of the configuration."
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "resetAllToDefault": {
                  "description": "Whether to reset all server parameters to default.",
                  "type": "string",
                  "enum": [
                    "True",
                    "False"
                  ],
                  "x-ms-enum": {
                    "name": "ResetAllToDefault",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "True",
                        "value": "True"
                      },
                      {
                        "name": "False",
                        "value": "False"
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Configuration list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Configuration items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a Configuration.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of a configuration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Value of the configuration."
                          },
                          "currentValue": {
                            "type": "string",
                            "description": "Current value of the configuration."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the configuration.",
                            "readOnly": true
                          },
                          "documentationLink": {
                            "type": "string",
                            "description": "The link used to get the document from community or Azure site.",
                            "readOnly": true
                          },
                          "defaultValue": {
                            "type": "string",
                            "description": "Default value of the configuration.",
                            "readOnly": true
                          },
                          "dataType": {
                            "type": "string",
                            "description": "Data type of the configuration.",
                            "readOnly": true
                          },
                          "allowedValues": {
                            "type": "string",
                            "description": "Allowed values of the configuration.",
                            "readOnly": true
                          },
                          "source": {
                            "description": "Source of the configuration.",
                            "type": "string",
                            "enum": [
                              "system-default",
                              "user-override"
                            ],
                            "x-ms-enum": {
                              "name": "ConfigurationSource",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "system-default",
                                  "value": "system-default"
                                },
                                {
                                  "name": "user-override",
                                  "value": "user-override"
                                }
                              ]
                            }
                          },
                          "isReadOnly": {
                            "description": "If is the configuration read only.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "IsReadOnly",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "True"
                                },
                                {
                                  "name": "False",
                                  "value": "False"
                                }
                              ]
                            }
                          },
                          "isConfigPendingRestart": {
                            "description": "If is the configuration pending restart or not.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "IsConfigPendingRestart",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "True"
                                },
                                {
                                  "name": "False",
                                  "value": "False"
                                }
                              ]
                            }
                          },
                          "isDynamicConfig": {
                            "description": "If is the configuration dynamic.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "IsDynamicConfig",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "True"
                                },
                                {
                                  "name": "False",
                                  "value": "False"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/validateBackup": {
      "post": {
        "operationId": "BackupAndExport_ValidateBackup",
        "tags": [
          "BackupAndExport"
        ],
        "description": "Validates if backup can be performed for given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents ValidateBackup API Response",
              "properties": {
                "properties": {
                  "description": "The response properties of a pre backup operation.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "numberOfContainers": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Estimated no of storage containers required for resource data to be backed up."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/validateEstimateHighAvailability": {
      "post": {
        "operationId": "Servers_ValidateEstimateHighAvailability",
        "tags": [
          "Servers"
        ],
        "description": "Validate a deployment of high availability.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "description": "The name of the server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for validation of high availability deployment.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "High availability validation properties of a server",
              "properties": {
                "estimatedDowntime": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Estimated seconds of downtime for the deployment.",
                  "readOnly": true
                },
                "scheduledStandbyAvailabilityZone": {
                  "type": "string",
                  "description": "Scheduled Availability zone of the standby server.",
                  "readOnly": true
                },
                "expectedStandbyAvailabilityZone": {
                  "type": "string",
                  "description": "Expected Availability zone of the standby server."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "High availability validation properties of a server",
              "properties": {
                "estimatedDowntime": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Estimated seconds of downtime for the deployment.",
                  "readOnly": true
                },
                "scheduledStandbyAvailabilityZone": {
                  "type": "string",
                  "description": "Scheduled Availability zone of the standby server.",
                  "readOnly": true
                },
                "expectedStandbyAvailabilityZone": {
                  "type": "string",
                  "description": "Expected Availability zone of the standby server."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AdministratorListResult": {
      "type": "object",
      "description": "A List of azure ad administrators.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of azure ad administrator of a server.",
          "items": {
            "type": "object",
            "description": "Represents a Administrator.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of an administrator.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "administratorType": {
                    "description": "Type of the sever administrator.",
                    "type": "string",
                    "enum": [
                      "ActiveDirectory"
                    ],
                    "x-ms-enum": {
                      "name": "AdministratorType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "ActiveDirectory",
                          "value": "ActiveDirectory"
                        }
                      ]
                    }
                  },
                  "login": {
                    "type": "string",
                    "description": "Login name of the server administrator."
                  },
                  "sid": {
                    "type": "string",
                    "description": "SID (object ID) of the server administrator."
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "Tenant ID of the administrator."
                  },
                  "identityResourceId": {
                    "type": "string",
                    "description": "The resource id of the identity used for AAD Authentication."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link used to get the next page of operations."
        }
      }
    },
    "AdministratorProperties": {
      "type": "object",
      "description": "The properties of an administrator.",
      "properties": {
        "administratorType": {
          "description": "Type of the sever administrator.",
          "type": "string",
          "enum": [
            "ActiveDirectory"
          ],
          "x-ms-enum": {
            "name": "AdministratorType",
            "modelAsString": true,
            "values": [
              {
                "name": "ActiveDirectory",
                "value": "ActiveDirectory"
              }
            ]
          }
        },
        "login": {
          "type": "string",
          "description": "Login name of the server administrator."
        },
        "sid": {
          "type": "string",
          "description": "SID (object ID) of the server administrator."
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID of the administrator."
        },
        "identityResourceId": {
          "type": "string",
          "description": "The resource id of the identity used for AAD Authentication."
        }
      }
    },
    "AdministratorType": {
      "type": "string",
      "description": "Type of the sever administrator.",
      "enum": [
        "ActiveDirectory"
      ],
      "x-ms-enum": {
        "name": "AdministratorType",
        "modelAsString": true,
        "values": [
          {
            "name": "ActiveDirectory",
            "value": "ActiveDirectory"
          }
        ]
      }
    },
    "AdvancedThreatProtection": {
      "type": "object",
      "description": "A server's Advanced Threat Protection.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "creationTime": {
              "type": "string",
              "format": "date-time",
              "description": "Specifies the UTC creation time of the policy.",
              "readOnly": true
            },
            "state": {
              "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "AdvancedThreatProtectionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the Threat Protection.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Updating",
                "Canceled",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "AdvancedThreatProtectionProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating"
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "AdvancedThreatProtectionForUpdate": {
      "type": "object",
      "description": "Parameters allowed to update advanced threat protection for a server.",
      "properties": {
        "properties": {
          "description": "Resource update properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "state": {
              "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "AdvancedThreatProtectionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            }
          },
          "required": [
            "state"
          ]
        }
      }
    },
    "AdvancedThreatProtectionListResult": {
      "type": "object",
      "description": "The response of a AdvancedThreatProtection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AdvancedThreatProtection items on this page",
          "items": {
            "type": "object",
            "description": "A server's Advanced Threat Protection.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "creationTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies the UTC creation time of the policy.",
                    "readOnly": true
                  },
                  "state": {
                    "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "AdvancedThreatProtectionState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Threat Protection.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Updating",
                      "Canceled",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "AdvancedThreatProtectionProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating"
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "AdvancedThreatProtectionProperties": {
      "type": "object",
      "description": "Properties of an Advanced Threat Protection setting.",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Specifies the UTC creation time of the policy.",
          "readOnly": true
        },
        "state": {
          "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AdvancedThreatProtectionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the Threat Protection.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Updating",
            "Canceled",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "AdvancedThreatProtectionProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Updating",
                "value": "Updating"
              },
              {
                "name": "Canceled",
                "value": "Canceled"
              },
              {
                "name": "Failed",
                "value": "Failed"
              }
            ]
          }
        }
      }
    },
    "AdvancedThreatProtectionProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Updating",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AdvancedThreatProtectionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "AdvancedThreatProtectionState": {
      "type": "string",
      "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled on the server.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "AdvancedThreatProtectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "AdvancedThreatProtectionUpdateProperties": {
      "type": "object",
      "description": "Properties of Advanced Threat Protection that can be updated.",
      "properties": {
        "state": {
          "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AdvancedThreatProtectionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      },
      "required": [
        "state"
      ]
    },
    "AzureADAdministrator": {
      "type": "object",
      "description": "Represents a Administrator.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of an administrator.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "administratorType": {
              "description": "Type of the sever administrator.",
              "type": "string",
              "enum": [
                "ActiveDirectory"
              ],
              "x-ms-enum": {
                "name": "AdministratorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ActiveDirectory",
                    "value": "ActiveDirectory"
                  }
                ]
              }
            },
            "login": {
              "type": "string",
              "description": "Login name of the server administrator."
            },
            "sid": {
              "type": "string",
              "description": "SID (object ID) of the server administrator."
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant ID of the administrator."
            },
            "identityResourceId": {
              "type": "string",
              "description": "The resource id of the identity used for AAD Authentication."
            }
          }
        }
      }
    },
    "Backup": {
      "type": "object",
      "description": "Storage Profile properties of a server",
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Backup retention days for the server."
        },
        "backupIntervalHours": {
          "type": "integer",
          "format": "int32",
          "description": "Backup interval hours for the server."
        },
        "geoRedundantBackup": {
          "type": "string",
          "description": "Whether or not geo redundant backup is enabled.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "description": "Earliest restore point creation time (ISO8601 format)",
          "readOnly": true
        }
      }
    },
    "BackupAndExportRequest": {
      "type": "object",
      "description": "BackupAndExport API Request",
      "properties": {
        "backupSettings": {
          "description": "Backup Settings",
          "type": "object",
          "properties": {
            "backupName": {
              "type": "string",
              "description": "The name of the backup.",
              "pattern": "(^[a-z0-9]$)|(^[a-z0-9][a-z0-9-]*[a-z0-9]$)"
            },
            "backupFormat": {
              "description": "Backup Format for the current backup. (CollatedFormat is INTERNAL – DO NOT USE)",
              "type": "string",
              "enum": [
                "CollatedFormat",
                "Raw"
              ],
              "x-ms-enum": {
                "name": "BackupFormat",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CollatedFormat",
                    "value": "CollatedFormat"
                  },
                  {
                    "name": "Raw",
                    "value": "Raw"
                  }
                ]
              }
            }
          },
          "required": [
            "backupName"
          ]
        },
        "targetDetails": {
          "description": "Backup Target Store Details",
          "type": "object",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "Type of the specific object - used for deserializing"
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      },
      "required": [
        "targetDetails"
      ]
    },
    "BackupAndExportResponse": {
      "type": "object",
      "description": "Represents BackupAndExportAPI Response",
      "properties": {
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "datasourceSizeInBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Size of datasource in bytes"
            },
            "dataTransferredInBytes": {
              "type": "integer",
              "format": "int64",
              "description": "Data transferred in bytes"
            },
            "backupMetadata": {
              "type": "string",
              "description": "Metadata related to backup to be stored for restoring resource in key-value pairs."
            }
          }
        },
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        },
        "name": {
          "type": "string",
          "description": "The name of the backup and export response.",
          "readOnly": true
        },
        "status": {
          "description": "The operation status",
          "type": "string",
          "enum": [
            "Pending",
            "InProgress",
            "Succeeded",
            "Failed",
            "CancelInProgress",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The operation has been accepted but hasn't started."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The operation is running"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The operation Succeeded"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The operation Failed"
              },
              {
                "name": "CancelInProgress",
                "value": "CancelInProgress",
                "description": "The cancellation in progress"
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The operation has been Canceled"
              }
            ]
          }
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time"
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "description": "Operation progress (0-100).",
          "minimum": 0,
          "maximum": 100
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "type": "object",
          "title": "Proxy Resource",
          "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            }
          }
        }
      ]
    },
    "BackupAndExportResponseProperties": {
      "type": "object",
      "description": "BackupAndExport Response Properties",
      "properties": {
        "datasourceSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Size of datasource in bytes"
        },
        "dataTransferredInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Data transferred in bytes"
        },
        "backupMetadata": {
          "type": "string",
          "description": "Metadata related to backup to be stored for restoring resource in key-value pairs."
        }
      }
    },
    "BackupAndExportResponseType": {
      "type": "object",
      "description": "BackupAndExport Response Properties",
      "properties": {
        "datasourceSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Size of datasource in bytes"
        },
        "dataTransferredInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Data transferred in bytes"
        },
        "backupMetadata": {
          "type": "string",
          "description": "Metadata related to backup to be stored for restoring resource in key-value pairs."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Represents the response properties specific to the operation",
          "properties": {
            "objectType": {
              "description": "Identifies the type of source operation",
              "type": "string",
              "enum": [
                "BackupAndExportResponse",
                "ImportFromStorageResponse"
              ],
              "x-ms-enum": {
                "name": "ObjectType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "BackupAndExportResponse",
                    "value": "BackupAndExportResponse"
                  },
                  {
                    "name": "ImportFromStorageResponse",
                    "value": "ImportFromStorageResponse"
                  }
                ]
              }
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "BackupAndExportResponse"
    },
    "BackupFormat": {
      "type": "string",
      "description": "Backup Format for the current backup. (CollatedFormat is INTERNAL – DO NOT USE)",
      "enum": [
        "CollatedFormat",
        "Raw"
      ],
      "x-ms-enum": {
        "name": "BackupFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "CollatedFormat",
            "value": "CollatedFormat"
          },
          {
            "name": "Raw",
            "value": "Raw"
          }
        ]
      }
    },
    "BackupRequestBase": {
      "type": "object",
      "description": "BackupRequestBase is the base for all backup request.",
      "properties": {
        "backupSettings": {
          "description": "Backup Settings",
          "type": "object",
          "properties": {
            "backupName": {
              "type": "string",
              "description": "The name of the backup.",
              "pattern": "(^[a-z0-9]$)|(^[a-z0-9][a-z0-9-]*[a-z0-9]$)"
            },
            "backupFormat": {
              "description": "Backup Format for the current backup. (CollatedFormat is INTERNAL – DO NOT USE)",
              "type": "string",
              "enum": [
                "CollatedFormat",
                "Raw"
              ],
              "x-ms-enum": {
                "name": "BackupFormat",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CollatedFormat",
                    "value": "CollatedFormat"
                  },
                  {
                    "name": "Raw",
                    "value": "Raw"
                  }
                ]
              }
            }
          },
          "required": [
            "backupName"
          ]
        }
      },
      "required": [
        "backupSettings"
      ]
    },
    "BackupSettings": {
      "type": "object",
      "description": "Backup Settings",
      "properties": {
        "backupName": {
          "type": "string",
          "description": "The name of the backup.",
          "pattern": "(^[a-z0-9]$)|(^[a-z0-9][a-z0-9-]*[a-z0-9]$)"
        },
        "backupFormat": {
          "description": "Backup Format for the current backup. (CollatedFormat is INTERNAL – DO NOT USE)",
          "type": "string",
          "enum": [
            "CollatedFormat",
            "Raw"
          ],
          "x-ms-enum": {
            "name": "BackupFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "CollatedFormat",
                "value": "CollatedFormat"
              },
              {
                "name": "Raw",
                "value": "Raw"
              }
            ]
          }
        }
      },
      "required": [
        "backupName"
      ]
    },
    "BackupStoreDetails": {
      "type": "object",
      "description": "Details about the target where the backup content will be stored.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BackupType": {
      "type": "string",
      "enum": [
        "FULL"
      ],
      "x-ms-enum": {
        "name": "BackupType",
        "modelAsString": true,
        "values": [
          {
            "name": "FULL",
            "value": "FULL"
          }
        ]
      }
    },
    "BatchOfMaintenance": {
      "type": "string",
      "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
      "enum": [
        "Default",
        "Batch1",
        "Batch2"
      ],
      "x-ms-enum": {
        "name": "BatchOfMaintenance",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "Batch1",
            "value": "Batch1"
          },
          {
            "name": "Batch2",
            "value": "Batch2"
          }
        ]
      }
    },
    "CapabilitiesListResult": {
      "type": "object",
      "description": "location capability",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CapabilityProperties items on this page",
          "items": {
            "type": "object",
            "description": "Location capabilities.",
            "properties": {
              "zone": {
                "type": "string",
                "description": "zone name",
                "readOnly": true
              },
              "supportedHAMode": {
                "type": "array",
                "description": "Supported high availability mode",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "supportedGeoBackupRegions": {
                "type": "array",
                "description": "supported geo backup regions",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "supportedFlexibleServerEditions": {
                "type": "array",
                "description": "A list of supported flexible server editions.",
                "items": {
                  "type": "object",
                  "description": "Server edition capabilities.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Server edition name",
                      "readOnly": true
                    },
                    "supportedStorageEditions": {
                      "type": "array",
                      "description": "A list of supported storage editions",
                      "items": {
                        "type": "object",
                        "description": "storage edition capability",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "storage edition name",
                            "readOnly": true
                          },
                          "minStorageSize": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The minimal supported storage size.",
                            "readOnly": true
                          },
                          "maxStorageSize": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum supported storage size.",
                            "readOnly": true
                          },
                          "minBackupRetentionDays": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Minimal backup retention days",
                            "readOnly": true
                          },
                          "maxBackupRetentionDays": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Maximum backup retention days",
                            "readOnly": true
                          },
                          "minBackupIntervalHours": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Minimal backup interval hours",
                            "readOnly": true
                          },
                          "maxBackupIntervalHours": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Maximum backup interval hours",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "supportedServerVersions": {
                      "type": "array",
                      "description": "A list of supported server versions.",
                      "items": {
                        "type": "object",
                        "description": "Server version capabilities.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "server version",
                            "readOnly": true
                          },
                          "supportedSkus": {
                            "type": "array",
                            "description": "A list of supported Skus",
                            "items": {
                              "type": "object",
                              "description": "Sku capability",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "vCore name",
                                  "readOnly": true
                                },
                                "vCores": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "supported vCores",
                                  "readOnly": true
                                },
                                "supportedIops": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "supported IOPS",
                                  "readOnly": true
                                },
                                "supportedMemoryPerVCoreMB": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "supported memory per vCore in MB",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": []
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "Capability": {
      "type": "object",
      "description": "Represents a location capability set.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of a location capability set.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "supportedGeoBackupRegions": {
              "type": "array",
              "description": "supported geo backup regions",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "supportedFlexibleServerEditions": {
              "type": "array",
              "description": "A list of supported flexible server editions.",
              "items": {
                "type": "object",
                "description": "Server edition capabilities.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Server edition name",
                    "readOnly": true
                  },
                  "defaultSku": {
                    "type": "string",
                    "description": "Default Sku name",
                    "readOnly": true
                  },
                  "defaultStorageSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Default storage size",
                    "readOnly": true
                  },
                  "supportedStorageEditions": {
                    "type": "array",
                    "description": "A list of supported storage editions",
                    "items": {
                      "type": "object",
                      "description": "storage edition capability",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "storage edition name",
                          "readOnly": true
                        },
                        "minStorageSize": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The minimal supported storage size.",
                          "readOnly": true
                        },
                        "maxStorageSize": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum supported storage size.",
                          "readOnly": true
                        },
                        "minBackupRetentionDays": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Minimal backup retention days",
                          "readOnly": true
                        },
                        "maxBackupRetentionDays": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Maximum backup retention days",
                          "readOnly": true
                        },
                        "minBackupIntervalHours": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Minimal backup interval hours",
                          "readOnly": true
                        },
                        "maxBackupIntervalHours": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Maximum backup interval hours",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "supportedSkus": {
                    "type": "array",
                    "description": "A list of supported Skus",
                    "items": {
                      "type": "object",
                      "description": "Sku capability",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "vCore name",
                          "readOnly": true
                        },
                        "vCores": {
                          "type": "integer",
                          "format": "int64",
                          "description": "supported vCores",
                          "readOnly": true
                        },
                        "supportedIops": {
                          "type": "integer",
                          "format": "int64",
                          "description": "supported IOPS",
                          "readOnly": true
                        },
                        "supportedMemoryPerVCoreMB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "supported memory per vCore in MB",
                          "readOnly": true
                        },
                        "supportedZones": {
                          "type": "array",
                          "description": "Supported zones",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        },
                        "supportedHAMode": {
                          "type": "array",
                          "description": "Supported high availability mode",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "supportedServerVersions": {
              "type": "array",
              "description": "A list of supported server versions.",
              "items": {
                "type": "object",
                "description": "Server version capabilities.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "server version",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "supportedFeatures": {
              "type": "array",
              "description": "A list of supported features.",
              "items": {
                "type": "object",
                "description": "Server version capabilities.",
                "properties": {
                  "featureName": {
                    "type": "string",
                    "description": "feature name",
                    "readOnly": true
                  },
                  "featureValue": {
                    "type": "string",
                    "description": "feature value",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "CapabilityProperties": {
      "type": "object",
      "description": "Location capabilities.",
      "properties": {
        "zone": {
          "type": "string",
          "description": "zone name",
          "readOnly": true
        },
        "supportedHAMode": {
          "type": "array",
          "description": "Supported high availability mode",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "supportedGeoBackupRegions": {
          "type": "array",
          "description": "supported geo backup regions",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "supportedFlexibleServerEditions": {
          "type": "array",
          "description": "A list of supported flexible server editions.",
          "items": {
            "type": "object",
            "description": "Server edition capabilities.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Server edition name",
                "readOnly": true
              },
              "supportedStorageEditions": {
                "type": "array",
                "description": "A list of supported storage editions",
                "items": {
                  "type": "object",
                  "description": "storage edition capability",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "storage edition name",
                      "readOnly": true
                    },
                    "minStorageSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The minimal supported storage size.",
                      "readOnly": true
                    },
                    "maxStorageSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The maximum supported storage size.",
                      "readOnly": true
                    },
                    "minBackupRetentionDays": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Minimal backup retention days",
                      "readOnly": true
                    },
                    "maxBackupRetentionDays": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum backup retention days",
                      "readOnly": true
                    },
                    "minBackupIntervalHours": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Minimal backup interval hours",
                      "readOnly": true
                    },
                    "maxBackupIntervalHours": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum backup interval hours",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": []
              },
              "supportedServerVersions": {
                "type": "array",
                "description": "A list of supported server versions.",
                "items": {
                  "type": "object",
                  "description": "Server version capabilities.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "server version",
                      "readOnly": true
                    },
                    "supportedSkus": {
                      "type": "array",
                      "description": "A list of supported Skus",
                      "items": {
                        "type": "object",
                        "description": "Sku capability",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "vCore name",
                            "readOnly": true
                          },
                          "vCores": {
                            "type": "integer",
                            "format": "int64",
                            "description": "supported vCores",
                            "readOnly": true
                          },
                          "supportedIops": {
                            "type": "integer",
                            "format": "int64",
                            "description": "supported IOPS",
                            "readOnly": true
                          },
                          "supportedMemoryPerVCoreMB": {
                            "type": "integer",
                            "format": "int64",
                            "description": "supported memory per vCore in MB",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": []
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "CapabilityPropertiesV2": {
      "type": "object",
      "description": "Location capability.",
      "properties": {
        "supportedGeoBackupRegions": {
          "type": "array",
          "description": "supported geo backup regions",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "supportedFlexibleServerEditions": {
          "type": "array",
          "description": "A list of supported flexible server editions.",
          "items": {
            "type": "object",
            "description": "Server edition capabilities.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Server edition name",
                "readOnly": true
              },
              "defaultSku": {
                "type": "string",
                "description": "Default Sku name",
                "readOnly": true
              },
              "defaultStorageSize": {
                "type": "integer",
                "format": "int32",
                "description": "Default storage size",
                "readOnly": true
              },
              "supportedStorageEditions": {
                "type": "array",
                "description": "A list of supported storage editions",
                "items": {
                  "type": "object",
                  "description": "storage edition capability",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "storage edition name",
                      "readOnly": true
                    },
                    "minStorageSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The minimal supported storage size.",
                      "readOnly": true
                    },
                    "maxStorageSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The maximum supported storage size.",
                      "readOnly": true
                    },
                    "minBackupRetentionDays": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Minimal backup retention days",
                      "readOnly": true
                    },
                    "maxBackupRetentionDays": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum backup retention days",
                      "readOnly": true
                    },
                    "minBackupIntervalHours": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Minimal backup interval hours",
                      "readOnly": true
                    },
                    "maxBackupIntervalHours": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum backup interval hours",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": []
              },
              "supportedSkus": {
                "type": "array",
                "description": "A list of supported Skus",
                "items": {
                  "type": "object",
                  "description": "Sku capability",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "vCore name",
                      "readOnly": true
                    },
                    "vCores": {
                      "type": "integer",
                      "format": "int64",
                      "description": "supported vCores",
                      "readOnly": true
                    },
                    "supportedIops": {
                      "type": "integer",
                      "format": "int64",
                      "description": "supported IOPS",
                      "readOnly": true
                    },
                    "supportedMemoryPerVCoreMB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "supported memory per vCore in MB",
                      "readOnly": true
                    },
                    "supportedZones": {
                      "type": "array",
                      "description": "Supported zones",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "supportedHAMode": {
                      "type": "array",
                      "description": "Supported high availability mode",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": []
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "supportedServerVersions": {
          "type": "array",
          "description": "A list of supported server versions.",
          "items": {
            "type": "object",
            "description": "Server version capabilities.",
            "properties": {
              "name": {
                "type": "string",
                "description": "server version",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "supportedFeatures": {
          "type": "array",
          "description": "A list of supported features.",
          "items": {
            "type": "object",
            "description": "Server version capabilities.",
            "properties": {
              "featureName": {
                "type": "string",
                "description": "feature name",
                "readOnly": true
              },
              "featureValue": {
                "type": "string",
                "description": "feature value",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "CapabilitySetsList": {
      "type": "object",
      "description": "location capability set",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CapabilitySetsList items on this page",
          "items": {
            "type": "object",
            "description": "Represents a location capability set.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of a location capability set.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "supportedGeoBackupRegions": {
                    "type": "array",
                    "description": "supported geo backup regions",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "supportedFlexibleServerEditions": {
                    "type": "array",
                    "description": "A list of supported flexible server editions.",
                    "items": {
                      "type": "object",
                      "description": "Server edition capabilities.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Server edition name",
                          "readOnly": true
                        },
                        "defaultSku": {
                          "type": "string",
                          "description": "Default Sku name",
                          "readOnly": true
                        },
                        "defaultStorageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Default storage size",
                          "readOnly": true
                        },
                        "supportedStorageEditions": {
                          "type": "array",
                          "description": "A list of supported storage editions",
                          "items": {
                            "type": "object",
                            "description": "storage edition capability",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "storage edition name",
                                "readOnly": true
                              },
                              "minStorageSize": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The minimal supported storage size.",
                                "readOnly": true
                              },
                              "maxStorageSize": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum supported storage size.",
                                "readOnly": true
                              },
                              "minBackupRetentionDays": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Minimal backup retention days",
                                "readOnly": true
                              },
                              "maxBackupRetentionDays": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Maximum backup retention days",
                                "readOnly": true
                              },
                              "minBackupIntervalHours": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Minimal backup interval hours",
                                "readOnly": true
                              },
                              "maxBackupIntervalHours": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Maximum backup interval hours",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": []
                        },
                        "supportedSkus": {
                          "type": "array",
                          "description": "A list of supported Skus",
                          "items": {
                            "type": "object",
                            "description": "Sku capability",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "vCore name",
                                "readOnly": true
                              },
                              "vCores": {
                                "type": "integer",
                                "format": "int64",
                                "description": "supported vCores",
                                "readOnly": true
                              },
                              "supportedIops": {
                                "type": "integer",
                                "format": "int64",
                                "description": "supported IOPS",
                                "readOnly": true
                              },
                              "supportedMemoryPerVCoreMB": {
                                "type": "integer",
                                "format": "int64",
                                "description": "supported memory per vCore in MB",
                                "readOnly": true
                              },
                              "supportedZones": {
                                "type": "array",
                                "description": "Supported zones",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "supportedHAMode": {
                                "type": "array",
                                "description": "Supported high availability mode",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "supportedServerVersions": {
                    "type": "array",
                    "description": "A list of supported server versions.",
                    "items": {
                      "type": "object",
                      "description": "Server version capabilities.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "server version",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "supportedFeatures": {
                    "type": "array",
                    "description": "A list of supported features.",
                    "items": {
                      "type": "object",
                      "description": "Server version capabilities.",
                      "properties": {
                        "featureName": {
                          "type": "string",
                          "description": "feature name",
                          "readOnly": true
                        },
                        "featureValue": {
                          "type": "string",
                          "description": "feature value",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "Configuration": {
      "type": "object",
      "description": "Represents a Configuration.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of a configuration.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of the configuration."
            },
            "currentValue": {
              "type": "string",
              "description": "Current value of the configuration."
            },
            "description": {
              "type": "string",
              "description": "Description of the configuration.",
              "readOnly": true
            },
            "documentationLink": {
              "type": "string",
              "description": "The link used to get the document from community or Azure site.",
              "readOnly": true
            },
            "defaultValue": {
              "type": "string",
              "description": "Default value of the configuration.",
              "readOnly": true
            },
            "dataType": {
              "type": "string",
              "description": "Data type of the configuration.",
              "readOnly": true
            },
            "allowedValues": {
              "type": "string",
              "description": "Allowed values of the configuration.",
              "readOnly": true
            },
            "source": {
              "description": "Source of the configuration.",
              "type": "string",
              "enum": [
                "system-default",
                "user-override"
              ],
              "x-ms-enum": {
                "name": "ConfigurationSource",
                "modelAsString": true,
                "values": [
                  {
                    "name": "system-default",
                    "value": "system-default"
                  },
                  {
                    "name": "user-override",
                    "value": "user-override"
                  }
                ]
              }
            },
            "isReadOnly": {
              "description": "If is the configuration read only.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "IsReadOnly",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "True"
                  },
                  {
                    "name": "False",
                    "value": "False"
                  }
                ]
              }
            },
            "isConfigPendingRestart": {
              "description": "If is the configuration pending restart or not.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "IsConfigPendingRestart",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "True"
                  },
                  {
                    "name": "False",
                    "value": "False"
                  }
                ]
              }
            },
            "isDynamicConfig": {
              "description": "If is the configuration dynamic.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "IsDynamicConfig",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "True"
                  },
                  {
                    "name": "False",
                    "value": "False"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ConfigurationForBatchUpdate": {
      "type": "object",
      "description": "Represents a Configuration.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the configuration."
        },
        "properties": {
          "description": "The properties can be updated for a configuration.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of the configuration."
            },
            "source": {
              "type": "string",
              "description": "Source of the configuration."
            }
          }
        }
      }
    },
    "ConfigurationForBatchUpdateProperties": {
      "type": "object",
      "description": "The properties can be updated for a configuration.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the configuration."
        },
        "source": {
          "type": "string",
          "description": "Source of the configuration."
        }
      }
    },
    "ConfigurationListForBatchUpdate": {
      "type": "object",
      "description": "A list of server configurations to update.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of server configurations.",
          "items": {
            "type": "object",
            "description": "Represents a Configuration.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the configuration."
              },
              "properties": {
                "description": "The properties can be updated for a configuration.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value of the configuration."
                  },
                  "source": {
                    "type": "string",
                    "description": "Source of the configuration."
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "resetAllToDefault": {
          "description": "Whether to reset all server parameters to default.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "ResetAllToDefault",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True"
              },
              {
                "name": "False",
                "value": "False"
              }
            ]
          }
        }
      }
    },
    "ConfigurationListResult": {
      "type": "object",
      "description": "The response of a Configuration list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Configuration items on this page",
          "items": {
            "type": "object",
            "description": "Represents a Configuration.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of a configuration.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value of the configuration."
                  },
                  "currentValue": {
                    "type": "string",
                    "description": "Current value of the configuration."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the configuration.",
                    "readOnly": true
                  },
                  "documentationLink": {
                    "type": "string",
                    "description": "The link used to get the document from community or Azure site.",
                    "readOnly": true
                  },
                  "defaultValue": {
                    "type": "string",
                    "description": "Default value of the configuration.",
                    "readOnly": true
                  },
                  "dataType": {
                    "type": "string",
                    "description": "Data type of the configuration.",
                    "readOnly": true
                  },
                  "allowedValues": {
                    "type": "string",
                    "description": "Allowed values of the configuration.",
                    "readOnly": true
                  },
                  "source": {
                    "description": "Source of the configuration.",
                    "type": "string",
                    "enum": [
                      "system-default",
                      "user-override"
                    ],
                    "x-ms-enum": {
                      "name": "ConfigurationSource",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "system-default",
                          "value": "system-default"
                        },
                        {
                          "name": "user-override",
                          "value": "user-override"
                        }
                      ]
                    }
                  },
                  "isReadOnly": {
                    "description": "If is the configuration read only.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "IsReadOnly",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "True",
                          "value": "True"
                        },
                        {
                          "name": "False",
                          "value": "False"
                        }
                      ]
                    }
                  },
                  "isConfigPendingRestart": {
                    "description": "If is the configuration pending restart or not.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "IsConfigPendingRestart",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "True",
                          "value": "True"
                        },
                        {
                          "name": "False",
                          "value": "False"
                        }
                      ]
                    }
                  },
                  "isDynamicConfig": {
                    "description": "If is the configuration dynamic.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "IsDynamicConfig",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "True",
                          "value": "True"
                        },
                        {
                          "name": "False",
                          "value": "False"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "ConfigurationProperties": {
      "type": "object",
      "description": "The properties of a configuration.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the configuration."
        },
        "currentValue": {
          "type": "string",
          "description": "Current value of the configuration."
        },
        "description": {
          "type": "string",
          "description": "Description of the configuration.",
          "readOnly": true
        },
        "documentationLink": {
          "type": "string",
          "description": "The link used to get the document from community or Azure site.",
          "readOnly": true
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value of the configuration.",
          "readOnly": true
        },
        "dataType": {
          "type": "string",
          "description": "Data type of the configuration.",
          "readOnly": true
        },
        "allowedValues": {
          "type": "string",
          "description": "Allowed values of the configuration.",
          "readOnly": true
        },
        "source": {
          "description": "Source of the configuration.",
          "type": "string",
          "enum": [
            "system-default",
            "user-override"
          ],
          "x-ms-enum": {
            "name": "ConfigurationSource",
            "modelAsString": true,
            "values": [
              {
                "name": "system-default",
                "value": "system-default"
              },
              {
                "name": "user-override",
                "value": "user-override"
              }
            ]
          }
        },
        "isReadOnly": {
          "description": "If is the configuration read only.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "IsReadOnly",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True"
              },
              {
                "name": "False",
                "value": "False"
              }
            ]
          }
        },
        "isConfigPendingRestart": {
          "description": "If is the configuration pending restart or not.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "IsConfigPendingRestart",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True"
              },
              {
                "name": "False",
                "value": "False"
              }
            ]
          }
        },
        "isDynamicConfig": {
          "description": "If is the configuration dynamic.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "IsDynamicConfig",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "True"
              },
              {
                "name": "False",
                "value": "False"
              }
            ]
          }
        }
      }
    },
    "ConfigurationSource": {
      "type": "string",
      "description": "Source of the configuration.",
      "enum": [
        "system-default",
        "user-override"
      ],
      "x-ms-enum": {
        "name": "ConfigurationSource",
        "modelAsString": true,
        "values": [
          {
            "name": "system-default",
            "value": "system-default"
          },
          {
            "name": "user-override",
            "value": "user-override"
          }
        ]
      }
    },
    "CreateMode": {
      "type": "string",
      "description": "The mode to create a new MySQL server.",
      "enum": [
        "Default",
        "PointInTimeRestore",
        "Replica",
        "GeoRestore"
      ],
      "x-ms-enum": {
        "name": "CreateMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "PointInTimeRestore",
            "value": "PointInTimeRestore"
          },
          {
            "name": "Replica",
            "value": "Replica"
          },
          {
            "name": "GeoRestore",
            "value": "GeoRestore"
          }
        ]
      }
    },
    "DataEncryption": {
      "type": "object",
      "description": "The date encryption for cmk.",
      "properties": {
        "primaryUserAssignedIdentityId": {
          "type": "string",
          "description": "Primary user identity resource id"
        },
        "primaryKeyURI": {
          "type": "string",
          "description": "Primary key uri"
        },
        "geoBackupUserAssignedIdentityId": {
          "type": "string",
          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
        },
        "geoBackupKeyURI": {
          "type": "string",
          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
        },
        "type": {
          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
          "type": "string",
          "enum": [
            "AzureKeyVault",
            "SystemManaged"
          ],
          "x-ms-enum": {
            "name": "DataEncryptionType",
            "modelAsString": false
          }
        }
      }
    },
    "DataEncryptionType": {
      "type": "string",
      "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
      "enum": [
        "AzureKeyVault",
        "SystemManaged"
      ],
      "x-ms-enum": {
        "name": "DataEncryptionType",
        "modelAsString": false
      }
    },
    "Database": {
      "type": "object",
      "description": "Represents a Database.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of a database.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "charset": {
              "type": "string",
              "description": "The charset of the database."
            },
            "collation": {
              "type": "string",
              "description": "The collation of the database."
            }
          }
        }
      }
    },
    "DatabaseListResult": {
      "type": "object",
      "description": "The response of a Database list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Database items on this page",
          "items": {
            "type": "object",
            "description": "Represents a Database.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of a database.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "charset": {
                    "type": "string",
                    "description": "The charset of the database."
                  },
                  "collation": {
                    "type": "string",
                    "description": "The collation of the database."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "DatabaseProperties": {
      "type": "object",
      "description": "The properties of a database.",
      "properties": {
        "charset": {
          "type": "string",
          "description": "The charset of the database."
        },
        "collation": {
          "type": "string",
          "description": "The collation of the database."
        }
      }
    },
    "DelegatedSubnetUsage": {
      "type": "object",
      "description": "Delegated subnet usage data.",
      "properties": {
        "subnetName": {
          "type": "string",
          "description": "name of the subnet",
          "readOnly": true
        },
        "usage": {
          "type": "integer",
          "format": "int64",
          "description": "Number of used delegated subnets",
          "readOnly": true
        }
      }
    },
    "EnableStatusEnum": {
      "type": "string",
      "description": "Enum to indicate whether value is 'Enabled' or 'Disabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnableStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "FeatureProperty": {
      "type": "object",
      "description": "Server version capabilities.",
      "properties": {
        "featureName": {
          "type": "string",
          "description": "feature name",
          "readOnly": true
        },
        "featureValue": {
          "type": "string",
          "description": "feature value",
          "readOnly": true
        }
      }
    },
    "FirewallRule": {
      "type": "object",
      "description": "Represents a server firewall rule.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of a firewall rule.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "startIpAddress": {
              "type": "string",
              "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
              "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
            },
            "endIpAddress": {
              "type": "string",
              "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
              "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
            }
          },
          "required": [
            "startIpAddress",
            "endIpAddress"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "FirewallRuleListResult": {
      "type": "object",
      "description": "The response of a FirewallRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FirewallRule items on this page",
          "items": {
            "type": "object",
            "description": "Represents a server firewall rule.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of a firewall rule.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "startIpAddress": {
                    "type": "string",
                    "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                  },
                  "endIpAddress": {
                    "type": "string",
                    "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                  }
                },
                "required": [
                  "startIpAddress",
                  "endIpAddress"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "FirewallRuleProperties": {
      "type": "object",
      "description": "The properties of a server firewall rule.",
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "endIpAddress": {
          "type": "string",
          "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ]
    },
    "FullBackupStoreDetails": {
      "type": "object",
      "description": "FullBackupStoreDetails is used for scenarios where backup data is streamed/copied over to a storage destination.",
      "properties": {
        "sasUriList": {
          "type": "array",
          "description": "SASUriList of storage containers where backup data is to be streamed/copied.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "sasUriList"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Details about the target where the backup content will be stored.",
          "properties": {
            "objectType": {
              "type": "string",
              "description": "Type of the specific object - used for deserializing"
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "FullBackupStoreDetails"
    },
    "GetPrivateDnsZoneSuffixResponse": {
      "type": "object",
      "description": "The response of get private dns zone suffix.",
      "properties": {
        "privateDnsZoneSuffix": {
          "type": "string",
          "description": "Represents the private DNS zone suffix."
        }
      }
    },
    "HighAvailability": {
      "type": "object",
      "description": "High availability properties of a server",
      "properties": {
        "mode": {
          "description": "High availability mode for a server.",
          "type": "string",
          "enum": [
            "Disabled",
            "ZoneRedundant",
            "SameZone"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "ZoneRedundant",
                "value": "ZoneRedundant"
              },
              {
                "name": "SameZone",
                "value": "SameZone"
              }
            ]
          }
        },
        "state": {
          "description": "The state of server high availability.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotEnabled",
            "CreatingStandby",
            "Healthy",
            "FailingOver",
            "RemovingStandby"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityState",
            "modelAsString": true,
            "values": [
              {
                "name": "NotEnabled",
                "value": "NotEnabled"
              },
              {
                "name": "CreatingStandby",
                "value": "CreatingStandby"
              },
              {
                "name": "Healthy",
                "value": "Healthy"
              },
              {
                "name": "FailingOver",
                "value": "FailingOver"
              },
              {
                "name": "RemovingStandby",
                "value": "RemovingStandby"
              }
            ]
          }
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "description": "Availability zone of the standby server."
        }
      }
    },
    "HighAvailabilityMode": {
      "type": "string",
      "description": "High availability mode for a server.",
      "enum": [
        "Disabled",
        "ZoneRedundant",
        "SameZone"
      ],
      "x-ms-enum": {
        "name": "HighAvailabilityMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "ZoneRedundant",
            "value": "ZoneRedundant"
          },
          {
            "name": "SameZone",
            "value": "SameZone"
          }
        ]
      }
    },
    "HighAvailabilityState": {
      "type": "string",
      "description": "The state of server high availability.",
      "enum": [
        "NotEnabled",
        "CreatingStandby",
        "Healthy",
        "FailingOver",
        "RemovingStandby"
      ],
      "x-ms-enum": {
        "name": "HighAvailabilityState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotEnabled",
            "value": "NotEnabled"
          },
          {
            "name": "CreatingStandby",
            "value": "CreatingStandby"
          },
          {
            "name": "Healthy",
            "value": "Healthy"
          },
          {
            "name": "FailingOver",
            "value": "FailingOver"
          },
          {
            "name": "RemovingStandby",
            "value": "RemovingStandby"
          }
        ]
      }
    },
    "HighAvailabilityValidationEstimation": {
      "type": "object",
      "description": "High availability validation properties of a server",
      "properties": {
        "estimatedDowntime": {
          "type": "integer",
          "format": "int32",
          "description": "Estimated seconds of downtime for the deployment.",
          "readOnly": true
        },
        "scheduledStandbyAvailabilityZone": {
          "type": "string",
          "description": "Scheduled Availability zone of the standby server.",
          "readOnly": true
        },
        "expectedStandbyAvailabilityZone": {
          "type": "string",
          "description": "Expected Availability zone of the standby server."
        }
      }
    },
    "ImportFromStorageResponseType": {
      "type": "object",
      "description": "ImportFromStorage Response Properties",
      "properties": {
        "estimatedCompletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The estimated time of operation completion."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Represents the response properties specific to the operation",
          "properties": {
            "objectType": {
              "description": "Identifies the type of source operation",
              "type": "string",
              "enum": [
                "BackupAndExportResponse",
                "ImportFromStorageResponse"
              ],
              "x-ms-enum": {
                "name": "ObjectType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "BackupAndExportResponse",
                    "value": "BackupAndExportResponse"
                  },
                  {
                    "name": "ImportFromStorageResponse",
                    "value": "ImportFromStorageResponse"
                  }
                ]
              }
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ImportFromStorageResponse"
    },
    "ImportSourceProperties": {
      "type": "object",
      "description": "Import source related properties.",
      "properties": {
        "storageType": {
          "description": "Storage type of import source.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "AzureBlob"
          ],
          "x-ms-enum": {
            "name": "ImportSourceStorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "AzureBlob",
                "value": "AzureBlob"
              }
            ]
          }
        },
        "storageUrl": {
          "type": "string",
          "description": "Uri of the import source storage.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sasToken": {
          "type": "string",
          "format": "password",
          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "dataDirPath": {
          "type": "string",
          "description": "Relative path of data directory in storage.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ImportSourceStorageType": {
      "type": "string",
      "description": "Storage type of import source.",
      "enum": [
        "AzureBlob"
      ],
      "x-ms-enum": {
        "name": "ImportSourceStorageType",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureBlob",
            "value": "AzureBlob"
          }
        ]
      }
    },
    "IsConfigPendingRestart": {
      "type": "string",
      "description": "If is the configuration pending restart or not.",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "IsConfigPendingRestart",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "True"
          },
          {
            "name": "False",
            "value": "False"
          }
        ]
      }
    },
    "IsDynamicConfig": {
      "type": "string",
      "description": "If is the configuration dynamic.",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "IsDynamicConfig",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "True"
          },
          {
            "name": "False",
            "value": "False"
          }
        ]
      }
    },
    "IsReadOnly": {
      "type": "string",
      "description": "If is the configuration read only.",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "IsReadOnly",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "True"
          },
          {
            "name": "False",
            "value": "False"
          }
        ]
      }
    },
    "LogFile": {
      "type": "object",
      "description": "Represents a logFile.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of a logFile.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "sizeInKB": {
              "type": "integer",
              "format": "int64",
              "description": "The size in kb of the logFile."
            },
            "createdTime": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp of the log file."
            },
            "type": {
              "type": "string",
              "description": "Type of the log file."
            },
            "lastModifiedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Last modified timestamp of the log file."
            },
            "url": {
              "type": "string",
              "description": "The url to download the log file from."
            }
          }
        }
      }
    },
    "LogFileListResult": {
      "type": "object",
      "description": "The response of a LogFile list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The LogFile items on this page",
          "items": {
            "type": "object",
            "description": "Represents a logFile.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of a logFile.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "sizeInKB": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The size in kb of the logFile."
                  },
                  "createdTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp of the log file."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the log file."
                  },
                  "lastModifiedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modified timestamp of the log file."
                  },
                  "url": {
                    "type": "string",
                    "description": "The url to download the log file from."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "LogFileProperties": {
      "type": "object",
      "description": "The properties of a logFile.",
      "properties": {
        "sizeInKB": {
          "type": "integer",
          "format": "int64",
          "description": "The size in kb of the logFile."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the log file."
        },
        "type": {
          "type": "string",
          "description": "Type of the log file."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last modified timestamp of the log file."
        },
        "url": {
          "type": "string",
          "description": "The url to download the log file from."
        }
      }
    },
    "Maintenance": {
      "type": "object",
      "description": "Represents a maintenance.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of a maintenance",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "maintenanceType": {
              "description": "A string defines maintenance type.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "RoutineMaintenance",
                "MinorVersionUpgrade",
                "SecurityPatches",
                "HotFixes"
              ],
              "x-ms-enum": {
                "name": "MaintenanceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "RoutineMaintenance",
                    "value": "RoutineMaintenance"
                  },
                  {
                    "name": "MinorVersionUpgrade",
                    "value": "MinorVersionUpgrade"
                  },
                  {
                    "name": "SecurityPatches",
                    "value": "SecurityPatches"
                  },
                  {
                    "name": "HotFixes",
                    "value": "HotFixes"
                  }
                ]
              }
            },
            "maintenanceState": {
              "description": "A string describes the maintenance status",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Scheduled",
                "ReScheduled",
                "InPreparation",
                "Processing",
                "Completed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "MaintenanceState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Scheduled",
                    "value": "Scheduled"
                  },
                  {
                    "name": "ReScheduled",
                    "value": "ReScheduled"
                  },
                  {
                    "name": "InPreparation",
                    "value": "InPreparation"
                  },
                  {
                    "name": "Processing",
                    "value": "Processing"
                  },
                  {
                    "name": "Completed",
                    "value": "Completed"
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled"
                  }
                ]
              }
            },
            "maintenanceStartTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time for a maintenance."
            },
            "maintenanceEndTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time for a maintenance.",
              "readOnly": true
            },
            "maintenanceExecutionStartTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time for a maintenance execution.",
              "readOnly": true
            },
            "maintenanceExecutionEndTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time for a maintenance execution.",
              "readOnly": true
            },
            "maintenanceAvailableScheduleMinTime": {
              "type": "string",
              "format": "date-time",
              "description": "The min time the maintenance can be rescheduled.",
              "readOnly": true
            },
            "maintenanceAvailableScheduleMaxTime": {
              "type": "string",
              "format": "date-time",
              "description": "The max time the maintenance can be rescheduled.",
              "readOnly": true
            },
            "maintenanceTitle": {
              "type": "string",
              "description": "The maintenance title.",
              "readOnly": true
            },
            "maintenanceDescription": {
              "type": "string",
              "description": "The maintenance description.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the Maintenance.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Creating",
                "Deleting",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "MaintenanceProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "MaintenanceListResult": {
      "type": "object",
      "description": "The response of a Maintenance list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Maintenance items on this page",
          "items": {
            "type": "object",
            "description": "Represents a maintenance.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of a maintenance",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "maintenanceType": {
                    "description": "A string defines maintenance type.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "RoutineMaintenance",
                      "MinorVersionUpgrade",
                      "SecurityPatches",
                      "HotFixes"
                    ],
                    "x-ms-enum": {
                      "name": "MaintenanceType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "RoutineMaintenance",
                          "value": "RoutineMaintenance"
                        },
                        {
                          "name": "MinorVersionUpgrade",
                          "value": "MinorVersionUpgrade"
                        },
                        {
                          "name": "SecurityPatches",
                          "value": "SecurityPatches"
                        },
                        {
                          "name": "HotFixes",
                          "value": "HotFixes"
                        }
                      ]
                    }
                  },
                  "maintenanceState": {
                    "description": "A string describes the maintenance status",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Scheduled",
                      "ReScheduled",
                      "InPreparation",
                      "Processing",
                      "Completed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "MaintenanceState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Scheduled",
                          "value": "Scheduled"
                        },
                        {
                          "name": "ReScheduled",
                          "value": "ReScheduled"
                        },
                        {
                          "name": "InPreparation",
                          "value": "InPreparation"
                        },
                        {
                          "name": "Processing",
                          "value": "Processing"
                        },
                        {
                          "name": "Completed",
                          "value": "Completed"
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled"
                        }
                      ]
                    }
                  },
                  "maintenanceStartTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time for a maintenance."
                  },
                  "maintenanceEndTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end time for a maintenance.",
                    "readOnly": true
                  },
                  "maintenanceExecutionStartTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time for a maintenance execution.",
                    "readOnly": true
                  },
                  "maintenanceExecutionEndTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end time for a maintenance execution.",
                    "readOnly": true
                  },
                  "maintenanceAvailableScheduleMinTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The min time the maintenance can be rescheduled.",
                    "readOnly": true
                  },
                  "maintenanceAvailableScheduleMaxTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The max time the maintenance can be rescheduled.",
                    "readOnly": true
                  },
                  "maintenanceTitle": {
                    "type": "string",
                    "description": "The maintenance title.",
                    "readOnly": true
                  },
                  "maintenanceDescription": {
                    "type": "string",
                    "description": "The maintenance description.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Maintenance.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "MaintenanceProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "MaintenancePolicy": {
      "type": "object",
      "description": "Maintenance policy of a server.",
      "properties": {
        "patchStrategy": {
          "description": "The patch strategy of this server",
          "type": "string",
          "enum": [
            "Regular",
            "VirtualCanary"
          ],
          "x-ms-enum": {
            "name": "PatchStrategy",
            "modelAsString": true,
            "values": [
              {
                "name": "Regular",
                "value": "Regular"
              },
              {
                "name": "VirtualCanary",
                "value": "VirtualCanary"
              }
            ]
          }
        }
      }
    },
    "MaintenanceProperties": {
      "type": "object",
      "description": "The properties of a maintenance resource.",
      "properties": {
        "maintenanceType": {
          "description": "A string defines maintenance type.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "RoutineMaintenance",
            "MinorVersionUpgrade",
            "SecurityPatches",
            "HotFixes"
          ],
          "x-ms-enum": {
            "name": "MaintenanceType",
            "modelAsString": true,
            "values": [
              {
                "name": "RoutineMaintenance",
                "value": "RoutineMaintenance"
              },
              {
                "name": "MinorVersionUpgrade",
                "value": "MinorVersionUpgrade"
              },
              {
                "name": "SecurityPatches",
                "value": "SecurityPatches"
              },
              {
                "name": "HotFixes",
                "value": "HotFixes"
              }
            ]
          }
        },
        "maintenanceState": {
          "description": "A string describes the maintenance status",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Scheduled",
            "ReScheduled",
            "InPreparation",
            "Processing",
            "Completed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "MaintenanceState",
            "modelAsString": true,
            "values": [
              {
                "name": "Scheduled",
                "value": "Scheduled"
              },
              {
                "name": "ReScheduled",
                "value": "ReScheduled"
              },
              {
                "name": "InPreparation",
                "value": "InPreparation"
              },
              {
                "name": "Processing",
                "value": "Processing"
              },
              {
                "name": "Completed",
                "value": "Completed"
              },
              {
                "name": "Canceled",
                "value": "Canceled"
              }
            ]
          }
        },
        "maintenanceStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for a maintenance."
        },
        "maintenanceEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for a maintenance.",
          "readOnly": true
        },
        "maintenanceExecutionStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for a maintenance execution.",
          "readOnly": true
        },
        "maintenanceExecutionEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for a maintenance execution.",
          "readOnly": true
        },
        "maintenanceAvailableScheduleMinTime": {
          "type": "string",
          "format": "date-time",
          "description": "The min time the maintenance can be rescheduled.",
          "readOnly": true
        },
        "maintenanceAvailableScheduleMaxTime": {
          "type": "string",
          "format": "date-time",
          "description": "The max time the maintenance can be rescheduled.",
          "readOnly": true
        },
        "maintenanceTitle": {
          "type": "string",
          "description": "The maintenance title.",
          "readOnly": true
        },
        "maintenanceDescription": {
          "type": "string",
          "description": "The maintenance description.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the Maintenance.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Creating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "MaintenanceProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Creating",
                "value": "Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting"
              },
              {
                "name": "Failed",
                "value": "Failed"
              }
            ]
          }
        }
      }
    },
    "MaintenancePropertiesForUpdate": {
      "type": "object",
      "description": "The properties of a maintenance update parameter.",
      "properties": {
        "maintenanceStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for a maintenance."
        }
      }
    },
    "MaintenanceProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "MaintenanceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "MaintenanceState": {
      "type": "string",
      "description": "The current status of this maintenance.",
      "enum": [
        "Scheduled",
        "ReScheduled",
        "InPreparation",
        "Processing",
        "Completed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "MaintenanceState",
        "modelAsString": true,
        "values": [
          {
            "name": "Scheduled",
            "value": "Scheduled"
          },
          {
            "name": "ReScheduled",
            "value": "ReScheduled"
          },
          {
            "name": "InPreparation",
            "value": "InPreparation"
          },
          {
            "name": "Processing",
            "value": "Processing"
          },
          {
            "name": "Completed",
            "value": "Completed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      }
    },
    "MaintenanceType": {
      "type": "string",
      "description": "The type of this maintenance.",
      "enum": [
        "RoutineMaintenance",
        "MinorVersionUpgrade",
        "SecurityPatches",
        "HotFixes"
      ],
      "x-ms-enum": {
        "name": "MaintenanceType",
        "modelAsString": true,
        "values": [
          {
            "name": "RoutineMaintenance",
            "value": "RoutineMaintenance"
          },
          {
            "name": "MinorVersionUpgrade",
            "value": "MinorVersionUpgrade"
          },
          {
            "name": "SecurityPatches",
            "value": "SecurityPatches"
          },
          {
            "name": "HotFixes",
            "value": "HotFixes"
          }
        ]
      }
    },
    "MaintenanceUpdate": {
      "type": "object",
      "description": "Represents a maintenance update parameter.",
      "properties": {
        "properties": {
          "description": "The properties of a maintenance update parameter",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "maintenanceStartTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time for a maintenance."
            }
          }
        }
      }
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "Maintenance window of a server.",
      "properties": {
        "customWindow": {
          "type": "string",
          "description": "indicates whether custom window is enabled or disabled"
        },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "description": "start hour for maintenance window"
        },
        "startMinute": {
          "type": "integer",
          "format": "int32",
          "description": "start minute for maintenance window"
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32",
          "description": "day of week for maintenance window"
        },
        "batchOfMaintenance": {
          "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
          "type": "string",
          "enum": [
            "Default",
            "Batch1",
            "Batch2"
          ],
          "x-ms-enum": {
            "name": "BatchOfMaintenance",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Batch1",
                "value": "Batch1"
              },
              {
                "name": "Batch2",
                "value": "Batch2"
              }
            ]
          }
        }
      }
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "description": "Type of managed service identity.",
      "enum": [
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          }
        ]
      }
    },
    "MySQLServerIdentity": {
      "type": "object",
      "description": "Properties to configure Identity for Bring your Own Keys",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault",
          "readOnly": true
        },
        "type": {
          "description": "Type of managed service identity.",
          "type": "string",
          "enum": [
            "UserAssigned"
          ],
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": true,
            "values": [
              {
                "name": "UserAssigned",
                "value": "UserAssigned"
              }
            ]
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Metadata of user assigned identity.",
          "additionalProperties": {
            "type": "object",
            "description": "Metadata of user assigned identity.",
            "properties": {
              "principalId": {
                "type": "string",
                "description": "Principal Id of user assigned identity",
                "readOnly": true,
                "x-ms-client-name": "PrincipalId"
              },
              "clientId": {
                "type": "string",
                "description": "Client Id of user assigned identity",
                "readOnly": true,
                "x-ms-client-name": "ClientId"
              }
            }
          }
        }
      }
    },
    "MySQLServerSku": {
      "type": "object",
      "description": "Billing information related properties of a server.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the sku, e.g. Standard_D32s_v3."
        },
        "tier": {
          "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
          "type": "string",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "ServerSkuTier",
            "modelAsString": true,
            "values": [
              {
                "name": "Burstable",
                "value": "Burstable"
              },
              {
                "name": "GeneralPurpose",
                "value": "GeneralPurpose"
              },
              {
                "name": "MemoryOptimized",
                "value": "MemoryOptimized"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "tier"
      ]
    },
    "NameAvailability": {
      "type": "object",
      "description": "Represents a resource name availability.",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error Message."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates whether the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "Reason for name being unavailable."
        }
      }
    },
    "NameAvailabilityRequest": {
      "type": "object",
      "description": "Request from client to check resource name availability.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name to verify."
        },
        "type": {
          "type": "string",
          "description": "Resource type used for verification."
        }
      },
      "required": [
        "name"
      ]
    },
    "Network": {
      "type": "object",
      "description": "Network related properties of a server",
      "properties": {
        "publicNetworkAccess": {
          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "delegatedSubnetResourceId": {
          "type": "string",
          "description": "Delegated subnet resource id used to setup vnet for a server."
        },
        "privateDnsZoneResourceId": {
          "type": "string",
          "description": "Private DNS zone resource id."
        }
      }
    },
    "ObjectType": {
      "type": "string",
      "description": "Identifies the type of source operation",
      "enum": [
        "BackupAndExportResponse",
        "ImportFromStorageResponse"
      ],
      "x-ms-enum": {
        "name": "ObjectType",
        "modelAsString": true,
        "values": [
          {
            "name": "BackupAndExportResponse",
            "value": "BackupAndExportResponse"
          },
          {
            "name": "ImportFromStorageResponse",
            "value": "ImportFromStorageResponse"
          }
        ]
      }
    },
    "Operation": {
      "type": "object",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "display": {
          "description": "Localized display information for this particular operation.",
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "readOnly": true,
          "type": "string",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true,
            "values": [
              {
                "name": "user",
                "value": "user",
                "description": "Indicates the operation is initiated by a user."
              },
              {
                "name": "system",
                "value": "system",
                "description": "Indicates the operation is initiated by a system."
              },
              {
                "name": "user,system",
                "value": "user,system",
                "description": "Indicates the operation is initiated by a user or system."
              }
            ]
          }
        },
        "properties": {
          "type": "object",
          "description": "Additional descriptions for the operation.",
          "additionalProperties": {}
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "description": "Display metadata associated with the operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
          "readOnly": true
        },
        "operation": {
          "type": "string",
          "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "The static parameters for a resource group based resource",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Operation items on this page",
          "items": {
            "type": "object",
            "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                "readOnly": true
              },
              "display": {
                "description": "Localized display information for this particular operation.",
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                    "readOnly": true
                  },
                  "resource": {
                    "type": "string",
                    "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                    "readOnly": true
                  },
                  "operation": {
                    "type": "string",
                    "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                    "readOnly": true
                  }
                }
              },
              "origin": {
                "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "user",
                  "system",
                  "user,system"
                ],
                "x-ms-enum": {
                  "name": "Origin",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "user",
                      "value": "user",
                      "description": "Indicates the operation is initiated by a user."
                    },
                    {
                      "name": "system",
                      "value": "system",
                      "description": "Indicates the operation is initiated by a system."
                    },
                    {
                      "name": "user,system",
                      "value": "user,system",
                      "description": "Indicates the operation is initiated by a user or system."
                    }
                  ]
                }
              },
              "properties": {
                "type": "object",
                "description": "Additional descriptions for the operation.",
                "additionalProperties": {}
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "OperationProgressResponseType": {
      "type": "object",
      "description": "Represents the response properties specific to the operation",
      "properties": {
        "objectType": {
          "description": "Identifies the type of source operation",
          "type": "string",
          "enum": [
            "BackupAndExportResponse",
            "ImportFromStorageResponse"
          ],
          "x-ms-enum": {
            "name": "ObjectType",
            "modelAsString": true,
            "values": [
              {
                "name": "BackupAndExportResponse",
                "value": "BackupAndExportResponse"
              },
              {
                "name": "ImportFromStorageResponse",
                "value": "ImportFromStorageResponse"
              }
            ]
          }
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "OperationProgressResult": {
      "type": "object",
      "description": "Represents Operation Results API Response",
      "properties": {
        "properties": {
          "description": "The response properties specific to the operation",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "objectType": {
              "description": "Identifies the type of source operation",
              "type": "string",
              "enum": [
                "BackupAndExportResponse",
                "ImportFromStorageResponse"
              ],
              "x-ms-enum": {
                "name": "ObjectType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "BackupAndExportResponse",
                    "value": "BackupAndExportResponse"
                  },
                  {
                    "name": "ImportFromStorageResponse",
                    "value": "ImportFromStorageResponse"
                  }
                ]
              }
            }
          },
          "discriminator": "objectType",
          "required": [
            "objectType"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
        }
      ]
    },
    "OperationStatus": {
      "type": "string",
      "description": "The operation status",
      "enum": [
        "Pending",
        "InProgress",
        "Succeeded",
        "Failed",
        "CancelInProgress",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The operation has been accepted but hasn't started."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "The operation is running"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation Failed"
          },
          {
            "name": "CancelInProgress",
            "value": "CancelInProgress",
            "description": "The cancellation in progress"
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation has been Canceled"
          }
        ]
      }
    },
    "OperationStatusExtendedResult": {
      "type": "object",
      "description": "Represents Operation Results API Response",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The extended properties of Operation Results",
          "additionalProperties": {}
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
        }
      ]
    },
    "Origin": {
      "type": "string",
      "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true,
        "values": [
          {
            "name": "user",
            "value": "user",
            "description": "Indicates the operation is initiated by a user."
          },
          {
            "name": "system",
            "value": "system",
            "description": "Indicates the operation is initiated by a system."
          },
          {
            "name": "user,system",
            "value": "user,system",
            "description": "Indicates the operation is initiated by a user or system."
          }
        ]
      }
    },
    "PatchStrategy": {
      "type": "string",
      "description": "Enum to indicate the patch strategy of a server",
      "enum": [
        "Regular",
        "VirtualCanary"
      ],
      "x-ms-enum": {
        "name": "PatchStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "Regular",
            "value": "Regular"
          },
          {
            "name": "VirtualCanary",
            "value": "VirtualCanary"
          }
        ]
      }
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "type": "object",
            "description": "The private endpoint connection resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "description": "The group ids for the private endpoint resource.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "privateEndpoint": {
                    "description": "The private endpoint resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      }
    },
    "ReplicationRole": {
      "type": "string",
      "description": "The replication role.",
      "enum": [
        "None",
        "Source",
        "Replica"
      ],
      "x-ms-enum": {
        "name": "ReplicationRole",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Source",
            "value": "Source"
          },
          {
            "name": "Replica",
            "value": "Replica"
          }
        ]
      }
    },
    "ResetAllToDefault": {
      "type": "string",
      "description": "Whether to reset all server parameters to default.",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "ResetAllToDefault",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "True"
          },
          {
            "name": "False",
            "value": "False"
          }
        ]
      }
    },
    "Server": {
      "type": "object",
      "description": "Represents a server.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Properties of the server.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "administratorLogin": {
              "type": "string",
              "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "administratorLoginPassword": {
              "type": "string",
              "format": "password",
              "description": "The password of the administrator login (required for server creation).",
              "x-ms-mutability": [
                "update",
                "create"
              ],
              "x-ms-secret": true
            },
            "version": {
              "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
              "type": "string",
              "enum": [
                "5.7",
                "8.0.21"
              ],
              "x-ms-enum": {
                "name": "ServerVersion",
                "modelAsString": true,
                "values": [
                  {
                    "name": "5.7",
                    "value": "5.7"
                  },
                  {
                    "name": "8.0.21",
                    "value": "8.0.21"
                  }
                ]
              }
            },
            "fullVersion": {
              "type": "string",
              "description": "Major version and actual engine version",
              "readOnly": true
            },
            "availabilityZone": {
              "type": "string",
              "description": "availability Zone information of the server.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "createMode": {
              "description": "The mode to create a new MySQL server.",
              "x-ms-mutability": [
                "create"
              ],
              "type": "string",
              "enum": [
                "Default",
                "PointInTimeRestore",
                "Replica",
                "GeoRestore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "PointInTimeRestore",
                    "value": "PointInTimeRestore"
                  },
                  {
                    "name": "Replica",
                    "value": "Replica"
                  },
                  {
                    "name": "GeoRestore",
                    "value": "GeoRestore"
                  }
                ]
              }
            },
            "sourceServerResourceId": {
              "type": "string",
              "description": "The source MySQL server id.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "restorePointInTime": {
              "type": "string",
              "format": "date-time",
              "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "replicationRole": {
              "description": "The replication role.",
              "type": "string",
              "enum": [
                "None",
                "Source",
                "Replica"
              ],
              "x-ms-enum": {
                "name": "ReplicationRole",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "Source",
                    "value": "Source"
                  },
                  {
                    "name": "Replica",
                    "value": "Replica"
                  }
                ]
              }
            },
            "replicaCapacity": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of replicas that a primary server can have.",
              "minimum": 0,
              "readOnly": true
            },
            "dataEncryption": {
              "description": "The Data Encryption for CMK.",
              "type": "object",
              "properties": {
                "primaryUserAssignedIdentityId": {
                  "type": "string",
                  "description": "Primary user identity resource id"
                },
                "primaryKeyURI": {
                  "type": "string",
                  "description": "Primary key uri"
                },
                "geoBackupUserAssignedIdentityId": {
                  "type": "string",
                  "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                },
                "geoBackupKeyURI": {
                  "type": "string",
                  "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                },
                "type": {
                  "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                  "type": "string",
                  "enum": [
                    "AzureKeyVault",
                    "SystemManaged"
                  ],
                  "x-ms-enum": {
                    "name": "DataEncryptionType",
                    "modelAsString": false
                  }
                }
              }
            },
            "state": {
              "description": "The state of a server.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Ready",
                "Dropping",
                "Disabled",
                "Starting",
                "Stopping",
                "Stopped",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ServerState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Ready",
                    "value": "Ready"
                  },
                  {
                    "name": "Dropping",
                    "value": "Dropping"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "Starting",
                    "value": "Starting"
                  },
                  {
                    "name": "Stopping",
                    "value": "Stopping"
                  },
                  {
                    "name": "Stopped",
                    "value": "Stopped"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating"
                  }
                ]
              }
            },
            "fullyQualifiedDomainName": {
              "type": "string",
              "description": "The fully qualified domain name of a server.",
              "readOnly": true
            },
            "databasePort": {
              "type": "integer",
              "format": "int32",
              "description": "The server database port. Can only be specified when the server is being created.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "storage": {
              "description": "Storage related properties of a server.",
              "type": "object",
              "properties": {
                "storageSizeGB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Max storage size allowed for a server."
                },
                "iops": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Storage IOPS for a server."
                },
                "autoGrow": {
                  "type": "string",
                  "description": "Enable Storage Auto Grow or not.",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "logOnDisk": {
                  "type": "string",
                  "description": "Enable Log On Disk or not.",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "storageSku": {
                  "type": "string",
                  "description": "The sku name of the server storage.",
                  "readOnly": true
                },
                "autoIoScaling": {
                  "type": "string",
                  "description": "Enable IO Auto Scaling or not.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "storageRedundancy": {
                  "type": "string",
                  "description": "The redundant type of the server storage. The parameter is used for server creation.",
                  "default": "LocalRedundancy",
                  "enum": [
                    "LocalRedundancy",
                    "ZoneRedundancy"
                  ],
                  "x-ms-enum": {
                    "name": "StorageRedundancyEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "LocalRedundancy",
                        "value": "LocalRedundancy"
                      },
                      {
                        "name": "ZoneRedundancy",
                        "value": "ZoneRedundancy"
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            },
            "backup": {
              "description": "Backup related properties of a server.",
              "type": "object",
              "properties": {
                "backupRetentionDays": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Backup retention days for the server."
                },
                "backupIntervalHours": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Backup interval hours for the server."
                },
                "geoRedundantBackup": {
                  "type": "string",
                  "description": "Whether or not geo redundant backup is enabled.",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "earliestRestoreDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Earliest restore point creation time (ISO8601 format)",
                  "readOnly": true
                }
              }
            },
            "highAvailability": {
              "description": "High availability related properties of a server.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "High availability mode for a server.",
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "ZoneRedundant",
                    "SameZone"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      },
                      {
                        "name": "ZoneRedundant",
                        "value": "ZoneRedundant"
                      },
                      {
                        "name": "SameZone",
                        "value": "SameZone"
                      }
                    ]
                  }
                },
                "state": {
                  "description": "The state of server high availability.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "NotEnabled",
                    "CreatingStandby",
                    "Healthy",
                    "FailingOver",
                    "RemovingStandby"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "NotEnabled",
                        "value": "NotEnabled"
                      },
                      {
                        "name": "CreatingStandby",
                        "value": "CreatingStandby"
                      },
                      {
                        "name": "Healthy",
                        "value": "Healthy"
                      },
                      {
                        "name": "FailingOver",
                        "value": "FailingOver"
                      },
                      {
                        "name": "RemovingStandby",
                        "value": "RemovingStandby"
                      }
                    ]
                  }
                },
                "standbyAvailabilityZone": {
                  "type": "string",
                  "description": "Availability zone of the standby server."
                }
              }
            },
            "network": {
              "description": "Network related properties of a server.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "publicNetworkAccess": {
                  "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "delegatedSubnetResourceId": {
                  "type": "string",
                  "description": "Delegated subnet resource id used to setup vnet for a server."
                },
                "privateDnsZoneResourceId": {
                  "type": "string",
                  "description": "Private DNS zone resource id."
                }
              }
            },
            "privateEndpointConnections": {
              "type": "array",
              "description": "PrivateEndpointConnections related properties of a server.",
              "items": {
                "type": "object",
                "description": "The private endpoint connection resource.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the resource",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                    "readOnly": true
                  },
                  "systemData": {
                    "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "groupIds": {
                        "type": "array",
                        "description": "The group ids for the private endpoint resource.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "privateEndpoint": {
                        "description": "The private endpoint resource.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ARM identifier for private endpoint.",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                }
              },
              "readOnly": true
            },
            "maintenancePolicy": {
              "description": "Maintenance policy of a server.",
              "type": "object",
              "properties": {
                "patchStrategy": {
                  "description": "The patch strategy of this server",
                  "type": "string",
                  "enum": [
                    "Regular",
                    "VirtualCanary"
                  ],
                  "x-ms-enum": {
                    "name": "PatchStrategy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Regular",
                        "value": "Regular"
                      },
                      {
                        "name": "VirtualCanary",
                        "value": "VirtualCanary"
                      }
                    ]
                  }
                }
              }
            },
            "maintenanceWindow": {
              "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
              "x-ms-mutability": [
                "read",
                "update"
              ],
              "type": "object",
              "properties": {
                "customWindow": {
                  "type": "string",
                  "description": "indicates whether custom window is enabled or disabled"
                },
                "startHour": {
                  "type": "integer",
                  "format": "int32",
                  "description": "start hour for maintenance window"
                },
                "startMinute": {
                  "type": "integer",
                  "format": "int32",
                  "description": "start minute for maintenance window"
                },
                "dayOfWeek": {
                  "type": "integer",
                  "format": "int32",
                  "description": "day of week for maintenance window"
                },
                "batchOfMaintenance": {
                  "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                  "type": "string",
                  "enum": [
                    "Default",
                    "Batch1",
                    "Batch2"
                  ],
                  "x-ms-enum": {
                    "name": "BatchOfMaintenance",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Default",
                        "value": "Default"
                      },
                      {
                        "name": "Batch1",
                        "value": "Batch1"
                      },
                      {
                        "name": "Batch2",
                        "value": "Batch2"
                      }
                    ]
                  }
                }
              }
            },
            "importSourceProperties": {
              "description": "Source properties for import from storage.",
              "type": "object",
              "properties": {
                "storageType": {
                  "description": "Storage type of import source.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "AzureBlob"
                  ],
                  "x-ms-enum": {
                    "name": "ImportSourceStorageType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "AzureBlob",
                        "value": "AzureBlob"
                      }
                    ]
                  }
                },
                "storageUrl": {
                  "type": "string",
                  "description": "Uri of the import source storage.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "sasToken": {
                  "type": "string",
                  "format": "password",
                  "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                  "x-ms-mutability": [
                    "create"
                  ],
                  "x-ms-secret": true
                },
                "dataDirPath": {
                  "type": "string",
                  "description": "Relative path of data directory in storage.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            }
          }
        },
        "identity": {
          "description": "The cmk identity for the server.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "description": "ObjectId from the KeyVault",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "TenantId from the KeyVault",
              "readOnly": true
            },
            "type": {
              "description": "Type of managed service identity.",
              "type": "string",
              "enum": [
                "UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "UserAssigned",
                    "value": "UserAssigned"
                  }
                ]
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "Metadata of user assigned identity.",
              "additionalProperties": {
                "type": "object",
                "description": "Metadata of user assigned identity.",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "Principal Id of user assigned identity",
                    "readOnly": true,
                    "x-ms-client-name": "PrincipalId"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Client Id of user assigned identity",
                    "readOnly": true,
                    "x-ms-client-name": "ClientId"
                  }
                }
              }
            }
          }
        },
        "sku": {
          "description": "The SKU (pricing tier) of the server.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the sku, e.g. Standard_D32s_v3."
            },
            "tier": {
              "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
              "type": "string",
              "enum": [
                "Burstable",
                "GeneralPurpose",
                "MemoryOptimized"
              ],
              "x-ms-enum": {
                "name": "ServerSkuTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Burstable",
                    "value": "Burstable"
                  },
                  {
                    "name": "GeneralPurpose",
                    "value": "GeneralPurpose"
                  },
                  {
                    "name": "MemoryOptimized",
                    "value": "MemoryOptimized"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "tier"
          ]
        }
      }
    },
    "ServerBackup": {
      "type": "object",
      "description": "Server backup properties",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of a server backup.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "backupType": {
              "type": "string",
              "description": "Backup type."
            },
            "completedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Backup completed time (ISO8601 format)."
            },
            "source": {
              "type": "string",
              "description": "Backup source"
            }
          }
        }
      }
    },
    "ServerBackupListResult": {
      "type": "object",
      "description": "The response of a ServerBackup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServerBackup items on this page",
          "items": {
            "type": "object",
            "description": "Server backup properties",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of a server backup.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "backupType": {
                    "type": "string",
                    "description": "Backup type."
                  },
                  "completedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Backup completed time (ISO8601 format)."
                  },
                  "source": {
                    "type": "string",
                    "description": "Backup source"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "ServerBackupProperties": {
      "type": "object",
      "description": "The properties of a server backup.",
      "properties": {
        "backupType": {
          "type": "string",
          "description": "Backup type."
        },
        "completedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Backup completed time (ISO8601 format)."
        },
        "source": {
          "type": "string",
          "description": "Backup source"
        }
      }
    },
    "ServerBackupPropertiesV2": {
      "type": "object",
      "description": "The properties of a server backup.",
      "properties": {
        "backupNameV2": {
          "type": "string",
          "description": "Backup name"
        },
        "backupType": {
          "type": "string",
          "enum": [
            "FULL"
          ],
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": true,
            "values": [
              {
                "name": "FULL",
                "value": "FULL"
              }
            ]
          }
        },
        "completedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Backup completed time (ISO8601 format)."
        },
        "source": {
          "type": "string",
          "description": "Backup source"
        },
        "provisioningState": {
          "description": "The provisioning state of backup resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Creating",
            "Deleting",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Creating",
                "value": "Creating"
              },
              {
                "name": "Deleting",
                "value": "Deleting"
              },
              {
                "name": "Failed",
                "value": "Failed"
              },
              {
                "name": "Canceled",
                "value": "Canceled"
              }
            ]
          }
        }
      }
    },
    "ServerBackupV2": {
      "type": "object",
      "description": "Server backup properties",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of a server backup.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "backupNameV2": {
              "type": "string",
              "description": "Backup name"
            },
            "backupType": {
              "type": "string",
              "enum": [
                "FULL"
              ],
              "x-ms-enum": {
                "name": "BackupType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "FULL",
                    "value": "FULL"
                  }
                ]
              }
            },
            "completedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Backup completed time (ISO8601 format)."
            },
            "source": {
              "type": "string",
              "description": "Backup source"
            },
            "provisioningState": {
              "description": "The provisioning state of backup resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Creating",
                "Deleting",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ServerBackupV2ListResult": {
      "type": "object",
      "description": "The response of a ServerBackupV2 list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServerBackupV2 items on this page",
          "items": {
            "type": "object",
            "description": "Server backup properties",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of a server backup.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "backupNameV2": {
                    "type": "string",
                    "description": "Backup name"
                  },
                  "backupType": {
                    "type": "string",
                    "enum": [
                      "FULL"
                    ],
                    "x-ms-enum": {
                      "name": "BackupType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "FULL",
                          "value": "FULL"
                        }
                      ]
                    }
                  },
                  "completedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Backup completed time (ISO8601 format)."
                  },
                  "source": {
                    "type": "string",
                    "description": "Backup source"
                  },
                  "provisioningState": {
                    "description": "The provisioning state of backup resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed"
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "ServerDetachVNetParameter": {
      "type": "object",
      "description": "Parameters to detach Vnet.",
      "properties": {
        "publicNetworkAccess": {
          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    },
    "ServerEditionCapability": {
      "type": "object",
      "description": "Server edition capabilities.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Server edition name",
          "readOnly": true
        },
        "supportedStorageEditions": {
          "type": "array",
          "description": "A list of supported storage editions",
          "items": {
            "type": "object",
            "description": "storage edition capability",
            "properties": {
              "name": {
                "type": "string",
                "description": "storage edition name",
                "readOnly": true
              },
              "minStorageSize": {
                "type": "integer",
                "format": "int64",
                "description": "The minimal supported storage size.",
                "readOnly": true
              },
              "maxStorageSize": {
                "type": "integer",
                "format": "int64",
                "description": "The maximum supported storage size.",
                "readOnly": true
              },
              "minBackupRetentionDays": {
                "type": "integer",
                "format": "int64",
                "description": "Minimal backup retention days",
                "readOnly": true
              },
              "maxBackupRetentionDays": {
                "type": "integer",
                "format": "int64",
                "description": "Maximum backup retention days",
                "readOnly": true
              },
              "minBackupIntervalHours": {
                "type": "integer",
                "format": "int64",
                "description": "Minimal backup interval hours",
                "readOnly": true
              },
              "maxBackupIntervalHours": {
                "type": "integer",
                "format": "int64",
                "description": "Maximum backup interval hours",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "supportedServerVersions": {
          "type": "array",
          "description": "A list of supported server versions.",
          "items": {
            "type": "object",
            "description": "Server version capabilities.",
            "properties": {
              "name": {
                "type": "string",
                "description": "server version",
                "readOnly": true
              },
              "supportedSkus": {
                "type": "array",
                "description": "A list of supported Skus",
                "items": {
                  "type": "object",
                  "description": "Sku capability",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "vCore name",
                      "readOnly": true
                    },
                    "vCores": {
                      "type": "integer",
                      "format": "int64",
                      "description": "supported vCores",
                      "readOnly": true
                    },
                    "supportedIops": {
                      "type": "integer",
                      "format": "int64",
                      "description": "supported IOPS",
                      "readOnly": true
                    },
                    "supportedMemoryPerVCoreMB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "supported memory per vCore in MB",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": []
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ServerEditionCapabilityV2": {
      "type": "object",
      "description": "Server edition capabilities.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Server edition name",
          "readOnly": true
        },
        "defaultSku": {
          "type": "string",
          "description": "Default Sku name",
          "readOnly": true
        },
        "defaultStorageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Default storage size",
          "readOnly": true
        },
        "supportedStorageEditions": {
          "type": "array",
          "description": "A list of supported storage editions",
          "items": {
            "type": "object",
            "description": "storage edition capability",
            "properties": {
              "name": {
                "type": "string",
                "description": "storage edition name",
                "readOnly": true
              },
              "minStorageSize": {
                "type": "integer",
                "format": "int64",
                "description": "The minimal supported storage size.",
                "readOnly": true
              },
              "maxStorageSize": {
                "type": "integer",
                "format": "int64",
                "description": "The maximum supported storage size.",
                "readOnly": true
              },
              "minBackupRetentionDays": {
                "type": "integer",
                "format": "int64",
                "description": "Minimal backup retention days",
                "readOnly": true
              },
              "maxBackupRetentionDays": {
                "type": "integer",
                "format": "int64",
                "description": "Maximum backup retention days",
                "readOnly": true
              },
              "minBackupIntervalHours": {
                "type": "integer",
                "format": "int64",
                "description": "Minimal backup interval hours",
                "readOnly": true
              },
              "maxBackupIntervalHours": {
                "type": "integer",
                "format": "int64",
                "description": "Maximum backup interval hours",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "supportedSkus": {
          "type": "array",
          "description": "A list of supported Skus",
          "items": {
            "type": "object",
            "description": "Sku capability",
            "properties": {
              "name": {
                "type": "string",
                "description": "vCore name",
                "readOnly": true
              },
              "vCores": {
                "type": "integer",
                "format": "int64",
                "description": "supported vCores",
                "readOnly": true
              },
              "supportedIops": {
                "type": "integer",
                "format": "int64",
                "description": "supported IOPS",
                "readOnly": true
              },
              "supportedMemoryPerVCoreMB": {
                "type": "integer",
                "format": "int64",
                "description": "supported memory per vCore in MB",
                "readOnly": true
              },
              "supportedZones": {
                "type": "array",
                "description": "Supported zones",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "supportedHAMode": {
                "type": "array",
                "description": "Supported high availability mode",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ServerForUpdate": {
      "type": "object",
      "description": "Parameters allowed to update for a server.",
      "properties": {
        "identity": {
          "description": "The cmk identity for the server.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "description": "ObjectId from the KeyVault",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "TenantId from the KeyVault",
              "readOnly": true
            },
            "type": {
              "description": "Type of managed service identity.",
              "type": "string",
              "enum": [
                "UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "UserAssigned",
                    "value": "UserAssigned"
                  }
                ]
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "Metadata of user assigned identity.",
              "additionalProperties": {
                "type": "object",
                "description": "Metadata of user assigned identity.",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "Principal Id of user assigned identity",
                    "readOnly": true,
                    "x-ms-client-name": "PrincipalId"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Client Id of user assigned identity",
                    "readOnly": true,
                    "x-ms-client-name": "ClientId"
                  }
                }
              }
            }
          }
        },
        "sku": {
          "description": "The SKU (pricing tier) of the server.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the sku, e.g. Standard_D32s_v3."
            },
            "tier": {
              "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
              "type": "string",
              "enum": [
                "Burstable",
                "GeneralPurpose",
                "MemoryOptimized"
              ],
              "x-ms-enum": {
                "name": "ServerSkuTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Burstable",
                    "value": "Burstable"
                  },
                  {
                    "name": "GeneralPurpose",
                    "value": "GeneralPurpose"
                  },
                  {
                    "name": "MemoryOptimized",
                    "value": "MemoryOptimized"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "tier"
          ]
        },
        "properties": {
          "description": "The properties that can be updated for a server.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "administratorLoginPassword": {
              "type": "string",
              "format": "password",
              "description": "The password of the administrator login.",
              "x-ms-secret": true
            },
            "version": {
              "description": "Server version.",
              "type": "string",
              "enum": [
                "5.7",
                "8.0.21"
              ],
              "x-ms-enum": {
                "name": "ServerVersion",
                "modelAsString": true,
                "values": [
                  {
                    "name": "5.7",
                    "value": "5.7"
                  },
                  {
                    "name": "8.0.21",
                    "value": "8.0.21"
                  }
                ]
              }
            },
            "storage": {
              "description": "Storage related properties of a server.",
              "type": "object",
              "properties": {
                "storageSizeGB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Max storage size allowed for a server."
                },
                "iops": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Storage IOPS for a server."
                },
                "autoGrow": {
                  "type": "string",
                  "description": "Enable Storage Auto Grow or not.",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "logOnDisk": {
                  "type": "string",
                  "description": "Enable Log On Disk or not.",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "storageSku": {
                  "type": "string",
                  "description": "The sku name of the server storage.",
                  "readOnly": true
                },
                "autoIoScaling": {
                  "type": "string",
                  "description": "Enable IO Auto Scaling or not.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "storageRedundancy": {
                  "type": "string",
                  "description": "The redundant type of the server storage. The parameter is used for server creation.",
                  "default": "LocalRedundancy",
                  "enum": [
                    "LocalRedundancy",
                    "ZoneRedundancy"
                  ],
                  "x-ms-enum": {
                    "name": "StorageRedundancyEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "LocalRedundancy",
                        "value": "LocalRedundancy"
                      },
                      {
                        "name": "ZoneRedundancy",
                        "value": "ZoneRedundancy"
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            },
            "backup": {
              "description": "Backup related properties of a server.",
              "type": "object",
              "properties": {
                "backupRetentionDays": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Backup retention days for the server."
                },
                "backupIntervalHours": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Backup interval hours for the server."
                },
                "geoRedundantBackup": {
                  "type": "string",
                  "description": "Whether or not geo redundant backup is enabled.",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "earliestRestoreDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Earliest restore point creation time (ISO8601 format)",
                  "readOnly": true
                }
              }
            },
            "highAvailability": {
              "description": "High availability related properties of a server.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "High availability mode for a server.",
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "ZoneRedundant",
                    "SameZone"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      },
                      {
                        "name": "ZoneRedundant",
                        "value": "ZoneRedundant"
                      },
                      {
                        "name": "SameZone",
                        "value": "SameZone"
                      }
                    ]
                  }
                },
                "state": {
                  "description": "The state of server high availability.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "NotEnabled",
                    "CreatingStandby",
                    "Healthy",
                    "FailingOver",
                    "RemovingStandby"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "NotEnabled",
                        "value": "NotEnabled"
                      },
                      {
                        "name": "CreatingStandby",
                        "value": "CreatingStandby"
                      },
                      {
                        "name": "Healthy",
                        "value": "Healthy"
                      },
                      {
                        "name": "FailingOver",
                        "value": "FailingOver"
                      },
                      {
                        "name": "RemovingStandby",
                        "value": "RemovingStandby"
                      }
                    ]
                  }
                },
                "standbyAvailabilityZone": {
                  "type": "string",
                  "description": "Availability zone of the standby server."
                }
              }
            },
            "maintenancePolicy": {
              "description": "Maintenance policy of a server.",
              "type": "object",
              "properties": {
                "patchStrategy": {
                  "description": "The patch strategy of this server",
                  "type": "string",
                  "enum": [
                    "Regular",
                    "VirtualCanary"
                  ],
                  "x-ms-enum": {
                    "name": "PatchStrategy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Regular",
                        "value": "Regular"
                      },
                      {
                        "name": "VirtualCanary",
                        "value": "VirtualCanary"
                      }
                    ]
                  }
                }
              }
            },
            "maintenanceWindow": {
              "description": "Maintenance window of a server.",
              "type": "object",
              "properties": {
                "customWindow": {
                  "type": "string",
                  "description": "indicates whether custom window is enabled or disabled"
                },
                "startHour": {
                  "type": "integer",
                  "format": "int32",
                  "description": "start hour for maintenance window"
                },
                "startMinute": {
                  "type": "integer",
                  "format": "int32",
                  "description": "start minute for maintenance window"
                },
                "dayOfWeek": {
                  "type": "integer",
                  "format": "int32",
                  "description": "day of week for maintenance window"
                },
                "batchOfMaintenance": {
                  "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                  "type": "string",
                  "enum": [
                    "Default",
                    "Batch1",
                    "Batch2"
                  ],
                  "x-ms-enum": {
                    "name": "BatchOfMaintenance",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Default",
                        "value": "Default"
                      },
                      {
                        "name": "Batch1",
                        "value": "Batch1"
                      },
                      {
                        "name": "Batch2",
                        "value": "Batch2"
                      }
                    ]
                  }
                }
              }
            },
            "replicationRole": {
              "description": "The replication role of the server.",
              "type": "string",
              "enum": [
                "None",
                "Source",
                "Replica"
              ],
              "x-ms-enum": {
                "name": "ReplicationRole",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "Source",
                    "value": "Source"
                  },
                  {
                    "name": "Replica",
                    "value": "Replica"
                  }
                ]
              }
            },
            "dataEncryption": {
              "description": "The Data Encryption for CMK.",
              "type": "object",
              "properties": {
                "primaryUserAssignedIdentityId": {
                  "type": "string",
                  "description": "Primary user identity resource id"
                },
                "primaryKeyURI": {
                  "type": "string",
                  "description": "Primary key uri"
                },
                "geoBackupUserAssignedIdentityId": {
                  "type": "string",
                  "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                },
                "geoBackupKeyURI": {
                  "type": "string",
                  "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                },
                "type": {
                  "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                  "type": "string",
                  "enum": [
                    "AzureKeyVault",
                    "SystemManaged"
                  ],
                  "x-ms-enum": {
                    "name": "DataEncryptionType",
                    "modelAsString": false
                  }
                }
              }
            },
            "network": {
              "description": "Network related properties of a server",
              "type": "object",
              "properties": {
                "publicNetworkAccess": {
                  "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "delegatedSubnetResourceId": {
                  "type": "string",
                  "description": "Delegated subnet resource id used to setup vnet for a server."
                },
                "privateDnsZoneResourceId": {
                  "type": "string",
                  "description": "Private DNS zone resource id."
                }
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Application-specific metadata in the form of key-value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ServerGtidSetParameter": {
      "type": "object",
      "description": "Server Gtid set parameters: Replication with Global Transaction Identifiers.",
      "properties": {
        "gtidSet": {
          "type": "string",
          "description": "The Gtid set of server."
        }
      }
    },
    "ServerListResult": {
      "type": "object",
      "description": "The response of a Server list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Server items on this page",
          "items": {
            "type": "object",
            "description": "Represents a server.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Properties of the server.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "administratorLogin": {
                    "type": "string",
                    "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "administratorLoginPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "The password of the administrator login (required for server creation).",
                    "x-ms-mutability": [
                      "update",
                      "create"
                    ],
                    "x-ms-secret": true
                  },
                  "version": {
                    "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
                    "type": "string",
                    "enum": [
                      "5.7",
                      "8.0.21"
                    ],
                    "x-ms-enum": {
                      "name": "ServerVersion",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "5.7",
                          "value": "5.7"
                        },
                        {
                          "name": "8.0.21",
                          "value": "8.0.21"
                        }
                      ]
                    }
                  },
                  "fullVersion": {
                    "type": "string",
                    "description": "Major version and actual engine version",
                    "readOnly": true
                  },
                  "availabilityZone": {
                    "type": "string",
                    "description": "availability Zone information of the server.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "createMode": {
                    "description": "The mode to create a new MySQL server.",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "Default",
                      "PointInTimeRestore",
                      "Replica",
                      "GeoRestore"
                    ],
                    "x-ms-enum": {
                      "name": "CreateMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Default",
                          "value": "Default"
                        },
                        {
                          "name": "PointInTimeRestore",
                          "value": "PointInTimeRestore"
                        },
                        {
                          "name": "Replica",
                          "value": "Replica"
                        },
                        {
                          "name": "GeoRestore",
                          "value": "GeoRestore"
                        }
                      ]
                    }
                  },
                  "sourceServerResourceId": {
                    "type": "string",
                    "description": "The source MySQL server id.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "restorePointInTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
                    "x-ms-mutability": [
                      "create"
                    ]
                  },
                  "replicationRole": {
                    "description": "The replication role.",
                    "type": "string",
                    "enum": [
                      "None",
                      "Source",
                      "Replica"
                    ],
                    "x-ms-enum": {
                      "name": "ReplicationRole",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "None",
                          "value": "None"
                        },
                        {
                          "name": "Source",
                          "value": "Source"
                        },
                        {
                          "name": "Replica",
                          "value": "Replica"
                        }
                      ]
                    }
                  },
                  "replicaCapacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum number of replicas that a primary server can have.",
                    "minimum": 0,
                    "readOnly": true
                  },
                  "dataEncryption": {
                    "description": "The Data Encryption for CMK.",
                    "type": "object",
                    "properties": {
                      "primaryUserAssignedIdentityId": {
                        "type": "string",
                        "description": "Primary user identity resource id"
                      },
                      "primaryKeyURI": {
                        "type": "string",
                        "description": "Primary key uri"
                      },
                      "geoBackupUserAssignedIdentityId": {
                        "type": "string",
                        "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
                      },
                      "geoBackupKeyURI": {
                        "type": "string",
                        "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
                      },
                      "type": {
                        "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
                        "type": "string",
                        "enum": [
                          "AzureKeyVault",
                          "SystemManaged"
                        ],
                        "x-ms-enum": {
                          "name": "DataEncryptionType",
                          "modelAsString": false
                        }
                      }
                    }
                  },
                  "state": {
                    "description": "The state of a server.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Ready",
                      "Dropping",
                      "Disabled",
                      "Starting",
                      "Stopping",
                      "Stopped",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ServerState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Ready",
                          "value": "Ready"
                        },
                        {
                          "name": "Dropping",
                          "value": "Dropping"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        },
                        {
                          "name": "Starting",
                          "value": "Starting"
                        },
                        {
                          "name": "Stopping",
                          "value": "Stopping"
                        },
                        {
                          "name": "Stopped",
                          "value": "Stopped"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating"
                        }
                      ]
                    }
                  },
                  "fullyQualifiedDomainName": {
                    "type": "string",
                    "description": "The fully qualified domain name of a server.",
                    "readOnly": true
                  },
                  "databasePort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The server database port. Can only be specified when the server is being created.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "storage": {
                    "description": "Storage related properties of a server.",
                    "type": "object",
                    "properties": {
                      "storageSizeGB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Max storage size allowed for a server."
                      },
                      "iops": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Storage IOPS for a server."
                      },
                      "autoGrow": {
                        "type": "string",
                        "description": "Enable Storage Auto Grow or not.",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatusEnum",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "logOnDisk": {
                        "type": "string",
                        "description": "Enable Log On Disk or not.",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatusEnum",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "storageSku": {
                        "type": "string",
                        "description": "The sku name of the server storage.",
                        "readOnly": true
                      },
                      "autoIoScaling": {
                        "type": "string",
                        "description": "Enable IO Auto Scaling or not.",
                        "default": "Enabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatusEnum",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "storageRedundancy": {
                        "type": "string",
                        "description": "The redundant type of the server storage. The parameter is used for server creation.",
                        "default": "LocalRedundancy",
                        "enum": [
                          "LocalRedundancy",
                          "ZoneRedundancy"
                        ],
                        "x-ms-enum": {
                          "name": "StorageRedundancyEnum",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "LocalRedundancy",
                              "value": "LocalRedundancy"
                            },
                            {
                              "name": "ZoneRedundancy",
                              "value": "ZoneRedundancy"
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      }
                    }
                  },
                  "backup": {
                    "description": "Backup related properties of a server.",
                    "type": "object",
                    "properties": {
                      "backupRetentionDays": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Backup retention days for the server."
                      },
                      "backupIntervalHours": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Backup interval hours for the server."
                      },
                      "geoRedundantBackup": {
                        "type": "string",
                        "description": "Whether or not geo redundant backup is enabled.",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatusEnum",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "earliestRestoreDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Earliest restore point creation time (ISO8601 format)",
                        "readOnly": true
                      }
                    }
                  },
                  "highAvailability": {
                    "description": "High availability related properties of a server.",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "High availability mode for a server.",
                        "type": "string",
                        "enum": [
                          "Disabled",
                          "ZoneRedundant",
                          "SameZone"
                        ],
                        "x-ms-enum": {
                          "name": "HighAvailabilityMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            },
                            {
                              "name": "ZoneRedundant",
                              "value": "ZoneRedundant"
                            },
                            {
                              "name": "SameZone",
                              "value": "SameZone"
                            }
                          ]
                        }
                      },
                      "state": {
                        "description": "The state of server high availability.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "NotEnabled",
                          "CreatingStandby",
                          "Healthy",
                          "FailingOver",
                          "RemovingStandby"
                        ],
                        "x-ms-enum": {
                          "name": "HighAvailabilityState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "NotEnabled",
                              "value": "NotEnabled"
                            },
                            {
                              "name": "CreatingStandby",
                              "value": "CreatingStandby"
                            },
                            {
                              "name": "Healthy",
                              "value": "Healthy"
                            },
                            {
                              "name": "FailingOver",
                              "value": "FailingOver"
                            },
                            {
                              "name": "RemovingStandby",
                              "value": "RemovingStandby"
                            }
                          ]
                        }
                      },
                      "standbyAvailabilityZone": {
                        "type": "string",
                        "description": "Availability zone of the standby server."
                      }
                    }
                  },
                  "network": {
                    "description": "Network related properties of a server.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "publicNetworkAccess": {
                        "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatusEnum",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "delegatedSubnetResourceId": {
                        "type": "string",
                        "description": "Delegated subnet resource id used to setup vnet for a server."
                      },
                      "privateDnsZoneResourceId": {
                        "type": "string",
                        "description": "Private DNS zone resource id."
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "description": "PrivateEndpointConnections related properties of a server.",
                    "items": {
                      "type": "object",
                      "description": "The private endpoint connection resource.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                          "readOnly": true
                        },
                        "systemData": {
                          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          }
                        },
                        "properties": {
                          "description": "Resource properties.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "groupIds": {
                              "type": "array",
                              "description": "The group ids for the private endpoint resource.",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "privateEndpoint": {
                              "description": "The private endpoint resource.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ARM identifier for private endpoint.",
                                  "readOnly": true
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              },
                              "readOnly": true
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "maintenancePolicy": {
                    "description": "Maintenance policy of a server.",
                    "type": "object",
                    "properties": {
                      "patchStrategy": {
                        "description": "The patch strategy of this server",
                        "type": "string",
                        "enum": [
                          "Regular",
                          "VirtualCanary"
                        ],
                        "x-ms-enum": {
                          "name": "PatchStrategy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Regular",
                              "value": "Regular"
                            },
                            {
                              "name": "VirtualCanary",
                              "value": "VirtualCanary"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "maintenanceWindow": {
                    "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
                    "x-ms-mutability": [
                      "read",
                      "update"
                    ],
                    "type": "object",
                    "properties": {
                      "customWindow": {
                        "type": "string",
                        "description": "indicates whether custom window is enabled or disabled"
                      },
                      "startHour": {
                        "type": "integer",
                        "format": "int32",
                        "description": "start hour for maintenance window"
                      },
                      "startMinute": {
                        "type": "integer",
                        "format": "int32",
                        "description": "start minute for maintenance window"
                      },
                      "dayOfWeek": {
                        "type": "integer",
                        "format": "int32",
                        "description": "day of week for maintenance window"
                      },
                      "batchOfMaintenance": {
                        "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
                        "type": "string",
                        "enum": [
                          "Default",
                          "Batch1",
                          "Batch2"
                        ],
                        "x-ms-enum": {
                          "name": "BatchOfMaintenance",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Default",
                              "value": "Default"
                            },
                            {
                              "name": "Batch1",
                              "value": "Batch1"
                            },
                            {
                              "name": "Batch2",
                              "value": "Batch2"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "importSourceProperties": {
                    "description": "Source properties for import from storage.",
                    "type": "object",
                    "properties": {
                      "storageType": {
                        "description": "Storage type of import source.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "AzureBlob"
                        ],
                        "x-ms-enum": {
                          "name": "ImportSourceStorageType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "AzureBlob",
                              "value": "AzureBlob"
                            }
                          ]
                        }
                      },
                      "storageUrl": {
                        "type": "string",
                        "description": "Uri of the import source storage.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "sasToken": {
                        "type": "string",
                        "format": "password",
                        "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      },
                      "dataDirPath": {
                        "type": "string",
                        "description": "Relative path of data directory in storage.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      }
                    }
                  }
                }
              },
              "identity": {
                "description": "The cmk identity for the server.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "ObjectId from the KeyVault",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "TenantId from the KeyVault",
                    "readOnly": true
                  },
                  "type": {
                    "description": "Type of managed service identity.",
                    "type": "string",
                    "enum": [
                      "UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "UserAssigned",
                          "value": "UserAssigned"
                        }
                      ]
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "description": "Metadata of user assigned identity.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "Metadata of user assigned identity.",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "description": "Principal Id of user assigned identity",
                          "readOnly": true,
                          "x-ms-client-name": "PrincipalId"
                        },
                        "clientId": {
                          "type": "string",
                          "description": "Client Id of user assigned identity",
                          "readOnly": true,
                          "x-ms-client-name": "ClientId"
                        }
                      }
                    }
                  }
                }
              },
              "sku": {
                "description": "The SKU (pricing tier) of the server.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the sku, e.g. Standard_D32s_v3."
                  },
                  "tier": {
                    "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
                    "type": "string",
                    "enum": [
                      "Burstable",
                      "GeneralPurpose",
                      "MemoryOptimized"
                    ],
                    "x-ms-enum": {
                      "name": "ServerSkuTier",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Burstable",
                          "value": "Burstable"
                        },
                        {
                          "name": "GeneralPurpose",
                          "value": "GeneralPurpose"
                        },
                        {
                          "name": "MemoryOptimized",
                          "value": "MemoryOptimized"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "tier"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      }
    },
    "ServerProperties": {
      "type": "object",
      "description": "The properties of a server.",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "format": "password",
          "description": "The password of the administrator login (required for server creation).",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        },
        "version": {
          "description": "Major version of MySQL. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
          "type": "string",
          "enum": [
            "5.7",
            "8.0.21"
          ],
          "x-ms-enum": {
            "name": "ServerVersion",
            "modelAsString": true,
            "values": [
              {
                "name": "5.7",
                "value": "5.7"
              },
              {
                "name": "8.0.21",
                "value": "8.0.21"
              }
            ]
          }
        },
        "fullVersion": {
          "type": "string",
          "description": "Major version and actual engine version",
          "readOnly": true
        },
        "availabilityZone": {
          "type": "string",
          "description": "availability Zone information of the server.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "createMode": {
          "description": "The mode to create a new MySQL server.",
          "x-ms-mutability": [
            "create"
          ],
          "type": "string",
          "enum": [
            "Default",
            "PointInTimeRestore",
            "Replica",
            "GeoRestore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "PointInTimeRestore",
                "value": "PointInTimeRestore"
              },
              {
                "name": "Replica",
                "value": "Replica"
              },
              {
                "name": "GeoRestore",
                "value": "GeoRestore"
              }
            ]
          }
        },
        "sourceServerResourceId": {
          "type": "string",
          "description": "The source MySQL server id.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "restorePointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "replicationRole": {
          "description": "The replication role.",
          "type": "string",
          "enum": [
            "None",
            "Source",
            "Replica"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None"
              },
              {
                "name": "Source",
                "value": "Source"
              },
              {
                "name": "Replica",
                "value": "Replica"
              }
            ]
          }
        },
        "replicaCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of replicas that a primary server can have.",
          "minimum": 0,
          "readOnly": true
        },
        "dataEncryption": {
          "description": "The Data Encryption for CMK.",
          "type": "object",
          "properties": {
            "primaryUserAssignedIdentityId": {
              "type": "string",
              "description": "Primary user identity resource id"
            },
            "primaryKeyURI": {
              "type": "string",
              "description": "Primary key uri"
            },
            "geoBackupUserAssignedIdentityId": {
              "type": "string",
              "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
            },
            "geoBackupKeyURI": {
              "type": "string",
              "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
            },
            "type": {
              "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
              "type": "string",
              "enum": [
                "AzureKeyVault",
                "SystemManaged"
              ],
              "x-ms-enum": {
                "name": "DataEncryptionType",
                "modelAsString": false
              }
            }
          }
        },
        "state": {
          "description": "The state of a server.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Ready",
            "Dropping",
            "Disabled",
            "Starting",
            "Stopping",
            "Stopped",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ServerState",
            "modelAsString": true,
            "values": [
              {
                "name": "Ready",
                "value": "Ready"
              },
              {
                "name": "Dropping",
                "value": "Dropping"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "Starting",
                "value": "Starting"
              },
              {
                "name": "Stopping",
                "value": "Stopping"
              },
              {
                "name": "Stopped",
                "value": "Stopped"
              },
              {
                "name": "Updating",
                "value": "Updating"
              }
            ]
          }
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "The fully qualified domain name of a server.",
          "readOnly": true
        },
        "databasePort": {
          "type": "integer",
          "format": "int32",
          "description": "The server database port. Can only be specified when the server is being created.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "storage": {
          "description": "Storage related properties of a server.",
          "type": "object",
          "properties": {
            "storageSizeGB": {
              "type": "integer",
              "format": "int32",
              "description": "Max storage size allowed for a server."
            },
            "iops": {
              "type": "integer",
              "format": "int32",
              "description": "Storage IOPS for a server."
            },
            "autoGrow": {
              "type": "string",
              "description": "Enable Storage Auto Grow or not.",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "logOnDisk": {
              "type": "string",
              "description": "Enable Log On Disk or not.",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "storageSku": {
              "type": "string",
              "description": "The sku name of the server storage.",
              "readOnly": true
            },
            "autoIoScaling": {
              "type": "string",
              "description": "Enable IO Auto Scaling or not.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "storageRedundancy": {
              "type": "string",
              "description": "The redundant type of the server storage. The parameter is used for server creation.",
              "default": "LocalRedundancy",
              "enum": [
                "LocalRedundancy",
                "ZoneRedundancy"
              ],
              "x-ms-enum": {
                "name": "StorageRedundancyEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "LocalRedundancy",
                    "value": "LocalRedundancy"
                  },
                  {
                    "name": "ZoneRedundancy",
                    "value": "ZoneRedundancy"
                  }
                ]
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        },
        "backup": {
          "description": "Backup related properties of a server.",
          "type": "object",
          "properties": {
            "backupRetentionDays": {
              "type": "integer",
              "format": "int32",
              "description": "Backup retention days for the server."
            },
            "backupIntervalHours": {
              "type": "integer",
              "format": "int32",
              "description": "Backup interval hours for the server."
            },
            "geoRedundantBackup": {
              "type": "string",
              "description": "Whether or not geo redundant backup is enabled.",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "earliestRestoreDate": {
              "type": "string",
              "format": "date-time",
              "description": "Earliest restore point creation time (ISO8601 format)",
              "readOnly": true
            }
          }
        },
        "highAvailability": {
          "description": "High availability related properties of a server.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "High availability mode for a server.",
              "type": "string",
              "enum": [
                "Disabled",
                "ZoneRedundant",
                "SameZone"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "ZoneRedundant",
                    "value": "ZoneRedundant"
                  },
                  {
                    "name": "SameZone",
                    "value": "SameZone"
                  }
                ]
              }
            },
            "state": {
              "description": "The state of server high availability.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "NotEnabled",
                "CreatingStandby",
                "Healthy",
                "FailingOver",
                "RemovingStandby"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotEnabled",
                    "value": "NotEnabled"
                  },
                  {
                    "name": "CreatingStandby",
                    "value": "CreatingStandby"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "FailingOver",
                    "value": "FailingOver"
                  },
                  {
                    "name": "RemovingStandby",
                    "value": "RemovingStandby"
                  }
                ]
              }
            },
            "standbyAvailabilityZone": {
              "type": "string",
              "description": "Availability zone of the standby server."
            }
          }
        },
        "network": {
          "description": "Network related properties of a server.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "delegatedSubnetResourceId": {
              "type": "string",
              "description": "Delegated subnet resource id used to setup vnet for a server."
            },
            "privateDnsZoneResourceId": {
              "type": "string",
              "description": "Private DNS zone resource id."
            }
          }
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "PrivateEndpointConnections related properties of a server.",
          "items": {
            "type": "object",
            "description": "The private endpoint connection resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "description": "The group ids for the private endpoint resource.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "privateEndpoint": {
                    "description": "The private endpoint resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          },
          "readOnly": true
        },
        "maintenancePolicy": {
          "description": "Maintenance policy of a server.",
          "type": "object",
          "properties": {
            "patchStrategy": {
              "description": "The patch strategy of this server",
              "type": "string",
              "enum": [
                "Regular",
                "VirtualCanary"
              ],
              "x-ms-enum": {
                "name": "PatchStrategy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Regular",
                    "value": "Regular"
                  },
                  {
                    "name": "VirtualCanary",
                    "value": "VirtualCanary"
                  }
                ]
              }
            }
          }
        },
        "maintenanceWindow": {
          "description": "Maintenance window of a server. Known issue: cannot be set during server creation or updated with other properties during server update; must be updated separately.",
          "x-ms-mutability": [
            "read",
            "update"
          ],
          "type": "object",
          "properties": {
            "customWindow": {
              "type": "string",
              "description": "indicates whether custom window is enabled or disabled"
            },
            "startHour": {
              "type": "integer",
              "format": "int32",
              "description": "start hour for maintenance window"
            },
            "startMinute": {
              "type": "integer",
              "format": "int32",
              "description": "start minute for maintenance window"
            },
            "dayOfWeek": {
              "type": "integer",
              "format": "int32",
              "description": "day of week for maintenance window"
            },
            "batchOfMaintenance": {
              "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
              "type": "string",
              "enum": [
                "Default",
                "Batch1",
                "Batch2"
              ],
              "x-ms-enum": {
                "name": "BatchOfMaintenance",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Batch1",
                    "value": "Batch1"
                  },
                  {
                    "name": "Batch2",
                    "value": "Batch2"
                  }
                ]
              }
            }
          }
        },
        "importSourceProperties": {
          "description": "Source properties for import from storage.",
          "type": "object",
          "properties": {
            "storageType": {
              "description": "Storage type of import source.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "AzureBlob"
              ],
              "x-ms-enum": {
                "name": "ImportSourceStorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureBlob",
                    "value": "AzureBlob"
                  }
                ]
              }
            },
            "storageUrl": {
              "type": "string",
              "description": "Uri of the import source storage.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "sasToken": {
              "type": "string",
              "format": "password",
              "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "dataDirPath": {
              "type": "string",
              "description": "Relative path of data directory in storage.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        }
      }
    },
    "ServerPropertiesForUpdate": {
      "type": "object",
      "description": "The properties that can be updated for a server.",
      "properties": {
        "administratorLoginPassword": {
          "type": "string",
          "format": "password",
          "description": "The password of the administrator login.",
          "x-ms-secret": true
        },
        "version": {
          "description": "Server version.",
          "type": "string",
          "enum": [
            "5.7",
            "8.0.21"
          ],
          "x-ms-enum": {
            "name": "ServerVersion",
            "modelAsString": true,
            "values": [
              {
                "name": "5.7",
                "value": "5.7"
              },
              {
                "name": "8.0.21",
                "value": "8.0.21"
              }
            ]
          }
        },
        "storage": {
          "description": "Storage related properties of a server.",
          "type": "object",
          "properties": {
            "storageSizeGB": {
              "type": "integer",
              "format": "int32",
              "description": "Max storage size allowed for a server."
            },
            "iops": {
              "type": "integer",
              "format": "int32",
              "description": "Storage IOPS for a server."
            },
            "autoGrow": {
              "type": "string",
              "description": "Enable Storage Auto Grow or not.",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "logOnDisk": {
              "type": "string",
              "description": "Enable Log On Disk or not.",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "storageSku": {
              "type": "string",
              "description": "The sku name of the server storage.",
              "readOnly": true
            },
            "autoIoScaling": {
              "type": "string",
              "description": "Enable IO Auto Scaling or not.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "storageRedundancy": {
              "type": "string",
              "description": "The redundant type of the server storage. The parameter is used for server creation.",
              "default": "LocalRedundancy",
              "enum": [
                "LocalRedundancy",
                "ZoneRedundancy"
              ],
              "x-ms-enum": {
                "name": "StorageRedundancyEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "LocalRedundancy",
                    "value": "LocalRedundancy"
                  },
                  {
                    "name": "ZoneRedundancy",
                    "value": "ZoneRedundancy"
                  }
                ]
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        },
        "backup": {
          "description": "Backup related properties of a server.",
          "type": "object",
          "properties": {
            "backupRetentionDays": {
              "type": "integer",
              "format": "int32",
              "description": "Backup retention days for the server."
            },
            "backupIntervalHours": {
              "type": "integer",
              "format": "int32",
              "description": "Backup interval hours for the server."
            },
            "geoRedundantBackup": {
              "type": "string",
              "description": "Whether or not geo redundant backup is enabled.",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "earliestRestoreDate": {
              "type": "string",
              "format": "date-time",
              "description": "Earliest restore point creation time (ISO8601 format)",
              "readOnly": true
            }
          }
        },
        "highAvailability": {
          "description": "High availability related properties of a server.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "High availability mode for a server.",
              "type": "string",
              "enum": [
                "Disabled",
                "ZoneRedundant",
                "SameZone"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "ZoneRedundant",
                    "value": "ZoneRedundant"
                  },
                  {
                    "name": "SameZone",
                    "value": "SameZone"
                  }
                ]
              }
            },
            "state": {
              "description": "The state of server high availability.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "NotEnabled",
                "CreatingStandby",
                "Healthy",
                "FailingOver",
                "RemovingStandby"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotEnabled",
                    "value": "NotEnabled"
                  },
                  {
                    "name": "CreatingStandby",
                    "value": "CreatingStandby"
                  },
                  {
                    "name": "Healthy",
                    "value": "Healthy"
                  },
                  {
                    "name": "FailingOver",
                    "value": "FailingOver"
                  },
                  {
                    "name": "RemovingStandby",
                    "value": "RemovingStandby"
                  }
                ]
              }
            },
            "standbyAvailabilityZone": {
              "type": "string",
              "description": "Availability zone of the standby server."
            }
          }
        },
        "maintenancePolicy": {
          "description": "Maintenance policy of a server.",
          "type": "object",
          "properties": {
            "patchStrategy": {
              "description": "The patch strategy of this server",
              "type": "string",
              "enum": [
                "Regular",
                "VirtualCanary"
              ],
              "x-ms-enum": {
                "name": "PatchStrategy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Regular",
                    "value": "Regular"
                  },
                  {
                    "name": "VirtualCanary",
                    "value": "VirtualCanary"
                  }
                ]
              }
            }
          }
        },
        "maintenanceWindow": {
          "description": "Maintenance window of a server.",
          "type": "object",
          "properties": {
            "customWindow": {
              "type": "string",
              "description": "indicates whether custom window is enabled or disabled"
            },
            "startHour": {
              "type": "integer",
              "format": "int32",
              "description": "start hour for maintenance window"
            },
            "startMinute": {
              "type": "integer",
              "format": "int32",
              "description": "start minute for maintenance window"
            },
            "dayOfWeek": {
              "type": "integer",
              "format": "int32",
              "description": "day of week for maintenance window"
            },
            "batchOfMaintenance": {
              "description": "The batch of maintenance when enabled the custom managed maintenance window of a server.",
              "type": "string",
              "enum": [
                "Default",
                "Batch1",
                "Batch2"
              ],
              "x-ms-enum": {
                "name": "BatchOfMaintenance",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Default",
                    "value": "Default"
                  },
                  {
                    "name": "Batch1",
                    "value": "Batch1"
                  },
                  {
                    "name": "Batch2",
                    "value": "Batch2"
                  }
                ]
              }
            }
          }
        },
        "replicationRole": {
          "description": "The replication role of the server.",
          "type": "string",
          "enum": [
            "None",
            "Source",
            "Replica"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None"
              },
              {
                "name": "Source",
                "value": "Source"
              },
              {
                "name": "Replica",
                "value": "Replica"
              }
            ]
          }
        },
        "dataEncryption": {
          "description": "The Data Encryption for CMK.",
          "type": "object",
          "properties": {
            "primaryUserAssignedIdentityId": {
              "type": "string",
              "description": "Primary user identity resource id"
            },
            "primaryKeyURI": {
              "type": "string",
              "description": "Primary key uri"
            },
            "geoBackupUserAssignedIdentityId": {
              "type": "string",
              "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
            },
            "geoBackupKeyURI": {
              "type": "string",
              "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
            },
            "type": {
              "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
              "type": "string",
              "enum": [
                "AzureKeyVault",
                "SystemManaged"
              ],
              "x-ms-enum": {
                "name": "DataEncryptionType",
                "modelAsString": false
              }
            }
          }
        },
        "network": {
          "description": "Network related properties of a server",
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "delegatedSubnetResourceId": {
              "type": "string",
              "description": "Delegated subnet resource id used to setup vnet for a server."
            },
            "privateDnsZoneResourceId": {
              "type": "string",
              "description": "Private DNS zone resource id."
            }
          }
        }
      }
    },
    "ServerRestartParameter": {
      "type": "object",
      "description": "Server restart parameters.",
      "properties": {
        "restartWithFailover": {
          "description": "Whether or not failover to standby server when restarting a server with high availability enabled.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "maxFailoverSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed failover time in seconds."
        }
      }
    },
    "ServerSkuTier": {
      "type": "string",
      "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
      "enum": [
        "Burstable",
        "GeneralPurpose",
        "MemoryOptimized"
      ],
      "x-ms-enum": {
        "name": "ServerSkuTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Burstable",
            "value": "Burstable"
          },
          {
            "name": "GeneralPurpose",
            "value": "GeneralPurpose"
          },
          {
            "name": "MemoryOptimized",
            "value": "MemoryOptimized"
          }
        ]
      }
    },
    "ServerState": {
      "type": "string",
      "description": "The state of a server.",
      "enum": [
        "Ready",
        "Dropping",
        "Disabled",
        "Starting",
        "Stopping",
        "Stopped",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ServerState",
        "modelAsString": true,
        "values": [
          {
            "name": "Ready",
            "value": "Ready"
          },
          {
            "name": "Dropping",
            "value": "Dropping"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Starting",
            "value": "Starting"
          },
          {
            "name": "Stopping",
            "value": "Stopping"
          },
          {
            "name": "Stopped",
            "value": "Stopped"
          },
          {
            "name": "Updating",
            "value": "Updating"
          }
        ]
      }
    },
    "ServerVersion": {
      "type": "string",
      "description": "The major version of a server. 8.0.21 stands for MySQL 8.0, 5.7.44 stands for MySQL 5.7",
      "enum": [
        "5.7",
        "8.0.21"
      ],
      "x-ms-enum": {
        "name": "ServerVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "5.7",
            "value": "5.7"
          },
          {
            "name": "8.0.21",
            "value": "8.0.21"
          }
        ]
      }
    },
    "ServerVersionCapability": {
      "type": "object",
      "description": "Server version capabilities.",
      "properties": {
        "name": {
          "type": "string",
          "description": "server version",
          "readOnly": true
        },
        "supportedSkus": {
          "type": "array",
          "description": "A list of supported Skus",
          "items": {
            "type": "object",
            "description": "Sku capability",
            "properties": {
              "name": {
                "type": "string",
                "description": "vCore name",
                "readOnly": true
              },
              "vCores": {
                "type": "integer",
                "format": "int64",
                "description": "supported vCores",
                "readOnly": true
              },
              "supportedIops": {
                "type": "integer",
                "format": "int64",
                "description": "supported IOPS",
                "readOnly": true
              },
              "supportedMemoryPerVCoreMB": {
                "type": "integer",
                "format": "int64",
                "description": "supported memory per vCore in MB",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ServerVersionCapabilityV2": {
      "type": "object",
      "description": "Server version capabilities.",
      "properties": {
        "name": {
          "type": "string",
          "description": "server version",
          "readOnly": true
        }
      }
    },
    "SkuCapability": {
      "type": "object",
      "description": "Sku capability",
      "properties": {
        "name": {
          "type": "string",
          "description": "vCore name",
          "readOnly": true
        },
        "vCores": {
          "type": "integer",
          "format": "int64",
          "description": "supported vCores",
          "readOnly": true
        },
        "supportedIops": {
          "type": "integer",
          "format": "int64",
          "description": "supported IOPS",
          "readOnly": true
        },
        "supportedMemoryPerVCoreMB": {
          "type": "integer",
          "format": "int64",
          "description": "supported memory per vCore in MB",
          "readOnly": true
        }
      }
    },
    "SkuCapabilityV2": {
      "type": "object",
      "description": "Sku capability",
      "properties": {
        "name": {
          "type": "string",
          "description": "vCore name",
          "readOnly": true
        },
        "vCores": {
          "type": "integer",
          "format": "int64",
          "description": "supported vCores",
          "readOnly": true
        },
        "supportedIops": {
          "type": "integer",
          "format": "int64",
          "description": "supported IOPS",
          "readOnly": true
        },
        "supportedMemoryPerVCoreMB": {
          "type": "integer",
          "format": "int64",
          "description": "supported memory per vCore in MB",
          "readOnly": true
        },
        "supportedZones": {
          "type": "array",
          "description": "Supported zones",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "supportedHAMode": {
          "type": "array",
          "description": "Supported high availability mode",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Storage": {
      "type": "object",
      "description": "Storage Profile properties of a server",
      "properties": {
        "storageSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Max storage size allowed for a server."
        },
        "iops": {
          "type": "integer",
          "format": "int32",
          "description": "Storage IOPS for a server."
        },
        "autoGrow": {
          "type": "string",
          "description": "Enable Storage Auto Grow or not.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "logOnDisk": {
          "type": "string",
          "description": "Enable Log On Disk or not.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "storageSku": {
          "type": "string",
          "description": "The sku name of the server storage.",
          "readOnly": true
        },
        "autoIoScaling": {
          "type": "string",
          "description": "Enable IO Auto Scaling or not.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "storageRedundancy": {
          "type": "string",
          "description": "The redundant type of the server storage. The parameter is used for server creation.",
          "default": "LocalRedundancy",
          "enum": [
            "LocalRedundancy",
            "ZoneRedundancy"
          ],
          "x-ms-enum": {
            "name": "StorageRedundancyEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "LocalRedundancy",
                "value": "LocalRedundancy"
              },
              {
                "name": "ZoneRedundancy",
                "value": "ZoneRedundancy"
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "StorageEditionCapability": {
      "type": "object",
      "description": "storage edition capability",
      "properties": {
        "name": {
          "type": "string",
          "description": "storage edition name",
          "readOnly": true
        },
        "minStorageSize": {
          "type": "integer",
          "format": "int64",
          "description": "The minimal supported storage size.",
          "readOnly": true
        },
        "maxStorageSize": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum supported storage size.",
          "readOnly": true
        },
        "minBackupRetentionDays": {
          "type": "integer",
          "format": "int64",
          "description": "Minimal backup retention days",
          "readOnly": true
        },
        "maxBackupRetentionDays": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum backup retention days",
          "readOnly": true
        },
        "minBackupIntervalHours": {
          "type": "integer",
          "format": "int64",
          "description": "Minimal backup interval hours",
          "readOnly": true
        },
        "maxBackupIntervalHours": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum backup interval hours",
          "readOnly": true
        }
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "Metadata of user assigned identity.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Principal Id of user assigned identity",
          "readOnly": true,
          "x-ms-client-name": "PrincipalId"
        },
        "clientId": {
          "type": "string",
          "description": "Client Id of user assigned identity",
          "readOnly": true,
          "x-ms-client-name": "ClientId"
        }
      }
    },
    "ValidateBackupResponse": {
      "type": "object",
      "description": "Represents ValidateBackup API Response",
      "properties": {
        "properties": {
          "description": "The response properties of a pre backup operation.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "numberOfContainers": {
              "type": "integer",
              "format": "int32",
              "description": "Estimated no of storage containers required for resource data to be backed up."
            }
          }
        }
      }
    },
    "ValidateBackupResponseProperties": {
      "type": "object",
      "description": "ValidateBackup Response Properties",
      "properties": {
        "numberOfContainers": {
          "type": "integer",
          "format": "int32",
          "description": "Estimated no of storage containers required for resource data to be backed up."
        }
      }
    },
    "VirtualNetworkSubnetUsageParameter": {
      "type": "object",
      "description": "Virtual network subnet usage parameter",
      "properties": {
        "virtualNetworkResourceId": {
          "type": "string",
          "description": "Virtual network resource id."
        }
      }
    },
    "VirtualNetworkSubnetUsageResult": {
      "type": "object",
      "description": "Virtual network subnet usage data.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location name.",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription id.",
          "readOnly": true
        },
        "delegatedSubnetsUsage": {
          "type": "array",
          "description": "A list of delegated subnet usage",
          "items": {
            "type": "object",
            "description": "Delegated subnet usage data.",
            "properties": {
              "subnetName": {
                "type": "string",
                "description": "name of the subnet",
                "readOnly": true
              },
              "usage": {
                "type": "integer",
                "format": "int64",
                "description": "Number of used delegated subnets",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    }
  },
  "parameters": {
    "LocationNameParameter": {
      "name": "locationName",
      "in": "path",
      "description": "The name of the location.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "pattern": "^[ \\w]+$",
      "x-ms-parameter-location": "method"
    }
  }
}