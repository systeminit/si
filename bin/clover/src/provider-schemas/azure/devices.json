{
  "swagger": "2.0",
  "info": {
    "title": "Azure devices",
    "version": "2023-06-30",
    "description": "Azure devices service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.Devices/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available IoT Hub REST API operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Result of the request to list IoT Hub operations. It contains a list of operations and a URL link to get the next set of results.",
              "properties": {
                "value": {
                  "description": "List of IoT Hub operations supported by the Microsoft.Devices resource provider.",
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "description": "IoT Hub REST API operation",
                    "type": "object",
                    "properties": {
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Operation name: {provider}/{resource}/{read | write | action | delete}"
                      },
                      "display": {
                        "description": "The object that represents the operation.",
                        "properties": {
                          "provider": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Service provider: Microsoft Devices"
                          },
                          "resource": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Resource Type: IotHubs"
                          },
                          "operation": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Name of the operation"
                          },
                          "description": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Description of the operation"
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "readOnly": true,
                  "type": "string",
                  "description": "URL to get the next set of operation list results if there are any."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "DpsCertificate"
        ],
        "operationId": "DpsCertificate_Get",
        "description": "Get the certificate from the provisioning service.",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "certificateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the certificate to retrieve."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group identifier."
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the provisioning service the certificate is associated with."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the certificate."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Metadata for the specified certificate.",
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "properties of a certificate",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean"
                    },
                    "certificate": {
                      "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
                      "type": "string",
                      "format": "byte"
                    },
                    "created": {
                      "description": "The certificate's creation date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "put": {
        "tags": [
          "DpsCertificate"
        ],
        "summary": "Upload the certificate to the provisioning service.",
        "description": "Add new certificate or update an existing certificate.",
        "operationId": "DpsCertificate_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "description": "The name of the provisioning service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate create or update.",
            "required": true,
            "type": "string",
            "maxLength": 256
          },
          {
            "name": "certificateDescription",
            "in": "body",
            "description": "The certificate body.",
            "required": true,
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "properties of a certificate",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean"
                    },
                    "certificate": {
                      "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
                      "type": "string",
                      "format": "byte"
                    },
                    "created": {
                      "description": "The certificate's creation date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate."
          }
        ],
        "responses": {
          "200": {
            "description": "If certificate already exist and update was successful, the operation returns HTTP status code of 201 (OK).",
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "properties of a certificate",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean"
                    },
                    "certificate": {
                      "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
                      "type": "string",
                      "format": "byte"
                    },
                    "created": {
                      "description": "The certificate's creation date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        },
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "DpsCertificate"
        ],
        "operationId": "DpsCertificate_Delete",
        "summary": "Delete the Provisioning Service Certificate.",
        "description": "Deletes the specified certificate associated with the Provisioning Service",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group identifier."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "ETag of the certificate"
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the provisioning service."
          },
          {
            "name": "certificateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "This is a mandatory field, and is the logical name of the certificate that the provisioning service will access by."
          },
          {
            "name": "certificate.name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is optional, and it is the Common Name of the certificate."
          },
          {
            "name": "certificate.rawBytes",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte",
            "description": "Raw data within the certificate."
          },
          {
            "name": "certificate.isVerified",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Indicates if certificate has been verified by owner of the private key."
          },
          {
            "name": "certificate.purpose",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A description that mentions the purpose of the certificate.",
            "enum": [
              "clientAuthentication",
              "serverAuthentication"
            ],
            "x-ms-enum": {
              "name": "CertificatePurpose",
              "modelAsString": true
            }
          },
          {
            "name": "certificate.created",
            "in": "query",
            "description": "Time the certificate is created.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "certificate.lastUpdated",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Time the certificate is last updated.",
            "format": "date-time"
          },
          {
            "name": "certificate.hasPrivateKey",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Indicates if the certificate contains a private key."
          },
          {
            "name": "certificate.nonce",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Random number generated to indicate Proof of Possession."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}": {
      "get": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Get the non-security related metadata of the provisioning service.",
        "description": "Get the metadata of the provisioning service without SAS keys.",
        "operationId": "IotDpsResource_Get",
        "parameters": [
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the provisioning service to retrieve."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Provisioning service description with no keys is included in the response.",
            "schema": {
              "description": "The description of the provisioning service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "resourcegroup": {
                  "type": "string",
                  "description": "The resource group of the resource."
                },
                "subscriptionid": {
                  "type": "string",
                  "description": "The subscription id of the resource."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "Service specific properties for a provisioning service",
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Current state of the provisioning service.",
                      "enum": [
                        "Activating",
                        "Active",
                        "Deleting",
                        "Deleted",
                        "ActivationFailed",
                        "DeletionFailed",
                        "Transitioning",
                        "Suspending",
                        "Suspended",
                        "Resuming",
                        "FailingOver",
                        "FailoverFailed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "state",
                        "modelAsString": true
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for a provisioning Service.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          },
                          "target": {
                            "description": "Target for requests captured by this rule.",
                            "enum": [
                              "all",
                              "serviceApi",
                              "deviceApi"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterTargetType",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of a provisioning service",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name.",
                            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The ARM provisioning state of the provisioning service.",
                      "type": "string"
                    },
                    "iotHubs": {
                      "type": "array",
                      "description": "List of IoT hubs associated with this provisioning service.",
                      "items": {
                        "type": "object",
                        "description": "Description of the IoT hub.",
                        "properties": {
                          "applyAllocationPolicy": {
                            "description": "flag for applying allocationPolicy or not for a given iot hub.",
                            "type": "boolean"
                          },
                          "allocationWeight": {
                            "description": "weight to apply for a given iot h.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Host name of the IoT hub."
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "Connection string of the IoT hub."
                          },
                          "location": {
                            "type": "string",
                            "description": "ARM region of the IoT hub."
                          }
                        },
                        "required": [
                          "connectionString",
                          "location"
                        ]
                      }
                    },
                    "allocationPolicy": {
                      "enum": [
                        "Hashed",
                        "GeoLatency",
                        "Static"
                      ],
                      "type": "string",
                      "description": "Allocation policy to be used by this provisioning service.",
                      "x-ms-enum": {
                        "name": "AllocationPolicy",
                        "modelAsString": true
                      }
                    },
                    "serviceOperationsHostName": {
                      "description": "Service endpoint for provisioning service.",
                      "type": "string",
                      "readOnly": true
                    },
                    "deviceProvisioningHostName": {
                      "type": "string",
                      "description": "Device endpoint for this provisioning service.",
                      "readOnly": true
                    },
                    "idScope": {
                      "type": "string",
                      "description": "Unique identifier of this provisioning service.",
                      "readOnly": true
                    },
                    "authorizationPolicies": {
                      "description": "List of authorization keys for a provisioning service.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Description of the shared access key.",
                        "properties": {
                          "keyName": {
                            "type": "string",
                            "description": "Name of the key."
                          },
                          "primaryKey": {
                            "type": "string",
                            "description": "Primary SAS key value."
                          },
                          "secondaryKey": {
                            "type": "string",
                            "description": "Secondary SAS key value."
                          },
                          "rights": {
                            "description": "Rights that this key has.",
                            "enum": [
                              "ServiceConfig",
                              "EnrollmentRead",
                              "EnrollmentWrite",
                              "DeviceConnect",
                              "RegistrationStatusRead",
                              "RegistrationStatusWrite"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRightsDescription",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      }
                    },
                    "enableDataResidency": {
                      "type": "boolean",
                      "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
                    },
                    "portalOperationsHostName": {
                      "type": "string",
                      "description": "Portal endpoint to enable CORS for this provisioning service."
                    }
                  }
                },
                "sku": {
                  "description": "Sku info for a provisioning Service.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Sku name.",
                      "enum": [
                        "S1"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotDpsSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Pricing tier name of the provisioning service."
                    },
                    "capacity": {
                      "format": "int64",
                      "type": "integer",
                      "description": "The number of units to provision"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku",
                "properties"
              ]
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Create or update the metadata of the provisioning service.",
        "description": "Create or update the metadata of the provisioning service. The usual pattern to modify a property is to retrieve the provisioning service metadata and security metadata, and then combine them with the modified values in a new body to update the provisioning service.",
        "operationId": "IotDpsResource_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group identifier."
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of provisioning service to create or update."
          },
          {
            "name": "iotDpsDescription",
            "in": "body",
            "required": true,
            "description": "Description of the provisioning service to create or update.",
            "schema": {
              "description": "The description of the provisioning service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "resourcegroup": {
                  "type": "string",
                  "description": "The resource group of the resource."
                },
                "subscriptionid": {
                  "type": "string",
                  "description": "The subscription id of the resource."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "Service specific properties for a provisioning service",
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Current state of the provisioning service.",
                      "enum": [
                        "Activating",
                        "Active",
                        "Deleting",
                        "Deleted",
                        "ActivationFailed",
                        "DeletionFailed",
                        "Transitioning",
                        "Suspending",
                        "Suspended",
                        "Resuming",
                        "FailingOver",
                        "FailoverFailed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "state",
                        "modelAsString": true
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for a provisioning Service.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          },
                          "target": {
                            "description": "Target for requests captured by this rule.",
                            "enum": [
                              "all",
                              "serviceApi",
                              "deviceApi"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterTargetType",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of a provisioning service",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name.",
                            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The ARM provisioning state of the provisioning service.",
                      "type": "string"
                    },
                    "iotHubs": {
                      "type": "array",
                      "description": "List of IoT hubs associated with this provisioning service.",
                      "items": {
                        "type": "object",
                        "description": "Description of the IoT hub.",
                        "properties": {
                          "applyAllocationPolicy": {
                            "description": "flag for applying allocationPolicy or not for a given iot hub.",
                            "type": "boolean"
                          },
                          "allocationWeight": {
                            "description": "weight to apply for a given iot h.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Host name of the IoT hub."
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "Connection string of the IoT hub."
                          },
                          "location": {
                            "type": "string",
                            "description": "ARM region of the IoT hub."
                          }
                        },
                        "required": [
                          "connectionString",
                          "location"
                        ]
                      }
                    },
                    "allocationPolicy": {
                      "enum": [
                        "Hashed",
                        "GeoLatency",
                        "Static"
                      ],
                      "type": "string",
                      "description": "Allocation policy to be used by this provisioning service.",
                      "x-ms-enum": {
                        "name": "AllocationPolicy",
                        "modelAsString": true
                      }
                    },
                    "serviceOperationsHostName": {
                      "description": "Service endpoint for provisioning service.",
                      "type": "string",
                      "readOnly": true
                    },
                    "deviceProvisioningHostName": {
                      "type": "string",
                      "description": "Device endpoint for this provisioning service.",
                      "readOnly": true
                    },
                    "idScope": {
                      "type": "string",
                      "description": "Unique identifier of this provisioning service.",
                      "readOnly": true
                    },
                    "authorizationPolicies": {
                      "description": "List of authorization keys for a provisioning service.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Description of the shared access key.",
                        "properties": {
                          "keyName": {
                            "type": "string",
                            "description": "Name of the key."
                          },
                          "primaryKey": {
                            "type": "string",
                            "description": "Primary SAS key value."
                          },
                          "secondaryKey": {
                            "type": "string",
                            "description": "Secondary SAS key value."
                          },
                          "rights": {
                            "description": "Rights that this key has.",
                            "enum": [
                              "ServiceConfig",
                              "EnrollmentRead",
                              "EnrollmentWrite",
                              "DeviceConnect",
                              "RegistrationStatusRead",
                              "RegistrationStatusWrite"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRightsDescription",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      }
                    },
                    "enableDataResidency": {
                      "type": "boolean",
                      "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
                    },
                    "portalOperationsHostName": {
                      "type": "string",
                      "description": "Portal endpoint to enable CORS for this provisioning service."
                    }
                  }
                },
                "sku": {
                  "description": "Sku info for a provisioning Service.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Sku name.",
                      "enum": [
                        "S1"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotDpsSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Pricing tier name of the provisioning service."
                    },
                    "capacity": {
                      "format": "int64",
                      "type": "integer",
                      "description": "The number of units to provision"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku",
                "properties"
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all the non-security properties of the provisioning service. Security-related properties are set to null.",
            "schema": {
              "description": "The description of the provisioning service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "resourcegroup": {
                  "type": "string",
                  "description": "The resource group of the resource."
                },
                "subscriptionid": {
                  "type": "string",
                  "description": "The subscription id of the resource."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "Service specific properties for a provisioning service",
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Current state of the provisioning service.",
                      "enum": [
                        "Activating",
                        "Active",
                        "Deleting",
                        "Deleted",
                        "ActivationFailed",
                        "DeletionFailed",
                        "Transitioning",
                        "Suspending",
                        "Suspended",
                        "Resuming",
                        "FailingOver",
                        "FailoverFailed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "state",
                        "modelAsString": true
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for a provisioning Service.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          },
                          "target": {
                            "description": "Target for requests captured by this rule.",
                            "enum": [
                              "all",
                              "serviceApi",
                              "deviceApi"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterTargetType",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of a provisioning service",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name.",
                            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The ARM provisioning state of the provisioning service.",
                      "type": "string"
                    },
                    "iotHubs": {
                      "type": "array",
                      "description": "List of IoT hubs associated with this provisioning service.",
                      "items": {
                        "type": "object",
                        "description": "Description of the IoT hub.",
                        "properties": {
                          "applyAllocationPolicy": {
                            "description": "flag for applying allocationPolicy or not for a given iot hub.",
                            "type": "boolean"
                          },
                          "allocationWeight": {
                            "description": "weight to apply for a given iot h.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Host name of the IoT hub."
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "Connection string of the IoT hub."
                          },
                          "location": {
                            "type": "string",
                            "description": "ARM region of the IoT hub."
                          }
                        },
                        "required": [
                          "connectionString",
                          "location"
                        ]
                      }
                    },
                    "allocationPolicy": {
                      "enum": [
                        "Hashed",
                        "GeoLatency",
                        "Static"
                      ],
                      "type": "string",
                      "description": "Allocation policy to be used by this provisioning service.",
                      "x-ms-enum": {
                        "name": "AllocationPolicy",
                        "modelAsString": true
                      }
                    },
                    "serviceOperationsHostName": {
                      "description": "Service endpoint for provisioning service.",
                      "type": "string",
                      "readOnly": true
                    },
                    "deviceProvisioningHostName": {
                      "type": "string",
                      "description": "Device endpoint for this provisioning service.",
                      "readOnly": true
                    },
                    "idScope": {
                      "type": "string",
                      "description": "Unique identifier of this provisioning service.",
                      "readOnly": true
                    },
                    "authorizationPolicies": {
                      "description": "List of authorization keys for a provisioning service.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Description of the shared access key.",
                        "properties": {
                          "keyName": {
                            "type": "string",
                            "description": "Name of the key."
                          },
                          "primaryKey": {
                            "type": "string",
                            "description": "Primary SAS key value."
                          },
                          "secondaryKey": {
                            "type": "string",
                            "description": "Secondary SAS key value."
                          },
                          "rights": {
                            "description": "Rights that this key has.",
                            "enum": [
                              "ServiceConfig",
                              "EnrollmentRead",
                              "EnrollmentWrite",
                              "DeviceConnect",
                              "RegistrationStatusRead",
                              "RegistrationStatusWrite"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRightsDescription",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      }
                    },
                    "enableDataResidency": {
                      "type": "boolean",
                      "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
                    },
                    "portalOperationsHostName": {
                      "type": "string",
                      "description": "Portal endpoint to enable CORS for this provisioning service."
                    }
                  }
                },
                "sku": {
                  "description": "Sku info for a provisioning Service.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Sku name.",
                      "enum": [
                        "S1"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotDpsSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Pricing tier name of the provisioning service."
                    },
                    "capacity": {
                      "format": "int64",
                      "type": "integer",
                      "description": "The number of units to provision"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku",
                "properties"
              ]
            }
          },
          "201": {
            "description": "This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 201 (OK).",
            "schema": {
              "description": "The description of the provisioning service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "resourcegroup": {
                  "type": "string",
                  "description": "The resource group of the resource."
                },
                "subscriptionid": {
                  "type": "string",
                  "description": "The subscription id of the resource."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "Service specific properties for a provisioning service",
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Current state of the provisioning service.",
                      "enum": [
                        "Activating",
                        "Active",
                        "Deleting",
                        "Deleted",
                        "ActivationFailed",
                        "DeletionFailed",
                        "Transitioning",
                        "Suspending",
                        "Suspended",
                        "Resuming",
                        "FailingOver",
                        "FailoverFailed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "state",
                        "modelAsString": true
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for a provisioning Service.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          },
                          "target": {
                            "description": "Target for requests captured by this rule.",
                            "enum": [
                              "all",
                              "serviceApi",
                              "deviceApi"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterTargetType",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of a provisioning service",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name.",
                            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The ARM provisioning state of the provisioning service.",
                      "type": "string"
                    },
                    "iotHubs": {
                      "type": "array",
                      "description": "List of IoT hubs associated with this provisioning service.",
                      "items": {
                        "type": "object",
                        "description": "Description of the IoT hub.",
                        "properties": {
                          "applyAllocationPolicy": {
                            "description": "flag for applying allocationPolicy or not for a given iot hub.",
                            "type": "boolean"
                          },
                          "allocationWeight": {
                            "description": "weight to apply for a given iot h.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Host name of the IoT hub."
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "Connection string of the IoT hub."
                          },
                          "location": {
                            "type": "string",
                            "description": "ARM region of the IoT hub."
                          }
                        },
                        "required": [
                          "connectionString",
                          "location"
                        ]
                      }
                    },
                    "allocationPolicy": {
                      "enum": [
                        "Hashed",
                        "GeoLatency",
                        "Static"
                      ],
                      "type": "string",
                      "description": "Allocation policy to be used by this provisioning service.",
                      "x-ms-enum": {
                        "name": "AllocationPolicy",
                        "modelAsString": true
                      }
                    },
                    "serviceOperationsHostName": {
                      "description": "Service endpoint for provisioning service.",
                      "type": "string",
                      "readOnly": true
                    },
                    "deviceProvisioningHostName": {
                      "type": "string",
                      "description": "Device endpoint for this provisioning service.",
                      "readOnly": true
                    },
                    "idScope": {
                      "type": "string",
                      "description": "Unique identifier of this provisioning service.",
                      "readOnly": true
                    },
                    "authorizationPolicies": {
                      "description": "List of authorization keys for a provisioning service.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Description of the shared access key.",
                        "properties": {
                          "keyName": {
                            "type": "string",
                            "description": "Name of the key."
                          },
                          "primaryKey": {
                            "type": "string",
                            "description": "Primary SAS key value."
                          },
                          "secondaryKey": {
                            "type": "string",
                            "description": "Secondary SAS key value."
                          },
                          "rights": {
                            "description": "Rights that this key has.",
                            "enum": [
                              "ServiceConfig",
                              "EnrollmentRead",
                              "EnrollmentWrite",
                              "DeviceConnect",
                              "RegistrationStatusRead",
                              "RegistrationStatusWrite"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRightsDescription",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      }
                    },
                    "enableDataResidency": {
                      "type": "boolean",
                      "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
                    },
                    "portalOperationsHostName": {
                      "type": "string",
                      "description": "Portal endpoint to enable CORS for this provisioning service."
                    }
                  }
                },
                "sku": {
                  "description": "Sku info for a provisioning Service.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Sku name.",
                      "enum": [
                        "S1"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotDpsSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Pricing tier name of the provisioning service."
                    },
                    "capacity": {
                      "format": "int64",
                      "type": "integer",
                      "description": "The number of units to provision"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku",
                "properties"
              ]
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Update an existing provisioning service's tags.",
        "description": "Update an existing provisioning service's tags. to update other fields use the CreateOrUpdate method",
        "operationId": "IotDpsResource_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group identifier."
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of provisioning service to create or update."
          },
          {
            "name": "ProvisioningServiceTags",
            "in": "body",
            "required": true,
            "description": "Updated tag information to set into the provisioning service instance.",
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                }
              },
              "description": "A container holding only the Tags for a resource, allowing the user to update the tags on a Provisioning Service instance."
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Provisioning Service was successfully updated",
            "schema": {
              "description": "The description of the provisioning service.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "resourcegroup": {
                  "type": "string",
                  "description": "The resource group of the resource."
                },
                "subscriptionid": {
                  "type": "string",
                  "description": "The subscription id of the resource."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "Service specific properties for a provisioning service",
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Current state of the provisioning service.",
                      "enum": [
                        "Activating",
                        "Active",
                        "Deleting",
                        "Deleted",
                        "ActivationFailed",
                        "DeletionFailed",
                        "Transitioning",
                        "Suspending",
                        "Suspended",
                        "Resuming",
                        "FailingOver",
                        "FailoverFailed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "state",
                        "modelAsString": true
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for a provisioning Service.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          },
                          "target": {
                            "description": "Target for requests captured by this rule.",
                            "enum": [
                              "all",
                              "serviceApi",
                              "deviceApi"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterTargetType",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of a provisioning service",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name.",
                            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The ARM provisioning state of the provisioning service.",
                      "type": "string"
                    },
                    "iotHubs": {
                      "type": "array",
                      "description": "List of IoT hubs associated with this provisioning service.",
                      "items": {
                        "type": "object",
                        "description": "Description of the IoT hub.",
                        "properties": {
                          "applyAllocationPolicy": {
                            "description": "flag for applying allocationPolicy or not for a given iot hub.",
                            "type": "boolean"
                          },
                          "allocationWeight": {
                            "description": "weight to apply for a given iot h.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Host name of the IoT hub."
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "Connection string of the IoT hub."
                          },
                          "location": {
                            "type": "string",
                            "description": "ARM region of the IoT hub."
                          }
                        },
                        "required": [
                          "connectionString",
                          "location"
                        ]
                      }
                    },
                    "allocationPolicy": {
                      "enum": [
                        "Hashed",
                        "GeoLatency",
                        "Static"
                      ],
                      "type": "string",
                      "description": "Allocation policy to be used by this provisioning service.",
                      "x-ms-enum": {
                        "name": "AllocationPolicy",
                        "modelAsString": true
                      }
                    },
                    "serviceOperationsHostName": {
                      "description": "Service endpoint for provisioning service.",
                      "type": "string",
                      "readOnly": true
                    },
                    "deviceProvisioningHostName": {
                      "type": "string",
                      "description": "Device endpoint for this provisioning service.",
                      "readOnly": true
                    },
                    "idScope": {
                      "type": "string",
                      "description": "Unique identifier of this provisioning service.",
                      "readOnly": true
                    },
                    "authorizationPolicies": {
                      "description": "List of authorization keys for a provisioning service.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Description of the shared access key.",
                        "properties": {
                          "keyName": {
                            "type": "string",
                            "description": "Name of the key."
                          },
                          "primaryKey": {
                            "type": "string",
                            "description": "Primary SAS key value."
                          },
                          "secondaryKey": {
                            "type": "string",
                            "description": "Secondary SAS key value."
                          },
                          "rights": {
                            "description": "Rights that this key has.",
                            "enum": [
                              "ServiceConfig",
                              "EnrollmentRead",
                              "EnrollmentWrite",
                              "DeviceConnect",
                              "RegistrationStatusRead",
                              "RegistrationStatusWrite"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRightsDescription",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      }
                    },
                    "enableDataResidency": {
                      "type": "boolean",
                      "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
                    },
                    "portalOperationsHostName": {
                      "type": "string",
                      "description": "Portal endpoint to enable CORS for this provisioning service."
                    }
                  }
                },
                "sku": {
                  "description": "Sku info for a provisioning Service.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Sku name.",
                      "enum": [
                        "S1"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotDpsSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Pricing tier name of the provisioning service."
                    },
                    "capacity": {
                      "format": "int64",
                      "type": "integer",
                      "description": "The number of units to provision"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku",
                "properties"
              ]
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Delete the Provisioning Service",
        "description": "Deletes the Provisioning Service.",
        "operationId": "IotDpsResource_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of provisioning service to delete."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group identifier."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state."
          },
          "202": {
            "description": "The provisioning service resource provider always returns a 202 Accepted status code with valid Location and Retry-After headers. The resource provider also sets the Azure-AsyncOperation header with a URL that points to the operation resource for this operation. Subsequent GET attempts on the resource after a DELETE operation return a resource representation that indicates a transitional provisioning state (such as Terminating). To retrieve the status of the operation, a client can either poll the URL returned in the Location header after the Retry-After interval, get the provisioning service status directly, or query the operation resource."
          },
          "204": {
            "description": "Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the provisioning service metadata in the service and the status of the delete operation is set to a completed state."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates": {
      "get": {
        "tags": [
          "DpsCertificate"
        ],
        "operationId": "DpsCertificate_List",
        "description": "Get all the certificates tied to the provisioning service.",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of resource group."
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of provisioning service to retrieve certificates for."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of certificate descriptions in a JSON-serialized array.",
            "schema": {
              "description": "The JSON-serialized array of Certificate objects.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The array of Certificate objects.",
                  "type": "array",
                  "items": {
                    "description": "The X509 Certificate.",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "description": "properties of a certificate",
                        "type": "object",
                        "properties": {
                          "subject": {
                            "description": "The certificate's subject name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "expiry": {
                            "description": "The certificate's expiration date and time.",
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "readOnly": true
                          },
                          "thumbprint": {
                            "description": "The certificate's thumbprint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "isVerified": {
                            "description": "Determines whether certificate has been verified.",
                            "type": "boolean"
                          },
                          "certificate": {
                            "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
                            "type": "string",
                            "format": "byte"
                          },
                          "created": {
                            "description": "The certificate's creation date and time.",
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "readOnly": true
                          },
                          "updated": {
                            "description": "The certificate's last update date and time.",
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "readOnly": true
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "description": "The name of the certificate.",
                        "type": "string",
                        "readOnly": true
                      },
                      "etag": {
                        "description": "The entity tag.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/provisioningServices": {
      "get": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Get all the provisioning services in a subscription.",
        "description": "List all the provisioning services for a given subscription id.",
        "operationId": "IotDpsResource_ListBySubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the provisioning services in the subscription.",
            "schema": {
              "type": "object",
              "description": "List of provisioning service descriptions.",
              "properties": {
                "value": {
                  "description": "List of provisioning service descriptions.",
                  "type": "array",
                  "items": {
                    "description": "The description of the provisioning service.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location."
                      },
                      "resourcegroup": {
                        "type": "string",
                        "description": "The resource group of the resource."
                      },
                      "subscriptionid": {
                        "type": "string",
                        "description": "The subscription id of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "The resource tags."
                      },
                      "etag": {
                        "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Service specific properties for a provisioning service",
                        "type": "object",
                        "properties": {
                          "state": {
                            "description": "Current state of the provisioning service.",
                            "enum": [
                              "Activating",
                              "Active",
                              "Deleting",
                              "Deleted",
                              "ActivationFailed",
                              "DeletionFailed",
                              "Transitioning",
                              "Suspending",
                              "Suspended",
                              "Resuming",
                              "FailingOver",
                              "FailoverFailed"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "state",
                              "modelAsString": true
                            }
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "description": "Whether requests from Public Network are allowed",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PublicNetworkAccess"
                            }
                          },
                          "ipFilterRules": {
                            "description": "The IP filter rules.",
                            "type": "array",
                            "items": {
                              "description": "The IP filter rules for a provisioning Service.",
                              "type": "object",
                              "properties": {
                                "filterName": {
                                  "description": "The name of the IP filter rule.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "The desired action for requests captured by this rule.",
                                  "enum": [
                                    "Accept",
                                    "Reject"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpFilterActionType",
                                    "modelAsString": false
                                  }
                                },
                                "ipMask": {
                                  "description": "A string that contains the IP address range in CIDR notation for the rule.",
                                  "type": "string"
                                },
                                "target": {
                                  "description": "Target for requests captured by this rule.",
                                  "enum": [
                                    "all",
                                    "serviceApi",
                                    "deviceApi"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpFilterTargetType",
                                    "modelAsString": false
                                  }
                                }
                              },
                              "required": [
                                "filterName",
                                "action",
                                "ipMask"
                              ]
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "Private endpoint connections created on this IotHub",
                            "type": "array",
                            "items": {
                              "description": "The private endpoint connection of a provisioning service",
                              "x-ms-azure-resource": true,
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource identifier."
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource name.",
                                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource type."
                                },
                                "properties": {
                                  "description": "The properties of a private endpoint connection",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The private endpoint property of a private endpoint connection",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The resource identifier."
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "The current state of a private endpoint connection",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The status of a private endpoint connection",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PrivateLinkServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description for the current state of a private endpoint connection"
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Actions required for a private endpoint connection"
                                        }
                                      },
                                      "required": [
                                        "status",
                                        "description"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                },
                                "systemData": {
                                  "readOnly": true,
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The ARM provisioning state of the provisioning service.",
                            "type": "string"
                          },
                          "iotHubs": {
                            "type": "array",
                            "description": "List of IoT hubs associated with this provisioning service.",
                            "items": {
                              "type": "object",
                              "description": "Description of the IoT hub.",
                              "properties": {
                                "applyAllocationPolicy": {
                                  "description": "flag for applying allocationPolicy or not for a given iot hub.",
                                  "type": "boolean"
                                },
                                "allocationWeight": {
                                  "description": "weight to apply for a given iot h.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Host name of the IoT hub."
                                },
                                "connectionString": {
                                  "type": "string",
                                  "description": "Connection string of the IoT hub."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "ARM region of the IoT hub."
                                }
                              },
                              "required": [
                                "connectionString",
                                "location"
                              ]
                            }
                          },
                          "allocationPolicy": {
                            "enum": [
                              "Hashed",
                              "GeoLatency",
                              "Static"
                            ],
                            "type": "string",
                            "description": "Allocation policy to be used by this provisioning service.",
                            "x-ms-enum": {
                              "name": "AllocationPolicy",
                              "modelAsString": true
                            }
                          },
                          "serviceOperationsHostName": {
                            "description": "Service endpoint for provisioning service.",
                            "type": "string",
                            "readOnly": true
                          },
                          "deviceProvisioningHostName": {
                            "type": "string",
                            "description": "Device endpoint for this provisioning service.",
                            "readOnly": true
                          },
                          "idScope": {
                            "type": "string",
                            "description": "Unique identifier of this provisioning service.",
                            "readOnly": true
                          },
                          "authorizationPolicies": {
                            "description": "List of authorization keys for a provisioning service.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Description of the shared access key.",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "Name of the key."
                                },
                                "primaryKey": {
                                  "type": "string",
                                  "description": "Primary SAS key value."
                                },
                                "secondaryKey": {
                                  "type": "string",
                                  "description": "Secondary SAS key value."
                                },
                                "rights": {
                                  "description": "Rights that this key has.",
                                  "enum": [
                                    "ServiceConfig",
                                    "EnrollmentRead",
                                    "EnrollmentWrite",
                                    "DeviceConnect",
                                    "RegistrationStatusRead",
                                    "RegistrationStatusWrite"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "AccessRightsDescription",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "keyName",
                                "rights"
                              ]
                            }
                          },
                          "enableDataResidency": {
                            "type": "boolean",
                            "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
                          },
                          "portalOperationsHostName": {
                            "type": "string",
                            "description": "Portal endpoint to enable CORS for this provisioning service."
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku info for a provisioning Service.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Sku name.",
                            "enum": [
                              "S1"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotDpsSku",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Pricing tier name of the provisioning service."
                          },
                          "capacity": {
                            "format": "int64",
                            "type": "integer",
                            "description": "The number of units to provision"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "required": [
                      "sku",
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "the next link",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices": {
      "get": {
        "tags": [
          "IotDpsResource"
        ],
        "operationId": "IotDpsResource_ListByResourceGroup",
        "description": "Get a list of all provisioning services in the given resource group.",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group identifier."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of provisioning services in the resource group.",
            "schema": {
              "type": "object",
              "description": "List of provisioning service descriptions.",
              "properties": {
                "value": {
                  "description": "List of provisioning service descriptions.",
                  "type": "array",
                  "items": {
                    "description": "The description of the provisioning service.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location."
                      },
                      "resourcegroup": {
                        "type": "string",
                        "description": "The resource group of the resource."
                      },
                      "subscriptionid": {
                        "type": "string",
                        "description": "The subscription id of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "The resource tags."
                      },
                      "etag": {
                        "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Service specific properties for a provisioning service",
                        "type": "object",
                        "properties": {
                          "state": {
                            "description": "Current state of the provisioning service.",
                            "enum": [
                              "Activating",
                              "Active",
                              "Deleting",
                              "Deleted",
                              "ActivationFailed",
                              "DeletionFailed",
                              "Transitioning",
                              "Suspending",
                              "Suspended",
                              "Resuming",
                              "FailingOver",
                              "FailoverFailed"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "state",
                              "modelAsString": true
                            }
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "description": "Whether requests from Public Network are allowed",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PublicNetworkAccess"
                            }
                          },
                          "ipFilterRules": {
                            "description": "The IP filter rules.",
                            "type": "array",
                            "items": {
                              "description": "The IP filter rules for a provisioning Service.",
                              "type": "object",
                              "properties": {
                                "filterName": {
                                  "description": "The name of the IP filter rule.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "The desired action for requests captured by this rule.",
                                  "enum": [
                                    "Accept",
                                    "Reject"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpFilterActionType",
                                    "modelAsString": false
                                  }
                                },
                                "ipMask": {
                                  "description": "A string that contains the IP address range in CIDR notation for the rule.",
                                  "type": "string"
                                },
                                "target": {
                                  "description": "Target for requests captured by this rule.",
                                  "enum": [
                                    "all",
                                    "serviceApi",
                                    "deviceApi"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpFilterTargetType",
                                    "modelAsString": false
                                  }
                                }
                              },
                              "required": [
                                "filterName",
                                "action",
                                "ipMask"
                              ]
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "Private endpoint connections created on this IotHub",
                            "type": "array",
                            "items": {
                              "description": "The private endpoint connection of a provisioning service",
                              "x-ms-azure-resource": true,
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource identifier."
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource name.",
                                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource type."
                                },
                                "properties": {
                                  "description": "The properties of a private endpoint connection",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The private endpoint property of a private endpoint connection",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The resource identifier."
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "The current state of a private endpoint connection",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The status of a private endpoint connection",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PrivateLinkServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description for the current state of a private endpoint connection"
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Actions required for a private endpoint connection"
                                        }
                                      },
                                      "required": [
                                        "status",
                                        "description"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                },
                                "systemData": {
                                  "readOnly": true,
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The ARM provisioning state of the provisioning service.",
                            "type": "string"
                          },
                          "iotHubs": {
                            "type": "array",
                            "description": "List of IoT hubs associated with this provisioning service.",
                            "items": {
                              "type": "object",
                              "description": "Description of the IoT hub.",
                              "properties": {
                                "applyAllocationPolicy": {
                                  "description": "flag for applying allocationPolicy or not for a given iot hub.",
                                  "type": "boolean"
                                },
                                "allocationWeight": {
                                  "description": "weight to apply for a given iot h.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Host name of the IoT hub."
                                },
                                "connectionString": {
                                  "type": "string",
                                  "description": "Connection string of the IoT hub."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "ARM region of the IoT hub."
                                }
                              },
                              "required": [
                                "connectionString",
                                "location"
                              ]
                            }
                          },
                          "allocationPolicy": {
                            "enum": [
                              "Hashed",
                              "GeoLatency",
                              "Static"
                            ],
                            "type": "string",
                            "description": "Allocation policy to be used by this provisioning service.",
                            "x-ms-enum": {
                              "name": "AllocationPolicy",
                              "modelAsString": true
                            }
                          },
                          "serviceOperationsHostName": {
                            "description": "Service endpoint for provisioning service.",
                            "type": "string",
                            "readOnly": true
                          },
                          "deviceProvisioningHostName": {
                            "type": "string",
                            "description": "Device endpoint for this provisioning service.",
                            "readOnly": true
                          },
                          "idScope": {
                            "type": "string",
                            "description": "Unique identifier of this provisioning service.",
                            "readOnly": true
                          },
                          "authorizationPolicies": {
                            "description": "List of authorization keys for a provisioning service.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Description of the shared access key.",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "Name of the key."
                                },
                                "primaryKey": {
                                  "type": "string",
                                  "description": "Primary SAS key value."
                                },
                                "secondaryKey": {
                                  "type": "string",
                                  "description": "Secondary SAS key value."
                                },
                                "rights": {
                                  "description": "Rights that this key has.",
                                  "enum": [
                                    "ServiceConfig",
                                    "EnrollmentRead",
                                    "EnrollmentWrite",
                                    "DeviceConnect",
                                    "RegistrationStatusRead",
                                    "RegistrationStatusWrite"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "AccessRightsDescription",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "keyName",
                                "rights"
                              ]
                            }
                          },
                          "enableDataResidency": {
                            "type": "boolean",
                            "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
                          },
                          "portalOperationsHostName": {
                            "type": "string",
                            "description": "Portal endpoint to enable CORS for this provisioning service."
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku info for a provisioning Service.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Sku name.",
                            "enum": [
                              "S1"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotDpsSku",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Pricing tier name of the provisioning service."
                          },
                          "capacity": {
                            "format": "int64",
                            "type": "integer",
                            "description": "The number of units to provision"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "required": [
                      "sku",
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "the next link",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/operationresults/{operationId}": {
      "get": {
        "tags": [
          "IotDpsResource"
        ],
        "operationId": "IotDpsResource_GetOperationResult",
        "description": "Gets the status of a long running operation, such as create, update or delete a provisioning service.",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Operation id corresponding to long running operation. Use this to poll for the status."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group identifier."
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of provisioning service that the operation is running on."
          },
          {
            "name": "asyncinfo",
            "in": "query",
            "description": "Async header used to poll on the status of the operation, obtained while creating the long running operation.",
            "required": true,
            "type": "string",
            "default": "true"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the long running operation.",
            "schema": {
              "type": "object",
              "description": "Result of a long running operation.",
              "properties": {
                "status": {
                  "description": "current status of a long running operation.",
                  "type": "string"
                },
                "error": {
                  "description": "Error message containing code, description and details",
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "standard error code",
                      "type": "string"
                    },
                    "message": {
                      "description": "standard error description",
                      "type": "string"
                    },
                    "details": {
                      "description": "detailed summary of error",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/skus": {
      "get": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Get the list of valid SKUs for a provisioning service.",
        "description": "Gets the list of valid SKUs and tiers for a provisioning service.",
        "operationId": "IotDpsResource_listValidSkus",
        "parameters": [
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of provisioning service."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of resource group."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the valid SKUs for this provisioning service.",
            "schema": {
              "type": "object",
              "description": "List of available SKUs.",
              "properties": {
                "value": {
                  "description": "The list of SKUs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Available SKUs of tier and units.",
                    "properties": {
                      "name": {
                        "description": "Sku name.",
                        "enum": [
                          "S1"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "IotDpsSku",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "The next link.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/generateVerificationCode": {
      "post": {
        "tags": [
          "DpsCertificate"
        ],
        "operationId": "DpsCertificate_GenerateVerificationCode",
        "description": "Generate verification code for Proof of Possession.",
        "parameters": [
          {
            "name": "certificateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The mandatory logical name of the certificate, that the provisioning service uses to access."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "name of resource group."
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of provisioning service."
          },
          {
            "name": "certificate.name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Common Name for the certificate."
          },
          {
            "name": "certificate.rawBytes",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte",
            "description": "Raw data of certificate."
          },
          {
            "name": "certificate.isVerified",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Indicates if the certificate has been verified by owner of the private key."
          },
          {
            "name": "certificate.purpose",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Description mentioning the purpose of the certificate.",
            "enum": [
              "clientAuthentication",
              "serverAuthentication"
            ],
            "x-ms-enum": {
              "name": "CertificatePurpose",
              "modelAsString": true
            }
          },
          {
            "name": "certificate.created",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Certificate creation time."
          },
          {
            "name": "certificate.lastUpdated",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Certificate last updated time."
          },
          {
            "name": "certificate.hasPrivateKey",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Indicates if the certificate contains private key."
          },
          {
            "name": "certificate.nonce",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Random number generated to indicate Proof of Possession."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Generated verification code for that certificate is returned.",
            "schema": {
              "type": "object",
              "description": "Description of the response of the verification code.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of certificate.",
                  "readOnly": true
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Request etag."
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "verificationCode": {
                      "type": "string",
                      "description": "Verification code."
                    },
                    "subject": {
                      "type": "string",
                      "description": "Certificate subject."
                    },
                    "expiry": {
                      "type": "string",
                      "description": "Code expiry."
                    },
                    "thumbprint": {
                      "type": "string",
                      "description": "Certificate thumbprint."
                    },
                    "isVerified": {
                      "type": "boolean",
                      "description": "Indicate if the certificate is verified by owner of private key."
                    },
                    "certificate": {
                      "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
                      "type": "string",
                      "format": "byte"
                    },
                    "created": {
                      "type": "string",
                      "description": "Certificate created time."
                    },
                    "updated": {
                      "type": "string",
                      "description": "Certificate updated time."
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/verify": {
      "post": {
        "tags": [
          "DpsCertificate"
        ],
        "operationId": "DpsCertificate_VerifyCertificate",
        "summary": "Verify certificate's private key possession.",
        "description": "Verifies the certificate's private key possession by providing the leaf cert issued by the verifying pre uploaded certificate.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "certificateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The mandatory logical name of the certificate, that the provisioning service uses to access."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "ETag of the certificate."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "description": "The name of the certificate",
            "schema": {
              "type": "object",
              "description": "The JSON-serialized leaf certificate",
              "properties": {
                "certificate": {
                  "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name."
          },
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Provisioning service name."
          },
          {
            "name": "certificate.name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Common Name for the certificate."
          },
          {
            "name": "certificate.rawBytes",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte",
            "description": "Raw data of certificate."
          },
          {
            "name": "certificate.isVerified",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Indicates if the certificate has been verified by owner of the private key."
          },
          {
            "name": "certificate.purpose",
            "in": "query",
            "required": false,
            "description": "Describe the purpose of the certificate.",
            "type": "string",
            "enum": [
              "clientAuthentication",
              "serverAuthentication"
            ],
            "x-ms-enum": {
              "name": "CertificatePurpose",
              "modelAsString": true
            }
          },
          {
            "name": "certificate.created",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Certificate creation time."
          },
          {
            "name": "certificate.lastUpdated",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Certificate last updated time."
          },
          {
            "name": "certificate.hasPrivateKey",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Indicates if the certificate contains private key."
          },
          {
            "name": "certificate.nonce",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Random number generated to indicate Proof of Possession."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "properties of a certificate",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean"
                    },
                    "certificate": {
                      "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
                      "type": "string",
                      "format": "byte"
                    },
                    "created": {
                      "description": "The certificate's creation date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkProvisioningServiceNameAvailability": {
      "post": {
        "tags": [
          "IotDpsResource"
        ],
        "operationId": "IotDpsResource_CheckProvisioningServiceNameAvailability",
        "summary": "Check if a provisioning service name is available.",
        "description": "Check if a provisioning service name is available. This will validate if the name is syntactically valid and if the name is usable",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "arguments",
            "in": "body",
            "required": true,
            "description": "Set the name parameter in the OperationInputs structure to the name of the provisioning service to check.",
            "schema": {
              "description": "Input values for operation results call.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the Provisioning Service to check.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the provisioning service name is available. If the name is not available, the body contains the reason.",
            "schema": {
              "type": "object",
              "description": "Description of name availability.",
              "properties": {
                "nameAvailable": {
                  "description": "specifies if a name is available or not",
                  "type": "boolean"
                },
                "reason": {
                  "description": "specifies the reason a name is unavailable",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "NameUnavailabilityReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "description": "message containing a detailed reason name is unavailable",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/listkeys": {
      "post": {
        "tags": [
          "IotDpsResource"
        ],
        "operationId": "IotDpsResource_ListKeys",
        "summary": "Get the security metadata for a provisioning service.",
        "description": "List the primary and secondary keys for a provisioning service.",
        "parameters": [
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The provisioning service name to get the shared access keys for."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "resource group name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of shared access policies, including keys, that you can use to access the provisioning service endpoints.",
            "schema": {
              "type": "object",
              "description": "List of shared access keys.",
              "properties": {
                "value": {
                  "description": "The list of shared access policies.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Description of the shared access key.",
                    "properties": {
                      "keyName": {
                        "type": "string",
                        "description": "Name of the key."
                      },
                      "primaryKey": {
                        "type": "string",
                        "description": "Primary SAS key value."
                      },
                      "secondaryKey": {
                        "type": "string",
                        "description": "Secondary SAS key value."
                      },
                      "rights": {
                        "description": "Rights that this key has.",
                        "enum": [
                          "ServiceConfig",
                          "EnrollmentRead",
                          "EnrollmentWrite",
                          "DeviceConnect",
                          "RegistrationStatusRead",
                          "RegistrationStatusWrite"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "AccessRightsDescription",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "keyName",
                      "rights"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The next link.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/keys/{keyName}/listkeys": {
      "post": {
        "tags": [
          "IotDpsResource"
        ],
        "operationId": "IotDpsResource_ListKeysForKeyName",
        "summary": "Get a shared access policy by name from a provisioning service.",
        "description": "List primary and secondary keys for a specific key name",
        "parameters": [
          {
            "name": "provisioningServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the provisioning service."
          },
          {
            "name": "keyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Logical key name to get key-values for."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the provisioning service.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized shared access policy, including keys, that you can use to access one or more provisioning service endpoints.",
            "schema": {
              "type": "object",
              "description": "Description of the shared access key.",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "Name of the key."
                },
                "primaryKey": {
                  "type": "string",
                  "description": "Primary SAS key value."
                },
                "secondaryKey": {
                  "type": "string",
                  "description": "Secondary SAS key value."
                },
                "rights": {
                  "description": "Rights that this key has.",
                  "enum": [
                    "ServiceConfig",
                    "EnrollmentRead",
                    "EnrollmentWrite",
                    "DeviceConnect",
                    "RegistrationStatusRead",
                    "RegistrationStatusWrite"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "AccessRightsDescription",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "keyName",
                "rights"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{resourceName}/privateLinkResources": {
      "get": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "List private link resources",
        "description": "List private link resources for the given provisioning service",
        "operationId": "IotDpsResource_ListPrivateLinkResources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the provisioning service.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the provisioning service.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the list of private link resources",
            "schema": {
              "description": "The available private link resources for a provisioning service",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of available private link resources for a provisioning service",
                  "type": "array",
                  "items": {
                    "description": "The group information for creating a private endpoint on a provisioning service",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "properties": {
                        "description": "The properties for a group information object",
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string",
                            "description": "The group id"
                          },
                          "requiredMembers": {
                            "description": "The required members for a specific group id",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "requiredZoneNames": {
                            "description": "The required DNS zones for a specific group id",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{resourceName}/privateLinkResources/{groupId}": {
      "get": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Get the specified private link resource",
        "description": "Get the specified private link resource for the given provisioning service",
        "operationId": "IotDpsResource_GetPrivateLinkResources",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the provisioning service.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the provisioning service.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The name of the private link resource",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the specified of private link resource",
            "schema": {
              "description": "The group information for creating a private endpoint on a provisioning service",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties for a group information object",
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "description": "The group id"
                    },
                    "requiredMembers": {
                      "description": "The required members for a specific group id",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "requiredZoneNames": {
                      "description": "The required DNS zones for a specific group id",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{resourceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "List private endpoint connections",
        "description": "List private endpoint connection properties",
        "operationId": "IotDpsResource_ListPrivateEndpointConnections",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the provisioning service.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the provisioning service.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the list of private endpoint connection properties",
            "schema": {
              "description": "The list of private endpoint connections for a provisioning service",
              "type": "array",
              "items": {
                "description": "The private endpoint connection of a provisioning service",
                "x-ms-azure-resource": true,
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource identifier."
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource name.",
                    "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource type."
                  },
                  "properties": {
                    "description": "The properties of a private endpoint connection",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The private endpoint property of a private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "The current state of a private endpoint connection",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The status of a private endpoint connection",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrivateLinkServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The description for the current state of a private endpoint connection"
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "Actions required for a private endpoint connection"
                          }
                        },
                        "required": [
                          "status",
                          "description"
                        ]
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  },
                  "systemData": {
                    "readOnly": true,
                    "description": "Metadata pertaining to creation and last modification of the resource.",
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  }
                },
                "required": [
                  "properties"
                ]
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Get private endpoint connection",
        "description": "Get private endpoint connection properties",
        "operationId": "IotDpsResource_GetPrivateEndpointConnection",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the provisioning service.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the provisioning service.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the private endpoint connection properties",
            "schema": {
              "description": "The private endpoint connection of a provisioning service",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Create or update private endpoint connection",
        "description": "Create or update the status of a private endpoint connection with the specified name",
        "operationId": "IotDpsResource_CreateOrUpdatePrivateEndpointConnection",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the provisioning service.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the provisioning service.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The private endpoint connection with updated properties",
            "required": true,
            "schema": {
              "description": "The private endpoint connection of a provisioning service",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the update operation.",
            "schema": {
              "description": "The private endpoint connection of a provisioning service",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 201 (OK).",
            "schema": {
              "description": "The private endpoint connection of a provisioning service",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "IotDpsResource"
        ],
        "summary": "Delete private endpoint connection",
        "description": "Delete private endpoint connection with the specified name",
        "operationId": "IotDpsResource_DeletePrivateEndpointConnection",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the provisioning service.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the provisioning service.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the delete operation.",
            "schema": {
              "description": "The private endpoint connection of a provisioning service",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "202": {
            "description": "This is a long running operation. The operation returns a 202 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation.",
            "schema": {
              "description": "The private endpoint connection of a provisioning service",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "Operation Status Location URI"
              },
              "Location": {
                "type": "string",
                "description": "Operation Status Location URI"
              },
              "Retry-After": {
                "description": "Retry After",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "PrivateEndpoint does not exist."
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get the non-security related metadata of an IoT hub",
        "description": "Get the non-security related metadata of an IoT hub.",
        "operationId": "IotHubResource_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all the non-security properties of the IoT hub. Security-related properties are set to null.",
            "schema": {
              "description": "The description of the IoT hub.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "IotHub properties",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                      "type": "array",
                      "items": {
                        "description": "The properties of an IoT hub shared access policy.",
                        "type": "object",
                        "properties": {
                          "keyName": {
                            "description": "The name of the shared access policy.",
                            "type": "string"
                          },
                          "primaryKey": {
                            "description": "The primary key.",
                            "type": "string"
                          },
                          "secondaryKey": {
                            "description": "The secondary key.",
                            "type": "string"
                          },
                          "rights": {
                            "description": "The permissions assigned to the shared access policy.",
                            "enum": [
                              "RegistryRead",
                              "RegistryWrite",
                              "ServiceConnect",
                              "DeviceConnect",
                              "RegistryRead, RegistryWrite",
                              "RegistryRead, ServiceConnect",
                              "RegistryRead, DeviceConnect",
                              "RegistryWrite, ServiceConnect",
                              "RegistryWrite, DeviceConnect",
                              "ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect",
                              "RegistryRead, RegistryWrite, DeviceConnect",
                              "RegistryRead, ServiceConnect, DeviceConnect",
                              "RegistryWrite, ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRights",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      },
                      "x-ms-identifiers": [
                        "keyName"
                      ]
                    },
                    "disableLocalAuth": {
                      "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableDeviceSAS": {
                      "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableModuleSAS": {
                      "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                      "type": "boolean"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                        "type": "string"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for the IoT hub.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      },
                      "x-ms-identifiers": [
                        "filterName"
                      ]
                    },
                    "networkRuleSets": {
                      "description": "Network Rule Set Properties of IotHub",
                      "type": "object",
                      "properties": {
                        "defaultAction": {
                          "type": "string",
                          "description": "Default Action for Network Rule Set",
                          "enum": [
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultAction",
                            "modelAsString": true
                          },
                          "default": "Deny"
                        },
                        "applyToBuiltInEventHubEndpoint": {
                          "type": "boolean",
                          "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                        },
                        "ipRules": {
                          "type": "array",
                          "items": {
                            "description": "IP Rule to be applied as part of Network Rule Set",
                            "type": "object",
                            "properties": {
                              "filterName": {
                                "type": "string",
                                "description": "Name of the IP filter rule."
                              },
                              "action": {
                                "type": "string",
                                "description": "IP Filter Action",
                                "enum": [
                                  "Allow"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkRuleIPAction",
                                  "modelAsString": true
                                },
                                "default": "Allow"
                              },
                              "ipMask": {
                                "type": "string",
                                "description": "A string that contains the IP address range in CIDR notation for the rule."
                              }
                            },
                            "required": [
                              "filterName",
                              "ipMask"
                            ]
                          },
                          "x-ms-identifiers": [
                            "filterName"
                          ],
                          "description": "List of IP Rules"
                        }
                      },
                      "required": [
                        "applyToBuiltInEventHubEndpoint",
                        "ipRules"
                      ]
                    },
                    "minTlsVersion": {
                      "type": "string",
                      "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of an IotHub",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name."
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The hub state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "hostName": {
                      "description": "The name of the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventHubEndpoints": {
                      "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                        "type": "object",
                        "properties": {
                          "retentionTimeInDays": {
                            "format": "int64",
                            "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                            "type": "integer"
                          },
                          "partitionCount": {
                            "format": "int32",
                            "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                            "type": "integer"
                          },
                          "partitionIds": {
                            "description": "The partition ids in the Event Hub-compatible endpoint.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "path": {
                            "description": "The Event Hub-compatible name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "endpoint": {
                            "description": "The Event Hub-compatible endpoint.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "routing": {
                      "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                      "type": "object",
                      "properties": {
                        "endpoints": {
                          "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                          "type": "object",
                          "properties": {
                            "serviceBusQueues": {
                              "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus queue endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus queue endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus queue endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus queue endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus queue endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "serviceBusTopics": {
                              "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus topic endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus topic endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus topic",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus topic endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus topic endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus topic endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "eventHubs": {
                              "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to an event hub endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the event hub endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the event hub endpoint. ",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Event hub name on the event hub namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the event hub endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing event hub endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the event hub endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the event hub endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "storageContainers": {
                              "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a storage container endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the storage container endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the storage account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the storage endpoint. It must include the protocol https://",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the storage endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing storage endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the storage account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the storage account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of storage container in the storage account.",
                                    "type": "string"
                                  },
                                  "fileNameFormat": {
                                    "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                    "type": "string"
                                  },
                                  "batchFrequencyInSeconds": {
                                    "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 720,
                                    "minimum": 60
                                  },
                                  "maxChunkSizeInBytes": {
                                    "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 524288000,
                                    "minimum": 10485760
                                  },
                                  "encoding": {
                                    "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                    "type": "string",
                                    "enum": [
                                      "Avro",
                                      "AvroDeflate",
                                      "JSON"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "containerName"
                                ]
                              }
                            },
                            "cosmosDBSqlContainers": {
                              "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a cosmos DB sql container endpoint.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "id": {
                                    "readOnly": true,
                                    "description": "Id of the cosmos DB sql container endpoint",
                                    "type": "string"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the cosmos DB account. It must include the protocol https://",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "primaryKey": {
                                    "description": "The primary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "secondaryKey": {
                                    "description": "The secondary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "databaseName": {
                                    "description": "The name of the cosmos DB database in the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                    "type": "string"
                                  },
                                  "partitionKeyName": {
                                    "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                    "type": "string"
                                  },
                                  "partitionKeyTemplate": {
                                    "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "endpointUri",
                                  "databaseName",
                                  "containerName"
                                ]
                              }
                            }
                          }
                        },
                        "routes": {
                          "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                          "type": "array",
                          "items": {
                            "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9-._]{1,64}$"
                              },
                              "source": {
                                "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                                "enum": [
                                  "Invalid",
                                  "DeviceMessages",
                                  "TwinChangeEvents",
                                  "DeviceLifecycleEvents",
                                  "DeviceJobLifecycleEvents",
                                  "DeviceConnectionStateEvents"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "RoutingSource",
                                  "modelAsString": true
                                }
                              },
                              "condition": {
                                "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                                "minItems": 1,
                                "maxItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isEnabled": {
                                "description": "Used to specify whether a route is enabled.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "endpointNames",
                              "source",
                              "isEnabled"
                            ]
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "fallbackRoute": {
                          "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                              "enum": [
                                "DeviceMessages"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingSource",
                                "modelAsString": true
                              }
                            },
                            "condition": {
                              "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                              "type": "string"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                              "minItems": 1,
                              "maxItems": 1,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "isEnabled": {
                              "description": "Used to specify whether the fallback route is enabled.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "endpointNames",
                            "source",
                            "isEnabled"
                          ]
                        },
                        "enrichments": {
                          "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                          "type": "array",
                          "items": {
                            "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The key or name for the enrichment property.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value for the enrichment property.",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints for which the enrichment is applied to the message.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "value",
                              "endpointNames"
                            ]
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        }
                      }
                    },
                    "storageEndpoints": {
                      "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the Azure Storage endpoint for file upload.",
                        "type": "object",
                        "properties": {
                          "sasTtlAsIso8601": {
                            "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                            "type": "string",
                            "format": "duration"
                          },
                          "connectionString": {
                            "description": "The connection string for the Azure Storage account to which files are uploaded.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Specifies authentication type being used for connecting to the storage account.",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AuthenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of storage endpoint for file upload.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          }
                        },
                        "required": [
                          "connectionString",
                          "containerName"
                        ]
                      }
                    },
                    "messagingEndpoints": {
                      "description": "The messaging endpoint properties for the file upload notification queue.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the messaging endpoints used by this IoT hub.",
                        "type": "object",
                        "properties": {
                          "lockDurationAsIso8601": {
                            "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "ttlAsIso8601": {
                            "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "maxDeliveryCount": {
                            "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        }
                      }
                    },
                    "enableFileUploadNotifications": {
                      "description": "If True, file upload notifications are enabled.",
                      "type": "boolean"
                    },
                    "cloudToDevice": {
                      "description": "The IoT hub cloud-to-device messaging properties.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryCount": {
                          "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 100
                        },
                        "defaultTtlAsIso8601": {
                          "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "type": "string",
                          "format": "duration"
                        },
                        "feedback": {
                          "description": "The properties of the feedback queue for cloud-to-device messages.",
                          "type": "object",
                          "properties": {
                            "lockDurationAsIso8601": {
                              "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "ttlAsIso8601": {
                              "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "format": "int32",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    },
                    "comments": {
                      "description": "IoT hub comments.",
                      "type": "string"
                    },
                    "features": {
                      "description": "The capabilities and features enabled for the IoT hub.",
                      "enum": [
                        "None",
                        "DeviceManagement"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Capabilities",
                        "modelAsString": true
                      }
                    },
                    "locations": {
                      "description": "Primary and secondary location for iot hub",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Public representation of one of the locations where a resource is provisioned.",
                        "type": "object",
                        "properties": {
                          "location": {
                            "description": "The name of the Azure region",
                            "type": "string"
                          },
                          "role": {
                            "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                            "enum": [
                              "primary",
                              "secondary"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubReplicaRoleType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "location"
                      ]
                    },
                    "enableDataResidency": {
                      "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                      "type": "boolean"
                    }
                  }
                },
                "sku": {
                  "description": "IotHub SKU info",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "F1",
                        "S1",
                        "S2",
                        "S3",
                        "B1",
                        "B2",
                        "B3"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotHubSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "description": "The billing tier for the IoT hub.",
                      "enum": [
                        "Free",
                        "Standard",
                        "Basic"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "IotHubSkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int64",
                      "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed identities for the IotHub.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "Principal Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "Tenant Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "PUT"
        ],
        "summary": "Create or update the metadata of an IoT hub.",
        "description": "Create or update the metadata of an Iot hub. The usual pattern to modify a property is to retrieve the IoT hub metadata and security metadata, and then combine them with the modified values in a new body to update the IoT hub. If certain properties are missing in the JSON, updating IoT Hub may cause these values to fallback to default, which may lead to unexpected behavior.",
        "operationId": "IotHubResource_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "iotHubDescription",
            "in": "body",
            "description": "The IoT hub metadata and security metadata.",
            "required": true,
            "schema": {
              "description": "The description of the IoT hub.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "IotHub properties",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                      "type": "array",
                      "items": {
                        "description": "The properties of an IoT hub shared access policy.",
                        "type": "object",
                        "properties": {
                          "keyName": {
                            "description": "The name of the shared access policy.",
                            "type": "string"
                          },
                          "primaryKey": {
                            "description": "The primary key.",
                            "type": "string"
                          },
                          "secondaryKey": {
                            "description": "The secondary key.",
                            "type": "string"
                          },
                          "rights": {
                            "description": "The permissions assigned to the shared access policy.",
                            "enum": [
                              "RegistryRead",
                              "RegistryWrite",
                              "ServiceConnect",
                              "DeviceConnect",
                              "RegistryRead, RegistryWrite",
                              "RegistryRead, ServiceConnect",
                              "RegistryRead, DeviceConnect",
                              "RegistryWrite, ServiceConnect",
                              "RegistryWrite, DeviceConnect",
                              "ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect",
                              "RegistryRead, RegistryWrite, DeviceConnect",
                              "RegistryRead, ServiceConnect, DeviceConnect",
                              "RegistryWrite, ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRights",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      },
                      "x-ms-identifiers": [
                        "keyName"
                      ]
                    },
                    "disableLocalAuth": {
                      "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableDeviceSAS": {
                      "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableModuleSAS": {
                      "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                      "type": "boolean"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                        "type": "string"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for the IoT hub.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      },
                      "x-ms-identifiers": [
                        "filterName"
                      ]
                    },
                    "networkRuleSets": {
                      "description": "Network Rule Set Properties of IotHub",
                      "type": "object",
                      "properties": {
                        "defaultAction": {
                          "type": "string",
                          "description": "Default Action for Network Rule Set",
                          "enum": [
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultAction",
                            "modelAsString": true
                          },
                          "default": "Deny"
                        },
                        "applyToBuiltInEventHubEndpoint": {
                          "type": "boolean",
                          "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                        },
                        "ipRules": {
                          "type": "array",
                          "items": {
                            "description": "IP Rule to be applied as part of Network Rule Set",
                            "type": "object",
                            "properties": {
                              "filterName": {
                                "type": "string",
                                "description": "Name of the IP filter rule."
                              },
                              "action": {
                                "type": "string",
                                "description": "IP Filter Action",
                                "enum": [
                                  "Allow"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkRuleIPAction",
                                  "modelAsString": true
                                },
                                "default": "Allow"
                              },
                              "ipMask": {
                                "type": "string",
                                "description": "A string that contains the IP address range in CIDR notation for the rule."
                              }
                            },
                            "required": [
                              "filterName",
                              "ipMask"
                            ]
                          },
                          "x-ms-identifiers": [
                            "filterName"
                          ],
                          "description": "List of IP Rules"
                        }
                      },
                      "required": [
                        "applyToBuiltInEventHubEndpoint",
                        "ipRules"
                      ]
                    },
                    "minTlsVersion": {
                      "type": "string",
                      "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of an IotHub",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name."
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The hub state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "hostName": {
                      "description": "The name of the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventHubEndpoints": {
                      "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                        "type": "object",
                        "properties": {
                          "retentionTimeInDays": {
                            "format": "int64",
                            "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                            "type": "integer"
                          },
                          "partitionCount": {
                            "format": "int32",
                            "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                            "type": "integer"
                          },
                          "partitionIds": {
                            "description": "The partition ids in the Event Hub-compatible endpoint.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "path": {
                            "description": "The Event Hub-compatible name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "endpoint": {
                            "description": "The Event Hub-compatible endpoint.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "routing": {
                      "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                      "type": "object",
                      "properties": {
                        "endpoints": {
                          "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                          "type": "object",
                          "properties": {
                            "serviceBusQueues": {
                              "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus queue endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus queue endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus queue endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus queue endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus queue endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "serviceBusTopics": {
                              "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus topic endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus topic endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus topic",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus topic endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus topic endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus topic endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "eventHubs": {
                              "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to an event hub endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the event hub endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the event hub endpoint. ",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Event hub name on the event hub namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the event hub endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing event hub endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the event hub endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the event hub endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "storageContainers": {
                              "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a storage container endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the storage container endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the storage account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the storage endpoint. It must include the protocol https://",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the storage endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing storage endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the storage account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the storage account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of storage container in the storage account.",
                                    "type": "string"
                                  },
                                  "fileNameFormat": {
                                    "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                    "type": "string"
                                  },
                                  "batchFrequencyInSeconds": {
                                    "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 720,
                                    "minimum": 60
                                  },
                                  "maxChunkSizeInBytes": {
                                    "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 524288000,
                                    "minimum": 10485760
                                  },
                                  "encoding": {
                                    "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                    "type": "string",
                                    "enum": [
                                      "Avro",
                                      "AvroDeflate",
                                      "JSON"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "containerName"
                                ]
                              }
                            },
                            "cosmosDBSqlContainers": {
                              "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a cosmos DB sql container endpoint.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "id": {
                                    "readOnly": true,
                                    "description": "Id of the cosmos DB sql container endpoint",
                                    "type": "string"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the cosmos DB account. It must include the protocol https://",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "primaryKey": {
                                    "description": "The primary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "secondaryKey": {
                                    "description": "The secondary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "databaseName": {
                                    "description": "The name of the cosmos DB database in the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                    "type": "string"
                                  },
                                  "partitionKeyName": {
                                    "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                    "type": "string"
                                  },
                                  "partitionKeyTemplate": {
                                    "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "endpointUri",
                                  "databaseName",
                                  "containerName"
                                ]
                              }
                            }
                          }
                        },
                        "routes": {
                          "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                          "type": "array",
                          "items": {
                            "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9-._]{1,64}$"
                              },
                              "source": {
                                "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                                "enum": [
                                  "Invalid",
                                  "DeviceMessages",
                                  "TwinChangeEvents",
                                  "DeviceLifecycleEvents",
                                  "DeviceJobLifecycleEvents",
                                  "DeviceConnectionStateEvents"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "RoutingSource",
                                  "modelAsString": true
                                }
                              },
                              "condition": {
                                "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                                "minItems": 1,
                                "maxItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isEnabled": {
                                "description": "Used to specify whether a route is enabled.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "endpointNames",
                              "source",
                              "isEnabled"
                            ]
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "fallbackRoute": {
                          "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                              "enum": [
                                "DeviceMessages"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingSource",
                                "modelAsString": true
                              }
                            },
                            "condition": {
                              "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                              "type": "string"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                              "minItems": 1,
                              "maxItems": 1,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "isEnabled": {
                              "description": "Used to specify whether the fallback route is enabled.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "endpointNames",
                            "source",
                            "isEnabled"
                          ]
                        },
                        "enrichments": {
                          "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                          "type": "array",
                          "items": {
                            "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The key or name for the enrichment property.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value for the enrichment property.",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints for which the enrichment is applied to the message.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "value",
                              "endpointNames"
                            ]
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        }
                      }
                    },
                    "storageEndpoints": {
                      "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the Azure Storage endpoint for file upload.",
                        "type": "object",
                        "properties": {
                          "sasTtlAsIso8601": {
                            "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                            "type": "string",
                            "format": "duration"
                          },
                          "connectionString": {
                            "description": "The connection string for the Azure Storage account to which files are uploaded.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Specifies authentication type being used for connecting to the storage account.",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AuthenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of storage endpoint for file upload.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          }
                        },
                        "required": [
                          "connectionString",
                          "containerName"
                        ]
                      }
                    },
                    "messagingEndpoints": {
                      "description": "The messaging endpoint properties for the file upload notification queue.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the messaging endpoints used by this IoT hub.",
                        "type": "object",
                        "properties": {
                          "lockDurationAsIso8601": {
                            "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "ttlAsIso8601": {
                            "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "maxDeliveryCount": {
                            "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        }
                      }
                    },
                    "enableFileUploadNotifications": {
                      "description": "If True, file upload notifications are enabled.",
                      "type": "boolean"
                    },
                    "cloudToDevice": {
                      "description": "The IoT hub cloud-to-device messaging properties.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryCount": {
                          "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 100
                        },
                        "defaultTtlAsIso8601": {
                          "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "type": "string",
                          "format": "duration"
                        },
                        "feedback": {
                          "description": "The properties of the feedback queue for cloud-to-device messages.",
                          "type": "object",
                          "properties": {
                            "lockDurationAsIso8601": {
                              "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "ttlAsIso8601": {
                              "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "format": "int32",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    },
                    "comments": {
                      "description": "IoT hub comments.",
                      "type": "string"
                    },
                    "features": {
                      "description": "The capabilities and features enabled for the IoT hub.",
                      "enum": [
                        "None",
                        "DeviceManagement"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Capabilities",
                        "modelAsString": true
                      }
                    },
                    "locations": {
                      "description": "Primary and secondary location for iot hub",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Public representation of one of the locations where a resource is provisioned.",
                        "type": "object",
                        "properties": {
                          "location": {
                            "description": "The name of the Azure region",
                            "type": "string"
                          },
                          "role": {
                            "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                            "enum": [
                              "primary",
                              "secondary"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubReplicaRoleType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "location"
                      ]
                    },
                    "enableDataResidency": {
                      "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                      "type": "boolean"
                    }
                  }
                },
                "sku": {
                  "description": "IotHub SKU info",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "F1",
                        "S1",
                        "S2",
                        "S3",
                        "B1",
                        "B2",
                        "B3"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotHubSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "description": "The billing tier for the IoT hub.",
                      "enum": [
                        "Free",
                        "Standard",
                        "Basic"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "IotHubSkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int64",
                      "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed identities for the IotHub.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "Principal Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "Tenant Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the IoT Hub. Do not specify for creating a brand new IoT Hub. Required to update an existing IoT Hub."
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state.",
            "schema": {
              "description": "The description of the IoT hub.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "IotHub properties",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                      "type": "array",
                      "items": {
                        "description": "The properties of an IoT hub shared access policy.",
                        "type": "object",
                        "properties": {
                          "keyName": {
                            "description": "The name of the shared access policy.",
                            "type": "string"
                          },
                          "primaryKey": {
                            "description": "The primary key.",
                            "type": "string"
                          },
                          "secondaryKey": {
                            "description": "The secondary key.",
                            "type": "string"
                          },
                          "rights": {
                            "description": "The permissions assigned to the shared access policy.",
                            "enum": [
                              "RegistryRead",
                              "RegistryWrite",
                              "ServiceConnect",
                              "DeviceConnect",
                              "RegistryRead, RegistryWrite",
                              "RegistryRead, ServiceConnect",
                              "RegistryRead, DeviceConnect",
                              "RegistryWrite, ServiceConnect",
                              "RegistryWrite, DeviceConnect",
                              "ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect",
                              "RegistryRead, RegistryWrite, DeviceConnect",
                              "RegistryRead, ServiceConnect, DeviceConnect",
                              "RegistryWrite, ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRights",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      },
                      "x-ms-identifiers": [
                        "keyName"
                      ]
                    },
                    "disableLocalAuth": {
                      "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableDeviceSAS": {
                      "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableModuleSAS": {
                      "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                      "type": "boolean"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                        "type": "string"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for the IoT hub.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      },
                      "x-ms-identifiers": [
                        "filterName"
                      ]
                    },
                    "networkRuleSets": {
                      "description": "Network Rule Set Properties of IotHub",
                      "type": "object",
                      "properties": {
                        "defaultAction": {
                          "type": "string",
                          "description": "Default Action for Network Rule Set",
                          "enum": [
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultAction",
                            "modelAsString": true
                          },
                          "default": "Deny"
                        },
                        "applyToBuiltInEventHubEndpoint": {
                          "type": "boolean",
                          "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                        },
                        "ipRules": {
                          "type": "array",
                          "items": {
                            "description": "IP Rule to be applied as part of Network Rule Set",
                            "type": "object",
                            "properties": {
                              "filterName": {
                                "type": "string",
                                "description": "Name of the IP filter rule."
                              },
                              "action": {
                                "type": "string",
                                "description": "IP Filter Action",
                                "enum": [
                                  "Allow"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkRuleIPAction",
                                  "modelAsString": true
                                },
                                "default": "Allow"
                              },
                              "ipMask": {
                                "type": "string",
                                "description": "A string that contains the IP address range in CIDR notation for the rule."
                              }
                            },
                            "required": [
                              "filterName",
                              "ipMask"
                            ]
                          },
                          "x-ms-identifiers": [
                            "filterName"
                          ],
                          "description": "List of IP Rules"
                        }
                      },
                      "required": [
                        "applyToBuiltInEventHubEndpoint",
                        "ipRules"
                      ]
                    },
                    "minTlsVersion": {
                      "type": "string",
                      "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of an IotHub",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name."
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The hub state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "hostName": {
                      "description": "The name of the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventHubEndpoints": {
                      "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                        "type": "object",
                        "properties": {
                          "retentionTimeInDays": {
                            "format": "int64",
                            "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                            "type": "integer"
                          },
                          "partitionCount": {
                            "format": "int32",
                            "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                            "type": "integer"
                          },
                          "partitionIds": {
                            "description": "The partition ids in the Event Hub-compatible endpoint.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "path": {
                            "description": "The Event Hub-compatible name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "endpoint": {
                            "description": "The Event Hub-compatible endpoint.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "routing": {
                      "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                      "type": "object",
                      "properties": {
                        "endpoints": {
                          "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                          "type": "object",
                          "properties": {
                            "serviceBusQueues": {
                              "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus queue endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus queue endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus queue endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus queue endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus queue endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "serviceBusTopics": {
                              "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus topic endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus topic endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus topic",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus topic endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus topic endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus topic endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "eventHubs": {
                              "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to an event hub endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the event hub endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the event hub endpoint. ",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Event hub name on the event hub namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the event hub endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing event hub endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the event hub endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the event hub endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "storageContainers": {
                              "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a storage container endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the storage container endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the storage account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the storage endpoint. It must include the protocol https://",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the storage endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing storage endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the storage account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the storage account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of storage container in the storage account.",
                                    "type": "string"
                                  },
                                  "fileNameFormat": {
                                    "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                    "type": "string"
                                  },
                                  "batchFrequencyInSeconds": {
                                    "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 720,
                                    "minimum": 60
                                  },
                                  "maxChunkSizeInBytes": {
                                    "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 524288000,
                                    "minimum": 10485760
                                  },
                                  "encoding": {
                                    "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                    "type": "string",
                                    "enum": [
                                      "Avro",
                                      "AvroDeflate",
                                      "JSON"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "containerName"
                                ]
                              }
                            },
                            "cosmosDBSqlContainers": {
                              "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a cosmos DB sql container endpoint.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "id": {
                                    "readOnly": true,
                                    "description": "Id of the cosmos DB sql container endpoint",
                                    "type": "string"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the cosmos DB account. It must include the protocol https://",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "primaryKey": {
                                    "description": "The primary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "secondaryKey": {
                                    "description": "The secondary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "databaseName": {
                                    "description": "The name of the cosmos DB database in the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                    "type": "string"
                                  },
                                  "partitionKeyName": {
                                    "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                    "type": "string"
                                  },
                                  "partitionKeyTemplate": {
                                    "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "endpointUri",
                                  "databaseName",
                                  "containerName"
                                ]
                              }
                            }
                          }
                        },
                        "routes": {
                          "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                          "type": "array",
                          "items": {
                            "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9-._]{1,64}$"
                              },
                              "source": {
                                "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                                "enum": [
                                  "Invalid",
                                  "DeviceMessages",
                                  "TwinChangeEvents",
                                  "DeviceLifecycleEvents",
                                  "DeviceJobLifecycleEvents",
                                  "DeviceConnectionStateEvents"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "RoutingSource",
                                  "modelAsString": true
                                }
                              },
                              "condition": {
                                "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                                "minItems": 1,
                                "maxItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isEnabled": {
                                "description": "Used to specify whether a route is enabled.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "endpointNames",
                              "source",
                              "isEnabled"
                            ]
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "fallbackRoute": {
                          "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                              "enum": [
                                "DeviceMessages"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingSource",
                                "modelAsString": true
                              }
                            },
                            "condition": {
                              "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                              "type": "string"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                              "minItems": 1,
                              "maxItems": 1,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "isEnabled": {
                              "description": "Used to specify whether the fallback route is enabled.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "endpointNames",
                            "source",
                            "isEnabled"
                          ]
                        },
                        "enrichments": {
                          "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                          "type": "array",
                          "items": {
                            "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The key or name for the enrichment property.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value for the enrichment property.",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints for which the enrichment is applied to the message.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "value",
                              "endpointNames"
                            ]
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        }
                      }
                    },
                    "storageEndpoints": {
                      "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the Azure Storage endpoint for file upload.",
                        "type": "object",
                        "properties": {
                          "sasTtlAsIso8601": {
                            "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                            "type": "string",
                            "format": "duration"
                          },
                          "connectionString": {
                            "description": "The connection string for the Azure Storage account to which files are uploaded.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Specifies authentication type being used for connecting to the storage account.",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AuthenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of storage endpoint for file upload.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          }
                        },
                        "required": [
                          "connectionString",
                          "containerName"
                        ]
                      }
                    },
                    "messagingEndpoints": {
                      "description": "The messaging endpoint properties for the file upload notification queue.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the messaging endpoints used by this IoT hub.",
                        "type": "object",
                        "properties": {
                          "lockDurationAsIso8601": {
                            "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "ttlAsIso8601": {
                            "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "maxDeliveryCount": {
                            "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        }
                      }
                    },
                    "enableFileUploadNotifications": {
                      "description": "If True, file upload notifications are enabled.",
                      "type": "boolean"
                    },
                    "cloudToDevice": {
                      "description": "The IoT hub cloud-to-device messaging properties.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryCount": {
                          "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 100
                        },
                        "defaultTtlAsIso8601": {
                          "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "type": "string",
                          "format": "duration"
                        },
                        "feedback": {
                          "description": "The properties of the feedback queue for cloud-to-device messages.",
                          "type": "object",
                          "properties": {
                            "lockDurationAsIso8601": {
                              "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "ttlAsIso8601": {
                              "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "format": "int32",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    },
                    "comments": {
                      "description": "IoT hub comments.",
                      "type": "string"
                    },
                    "features": {
                      "description": "The capabilities and features enabled for the IoT hub.",
                      "enum": [
                        "None",
                        "DeviceManagement"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Capabilities",
                        "modelAsString": true
                      }
                    },
                    "locations": {
                      "description": "Primary and secondary location for iot hub",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Public representation of one of the locations where a resource is provisioned.",
                        "type": "object",
                        "properties": {
                          "location": {
                            "description": "The name of the Azure region",
                            "type": "string"
                          },
                          "role": {
                            "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                            "enum": [
                              "primary",
                              "secondary"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubReplicaRoleType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "location"
                      ]
                    },
                    "enableDataResidency": {
                      "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                      "type": "boolean"
                    }
                  }
                },
                "sku": {
                  "description": "IotHub SKU info",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "F1",
                        "S1",
                        "S2",
                        "S3",
                        "B1",
                        "B2",
                        "B3"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotHubSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "description": "The billing tier for the IoT hub.",
                      "enum": [
                        "Free",
                        "Standard",
                        "Basic"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "IotHubSkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int64",
                      "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed identities for the IotHub.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "Principal Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "Tenant Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          "201": {
            "description": "This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 201 (OK).",
            "schema": {
              "description": "The description of the IoT hub.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "IotHub properties",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                      "type": "array",
                      "items": {
                        "description": "The properties of an IoT hub shared access policy.",
                        "type": "object",
                        "properties": {
                          "keyName": {
                            "description": "The name of the shared access policy.",
                            "type": "string"
                          },
                          "primaryKey": {
                            "description": "The primary key.",
                            "type": "string"
                          },
                          "secondaryKey": {
                            "description": "The secondary key.",
                            "type": "string"
                          },
                          "rights": {
                            "description": "The permissions assigned to the shared access policy.",
                            "enum": [
                              "RegistryRead",
                              "RegistryWrite",
                              "ServiceConnect",
                              "DeviceConnect",
                              "RegistryRead, RegistryWrite",
                              "RegistryRead, ServiceConnect",
                              "RegistryRead, DeviceConnect",
                              "RegistryWrite, ServiceConnect",
                              "RegistryWrite, DeviceConnect",
                              "ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect",
                              "RegistryRead, RegistryWrite, DeviceConnect",
                              "RegistryRead, ServiceConnect, DeviceConnect",
                              "RegistryWrite, ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRights",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      },
                      "x-ms-identifiers": [
                        "keyName"
                      ]
                    },
                    "disableLocalAuth": {
                      "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableDeviceSAS": {
                      "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableModuleSAS": {
                      "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                      "type": "boolean"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                        "type": "string"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for the IoT hub.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      },
                      "x-ms-identifiers": [
                        "filterName"
                      ]
                    },
                    "networkRuleSets": {
                      "description": "Network Rule Set Properties of IotHub",
                      "type": "object",
                      "properties": {
                        "defaultAction": {
                          "type": "string",
                          "description": "Default Action for Network Rule Set",
                          "enum": [
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultAction",
                            "modelAsString": true
                          },
                          "default": "Deny"
                        },
                        "applyToBuiltInEventHubEndpoint": {
                          "type": "boolean",
                          "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                        },
                        "ipRules": {
                          "type": "array",
                          "items": {
                            "description": "IP Rule to be applied as part of Network Rule Set",
                            "type": "object",
                            "properties": {
                              "filterName": {
                                "type": "string",
                                "description": "Name of the IP filter rule."
                              },
                              "action": {
                                "type": "string",
                                "description": "IP Filter Action",
                                "enum": [
                                  "Allow"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkRuleIPAction",
                                  "modelAsString": true
                                },
                                "default": "Allow"
                              },
                              "ipMask": {
                                "type": "string",
                                "description": "A string that contains the IP address range in CIDR notation for the rule."
                              }
                            },
                            "required": [
                              "filterName",
                              "ipMask"
                            ]
                          },
                          "x-ms-identifiers": [
                            "filterName"
                          ],
                          "description": "List of IP Rules"
                        }
                      },
                      "required": [
                        "applyToBuiltInEventHubEndpoint",
                        "ipRules"
                      ]
                    },
                    "minTlsVersion": {
                      "type": "string",
                      "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of an IotHub",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name."
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The hub state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "hostName": {
                      "description": "The name of the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventHubEndpoints": {
                      "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                        "type": "object",
                        "properties": {
                          "retentionTimeInDays": {
                            "format": "int64",
                            "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                            "type": "integer"
                          },
                          "partitionCount": {
                            "format": "int32",
                            "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                            "type": "integer"
                          },
                          "partitionIds": {
                            "description": "The partition ids in the Event Hub-compatible endpoint.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "path": {
                            "description": "The Event Hub-compatible name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "endpoint": {
                            "description": "The Event Hub-compatible endpoint.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "routing": {
                      "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                      "type": "object",
                      "properties": {
                        "endpoints": {
                          "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                          "type": "object",
                          "properties": {
                            "serviceBusQueues": {
                              "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus queue endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus queue endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus queue endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus queue endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus queue endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "serviceBusTopics": {
                              "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus topic endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus topic endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus topic",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus topic endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus topic endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus topic endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "eventHubs": {
                              "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to an event hub endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the event hub endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the event hub endpoint. ",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Event hub name on the event hub namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the event hub endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing event hub endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the event hub endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the event hub endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "storageContainers": {
                              "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a storage container endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the storage container endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the storage account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the storage endpoint. It must include the protocol https://",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the storage endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing storage endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the storage account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the storage account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of storage container in the storage account.",
                                    "type": "string"
                                  },
                                  "fileNameFormat": {
                                    "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                    "type": "string"
                                  },
                                  "batchFrequencyInSeconds": {
                                    "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 720,
                                    "minimum": 60
                                  },
                                  "maxChunkSizeInBytes": {
                                    "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 524288000,
                                    "minimum": 10485760
                                  },
                                  "encoding": {
                                    "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                    "type": "string",
                                    "enum": [
                                      "Avro",
                                      "AvroDeflate",
                                      "JSON"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "containerName"
                                ]
                              }
                            },
                            "cosmosDBSqlContainers": {
                              "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a cosmos DB sql container endpoint.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "id": {
                                    "readOnly": true,
                                    "description": "Id of the cosmos DB sql container endpoint",
                                    "type": "string"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the cosmos DB account. It must include the protocol https://",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "primaryKey": {
                                    "description": "The primary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "secondaryKey": {
                                    "description": "The secondary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "databaseName": {
                                    "description": "The name of the cosmos DB database in the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                    "type": "string"
                                  },
                                  "partitionKeyName": {
                                    "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                    "type": "string"
                                  },
                                  "partitionKeyTemplate": {
                                    "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "endpointUri",
                                  "databaseName",
                                  "containerName"
                                ]
                              }
                            }
                          }
                        },
                        "routes": {
                          "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                          "type": "array",
                          "items": {
                            "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9-._]{1,64}$"
                              },
                              "source": {
                                "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                                "enum": [
                                  "Invalid",
                                  "DeviceMessages",
                                  "TwinChangeEvents",
                                  "DeviceLifecycleEvents",
                                  "DeviceJobLifecycleEvents",
                                  "DeviceConnectionStateEvents"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "RoutingSource",
                                  "modelAsString": true
                                }
                              },
                              "condition": {
                                "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                                "minItems": 1,
                                "maxItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isEnabled": {
                                "description": "Used to specify whether a route is enabled.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "endpointNames",
                              "source",
                              "isEnabled"
                            ]
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "fallbackRoute": {
                          "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                              "enum": [
                                "DeviceMessages"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingSource",
                                "modelAsString": true
                              }
                            },
                            "condition": {
                              "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                              "type": "string"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                              "minItems": 1,
                              "maxItems": 1,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "isEnabled": {
                              "description": "Used to specify whether the fallback route is enabled.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "endpointNames",
                            "source",
                            "isEnabled"
                          ]
                        },
                        "enrichments": {
                          "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                          "type": "array",
                          "items": {
                            "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The key or name for the enrichment property.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value for the enrichment property.",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints for which the enrichment is applied to the message.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "value",
                              "endpointNames"
                            ]
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        }
                      }
                    },
                    "storageEndpoints": {
                      "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the Azure Storage endpoint for file upload.",
                        "type": "object",
                        "properties": {
                          "sasTtlAsIso8601": {
                            "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                            "type": "string",
                            "format": "duration"
                          },
                          "connectionString": {
                            "description": "The connection string for the Azure Storage account to which files are uploaded.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Specifies authentication type being used for connecting to the storage account.",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AuthenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of storage endpoint for file upload.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          }
                        },
                        "required": [
                          "connectionString",
                          "containerName"
                        ]
                      }
                    },
                    "messagingEndpoints": {
                      "description": "The messaging endpoint properties for the file upload notification queue.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the messaging endpoints used by this IoT hub.",
                        "type": "object",
                        "properties": {
                          "lockDurationAsIso8601": {
                            "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "ttlAsIso8601": {
                            "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "maxDeliveryCount": {
                            "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        }
                      }
                    },
                    "enableFileUploadNotifications": {
                      "description": "If True, file upload notifications are enabled.",
                      "type": "boolean"
                    },
                    "cloudToDevice": {
                      "description": "The IoT hub cloud-to-device messaging properties.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryCount": {
                          "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 100
                        },
                        "defaultTtlAsIso8601": {
                          "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "type": "string",
                          "format": "duration"
                        },
                        "feedback": {
                          "description": "The properties of the feedback queue for cloud-to-device messages.",
                          "type": "object",
                          "properties": {
                            "lockDurationAsIso8601": {
                              "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "ttlAsIso8601": {
                              "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "format": "int32",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    },
                    "comments": {
                      "description": "IoT hub comments.",
                      "type": "string"
                    },
                    "features": {
                      "description": "The capabilities and features enabled for the IoT hub.",
                      "enum": [
                        "None",
                        "DeviceManagement"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Capabilities",
                        "modelAsString": true
                      }
                    },
                    "locations": {
                      "description": "Primary and secondary location for iot hub",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Public representation of one of the locations where a resource is provisioned.",
                        "type": "object",
                        "properties": {
                          "location": {
                            "description": "The name of the Azure region",
                            "type": "string"
                          },
                          "role": {
                            "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                            "enum": [
                              "primary",
                              "secondary"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubReplicaRoleType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "location"
                      ]
                    },
                    "enableDataResidency": {
                      "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                      "type": "boolean"
                    }
                  }
                },
                "sku": {
                  "description": "IotHub SKU info",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "F1",
                        "S1",
                        "S2",
                        "S3",
                        "B1",
                        "B2",
                        "B3"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotHubSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "description": "The billing tier for the IoT hub.",
                      "enum": [
                        "Free",
                        "Standard",
                        "Basic"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "IotHubSkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int64",
                      "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed identities for the IotHub.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "Principal Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "Tenant Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "PATCH"
        ],
        "summary": "Update an existing IoT Hubs tags.",
        "description": "Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method",
        "operationId": "IotHubResource_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group identifier."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of iot hub to update."
          },
          {
            "name": "IotHubTags",
            "in": "body",
            "required": true,
            "description": "Updated tag information to set into the iot hub instance.",
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                }
              },
              "description": "A container holding only the Tags for a resource, allowing the user to update the tags on an IoT Hub instance."
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Iot Hub was successfully updated",
            "schema": {
              "description": "The description of the IoT hub.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "IotHub properties",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                      "type": "array",
                      "items": {
                        "description": "The properties of an IoT hub shared access policy.",
                        "type": "object",
                        "properties": {
                          "keyName": {
                            "description": "The name of the shared access policy.",
                            "type": "string"
                          },
                          "primaryKey": {
                            "description": "The primary key.",
                            "type": "string"
                          },
                          "secondaryKey": {
                            "description": "The secondary key.",
                            "type": "string"
                          },
                          "rights": {
                            "description": "The permissions assigned to the shared access policy.",
                            "enum": [
                              "RegistryRead",
                              "RegistryWrite",
                              "ServiceConnect",
                              "DeviceConnect",
                              "RegistryRead, RegistryWrite",
                              "RegistryRead, ServiceConnect",
                              "RegistryRead, DeviceConnect",
                              "RegistryWrite, ServiceConnect",
                              "RegistryWrite, DeviceConnect",
                              "ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect",
                              "RegistryRead, RegistryWrite, DeviceConnect",
                              "RegistryRead, ServiceConnect, DeviceConnect",
                              "RegistryWrite, ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRights",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      },
                      "x-ms-identifiers": [
                        "keyName"
                      ]
                    },
                    "disableLocalAuth": {
                      "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableDeviceSAS": {
                      "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableModuleSAS": {
                      "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                      "type": "boolean"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                        "type": "string"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for the IoT hub.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      },
                      "x-ms-identifiers": [
                        "filterName"
                      ]
                    },
                    "networkRuleSets": {
                      "description": "Network Rule Set Properties of IotHub",
                      "type": "object",
                      "properties": {
                        "defaultAction": {
                          "type": "string",
                          "description": "Default Action for Network Rule Set",
                          "enum": [
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultAction",
                            "modelAsString": true
                          },
                          "default": "Deny"
                        },
                        "applyToBuiltInEventHubEndpoint": {
                          "type": "boolean",
                          "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                        },
                        "ipRules": {
                          "type": "array",
                          "items": {
                            "description": "IP Rule to be applied as part of Network Rule Set",
                            "type": "object",
                            "properties": {
                              "filterName": {
                                "type": "string",
                                "description": "Name of the IP filter rule."
                              },
                              "action": {
                                "type": "string",
                                "description": "IP Filter Action",
                                "enum": [
                                  "Allow"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkRuleIPAction",
                                  "modelAsString": true
                                },
                                "default": "Allow"
                              },
                              "ipMask": {
                                "type": "string",
                                "description": "A string that contains the IP address range in CIDR notation for the rule."
                              }
                            },
                            "required": [
                              "filterName",
                              "ipMask"
                            ]
                          },
                          "x-ms-identifiers": [
                            "filterName"
                          ],
                          "description": "List of IP Rules"
                        }
                      },
                      "required": [
                        "applyToBuiltInEventHubEndpoint",
                        "ipRules"
                      ]
                    },
                    "minTlsVersion": {
                      "type": "string",
                      "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of an IotHub",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name."
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The hub state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "hostName": {
                      "description": "The name of the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventHubEndpoints": {
                      "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                        "type": "object",
                        "properties": {
                          "retentionTimeInDays": {
                            "format": "int64",
                            "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                            "type": "integer"
                          },
                          "partitionCount": {
                            "format": "int32",
                            "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                            "type": "integer"
                          },
                          "partitionIds": {
                            "description": "The partition ids in the Event Hub-compatible endpoint.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "path": {
                            "description": "The Event Hub-compatible name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "endpoint": {
                            "description": "The Event Hub-compatible endpoint.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "routing": {
                      "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                      "type": "object",
                      "properties": {
                        "endpoints": {
                          "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                          "type": "object",
                          "properties": {
                            "serviceBusQueues": {
                              "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus queue endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus queue endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus queue endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus queue endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus queue endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "serviceBusTopics": {
                              "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus topic endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus topic endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus topic",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus topic endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus topic endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus topic endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "eventHubs": {
                              "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to an event hub endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the event hub endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the event hub endpoint. ",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Event hub name on the event hub namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the event hub endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing event hub endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the event hub endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the event hub endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "storageContainers": {
                              "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a storage container endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the storage container endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the storage account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the storage endpoint. It must include the protocol https://",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the storage endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing storage endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the storage account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the storage account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of storage container in the storage account.",
                                    "type": "string"
                                  },
                                  "fileNameFormat": {
                                    "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                    "type": "string"
                                  },
                                  "batchFrequencyInSeconds": {
                                    "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 720,
                                    "minimum": 60
                                  },
                                  "maxChunkSizeInBytes": {
                                    "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 524288000,
                                    "minimum": 10485760
                                  },
                                  "encoding": {
                                    "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                    "type": "string",
                                    "enum": [
                                      "Avro",
                                      "AvroDeflate",
                                      "JSON"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "containerName"
                                ]
                              }
                            },
                            "cosmosDBSqlContainers": {
                              "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a cosmos DB sql container endpoint.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "id": {
                                    "readOnly": true,
                                    "description": "Id of the cosmos DB sql container endpoint",
                                    "type": "string"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the cosmos DB account. It must include the protocol https://",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "primaryKey": {
                                    "description": "The primary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "secondaryKey": {
                                    "description": "The secondary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "databaseName": {
                                    "description": "The name of the cosmos DB database in the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                    "type": "string"
                                  },
                                  "partitionKeyName": {
                                    "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                    "type": "string"
                                  },
                                  "partitionKeyTemplate": {
                                    "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "endpointUri",
                                  "databaseName",
                                  "containerName"
                                ]
                              }
                            }
                          }
                        },
                        "routes": {
                          "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                          "type": "array",
                          "items": {
                            "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9-._]{1,64}$"
                              },
                              "source": {
                                "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                                "enum": [
                                  "Invalid",
                                  "DeviceMessages",
                                  "TwinChangeEvents",
                                  "DeviceLifecycleEvents",
                                  "DeviceJobLifecycleEvents",
                                  "DeviceConnectionStateEvents"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "RoutingSource",
                                  "modelAsString": true
                                }
                              },
                              "condition": {
                                "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                                "minItems": 1,
                                "maxItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isEnabled": {
                                "description": "Used to specify whether a route is enabled.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "endpointNames",
                              "source",
                              "isEnabled"
                            ]
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "fallbackRoute": {
                          "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                              "enum": [
                                "DeviceMessages"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingSource",
                                "modelAsString": true
                              }
                            },
                            "condition": {
                              "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                              "type": "string"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                              "minItems": 1,
                              "maxItems": 1,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "isEnabled": {
                              "description": "Used to specify whether the fallback route is enabled.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "endpointNames",
                            "source",
                            "isEnabled"
                          ]
                        },
                        "enrichments": {
                          "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                          "type": "array",
                          "items": {
                            "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The key or name for the enrichment property.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value for the enrichment property.",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints for which the enrichment is applied to the message.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "value",
                              "endpointNames"
                            ]
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        }
                      }
                    },
                    "storageEndpoints": {
                      "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the Azure Storage endpoint for file upload.",
                        "type": "object",
                        "properties": {
                          "sasTtlAsIso8601": {
                            "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                            "type": "string",
                            "format": "duration"
                          },
                          "connectionString": {
                            "description": "The connection string for the Azure Storage account to which files are uploaded.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Specifies authentication type being used for connecting to the storage account.",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AuthenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of storage endpoint for file upload.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          }
                        },
                        "required": [
                          "connectionString",
                          "containerName"
                        ]
                      }
                    },
                    "messagingEndpoints": {
                      "description": "The messaging endpoint properties for the file upload notification queue.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the messaging endpoints used by this IoT hub.",
                        "type": "object",
                        "properties": {
                          "lockDurationAsIso8601": {
                            "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "ttlAsIso8601": {
                            "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "maxDeliveryCount": {
                            "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        }
                      }
                    },
                    "enableFileUploadNotifications": {
                      "description": "If True, file upload notifications are enabled.",
                      "type": "boolean"
                    },
                    "cloudToDevice": {
                      "description": "The IoT hub cloud-to-device messaging properties.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryCount": {
                          "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 100
                        },
                        "defaultTtlAsIso8601": {
                          "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "type": "string",
                          "format": "duration"
                        },
                        "feedback": {
                          "description": "The properties of the feedback queue for cloud-to-device messages.",
                          "type": "object",
                          "properties": {
                            "lockDurationAsIso8601": {
                              "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "ttlAsIso8601": {
                              "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "format": "int32",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    },
                    "comments": {
                      "description": "IoT hub comments.",
                      "type": "string"
                    },
                    "features": {
                      "description": "The capabilities and features enabled for the IoT hub.",
                      "enum": [
                        "None",
                        "DeviceManagement"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Capabilities",
                        "modelAsString": true
                      }
                    },
                    "locations": {
                      "description": "Primary and secondary location for iot hub",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Public representation of one of the locations where a resource is provisioned.",
                        "type": "object",
                        "properties": {
                          "location": {
                            "description": "The name of the Azure region",
                            "type": "string"
                          },
                          "role": {
                            "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                            "enum": [
                              "primary",
                              "secondary"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubReplicaRoleType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "location"
                      ]
                    },
                    "enableDataResidency": {
                      "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                      "type": "boolean"
                    }
                  }
                },
                "sku": {
                  "description": "IotHub SKU info",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "F1",
                        "S1",
                        "S2",
                        "S3",
                        "B1",
                        "B2",
                        "B3"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotHubSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "description": "The billing tier for the IoT hub.",
                      "enum": [
                        "Free",
                        "Standard",
                        "Basic"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "IotHubSkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int64",
                      "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed identities for the IotHub.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "Principal Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "Tenant Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "DELETE"
        ],
        "summary": "Delete an IoT hub",
        "description": "Delete an IoT hub.",
        "operationId": "IotHubResource_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state.",
            "schema": {
              "description": "The description of the IoT hub.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "IotHub properties",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                      "type": "array",
                      "items": {
                        "description": "The properties of an IoT hub shared access policy.",
                        "type": "object",
                        "properties": {
                          "keyName": {
                            "description": "The name of the shared access policy.",
                            "type": "string"
                          },
                          "primaryKey": {
                            "description": "The primary key.",
                            "type": "string"
                          },
                          "secondaryKey": {
                            "description": "The secondary key.",
                            "type": "string"
                          },
                          "rights": {
                            "description": "The permissions assigned to the shared access policy.",
                            "enum": [
                              "RegistryRead",
                              "RegistryWrite",
                              "ServiceConnect",
                              "DeviceConnect",
                              "RegistryRead, RegistryWrite",
                              "RegistryRead, ServiceConnect",
                              "RegistryRead, DeviceConnect",
                              "RegistryWrite, ServiceConnect",
                              "RegistryWrite, DeviceConnect",
                              "ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect",
                              "RegistryRead, RegistryWrite, DeviceConnect",
                              "RegistryRead, ServiceConnect, DeviceConnect",
                              "RegistryWrite, ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRights",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      },
                      "x-ms-identifiers": [
                        "keyName"
                      ]
                    },
                    "disableLocalAuth": {
                      "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableDeviceSAS": {
                      "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableModuleSAS": {
                      "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                      "type": "boolean"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                        "type": "string"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for the IoT hub.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      },
                      "x-ms-identifiers": [
                        "filterName"
                      ]
                    },
                    "networkRuleSets": {
                      "description": "Network Rule Set Properties of IotHub",
                      "type": "object",
                      "properties": {
                        "defaultAction": {
                          "type": "string",
                          "description": "Default Action for Network Rule Set",
                          "enum": [
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultAction",
                            "modelAsString": true
                          },
                          "default": "Deny"
                        },
                        "applyToBuiltInEventHubEndpoint": {
                          "type": "boolean",
                          "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                        },
                        "ipRules": {
                          "type": "array",
                          "items": {
                            "description": "IP Rule to be applied as part of Network Rule Set",
                            "type": "object",
                            "properties": {
                              "filterName": {
                                "type": "string",
                                "description": "Name of the IP filter rule."
                              },
                              "action": {
                                "type": "string",
                                "description": "IP Filter Action",
                                "enum": [
                                  "Allow"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkRuleIPAction",
                                  "modelAsString": true
                                },
                                "default": "Allow"
                              },
                              "ipMask": {
                                "type": "string",
                                "description": "A string that contains the IP address range in CIDR notation for the rule."
                              }
                            },
                            "required": [
                              "filterName",
                              "ipMask"
                            ]
                          },
                          "x-ms-identifiers": [
                            "filterName"
                          ],
                          "description": "List of IP Rules"
                        }
                      },
                      "required": [
                        "applyToBuiltInEventHubEndpoint",
                        "ipRules"
                      ]
                    },
                    "minTlsVersion": {
                      "type": "string",
                      "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of an IotHub",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name."
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The hub state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "hostName": {
                      "description": "The name of the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventHubEndpoints": {
                      "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                        "type": "object",
                        "properties": {
                          "retentionTimeInDays": {
                            "format": "int64",
                            "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                            "type": "integer"
                          },
                          "partitionCount": {
                            "format": "int32",
                            "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                            "type": "integer"
                          },
                          "partitionIds": {
                            "description": "The partition ids in the Event Hub-compatible endpoint.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "path": {
                            "description": "The Event Hub-compatible name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "endpoint": {
                            "description": "The Event Hub-compatible endpoint.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "routing": {
                      "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                      "type": "object",
                      "properties": {
                        "endpoints": {
                          "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                          "type": "object",
                          "properties": {
                            "serviceBusQueues": {
                              "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus queue endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus queue endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus queue endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus queue endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus queue endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "serviceBusTopics": {
                              "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus topic endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus topic endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus topic",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus topic endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus topic endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus topic endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "eventHubs": {
                              "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to an event hub endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the event hub endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the event hub endpoint. ",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Event hub name on the event hub namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the event hub endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing event hub endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the event hub endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the event hub endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "storageContainers": {
                              "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a storage container endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the storage container endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the storage account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the storage endpoint. It must include the protocol https://",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the storage endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing storage endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the storage account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the storage account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of storage container in the storage account.",
                                    "type": "string"
                                  },
                                  "fileNameFormat": {
                                    "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                    "type": "string"
                                  },
                                  "batchFrequencyInSeconds": {
                                    "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 720,
                                    "minimum": 60
                                  },
                                  "maxChunkSizeInBytes": {
                                    "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 524288000,
                                    "minimum": 10485760
                                  },
                                  "encoding": {
                                    "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                    "type": "string",
                                    "enum": [
                                      "Avro",
                                      "AvroDeflate",
                                      "JSON"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "containerName"
                                ]
                              }
                            },
                            "cosmosDBSqlContainers": {
                              "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a cosmos DB sql container endpoint.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "id": {
                                    "readOnly": true,
                                    "description": "Id of the cosmos DB sql container endpoint",
                                    "type": "string"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the cosmos DB account. It must include the protocol https://",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "primaryKey": {
                                    "description": "The primary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "secondaryKey": {
                                    "description": "The secondary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "databaseName": {
                                    "description": "The name of the cosmos DB database in the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                    "type": "string"
                                  },
                                  "partitionKeyName": {
                                    "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                    "type": "string"
                                  },
                                  "partitionKeyTemplate": {
                                    "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "endpointUri",
                                  "databaseName",
                                  "containerName"
                                ]
                              }
                            }
                          }
                        },
                        "routes": {
                          "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                          "type": "array",
                          "items": {
                            "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9-._]{1,64}$"
                              },
                              "source": {
                                "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                                "enum": [
                                  "Invalid",
                                  "DeviceMessages",
                                  "TwinChangeEvents",
                                  "DeviceLifecycleEvents",
                                  "DeviceJobLifecycleEvents",
                                  "DeviceConnectionStateEvents"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "RoutingSource",
                                  "modelAsString": true
                                }
                              },
                              "condition": {
                                "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                                "minItems": 1,
                                "maxItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isEnabled": {
                                "description": "Used to specify whether a route is enabled.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "endpointNames",
                              "source",
                              "isEnabled"
                            ]
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "fallbackRoute": {
                          "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                              "enum": [
                                "DeviceMessages"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingSource",
                                "modelAsString": true
                              }
                            },
                            "condition": {
                              "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                              "type": "string"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                              "minItems": 1,
                              "maxItems": 1,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "isEnabled": {
                              "description": "Used to specify whether the fallback route is enabled.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "endpointNames",
                            "source",
                            "isEnabled"
                          ]
                        },
                        "enrichments": {
                          "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                          "type": "array",
                          "items": {
                            "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The key or name for the enrichment property.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value for the enrichment property.",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints for which the enrichment is applied to the message.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "value",
                              "endpointNames"
                            ]
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        }
                      }
                    },
                    "storageEndpoints": {
                      "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the Azure Storage endpoint for file upload.",
                        "type": "object",
                        "properties": {
                          "sasTtlAsIso8601": {
                            "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                            "type": "string",
                            "format": "duration"
                          },
                          "connectionString": {
                            "description": "The connection string for the Azure Storage account to which files are uploaded.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Specifies authentication type being used for connecting to the storage account.",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AuthenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of storage endpoint for file upload.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          }
                        },
                        "required": [
                          "connectionString",
                          "containerName"
                        ]
                      }
                    },
                    "messagingEndpoints": {
                      "description": "The messaging endpoint properties for the file upload notification queue.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the messaging endpoints used by this IoT hub.",
                        "type": "object",
                        "properties": {
                          "lockDurationAsIso8601": {
                            "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "ttlAsIso8601": {
                            "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "maxDeliveryCount": {
                            "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        }
                      }
                    },
                    "enableFileUploadNotifications": {
                      "description": "If True, file upload notifications are enabled.",
                      "type": "boolean"
                    },
                    "cloudToDevice": {
                      "description": "The IoT hub cloud-to-device messaging properties.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryCount": {
                          "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 100
                        },
                        "defaultTtlAsIso8601": {
                          "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "type": "string",
                          "format": "duration"
                        },
                        "feedback": {
                          "description": "The properties of the feedback queue for cloud-to-device messages.",
                          "type": "object",
                          "properties": {
                            "lockDurationAsIso8601": {
                              "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "ttlAsIso8601": {
                              "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "format": "int32",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    },
                    "comments": {
                      "description": "IoT hub comments.",
                      "type": "string"
                    },
                    "features": {
                      "description": "The capabilities and features enabled for the IoT hub.",
                      "enum": [
                        "None",
                        "DeviceManagement"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Capabilities",
                        "modelAsString": true
                      }
                    },
                    "locations": {
                      "description": "Primary and secondary location for iot hub",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Public representation of one of the locations where a resource is provisioned.",
                        "type": "object",
                        "properties": {
                          "location": {
                            "description": "The name of the Azure region",
                            "type": "string"
                          },
                          "role": {
                            "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                            "enum": [
                              "primary",
                              "secondary"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubReplicaRoleType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "location"
                      ]
                    },
                    "enableDataResidency": {
                      "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                      "type": "boolean"
                    }
                  }
                },
                "sku": {
                  "description": "IotHub SKU info",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "F1",
                        "S1",
                        "S2",
                        "S3",
                        "B1",
                        "B2",
                        "B3"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotHubSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "description": "The billing tier for the IoT hub.",
                      "enum": [
                        "Free",
                        "Standard",
                        "Basic"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "IotHubSkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int64",
                      "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed identities for the IotHub.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "Principal Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "Tenant Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          "202": {
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              },
              "Location": {
                "type": "string"
              }
            },
            "description": "The Iot Hub resource provider always returns a 202 Accepted status code with valid Location and Retry-After headers. The resource provider also sets the Azure-AsyncOperation header with a URL that points to the operation resource for this operation. Subsequent GET attempts on the resource after a DELETE operation return a resource representation that indicates a transitional provisioning state (such as Terminating). To retrieve the status of the operation, a client can either poll the URL returned in the Location header after the Retry-After interval, get the IoT Hub service status directly, or query the operation resource.",
            "schema": {
              "description": "The description of the IoT hub.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "location": {
                  "type": "string",
                  "description": "The resource location."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "etag": {
                  "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                  "type": "string"
                },
                "properties": {
                  "description": "IotHub properties",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                      "type": "array",
                      "items": {
                        "description": "The properties of an IoT hub shared access policy.",
                        "type": "object",
                        "properties": {
                          "keyName": {
                            "description": "The name of the shared access policy.",
                            "type": "string"
                          },
                          "primaryKey": {
                            "description": "The primary key.",
                            "type": "string"
                          },
                          "secondaryKey": {
                            "description": "The secondary key.",
                            "type": "string"
                          },
                          "rights": {
                            "description": "The permissions assigned to the shared access policy.",
                            "enum": [
                              "RegistryRead",
                              "RegistryWrite",
                              "ServiceConnect",
                              "DeviceConnect",
                              "RegistryRead, RegistryWrite",
                              "RegistryRead, ServiceConnect",
                              "RegistryRead, DeviceConnect",
                              "RegistryWrite, ServiceConnect",
                              "RegistryWrite, DeviceConnect",
                              "ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect",
                              "RegistryRead, RegistryWrite, DeviceConnect",
                              "RegistryRead, ServiceConnect, DeviceConnect",
                              "RegistryWrite, ServiceConnect, DeviceConnect",
                              "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AccessRights",
                              "modelAsString": false
                            }
                          }
                        },
                        "required": [
                          "keyName",
                          "rights"
                        ]
                      },
                      "x-ms-identifiers": [
                        "keyName"
                      ]
                    },
                    "disableLocalAuth": {
                      "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableDeviceSAS": {
                      "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "disableModuleSAS": {
                      "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                      "type": "boolean"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                        "type": "string"
                      }
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Whether requests from Public Network are allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "ipFilterRules": {
                      "description": "The IP filter rules.",
                      "type": "array",
                      "items": {
                        "description": "The IP filter rules for the IoT hub.",
                        "type": "object",
                        "properties": {
                          "filterName": {
                            "description": "The name of the IP filter rule.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The desired action for requests captured by this rule.",
                            "enum": [
                              "Accept",
                              "Reject"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IpFilterActionType",
                              "modelAsString": false
                            }
                          },
                          "ipMask": {
                            "description": "A string that contains the IP address range in CIDR notation for the rule.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "filterName",
                          "action",
                          "ipMask"
                        ]
                      },
                      "x-ms-identifiers": [
                        "filterName"
                      ]
                    },
                    "networkRuleSets": {
                      "description": "Network Rule Set Properties of IotHub",
                      "type": "object",
                      "properties": {
                        "defaultAction": {
                          "type": "string",
                          "description": "Default Action for Network Rule Set",
                          "enum": [
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultAction",
                            "modelAsString": true
                          },
                          "default": "Deny"
                        },
                        "applyToBuiltInEventHubEndpoint": {
                          "type": "boolean",
                          "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                        },
                        "ipRules": {
                          "type": "array",
                          "items": {
                            "description": "IP Rule to be applied as part of Network Rule Set",
                            "type": "object",
                            "properties": {
                              "filterName": {
                                "type": "string",
                                "description": "Name of the IP filter rule."
                              },
                              "action": {
                                "type": "string",
                                "description": "IP Filter Action",
                                "enum": [
                                  "Allow"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkRuleIPAction",
                                  "modelAsString": true
                                },
                                "default": "Allow"
                              },
                              "ipMask": {
                                "type": "string",
                                "description": "A string that contains the IP address range in CIDR notation for the rule."
                              }
                            },
                            "required": [
                              "filterName",
                              "ipMask"
                            ]
                          },
                          "x-ms-identifiers": [
                            "filterName"
                          ],
                          "description": "List of IP Rules"
                        }
                      },
                      "required": [
                        "applyToBuiltInEventHubEndpoint",
                        "ipRules"
                      ]
                    },
                    "minTlsVersion": {
                      "type": "string",
                      "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections created on this IotHub",
                      "type": "array",
                      "items": {
                        "description": "The private endpoint connection of an IotHub",
                        "x-ms-azure-resource": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource name."
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource type."
                          },
                          "properties": {
                            "description": "The properties of a private endpoint connection",
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The private endpoint property of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "description": "The resource identifier."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "The current state of a private endpoint connection",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of a private endpoint connection",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description for the current state of a private endpoint connection"
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Actions required for a private endpoint connection"
                                  }
                                },
                                "required": [
                                  "status",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "required": [
                          "properties"
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The hub state.",
                      "type": "string",
                      "readOnly": true
                    },
                    "hostName": {
                      "description": "The name of the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "eventHubEndpoints": {
                      "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                        "type": "object",
                        "properties": {
                          "retentionTimeInDays": {
                            "format": "int64",
                            "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                            "type": "integer"
                          },
                          "partitionCount": {
                            "format": "int32",
                            "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                            "type": "integer"
                          },
                          "partitionIds": {
                            "description": "The partition ids in the Event Hub-compatible endpoint.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "path": {
                            "description": "The Event Hub-compatible name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "endpoint": {
                            "description": "The Event Hub-compatible endpoint.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "routing": {
                      "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                      "type": "object",
                      "properties": {
                        "endpoints": {
                          "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                          "type": "object",
                          "properties": {
                            "serviceBusQueues": {
                              "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus queue endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus queue endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus queue endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus queue endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus queue endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus queue endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "serviceBusTopics": {
                              "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to service bus topic endpoint types.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the service bus topic endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Queue name on the service bus topic",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the service bus topic endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing service bus topic endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the service bus topic endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the service bus topic endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "eventHubs": {
                              "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to an event hub endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the event hub endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the event hub endpoint. ",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                    "type": "string"
                                  },
                                  "entityPath": {
                                    "description": "Event hub name on the event hub namespace",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the event hub endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing event hub endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the event hub endpoint.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the event hub endpoint.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "storageContainers": {
                              "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a storage container endpoint.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Id of the storage container endpoint",
                                    "type": "string"
                                  },
                                  "connectionString": {
                                    "description": "The connection string of the storage account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the storage endpoint. It must include the protocol https://",
                                    "type": "string"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the storage endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing storage endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the storage account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the storage account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of storage container in the storage account.",
                                    "type": "string"
                                  },
                                  "fileNameFormat": {
                                    "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                    "type": "string"
                                  },
                                  "batchFrequencyInSeconds": {
                                    "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 720,
                                    "minimum": 60
                                  },
                                  "maxChunkSizeInBytes": {
                                    "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                    "format": "int32",
                                    "type": "integer",
                                    "maximum": 524288000,
                                    "minimum": 10485760
                                  },
                                  "encoding": {
                                    "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                    "type": "string",
                                    "enum": [
                                      "Avro",
                                      "AvroDeflate",
                                      "JSON"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "containerName"
                                ]
                              }
                            },
                            "cosmosDBSqlContainers": {
                              "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                              "type": "array",
                              "items": {
                                "description": "The properties related to a cosmos DB sql container endpoint.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                    "type": "string",
                                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                  },
                                  "id": {
                                    "readOnly": true,
                                    "description": "Id of the cosmos DB sql container endpoint",
                                    "type": "string"
                                  },
                                  "subscriptionId": {
                                    "description": "The subscription identifier of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "resourceGroup": {
                                    "description": "The name of the resource group of the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "endpointUri": {
                                    "description": "The url of the cosmos DB account. It must include the protocol https://",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "authenticationType": {
                                    "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                    "enum": [
                                      "keyBased",
                                      "identityBased"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "authenticationType",
                                      "modelAsString": true
                                    }
                                  },
                                  "identity": {
                                    "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "userAssignedIdentity": {
                                        "type": "string",
                                        "description": "The user assigned identity."
                                      }
                                    }
                                  },
                                  "primaryKey": {
                                    "description": "The primary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "secondaryKey": {
                                    "description": "The secondary key of the cosmos DB account.",
                                    "type": "string",
                                    "x-ms-secret": true
                                  },
                                  "databaseName": {
                                    "description": "The name of the cosmos DB database in the cosmos DB account.",
                                    "type": "string"
                                  },
                                  "containerName": {
                                    "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                    "type": "string"
                                  },
                                  "partitionKeyName": {
                                    "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                    "type": "string"
                                  },
                                  "partitionKeyTemplate": {
                                    "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "endpointUri",
                                  "databaseName",
                                  "containerName"
                                ]
                              }
                            }
                          }
                        },
                        "routes": {
                          "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                          "type": "array",
                          "items": {
                            "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9-._]{1,64}$"
                              },
                              "source": {
                                "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                                "enum": [
                                  "Invalid",
                                  "DeviceMessages",
                                  "TwinChangeEvents",
                                  "DeviceLifecycleEvents",
                                  "DeviceJobLifecycleEvents",
                                  "DeviceConnectionStateEvents"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "RoutingSource",
                                  "modelAsString": true
                                }
                              },
                              "condition": {
                                "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                                "minItems": 1,
                                "maxItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isEnabled": {
                                "description": "Used to specify whether a route is enabled.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "endpointNames",
                              "source",
                              "isEnabled"
                            ]
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "fallbackRoute": {
                          "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                              "enum": [
                                "DeviceMessages"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingSource",
                                "modelAsString": true
                              }
                            },
                            "condition": {
                              "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                              "type": "string"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                              "minItems": 1,
                              "maxItems": 1,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "isEnabled": {
                              "description": "Used to specify whether the fallback route is enabled.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "endpointNames",
                            "source",
                            "isEnabled"
                          ]
                        },
                        "enrichments": {
                          "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                          "type": "array",
                          "items": {
                            "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The key or name for the enrichment property.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value for the enrichment property.",
                                "type": "string"
                              },
                              "endpointNames": {
                                "description": "The list of endpoints for which the enrichment is applied to the message.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "value",
                              "endpointNames"
                            ]
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        }
                      }
                    },
                    "storageEndpoints": {
                      "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the Azure Storage endpoint for file upload.",
                        "type": "object",
                        "properties": {
                          "sasTtlAsIso8601": {
                            "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                            "type": "string",
                            "format": "duration"
                          },
                          "connectionString": {
                            "description": "The connection string for the Azure Storage account to which files are uploaded.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Specifies authentication type being used for connecting to the storage account.",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "AuthenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of storage endpoint for file upload.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          }
                        },
                        "required": [
                          "connectionString",
                          "containerName"
                        ]
                      }
                    },
                    "messagingEndpoints": {
                      "description": "The messaging endpoint properties for the file upload notification queue.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The properties of the messaging endpoints used by this IoT hub.",
                        "type": "object",
                        "properties": {
                          "lockDurationAsIso8601": {
                            "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "ttlAsIso8601": {
                            "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "type": "string",
                            "format": "duration"
                          },
                          "maxDeliveryCount": {
                            "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        }
                      }
                    },
                    "enableFileUploadNotifications": {
                      "description": "If True, file upload notifications are enabled.",
                      "type": "boolean"
                    },
                    "cloudToDevice": {
                      "description": "The IoT hub cloud-to-device messaging properties.",
                      "type": "object",
                      "properties": {
                        "maxDeliveryCount": {
                          "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 100
                        },
                        "defaultTtlAsIso8601": {
                          "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                          "type": "string",
                          "format": "duration"
                        },
                        "feedback": {
                          "description": "The properties of the feedback queue for cloud-to-device messages.",
                          "type": "object",
                          "properties": {
                            "lockDurationAsIso8601": {
                              "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "ttlAsIso8601": {
                              "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "type": "string",
                              "format": "duration"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                              "format": "int32",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    },
                    "comments": {
                      "description": "IoT hub comments.",
                      "type": "string"
                    },
                    "features": {
                      "description": "The capabilities and features enabled for the IoT hub.",
                      "enum": [
                        "None",
                        "DeviceManagement"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Capabilities",
                        "modelAsString": true
                      }
                    },
                    "locations": {
                      "description": "Primary and secondary location for iot hub",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Public representation of one of the locations where a resource is provisioned.",
                        "type": "object",
                        "properties": {
                          "location": {
                            "description": "The name of the Azure region",
                            "type": "string"
                          },
                          "role": {
                            "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                            "enum": [
                              "primary",
                              "secondary"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubReplicaRoleType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "location"
                      ]
                    },
                    "enableDataResidency": {
                      "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                      "type": "boolean"
                    }
                  }
                },
                "sku": {
                  "description": "IotHub SKU info",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the SKU.",
                      "enum": [
                        "F1",
                        "S1",
                        "S2",
                        "S3",
                        "B1",
                        "B2",
                        "B3"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IotHubSku",
                        "modelAsString": true
                      }
                    },
                    "tier": {
                      "description": "The billing tier for the IoT hub.",
                      "enum": [
                        "Free",
                        "Standard",
                        "Basic"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "IotHubSkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int64",
                      "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed identities for the IotHub.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "description": "Principal Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "tenantId": {
                      "description": "Tenant Id",
                      "type": "string",
                      "readOnly": true
                    },
                    "type": {
                      "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "type": "string",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          "204": {
            "description": "Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the Iot hub metadata in the service and the status of the delete operation is set to a completed state."
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/IotHubs": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get all the IoT hubs in a subscription",
        "description": "Get all the IoT hubs in a subscription.",
        "operationId": "IotHubResource_ListBySubscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the IoT hubs in the subscription.",
            "schema": {
              "description": "The JSON-serialized array of IotHubDescription objects with a next link.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The array of IotHubDescription objects.",
                  "type": "array",
                  "items": {
                    "description": "The description of the IoT hub.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "The resource tags."
                      },
                      "etag": {
                        "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                        "type": "string"
                      },
                      "properties": {
                        "description": "IotHub properties",
                        "type": "object",
                        "properties": {
                          "authorizationPolicies": {
                            "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                            "type": "array",
                            "items": {
                              "description": "The properties of an IoT hub shared access policy.",
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "description": "The name of the shared access policy.",
                                  "type": "string"
                                },
                                "primaryKey": {
                                  "description": "The primary key.",
                                  "type": "string"
                                },
                                "secondaryKey": {
                                  "description": "The secondary key.",
                                  "type": "string"
                                },
                                "rights": {
                                  "description": "The permissions assigned to the shared access policy.",
                                  "enum": [
                                    "RegistryRead",
                                    "RegistryWrite",
                                    "ServiceConnect",
                                    "DeviceConnect",
                                    "RegistryRead, RegistryWrite",
                                    "RegistryRead, ServiceConnect",
                                    "RegistryRead, DeviceConnect",
                                    "RegistryWrite, ServiceConnect",
                                    "RegistryWrite, DeviceConnect",
                                    "ServiceConnect, DeviceConnect",
                                    "RegistryRead, RegistryWrite, ServiceConnect",
                                    "RegistryRead, RegistryWrite, DeviceConnect",
                                    "RegistryRead, ServiceConnect, DeviceConnect",
                                    "RegistryWrite, ServiceConnect, DeviceConnect",
                                    "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "AccessRights",
                                    "modelAsString": false
                                  }
                                }
                              },
                              "required": [
                                "keyName",
                                "rights"
                              ]
                            },
                            "x-ms-identifiers": [
                              "keyName"
                            ]
                          },
                          "disableLocalAuth": {
                            "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                            "type": "boolean"
                          },
                          "disableDeviceSAS": {
                            "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                            "type": "boolean"
                          },
                          "disableModuleSAS": {
                            "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                            "type": "boolean"
                          },
                          "restrictOutboundNetworkAccess": {
                            "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                            "type": "boolean"
                          },
                          "allowedFqdnList": {
                            "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                            "type": "array",
                            "items": {
                              "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                              "type": "string"
                            }
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "description": "Whether requests from Public Network are allowed",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PublicNetworkAccess"
                            }
                          },
                          "ipFilterRules": {
                            "description": "The IP filter rules.",
                            "type": "array",
                            "items": {
                              "description": "The IP filter rules for the IoT hub.",
                              "type": "object",
                              "properties": {
                                "filterName": {
                                  "description": "The name of the IP filter rule.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "The desired action for requests captured by this rule.",
                                  "enum": [
                                    "Accept",
                                    "Reject"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpFilterActionType",
                                    "modelAsString": false
                                  }
                                },
                                "ipMask": {
                                  "description": "A string that contains the IP address range in CIDR notation for the rule.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "filterName",
                                "action",
                                "ipMask"
                              ]
                            },
                            "x-ms-identifiers": [
                              "filterName"
                            ]
                          },
                          "networkRuleSets": {
                            "description": "Network Rule Set Properties of IotHub",
                            "type": "object",
                            "properties": {
                              "defaultAction": {
                                "type": "string",
                                "description": "Default Action for Network Rule Set",
                                "enum": [
                                  "Deny",
                                  "Allow"
                                ],
                                "x-ms-enum": {
                                  "name": "DefaultAction",
                                  "modelAsString": true
                                },
                                "default": "Deny"
                              },
                              "applyToBuiltInEventHubEndpoint": {
                                "type": "boolean",
                                "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                              },
                              "ipRules": {
                                "type": "array",
                                "items": {
                                  "description": "IP Rule to be applied as part of Network Rule Set",
                                  "type": "object",
                                  "properties": {
                                    "filterName": {
                                      "type": "string",
                                      "description": "Name of the IP filter rule."
                                    },
                                    "action": {
                                      "type": "string",
                                      "description": "IP Filter Action",
                                      "enum": [
                                        "Allow"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NetworkRuleIPAction",
                                        "modelAsString": true
                                      },
                                      "default": "Allow"
                                    },
                                    "ipMask": {
                                      "type": "string",
                                      "description": "A string that contains the IP address range in CIDR notation for the rule."
                                    }
                                  },
                                  "required": [
                                    "filterName",
                                    "ipMask"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "filterName"
                                ],
                                "description": "List of IP Rules"
                              }
                            },
                            "required": [
                              "applyToBuiltInEventHubEndpoint",
                              "ipRules"
                            ]
                          },
                          "minTlsVersion": {
                            "type": "string",
                            "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                          },
                          "privateEndpointConnections": {
                            "description": "Private endpoint connections created on this IotHub",
                            "type": "array",
                            "items": {
                              "description": "The private endpoint connection of an IotHub",
                              "x-ms-azure-resource": true,
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource identifier."
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource name."
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource type."
                                },
                                "properties": {
                                  "description": "The properties of a private endpoint connection",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The private endpoint property of a private endpoint connection",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The resource identifier."
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "The current state of a private endpoint connection",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The status of a private endpoint connection",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PrivateLinkServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description for the current state of a private endpoint connection"
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Actions required for a private endpoint connection"
                                        }
                                      },
                                      "required": [
                                        "status",
                                        "description"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "type": "string",
                            "readOnly": true
                          },
                          "state": {
                            "description": "The hub state.",
                            "type": "string",
                            "readOnly": true
                          },
                          "hostName": {
                            "description": "The name of the host.",
                            "type": "string",
                            "readOnly": true
                          },
                          "eventHubEndpoints": {
                            "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                              "type": "object",
                              "properties": {
                                "retentionTimeInDays": {
                                  "format": "int64",
                                  "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                                  "type": "integer"
                                },
                                "partitionCount": {
                                  "format": "int32",
                                  "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                                  "type": "integer"
                                },
                                "partitionIds": {
                                  "description": "The partition ids in the Event Hub-compatible endpoint.",
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "path": {
                                  "description": "The Event Hub-compatible name.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "endpoint": {
                                  "description": "The Event Hub-compatible endpoint.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "routing": {
                            "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                            "type": "object",
                            "properties": {
                              "endpoints": {
                                "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                                "type": "object",
                                "properties": {
                                  "serviceBusQueues": {
                                    "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to service bus queue endpoint types.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Id of the service bus queue endpoint",
                                          "type": "string"
                                        },
                                        "connectionString": {
                                          "description": "The connection string of the service bus queue endpoint.",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                          "type": "string"
                                        },
                                        "entityPath": {
                                          "description": "Queue name on the service bus namespace",
                                          "type": "string"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the service bus queue endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing service bus queue endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the service bus queue endpoint.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the service bus queue endpoint.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "serviceBusTopics": {
                                    "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to service bus topic endpoint types.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Id of the service bus topic endpoint",
                                          "type": "string"
                                        },
                                        "connectionString": {
                                          "description": "The connection string of the service bus topic endpoint.",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                          "type": "string"
                                        },
                                        "entityPath": {
                                          "description": "Queue name on the service bus topic",
                                          "type": "string"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the service bus topic endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing service bus topic endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the service bus topic endpoint.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the service bus topic endpoint.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "eventHubs": {
                                    "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to an event hub endpoint.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Id of the event hub endpoint",
                                          "type": "string"
                                        },
                                        "connectionString": {
                                          "description": "The connection string of the event hub endpoint. ",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                          "type": "string"
                                        },
                                        "entityPath": {
                                          "description": "Event hub name on the event hub namespace",
                                          "type": "string"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the event hub endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing event hub endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the event hub endpoint.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the event hub endpoint.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "storageContainers": {
                                    "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to a storage container endpoint.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Id of the storage container endpoint",
                                          "type": "string"
                                        },
                                        "connectionString": {
                                          "description": "The connection string of the storage account.",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the storage endpoint. It must include the protocol https://",
                                          "type": "string"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the storage endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing storage endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the storage account.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the storage account.",
                                          "type": "string"
                                        },
                                        "containerName": {
                                          "description": "The name of storage container in the storage account.",
                                          "type": "string"
                                        },
                                        "fileNameFormat": {
                                          "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                          "type": "string"
                                        },
                                        "batchFrequencyInSeconds": {
                                          "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                          "format": "int32",
                                          "type": "integer",
                                          "maximum": 720,
                                          "minimum": 60
                                        },
                                        "maxChunkSizeInBytes": {
                                          "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                          "format": "int32",
                                          "type": "integer",
                                          "maximum": 524288000,
                                          "minimum": 10485760
                                        },
                                        "encoding": {
                                          "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                          "type": "string",
                                          "enum": [
                                            "Avro",
                                            "AvroDeflate",
                                            "JSON"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "containerName"
                                      ]
                                    }
                                  },
                                  "cosmosDBSqlContainers": {
                                    "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to a cosmos DB sql container endpoint.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "id": {
                                          "readOnly": true,
                                          "description": "Id of the cosmos DB sql container endpoint",
                                          "type": "string"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the cosmos DB account.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the cosmos DB account.",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the cosmos DB account. It must include the protocol https://",
                                          "type": "string",
                                          "format": "uri"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "primaryKey": {
                                          "description": "The primary key of the cosmos DB account.",
                                          "type": "string",
                                          "x-ms-secret": true
                                        },
                                        "secondaryKey": {
                                          "description": "The secondary key of the cosmos DB account.",
                                          "type": "string",
                                          "x-ms-secret": true
                                        },
                                        "databaseName": {
                                          "description": "The name of the cosmos DB database in the cosmos DB account.",
                                          "type": "string"
                                        },
                                        "containerName": {
                                          "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                          "type": "string"
                                        },
                                        "partitionKeyName": {
                                          "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                          "type": "string"
                                        },
                                        "partitionKeyTemplate": {
                                          "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "endpointUri",
                                        "databaseName",
                                        "containerName"
                                      ]
                                    }
                                  }
                                }
                              },
                              "routes": {
                                "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                                "type": "array",
                                "items": {
                                  "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                      "type": "string",
                                      "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                    },
                                    "source": {
                                      "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                                      "enum": [
                                        "Invalid",
                                        "DeviceMessages",
                                        "TwinChangeEvents",
                                        "DeviceLifecycleEvents",
                                        "DeviceJobLifecycleEvents",
                                        "DeviceConnectionStateEvents"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "RoutingSource",
                                        "modelAsString": true
                                      }
                                    },
                                    "condition": {
                                      "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                      "type": "string"
                                    },
                                    "endpointNames": {
                                      "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                                      "minItems": 1,
                                      "maxItems": 1,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "isEnabled": {
                                      "description": "Used to specify whether a route is enabled.",
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "endpointNames",
                                    "source",
                                    "isEnabled"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "fallbackRoute": {
                                "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                    "type": "string"
                                  },
                                  "source": {
                                    "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                                    "enum": [
                                      "DeviceMessages"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "RoutingSource",
                                      "modelAsString": true
                                    }
                                  },
                                  "condition": {
                                    "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                    "type": "string"
                                  },
                                  "endpointNames": {
                                    "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                                    "minItems": 1,
                                    "maxItems": 1,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "isEnabled": {
                                    "description": "Used to specify whether the fallback route is enabled.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "endpointNames",
                                  "source",
                                  "isEnabled"
                                ]
                              },
                              "enrichments": {
                                "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                                "type": "array",
                                "items": {
                                  "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "The key or name for the enrichment property.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The value for the enrichment property.",
                                      "type": "string"
                                    },
                                    "endpointNames": {
                                      "description": "The list of endpoints for which the enrichment is applied to the message.",
                                      "minItems": 1,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "value",
                                    "endpointNames"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "key"
                                ]
                              }
                            }
                          },
                          "storageEndpoints": {
                            "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The properties of the Azure Storage endpoint for file upload.",
                              "type": "object",
                              "properties": {
                                "sasTtlAsIso8601": {
                                  "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                                  "type": "string",
                                  "format": "duration"
                                },
                                "connectionString": {
                                  "description": "The connection string for the Azure Storage account to which files are uploaded.",
                                  "type": "string"
                                },
                                "containerName": {
                                  "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                                  "type": "string"
                                },
                                "authenticationType": {
                                  "description": "Specifies authentication type being used for connecting to the storage account.",
                                  "enum": [
                                    "keyBased",
                                    "identityBased"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "AuthenticationType",
                                    "modelAsString": true
                                  }
                                },
                                "identity": {
                                  "description": "Managed identity properties of storage endpoint for file upload.",
                                  "type": "object",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned identity."
                                    }
                                  }
                                }
                              },
                              "required": [
                                "connectionString",
                                "containerName"
                              ]
                            }
                          },
                          "messagingEndpoints": {
                            "description": "The messaging endpoint properties for the file upload notification queue.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The properties of the messaging endpoints used by this IoT hub.",
                              "type": "object",
                              "properties": {
                                "lockDurationAsIso8601": {
                                  "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                                  "type": "string",
                                  "format": "duration"
                                },
                                "ttlAsIso8601": {
                                  "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                                  "type": "string",
                                  "format": "duration"
                                },
                                "maxDeliveryCount": {
                                  "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 100
                                }
                              }
                            }
                          },
                          "enableFileUploadNotifications": {
                            "description": "If True, file upload notifications are enabled.",
                            "type": "boolean"
                          },
                          "cloudToDevice": {
                            "description": "The IoT hub cloud-to-device messaging properties.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryCount": {
                                "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                "format": "int32",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              },
                              "defaultTtlAsIso8601": {
                                "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                "type": "string",
                                "format": "duration"
                              },
                              "feedback": {
                                "description": "The properties of the feedback queue for cloud-to-device messages.",
                                "type": "object",
                                "properties": {
                                  "lockDurationAsIso8601": {
                                    "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                    "type": "string",
                                    "format": "duration"
                                  },
                                  "ttlAsIso8601": {
                                    "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                    "type": "string",
                                    "format": "duration"
                                  },
                                  "maxDeliveryCount": {
                                    "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                    "format": "int32",
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          },
                          "comments": {
                            "description": "IoT hub comments.",
                            "type": "string"
                          },
                          "features": {
                            "description": "The capabilities and features enabled for the IoT hub.",
                            "enum": [
                              "None",
                              "DeviceManagement"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "Capabilities",
                              "modelAsString": true
                            }
                          },
                          "locations": {
                            "description": "Primary and secondary location for iot hub",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Public representation of one of the locations where a resource is provisioned.",
                              "type": "object",
                              "properties": {
                                "location": {
                                  "description": "The name of the Azure region",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                                  "enum": [
                                    "primary",
                                    "secondary"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IotHubReplicaRoleType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "location"
                            ]
                          },
                          "enableDataResidency": {
                            "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                            "type": "boolean"
                          }
                        }
                      },
                      "sku": {
                        "description": "IotHub SKU info",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the SKU.",
                            "enum": [
                              "F1",
                              "S1",
                              "S2",
                              "S3",
                              "B1",
                              "B2",
                              "B3"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubSku",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "description": "The billing tier for the IoT hub.",
                            "enum": [
                              "Free",
                              "Standard",
                              "Basic"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "IotHubSkuTier",
                              "modelAsString": false
                            }
                          },
                          "capacity": {
                            "format": "int64",
                            "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "identity": {
                        "description": "The managed identities for the IotHub.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id",
                            "type": "string",
                            "readOnly": true
                          },
                          "tenantId": {
                            "description": "Tenant Id",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                            "type": "string",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "required": [
                      "sku"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The next link.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get all the IoT hubs in a resource group",
        "description": "Get all the IoT hubs in a resource group.",
        "operationId": "IotHubResource_ListByResourceGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the IoT hubs in the resource group.",
            "schema": {
              "description": "The JSON-serialized array of IotHubDescription objects with a next link.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The array of IotHubDescription objects.",
                  "type": "array",
                  "items": {
                    "description": "The description of the IoT hub.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name.",
                        "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "The resource tags."
                      },
                      "etag": {
                        "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                        "type": "string"
                      },
                      "properties": {
                        "description": "IotHub properties",
                        "type": "object",
                        "properties": {
                          "authorizationPolicies": {
                            "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                            "type": "array",
                            "items": {
                              "description": "The properties of an IoT hub shared access policy.",
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "description": "The name of the shared access policy.",
                                  "type": "string"
                                },
                                "primaryKey": {
                                  "description": "The primary key.",
                                  "type": "string"
                                },
                                "secondaryKey": {
                                  "description": "The secondary key.",
                                  "type": "string"
                                },
                                "rights": {
                                  "description": "The permissions assigned to the shared access policy.",
                                  "enum": [
                                    "RegistryRead",
                                    "RegistryWrite",
                                    "ServiceConnect",
                                    "DeviceConnect",
                                    "RegistryRead, RegistryWrite",
                                    "RegistryRead, ServiceConnect",
                                    "RegistryRead, DeviceConnect",
                                    "RegistryWrite, ServiceConnect",
                                    "RegistryWrite, DeviceConnect",
                                    "ServiceConnect, DeviceConnect",
                                    "RegistryRead, RegistryWrite, ServiceConnect",
                                    "RegistryRead, RegistryWrite, DeviceConnect",
                                    "RegistryRead, ServiceConnect, DeviceConnect",
                                    "RegistryWrite, ServiceConnect, DeviceConnect",
                                    "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "AccessRights",
                                    "modelAsString": false
                                  }
                                }
                              },
                              "required": [
                                "keyName",
                                "rights"
                              ]
                            },
                            "x-ms-identifiers": [
                              "keyName"
                            ]
                          },
                          "disableLocalAuth": {
                            "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                            "type": "boolean"
                          },
                          "disableDeviceSAS": {
                            "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                            "type": "boolean"
                          },
                          "disableModuleSAS": {
                            "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                            "type": "boolean"
                          },
                          "restrictOutboundNetworkAccess": {
                            "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                            "type": "boolean"
                          },
                          "allowedFqdnList": {
                            "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                            "type": "array",
                            "items": {
                              "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                              "type": "string"
                            }
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "description": "Whether requests from Public Network are allowed",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PublicNetworkAccess"
                            }
                          },
                          "ipFilterRules": {
                            "description": "The IP filter rules.",
                            "type": "array",
                            "items": {
                              "description": "The IP filter rules for the IoT hub.",
                              "type": "object",
                              "properties": {
                                "filterName": {
                                  "description": "The name of the IP filter rule.",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "The desired action for requests captured by this rule.",
                                  "enum": [
                                    "Accept",
                                    "Reject"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IpFilterActionType",
                                    "modelAsString": false
                                  }
                                },
                                "ipMask": {
                                  "description": "A string that contains the IP address range in CIDR notation for the rule.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "filterName",
                                "action",
                                "ipMask"
                              ]
                            },
                            "x-ms-identifiers": [
                              "filterName"
                            ]
                          },
                          "networkRuleSets": {
                            "description": "Network Rule Set Properties of IotHub",
                            "type": "object",
                            "properties": {
                              "defaultAction": {
                                "type": "string",
                                "description": "Default Action for Network Rule Set",
                                "enum": [
                                  "Deny",
                                  "Allow"
                                ],
                                "x-ms-enum": {
                                  "name": "DefaultAction",
                                  "modelAsString": true
                                },
                                "default": "Deny"
                              },
                              "applyToBuiltInEventHubEndpoint": {
                                "type": "boolean",
                                "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                              },
                              "ipRules": {
                                "type": "array",
                                "items": {
                                  "description": "IP Rule to be applied as part of Network Rule Set",
                                  "type": "object",
                                  "properties": {
                                    "filterName": {
                                      "type": "string",
                                      "description": "Name of the IP filter rule."
                                    },
                                    "action": {
                                      "type": "string",
                                      "description": "IP Filter Action",
                                      "enum": [
                                        "Allow"
                                      ],
                                      "x-ms-enum": {
                                        "name": "NetworkRuleIPAction",
                                        "modelAsString": true
                                      },
                                      "default": "Allow"
                                    },
                                    "ipMask": {
                                      "type": "string",
                                      "description": "A string that contains the IP address range in CIDR notation for the rule."
                                    }
                                  },
                                  "required": [
                                    "filterName",
                                    "ipMask"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "filterName"
                                ],
                                "description": "List of IP Rules"
                              }
                            },
                            "required": [
                              "applyToBuiltInEventHubEndpoint",
                              "ipRules"
                            ]
                          },
                          "minTlsVersion": {
                            "type": "string",
                            "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                          },
                          "privateEndpointConnections": {
                            "description": "Private endpoint connections created on this IotHub",
                            "type": "array",
                            "items": {
                              "description": "The private endpoint connection of an IotHub",
                              "x-ms-azure-resource": true,
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource identifier."
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource name."
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource type."
                                },
                                "properties": {
                                  "description": "The properties of a private endpoint connection",
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The private endpoint property of a private endpoint connection",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "description": "The resource identifier."
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "The current state of a private endpoint connection",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The status of a private endpoint connection",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PrivateLinkServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description for the current state of a private endpoint connection"
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Actions required for a private endpoint connection"
                                        }
                                      },
                                      "required": [
                                        "status",
                                        "description"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state.",
                            "type": "string",
                            "readOnly": true
                          },
                          "state": {
                            "description": "The hub state.",
                            "type": "string",
                            "readOnly": true
                          },
                          "hostName": {
                            "description": "The name of the host.",
                            "type": "string",
                            "readOnly": true
                          },
                          "eventHubEndpoints": {
                            "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                              "type": "object",
                              "properties": {
                                "retentionTimeInDays": {
                                  "format": "int64",
                                  "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                                  "type": "integer"
                                },
                                "partitionCount": {
                                  "format": "int32",
                                  "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                                  "type": "integer"
                                },
                                "partitionIds": {
                                  "description": "The partition ids in the Event Hub-compatible endpoint.",
                                  "readOnly": true,
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "path": {
                                  "description": "The Event Hub-compatible name.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "endpoint": {
                                  "description": "The Event Hub-compatible endpoint.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          },
                          "routing": {
                            "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                            "type": "object",
                            "properties": {
                              "endpoints": {
                                "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                                "type": "object",
                                "properties": {
                                  "serviceBusQueues": {
                                    "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to service bus queue endpoint types.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Id of the service bus queue endpoint",
                                          "type": "string"
                                        },
                                        "connectionString": {
                                          "description": "The connection string of the service bus queue endpoint.",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                          "type": "string"
                                        },
                                        "entityPath": {
                                          "description": "Queue name on the service bus namespace",
                                          "type": "string"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the service bus queue endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing service bus queue endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the service bus queue endpoint.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the service bus queue endpoint.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "serviceBusTopics": {
                                    "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to service bus topic endpoint types.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Id of the service bus topic endpoint",
                                          "type": "string"
                                        },
                                        "connectionString": {
                                          "description": "The connection string of the service bus topic endpoint.",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                          "type": "string"
                                        },
                                        "entityPath": {
                                          "description": "Queue name on the service bus topic",
                                          "type": "string"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the service bus topic endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing service bus topic endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the service bus topic endpoint.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the service bus topic endpoint.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "eventHubs": {
                                    "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to an event hub endpoint.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Id of the event hub endpoint",
                                          "type": "string"
                                        },
                                        "connectionString": {
                                          "description": "The connection string of the event hub endpoint. ",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                          "type": "string"
                                        },
                                        "entityPath": {
                                          "description": "Event hub name on the event hub namespace",
                                          "type": "string"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the event hub endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing event hub endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the event hub endpoint.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the event hub endpoint.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "storageContainers": {
                                    "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to a storage container endpoint.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Id of the storage container endpoint",
                                          "type": "string"
                                        },
                                        "connectionString": {
                                          "description": "The connection string of the storage account.",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the storage endpoint. It must include the protocol https://",
                                          "type": "string"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the storage endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing storage endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the storage account.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the storage account.",
                                          "type": "string"
                                        },
                                        "containerName": {
                                          "description": "The name of storage container in the storage account.",
                                          "type": "string"
                                        },
                                        "fileNameFormat": {
                                          "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                          "type": "string"
                                        },
                                        "batchFrequencyInSeconds": {
                                          "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                          "format": "int32",
                                          "type": "integer",
                                          "maximum": 720,
                                          "minimum": 60
                                        },
                                        "maxChunkSizeInBytes": {
                                          "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                          "format": "int32",
                                          "type": "integer",
                                          "maximum": 524288000,
                                          "minimum": 10485760
                                        },
                                        "encoding": {
                                          "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                          "type": "string",
                                          "enum": [
                                            "Avro",
                                            "AvroDeflate",
                                            "JSON"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "containerName"
                                      ]
                                    }
                                  },
                                  "cosmosDBSqlContainers": {
                                    "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "The properties related to a cosmos DB sql container endpoint.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                          "type": "string",
                                          "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                        },
                                        "id": {
                                          "readOnly": true,
                                          "description": "Id of the cosmos DB sql container endpoint",
                                          "type": "string"
                                        },
                                        "subscriptionId": {
                                          "description": "The subscription identifier of the cosmos DB account.",
                                          "type": "string"
                                        },
                                        "resourceGroup": {
                                          "description": "The name of the resource group of the cosmos DB account.",
                                          "type": "string"
                                        },
                                        "endpointUri": {
                                          "description": "The url of the cosmos DB account. It must include the protocol https://",
                                          "type": "string",
                                          "format": "uri"
                                        },
                                        "authenticationType": {
                                          "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                          "enum": [
                                            "keyBased",
                                            "identityBased"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "authenticationType",
                                            "modelAsString": true
                                          }
                                        },
                                        "identity": {
                                          "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                          "type": "object",
                                          "properties": {
                                            "userAssignedIdentity": {
                                              "type": "string",
                                              "description": "The user assigned identity."
                                            }
                                          }
                                        },
                                        "primaryKey": {
                                          "description": "The primary key of the cosmos DB account.",
                                          "type": "string",
                                          "x-ms-secret": true
                                        },
                                        "secondaryKey": {
                                          "description": "The secondary key of the cosmos DB account.",
                                          "type": "string",
                                          "x-ms-secret": true
                                        },
                                        "databaseName": {
                                          "description": "The name of the cosmos DB database in the cosmos DB account.",
                                          "type": "string"
                                        },
                                        "containerName": {
                                          "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                          "type": "string"
                                        },
                                        "partitionKeyName": {
                                          "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                          "type": "string"
                                        },
                                        "partitionKeyTemplate": {
                                          "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "endpointUri",
                                        "databaseName",
                                        "containerName"
                                      ]
                                    }
                                  }
                                }
                              },
                              "routes": {
                                "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                                "type": "array",
                                "items": {
                                  "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                      "type": "string",
                                      "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                    },
                                    "source": {
                                      "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                                      "enum": [
                                        "Invalid",
                                        "DeviceMessages",
                                        "TwinChangeEvents",
                                        "DeviceLifecycleEvents",
                                        "DeviceJobLifecycleEvents",
                                        "DeviceConnectionStateEvents"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "RoutingSource",
                                        "modelAsString": true
                                      }
                                    },
                                    "condition": {
                                      "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                      "type": "string"
                                    },
                                    "endpointNames": {
                                      "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                                      "minItems": 1,
                                      "maxItems": 1,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "isEnabled": {
                                      "description": "Used to specify whether a route is enabled.",
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "endpointNames",
                                    "source",
                                    "isEnabled"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "fallbackRoute": {
                                "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                                    "type": "string"
                                  },
                                  "source": {
                                    "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                                    "enum": [
                                      "DeviceMessages"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "RoutingSource",
                                      "modelAsString": true
                                    }
                                  },
                                  "condition": {
                                    "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                                    "type": "string"
                                  },
                                  "endpointNames": {
                                    "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                                    "minItems": 1,
                                    "maxItems": 1,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "isEnabled": {
                                    "description": "Used to specify whether the fallback route is enabled.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "endpointNames",
                                  "source",
                                  "isEnabled"
                                ]
                              },
                              "enrichments": {
                                "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                                "type": "array",
                                "items": {
                                  "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "The key or name for the enrichment property.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The value for the enrichment property.",
                                      "type": "string"
                                    },
                                    "endpointNames": {
                                      "description": "The list of endpoints for which the enrichment is applied to the message.",
                                      "minItems": 1,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "value",
                                    "endpointNames"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "key"
                                ]
                              }
                            }
                          },
                          "storageEndpoints": {
                            "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The properties of the Azure Storage endpoint for file upload.",
                              "type": "object",
                              "properties": {
                                "sasTtlAsIso8601": {
                                  "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                                  "type": "string",
                                  "format": "duration"
                                },
                                "connectionString": {
                                  "description": "The connection string for the Azure Storage account to which files are uploaded.",
                                  "type": "string"
                                },
                                "containerName": {
                                  "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                                  "type": "string"
                                },
                                "authenticationType": {
                                  "description": "Specifies authentication type being used for connecting to the storage account.",
                                  "enum": [
                                    "keyBased",
                                    "identityBased"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "AuthenticationType",
                                    "modelAsString": true
                                  }
                                },
                                "identity": {
                                  "description": "Managed identity properties of storage endpoint for file upload.",
                                  "type": "object",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned identity."
                                    }
                                  }
                                }
                              },
                              "required": [
                                "connectionString",
                                "containerName"
                              ]
                            }
                          },
                          "messagingEndpoints": {
                            "description": "The messaging endpoint properties for the file upload notification queue.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The properties of the messaging endpoints used by this IoT hub.",
                              "type": "object",
                              "properties": {
                                "lockDurationAsIso8601": {
                                  "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                                  "type": "string",
                                  "format": "duration"
                                },
                                "ttlAsIso8601": {
                                  "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                                  "type": "string",
                                  "format": "duration"
                                },
                                "maxDeliveryCount": {
                                  "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 100
                                }
                              }
                            }
                          },
                          "enableFileUploadNotifications": {
                            "description": "If True, file upload notifications are enabled.",
                            "type": "boolean"
                          },
                          "cloudToDevice": {
                            "description": "The IoT hub cloud-to-device messaging properties.",
                            "type": "object",
                            "properties": {
                              "maxDeliveryCount": {
                                "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                "format": "int32",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              },
                              "defaultTtlAsIso8601": {
                                "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                "type": "string",
                                "format": "duration"
                              },
                              "feedback": {
                                "description": "The properties of the feedback queue for cloud-to-device messages.",
                                "type": "object",
                                "properties": {
                                  "lockDurationAsIso8601": {
                                    "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                    "type": "string",
                                    "format": "duration"
                                  },
                                  "ttlAsIso8601": {
                                    "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                    "type": "string",
                                    "format": "duration"
                                  },
                                  "maxDeliveryCount": {
                                    "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                                    "format": "int32",
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          },
                          "comments": {
                            "description": "IoT hub comments.",
                            "type": "string"
                          },
                          "features": {
                            "description": "The capabilities and features enabled for the IoT hub.",
                            "enum": [
                              "None",
                              "DeviceManagement"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "Capabilities",
                              "modelAsString": true
                            }
                          },
                          "locations": {
                            "description": "Primary and secondary location for iot hub",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Public representation of one of the locations where a resource is provisioned.",
                              "type": "object",
                              "properties": {
                                "location": {
                                  "description": "The name of the Azure region",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                                  "enum": [
                                    "primary",
                                    "secondary"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "IotHubReplicaRoleType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "location"
                            ]
                          },
                          "enableDataResidency": {
                            "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                            "type": "boolean"
                          }
                        }
                      },
                      "sku": {
                        "description": "IotHub SKU info",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the SKU.",
                            "enum": [
                              "F1",
                              "S1",
                              "S2",
                              "S3",
                              "B1",
                              "B2",
                              "B3"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubSku",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "description": "The billing tier for the IoT hub.",
                            "enum": [
                              "Free",
                              "Standard",
                              "Basic"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "IotHubSkuTier",
                              "modelAsString": false
                            }
                          },
                          "capacity": {
                            "format": "int64",
                            "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "identity": {
                        "description": "The managed identities for the IotHub.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id",
                            "type": "string",
                            "readOnly": true
                          },
                          "tenantId": {
                            "description": "Tenant Id",
                            "type": "string",
                            "readOnly": true
                          },
                          "type": {
                            "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                            "type": "string",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "required": [
                      "sku"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The next link.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get the statistics from an IoT hub",
        "description": "Get the statistics from an IoT hub.",
        "operationId": "IotHubResource_GetStats",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains JSON-serialized statistics from the identity registry in the IoT hub.",
            "schema": {
              "description": "Identity registry statistics.",
              "type": "object",
              "properties": {
                "totalDeviceCount": {
                  "format": "int64",
                  "description": "The total count of devices in the identity registry.",
                  "type": "integer",
                  "readOnly": true
                },
                "enabledDeviceCount": {
                  "format": "int64",
                  "description": "The count of enabled devices in the identity registry.",
                  "type": "integer",
                  "readOnly": true
                },
                "disabledDeviceCount": {
                  "format": "int64",
                  "description": "The count of disabled devices in the identity registry.",
                  "type": "integer",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get the list of valid SKUs for an IoT hub",
        "description": "Get the list of valid SKUs for an IoT hub.",
        "operationId": "IotHubResource_GetValidSkus",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the valid SKUs for this IoT hub.",
            "schema": {
              "description": "The JSON-serialized array of IotHubSkuDescription objects with a next link.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The array of IotHubSkuDescription.",
                  "type": "array",
                  "items": {
                    "description": "SKU properties.",
                    "type": "object",
                    "properties": {
                      "resourceType": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "sku": {
                        "description": "The type of the resource.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the SKU.",
                            "enum": [
                              "F1",
                              "S1",
                              "S2",
                              "S3",
                              "B1",
                              "B2",
                              "B3"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubSku",
                              "modelAsString": true
                            }
                          },
                          "tier": {
                            "description": "The billing tier for the IoT hub.",
                            "enum": [
                              "Free",
                              "Standard",
                              "Basic"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "IotHubSkuTier",
                              "modelAsString": false
                            }
                          },
                          "capacity": {
                            "format": "int64",
                            "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "capacity": {
                        "description": "IotHub capacity",
                        "type": "object",
                        "properties": {
                          "minimum": {
                            "format": "int64",
                            "description": "The minimum number of units.",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1,
                            "readOnly": true
                          },
                          "maximum": {
                            "format": "int64",
                            "description": "The maximum number of units.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "default": {
                            "format": "int64",
                            "description": "The default number of units.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "scaleType": {
                            "description": "The type of the scaling enabled.",
                            "enum": [
                              "Automatic",
                              "Manual",
                              "None"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IotHubScaleType",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "sku",
                      "capacity"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "The next link.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT hub",
        "description": "Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT hub.",
        "operationId": "IotHubResource_ListEventHubConsumerGroups",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "eventHubEndpointName",
            "in": "path",
            "description": "The name of the Event Hub-compatible endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized list of the consumer groups in the Event Hub-compatible endpoint in this IoT hub",
            "schema": {
              "description": "The JSON-serialized array of Event Hub-compatible consumer group names with a next link.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of consumer groups objects",
                  "type": "array",
                  "items": {
                    "description": "The properties of the EventHubConsumerGroupInfo object.",
                    "x-ms-azure-resource": true,
                    "type": "object",
                    "properties": {
                      "properties": {
                        "description": "The tags.",
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "id": {
                        "description": "The Event Hub-compatible consumer group identifier.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The Event Hub-compatible consumer group name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "the resource type.",
                        "type": "string",
                        "readOnly": true
                      },
                      "etag": {
                        "description": "The etag.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "The next link.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub",
        "description": "Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.",
        "operationId": "IotHubResource_GetEventHubConsumerGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "eventHubEndpointName",
            "in": "path",
            "description": "The name of the Event Hub-compatible endpoint in the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the consumer group to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized consumer group.",
            "schema": {
              "description": "The properties of the EventHubConsumerGroupInfo object.",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The tags.",
                  "type": "object",
                  "additionalProperties": {}
                },
                "id": {
                  "description": "The Event Hub-compatible consumer group identifier.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The Event Hub-compatible consumer group name.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "the resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The etag.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "PUT"
        ],
        "summary": "Add a consumer group to an Event Hub-compatible endpoint in an IoT hub",
        "description": "Add a consumer group to an Event Hub-compatible endpoint in an IoT hub.",
        "operationId": "IotHubResource_CreateEventHubConsumerGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "eventHubEndpointName",
            "in": "path",
            "description": "The name of the Event Hub-compatible endpoint in the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the consumer group to add.",
            "required": true,
            "type": "string"
          },
          {
            "name": "consumerGroupBody",
            "in": "body",
            "description": "The consumer group to add.",
            "required": true,
            "schema": {
              "description": "The EventHub consumer group.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The EventHub consumer group name.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "EventHub consumer group name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation.",
            "schema": {
              "description": "The properties of the EventHubConsumerGroupInfo object.",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The tags.",
                  "type": "object",
                  "additionalProperties": {}
                },
                "id": {
                  "description": "The Event Hub-compatible consumer group identifier.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The Event Hub-compatible consumer group name.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "the resource type.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The etag.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "DELETE"
        ],
        "summary": "Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub",
        "description": "Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub.",
        "operationId": "IotHubResource_DeleteEventHubConsumerGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "eventHubEndpointName",
            "in": "path",
            "description": "The name of the Event Hub-compatible endpoint in the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the consumer group to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation."
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry",
        "description": "Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.",
        "operationId": "IotHubResource_ListJobs",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The response contains a JSON-serialized array of all the jobs in the IoT hub.",
            "schema": {
              "description": "The JSON-serialized array of JobResponse objects with a next link.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The array of JobResponse objects.",
                  "type": "array",
                  "items": {
                    "description": "The properties of the Job Response object.",
                    "type": "object",
                    "properties": {
                      "jobId": {
                        "description": "The job identifier.",
                        "type": "string",
                        "readOnly": true
                      },
                      "startTimeUtc": {
                        "format": "date-time-rfc1123",
                        "description": "The start time of the job.",
                        "type": "string",
                        "readOnly": true
                      },
                      "endTimeUtc": {
                        "format": "date-time-rfc1123",
                        "description": "The time the job stopped processing.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the job.",
                        "enum": [
                          "unknown",
                          "export",
                          "import",
                          "backup",
                          "readDeviceProperties",
                          "writeDeviceProperties",
                          "updateDeviceConfiguration",
                          "rebootDevice",
                          "factoryResetDevice",
                          "firmwareUpdate"
                        ],
                        "type": "string",
                        "readOnly": true,
                        "x-ms-enum": {
                          "name": "JobType",
                          "modelAsString": true
                        }
                      },
                      "status": {
                        "description": "The status of the job.",
                        "enum": [
                          "unknown",
                          "enqueued",
                          "running",
                          "completed",
                          "failed",
                          "cancelled"
                        ],
                        "type": "string",
                        "readOnly": true,
                        "x-ms-enum": {
                          "name": "JobStatus",
                          "modelAsString": false
                        }
                      },
                      "failureReason": {
                        "description": "If status == failed, this string containing the reason for the failure.",
                        "type": "string",
                        "readOnly": true
                      },
                      "statusMessage": {
                        "description": "The status message for the job.",
                        "type": "string",
                        "readOnly": true
                      },
                      "parentJobId": {
                        "description": "The job identifier of the parent job, if any.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "The next link.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry",
        "description": "Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.",
        "operationId": "IotHubResource_GetJob",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The response contains a JSON-serialized description of the job in the IoT hub.",
            "schema": {
              "description": "The properties of the Job Response object.",
              "type": "object",
              "properties": {
                "jobId": {
                  "description": "The job identifier.",
                  "type": "string",
                  "readOnly": true
                },
                "startTimeUtc": {
                  "format": "date-time-rfc1123",
                  "description": "The start time of the job.",
                  "type": "string",
                  "readOnly": true
                },
                "endTimeUtc": {
                  "format": "date-time-rfc1123",
                  "description": "The time the job stopped processing.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the job.",
                  "enum": [
                    "unknown",
                    "export",
                    "import",
                    "backup",
                    "readDeviceProperties",
                    "writeDeviceProperties",
                    "updateDeviceConfiguration",
                    "rebootDevice",
                    "factoryResetDevice",
                    "firmwareUpdate"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "JobType",
                    "modelAsString": true
                  }
                },
                "status": {
                  "description": "The status of the job.",
                  "enum": [
                    "unknown",
                    "enqueued",
                    "running",
                    "completed",
                    "failed",
                    "cancelled"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "JobStatus",
                    "modelAsString": false
                  }
                },
                "failureReason": {
                  "description": "If status == failed, this string containing the reason for the failure.",
                  "type": "string",
                  "readOnly": true
                },
                "statusMessage": {
                  "description": "The status message for the job.",
                  "type": "string",
                  "readOnly": true
                },
                "parentJobId": {
                  "description": "The job identifier of the parent job, if any.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get the quota metrics for an IoT hub",
        "description": "Get the quota metrics for an IoT hub.",
        "operationId": "IotHubResource_GetQuotaMetrics",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The response contains a JSON-serialized array of the quota metrics for the IoT hub.",
            "schema": {
              "description": "The JSON-serialized array of IotHubQuotaMetricInfo objects with a next link.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The array of quota metrics objects.",
                  "type": "array",
                  "items": {
                    "description": "Quota metrics properties.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the quota metric.",
                        "type": "string",
                        "readOnly": true
                      },
                      "currentValue": {
                        "format": "int64",
                        "description": "The current value for the quota metric.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "maxValue": {
                        "format": "int64",
                        "description": "The maximum value of the quota metric.",
                        "type": "integer",
                        "readOnly": true
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "The next link.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routingEndpointsHealth": {
      "get": {
        "tags": [
          "GET"
        ],
        "operationId": "IotHubResource_GetEndpointHealth",
        "summary": "Get the health for routing endpoints",
        "description": "Get the health for routing endpoints.",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iotHubName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The JSON-serialized array of EndpointHealthData objects with a next link.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "JSON-serialized array of Endpoint health data",
                  "type": "array",
                  "items": {
                    "description": "The health data for an endpoint",
                    "type": "object",
                    "properties": {
                      "endpointId": {
                        "description": "Id of the endpoint",
                        "type": "string"
                      },
                      "healthStatus": {
                        "description": "Health statuses have following meanings. The 'healthy' status shows that the endpoint is accepting messages as expected. The 'unhealthy' status shows that the endpoint is not accepting messages as expected and IoT Hub is retrying to send data to this endpoint. The status of an unhealthy endpoint will be updated to healthy when IoT Hub has established an eventually consistent state of health. The 'dead' status shows that the endpoint is not accepting messages, after IoT Hub retried sending messages for the retrial period. See IoT Hub metrics to identify errors and monitor issues with endpoints. The 'unknown' status shows that the IoT Hub has not established a connection with the endpoint. No messages have been delivered to or rejected from this endpoint",
                        "enum": [
                          "unknown",
                          "healthy",
                          "degraded",
                          "unhealthy",
                          "dead"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "EndpointHealthStatus",
                          "modelAsString": true
                        }
                      },
                      "lastKnownError": {
                        "description": "Last error obtained when a message failed to be delivered to iot hub",
                        "type": "string"
                      },
                      "lastKnownErrorTime": {
                        "description": "Time at which the last known error occurred",
                        "type": "string",
                        "format": "date-time-rfc1123"
                      },
                      "lastSuccessfulSendAttemptTime": {
                        "description": "Last time iot hub successfully sent a message to the endpoint",
                        "type": "string",
                        "format": "date-time-rfc1123"
                      },
                      "lastSendAttemptTime": {
                        "description": "Last time iot hub tried to send a message to the endpoint",
                        "type": "string",
                        "format": "date-time-rfc1123"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "Link to more results",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkNameAvailability": {
      "post": {
        "tags": [
          "POST"
        ],
        "summary": "Check if an IoT hub name is available",
        "description": "Check if an IoT hub name is available.",
        "operationId": "IotHubResource_CheckNameAvailability",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationInputs",
            "in": "body",
            "description": "Set the name parameter in the OperationInputs structure to the name of the IoT hub to check.",
            "required": true,
            "schema": {
              "description": "Input values.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the IoT hub to check.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the IoT hub name is available. If the name is not available, the body contains the reason.",
            "schema": {
              "description": "The properties indicating whether a given IoT hub name is available.",
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "description": "The value which indicates whether the provided name is available.",
                  "type": "boolean",
                  "readOnly": true
                },
                "reason": {
                  "description": "The reason for unavailability.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "IotHubNameUnavailabilityReason",
                    "modelAsString": false
                  }
                },
                "message": {
                  "description": "The detailed reason message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/usages": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get the number of iot hubs in the subscription",
        "description": "Get the number of free and paid iot hubs in the subscription",
        "operationId": "ResourceProviderCommon_GetSubscriptionQuota",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "Json-serialized array of User subscription quota response",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "User subscription quota response",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "IotHub type id",
                        "type": "string"
                      },
                      "type": {
                        "description": "Response type",
                        "type": "string"
                      },
                      "unit": {
                        "description": "Unit of IotHub type",
                        "type": "string"
                      },
                      "currentValue": {
                        "description": "Current number of IotHub type",
                        "format": "int32",
                        "type": "integer"
                      },
                      "limit": {
                        "description": "Numerical limit on IotHub type",
                        "format": "int32",
                        "type": "integer"
                      },
                      "name": {
                        "description": "IotHub type",
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "IotHub type",
                            "type": "string"
                          },
                          "localizedValue": {
                            "description": "Localized value of name",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testall": {
      "post": {
        "tags": [
          "POST"
        ],
        "operationId": "IotHubResource_TestAllRoutes",
        "summary": "Test all routes",
        "description": "Test all routes configured in this Iot Hub",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "description": "Input for testing all routes",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Input for testing all routes",
              "type": "object",
              "properties": {
                "routingSource": {
                  "description": "Routing source",
                  "enum": [
                    "Invalid",
                    "DeviceMessages",
                    "TwinChangeEvents",
                    "DeviceLifecycleEvents",
                    "DeviceJobLifecycleEvents",
                    "DeviceConnectionStateEvents"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "RoutingSource",
                    "modelAsString": true
                  }
                },
                "message": {
                  "description": "Routing message",
                  "type": "object",
                  "properties": {
                    "body": {
                      "description": "Body of routing message",
                      "type": "string"
                    },
                    "appProperties": {
                      "description": "App properties",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "systemProperties": {
                      "description": "System properties",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "twin": {
                  "description": "Routing Twin Reference",
                  "type": "object",
                  "properties": {
                    "tags": {
                      "description": "Twin Tags",
                      "type": "object"
                    },
                    "properties": {
                      "properties": {
                        "desired": {
                          "description": "Twin desired properties",
                          "type": "object"
                        },
                        "reported": {
                          "description": "Twin desired properties",
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "iotHubName",
            "description": "IotHub to be tested",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "resource group which Iot Hub belongs to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of testing all routes",
              "type": "object",
              "properties": {
                "routes": {
                  "description": "JSON-serialized array of matched routes",
                  "type": "array",
                  "items": {
                    "description": "Routes that matched",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                            "type": "string",
                            "pattern": "^[A-Za-z0-9-._]{1,64}$"
                          },
                          "source": {
                            "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                            "enum": [
                              "Invalid",
                              "DeviceMessages",
                              "TwinChangeEvents",
                              "DeviceLifecycleEvents",
                              "DeviceJobLifecycleEvents",
                              "DeviceConnectionStateEvents"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "RoutingSource",
                              "modelAsString": true
                            }
                          },
                          "condition": {
                            "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                            "type": "string"
                          },
                          "endpointNames": {
                            "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                            "minItems": 1,
                            "maxItems": 1,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "isEnabled": {
                            "description": "Used to specify whether a route is enabled.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "endpointNames",
                          "source",
                          "isEnabled"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testnew": {
      "post": {
        "tags": [
          "POST"
        ],
        "operationId": "IotHubResource_TestRoute",
        "summary": "Test the new route",
        "description": "Test the new route for this Iot Hub",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "description": "Route that needs to be tested",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "route"
              ],
              "description": "Input for testing route",
              "type": "object",
              "properties": {
                "message": {
                  "description": "Routing message",
                  "type": "object",
                  "properties": {
                    "body": {
                      "description": "Body of routing message",
                      "type": "string"
                    },
                    "appProperties": {
                      "description": "App properties",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "systemProperties": {
                      "description": "System properties",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "route": {
                  "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                      "type": "string",
                      "pattern": "^[A-Za-z0-9-._]{1,64}$"
                    },
                    "source": {
                      "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                      "enum": [
                        "Invalid",
                        "DeviceMessages",
                        "TwinChangeEvents",
                        "DeviceLifecycleEvents",
                        "DeviceJobLifecycleEvents",
                        "DeviceConnectionStateEvents"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "RoutingSource",
                        "modelAsString": true
                      }
                    },
                    "condition": {
                      "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                      "type": "string"
                    },
                    "endpointNames": {
                      "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                      "minItems": 1,
                      "maxItems": 1,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isEnabled": {
                      "description": "Used to specify whether a route is enabled.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "endpointNames",
                    "source",
                    "isEnabled"
                  ]
                },
                "twin": {
                  "description": "Routing Twin Reference",
                  "type": "object",
                  "properties": {
                    "tags": {
                      "description": "Twin Tags",
                      "type": "object"
                    },
                    "properties": {
                      "properties": {
                        "desired": {
                          "description": "Twin desired properties",
                          "type": "object"
                        },
                        "reported": {
                          "description": "Twin desired properties",
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "iotHubName",
            "description": "IotHub to be tested",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "resource group which Iot Hub belongs to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of testing one route",
              "type": "object",
              "properties": {
                "result": {
                  "description": "Result of testing route",
                  "enum": [
                    "undefined",
                    "false",
                    "true"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "TestResultStatus",
                    "modelAsString": true
                  }
                },
                "details": {
                  "description": "Detailed result of testing route",
                  "type": "object",
                  "properties": {
                    "compilationErrors": {
                      "description": "JSON-serialized list of route compilation errors",
                      "type": "array",
                      "items": {
                        "description": "Compilation error when evaluating route",
                        "type": "object",
                        "properties": {
                          "message": {
                            "description": "Route error message",
                            "type": "string"
                          },
                          "severity": {
                            "description": "Severity of the route error",
                            "enum": [
                              "error",
                              "warning"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "RouteErrorSeverity",
                              "modelAsString": true
                            }
                          },
                          "location": {
                            "description": "Location where the route error happened",
                            "type": "object",
                            "properties": {
                              "start": {
                                "description": "Start where the route error happened",
                                "type": "object",
                                "properties": {
                                  "line": {
                                    "description": "Line where the route error happened",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "column": {
                                    "description": "Column where the route error happened",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "end": {
                                "description": "End where the route error happened",
                                "type": "object",
                                "properties": {
                                  "line": {
                                    "description": "Line where the route error happened",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "column": {
                                    "description": "Column where the route error happened",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/listkeys": {
      "post": {
        "tags": [
          "POST"
        ],
        "summary": "Get the security metadata for an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security",
        "description": "Get the security metadata for an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.",
        "operationId": "IotHubResource_ListKeys",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of shared access policies, including keys, that you can use to access the IoT hub endpoints.",
            "schema": {
              "description": "The list of shared access policies with a next link.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of shared access policies.",
                  "type": "array",
                  "items": {
                    "description": "The properties of an IoT hub shared access policy.",
                    "type": "object",
                    "properties": {
                      "keyName": {
                        "description": "The name of the shared access policy.",
                        "type": "string"
                      },
                      "primaryKey": {
                        "description": "The primary key.",
                        "type": "string"
                      },
                      "secondaryKey": {
                        "description": "The secondary key.",
                        "type": "string"
                      },
                      "rights": {
                        "description": "The permissions assigned to the shared access policy.",
                        "enum": [
                          "RegistryRead",
                          "RegistryWrite",
                          "ServiceConnect",
                          "DeviceConnect",
                          "RegistryRead, RegistryWrite",
                          "RegistryRead, ServiceConnect",
                          "RegistryRead, DeviceConnect",
                          "RegistryWrite, ServiceConnect",
                          "RegistryWrite, DeviceConnect",
                          "ServiceConnect, DeviceConnect",
                          "RegistryRead, RegistryWrite, ServiceConnect",
                          "RegistryRead, RegistryWrite, DeviceConnect",
                          "RegistryRead, ServiceConnect, DeviceConnect",
                          "RegistryWrite, ServiceConnect, DeviceConnect",
                          "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      }
                    },
                    "required": [
                      "keyName",
                      "rights"
                    ]
                  },
                  "x-ms-identifiers": [
                    "keyName"
                  ]
                },
                "nextLink": {
                  "description": "The next link.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubKeys/{keyName}/listkeys": {
      "post": {
        "tags": [
          "POST"
        ],
        "summary": "Get a shared access policy by name from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security",
        "description": "Get a shared access policy by name from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.",
        "operationId": "IotHubResource_GetKeysForKeyName",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the shared access policy.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized shared access policy, including keys, that you can use to access one or more IoT hub endpoints.",
            "schema": {
              "description": "The properties of an IoT hub shared access policy.",
              "type": "object",
              "properties": {
                "keyName": {
                  "description": "The name of the shared access policy.",
                  "type": "string"
                },
                "primaryKey": {
                  "description": "The primary key.",
                  "type": "string"
                },
                "secondaryKey": {
                  "description": "The secondary key.",
                  "type": "string"
                },
                "rights": {
                  "description": "The permissions assigned to the shared access policy.",
                  "enum": [
                    "RegistryRead",
                    "RegistryWrite",
                    "ServiceConnect",
                    "DeviceConnect",
                    "RegistryRead, RegistryWrite",
                    "RegistryRead, ServiceConnect",
                    "RegistryRead, DeviceConnect",
                    "RegistryWrite, ServiceConnect",
                    "RegistryWrite, DeviceConnect",
                    "ServiceConnect, DeviceConnect",
                    "RegistryRead, RegistryWrite, ServiceConnect",
                    "RegistryRead, RegistryWrite, DeviceConnect",
                    "RegistryRead, ServiceConnect, DeviceConnect",
                    "RegistryWrite, ServiceConnect, DeviceConnect",
                    "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "AccessRights",
                    "modelAsString": false
                  }
                }
              },
              "required": [
                "keyName",
                "rights"
              ]
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/exportDevices": {
      "post": {
        "tags": [
          "POST"
        ],
        "summary": "Exports all the device identities in the IoT hub identity registry to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities",
        "description": "Exports all the device identities in the IoT hub identity registry to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.",
        "operationId": "IotHubResource_ExportDevices",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "exportDevicesParameters",
            "in": "body",
            "description": "The parameters that specify the export devices operation.",
            "required": true,
            "schema": {
              "description": "Use to provide parameters when requesting an export of all devices in the IoT hub.",
              "type": "object",
              "properties": {
                "exportBlobContainerUri": {
                  "description": "The export blob container URI.",
                  "type": "string"
                },
                "excludeKeys": {
                  "description": "The value indicating whether keys should be excluded during export.",
                  "type": "boolean"
                },
                "exportBlobName": {
                  "description": "The name of the blob that will be created in the provided output blob container. This blob will contain the exported device registry information for the IoT Hub.",
                  "type": "string"
                },
                "authenticationType": {
                  "description": "Specifies authentication type being used for connecting to the storage account.",
                  "enum": [
                    "keyBased",
                    "identityBased"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "AuthenticationType",
                    "modelAsString": true
                  }
                },
                "identity": {
                  "description": "Managed identity properties of storage endpoint for export devices.",
                  "type": "object",
                  "properties": {
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "The user assigned identity."
                    }
                  }
                },
                "includeConfigurations": {
                  "description": "The value indicating whether configurations should be exported.",
                  "type": "boolean"
                },
                "configurationsBlobName": {
                  "description": "The name of the blob that will be created in the provided output blob container. This blob will contain the exported configurations for the Iot Hub.",
                  "type": "string"
                }
              },
              "required": [
                "exportBlobContainerUri",
                "excludeKeys"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The properties of the Job Response object.",
              "type": "object",
              "properties": {
                "jobId": {
                  "description": "The job identifier.",
                  "type": "string",
                  "readOnly": true
                },
                "startTimeUtc": {
                  "format": "date-time-rfc1123",
                  "description": "The start time of the job.",
                  "type": "string",
                  "readOnly": true
                },
                "endTimeUtc": {
                  "format": "date-time-rfc1123",
                  "description": "The time the job stopped processing.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the job.",
                  "enum": [
                    "unknown",
                    "export",
                    "import",
                    "backup",
                    "readDeviceProperties",
                    "writeDeviceProperties",
                    "updateDeviceConfiguration",
                    "rebootDevice",
                    "factoryResetDevice",
                    "firmwareUpdate"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "JobType",
                    "modelAsString": true
                  }
                },
                "status": {
                  "description": "The status of the job.",
                  "enum": [
                    "unknown",
                    "enqueued",
                    "running",
                    "completed",
                    "failed",
                    "cancelled"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "JobStatus",
                    "modelAsString": false
                  }
                },
                "failureReason": {
                  "description": "If status == failed, this string containing the reason for the failure.",
                  "type": "string",
                  "readOnly": true
                },
                "statusMessage": {
                  "description": "The status message for the job.",
                  "type": "string",
                  "readOnly": true
                },
                "parentJobId": {
                  "description": "The job identifier of the parent job, if any.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices": {
      "post": {
        "tags": [
          "POST"
        ],
        "summary": "Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities",
        "description": "Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.",
        "operationId": "IotHubResource_ImportDevices",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "importDevicesParameters",
            "in": "body",
            "description": "The parameters that specify the import devices operation.",
            "required": true,
            "schema": {
              "description": "Use to provide parameters when requesting an import of all devices in the hub.",
              "type": "object",
              "properties": {
                "inputBlobContainerUri": {
                  "description": "The input blob container URI.",
                  "type": "string"
                },
                "outputBlobContainerUri": {
                  "description": "The output blob container URI.",
                  "type": "string"
                },
                "inputBlobName": {
                  "description": "The blob name to be used when importing from the provided input blob container.",
                  "type": "string"
                },
                "outputBlobName": {
                  "description": "The blob name to use for storing the status of the import job.",
                  "type": "string"
                },
                "authenticationType": {
                  "description": "Specifies authentication type being used for connecting to the storage account.",
                  "enum": [
                    "keyBased",
                    "identityBased"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "AuthenticationType",
                    "modelAsString": true
                  }
                },
                "identity": {
                  "description": "Managed identity properties of storage endpoint for import devices.",
                  "type": "object",
                  "properties": {
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "The user assigned identity."
                    }
                  }
                },
                "includeConfigurations": {
                  "description": "The value indicating whether configurations should be imported.",
                  "type": "boolean"
                },
                "configurationsBlobName": {
                  "description": "The blob name to be used when importing configurations from the provided input blob container.",
                  "type": "string"
                }
              },
              "required": [
                "inputBlobContainerUri",
                "outputBlobContainerUri"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The properties of the Job Response object.",
              "type": "object",
              "properties": {
                "jobId": {
                  "description": "The job identifier.",
                  "type": "string",
                  "readOnly": true
                },
                "startTimeUtc": {
                  "format": "date-time-rfc1123",
                  "description": "The start time of the job.",
                  "type": "string",
                  "readOnly": true
                },
                "endTimeUtc": {
                  "format": "date-time-rfc1123",
                  "description": "The time the job stopped processing.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the job.",
                  "enum": [
                    "unknown",
                    "export",
                    "import",
                    "backup",
                    "readDeviceProperties",
                    "writeDeviceProperties",
                    "updateDeviceConfiguration",
                    "rebootDevice",
                    "factoryResetDevice",
                    "firmwareUpdate"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "JobType",
                    "modelAsString": true
                  }
                },
                "status": {
                  "description": "The status of the job.",
                  "enum": [
                    "unknown",
                    "enqueued",
                    "running",
                    "completed",
                    "failed",
                    "cancelled"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "JobStatus",
                    "modelAsString": false
                  }
                },
                "failureReason": {
                  "description": "If status == failed, this string containing the reason for the failure.",
                  "type": "string",
                  "readOnly": true
                },
                "statusMessage": {
                  "description": "The status message for the job.",
                  "type": "string",
                  "readOnly": true
                },
                "parentJobId": {
                  "description": "The job identifier of the parent job, if any.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Get the certificate list.",
        "description": "Returns the list of certificates.",
        "operationId": "Certificates_ListByIotHub",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all the certificate list.",
            "schema": {
              "description": "The JSON-serialized array of Certificate objects.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The array of Certificate objects.",
                  "type": "array",
                  "items": {
                    "description": "The X509 Certificate.",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "description": "The description of an X509 CA Certificate.",
                        "type": "object",
                        "properties": {
                          "subject": {
                            "description": "The certificate's subject name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "expiry": {
                            "description": "The certificate's expiration date and time.",
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "readOnly": true
                          },
                          "thumbprint": {
                            "description": "The certificate's thumbprint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "isVerified": {
                            "description": "Determines whether certificate has been verified.",
                            "type": "boolean"
                          },
                          "created": {
                            "description": "The certificate's create date and time.",
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "readOnly": true
                          },
                          "updated": {
                            "description": "The certificate's last update date and time.",
                            "type": "string",
                            "format": "date-time-rfc1123",
                            "readOnly": true
                          },
                          "certificate": {
                            "description": "The certificate content",
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "description": "The name of the certificate.",
                        "type": "string",
                        "readOnly": true
                      },
                      "etag": {
                        "description": "The entity tag.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Get the certificate.",
        "description": "Returns the certificate.",
        "operationId": "Certificates_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the certificate.",
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The description of an X509 CA Certificate.",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean"
                    },
                    "created": {
                      "description": "The certificate's create date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "certificate": {
                      "description": "The certificate content",
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                }
              },
              "x-ms-azure-resource": true
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Certificates"
        ],
        "summary": "Upload the certificate to the IoT hub.",
        "description": "Adds new or replaces existing certificate.",
        "operationId": "Certificates_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateDescription",
            "in": "body",
            "description": "The certificate body.",
            "required": true,
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The description of an X509 CA Certificate.",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean"
                    },
                    "created": {
                      "description": "The certificate's create date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "certificate": {
                      "description": "The certificate content",
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                }
              },
              "x-ms-azure-resource": true
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the Certificate. Do not specify for creating a brand new certificate. Required to update an existing certificate."
          }
        ],
        "responses": {
          "200": {
            "description": "If certificate already exist and update was successful, the operation returns HTTP status code of 201 (OK).",
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The description of an X509 CA Certificate.",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean"
                    },
                    "created": {
                      "description": "The certificate's create date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "certificate": {
                      "description": "The certificate content",
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                }
              },
              "x-ms-azure-resource": true
            }
          },
          "201": {
            "description": "If certificate didn't exist creation was successful, the operation returns HTTP status code of 201 (OK).",
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The description of an X509 CA Certificate.",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean"
                    },
                    "created": {
                      "description": "The certificate's create date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "certificate": {
                      "description": "The certificate content",
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                }
              },
              "x-ms-azure-resource": true
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Certificates"
        ],
        "summary": "Delete an X509 certificate.",
        "description": "Deletes an existing X509 certificate or does nothing if it does not exist.",
        "operationId": "Certificates_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "ETag of the Certificate."
          }
        ],
        "responses": {
          "200": {
            "description": "Certificate has been deleted."
          },
          "204": {
            "description": "Certificate does not exist."
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/generateVerificationCode": {
      "post": {
        "tags": [
          "Certificates"
        ],
        "summary": "Generate verification code for proof of possession flow.",
        "description": "Generates verification code for proof of possession flow. The verification code will be used to generate a leaf certificate.",
        "operationId": "Certificates_GenerateVerificationCode",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "ETag of the Certificate."
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the certificate.",
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The description of an X509 CA Certificate including the challenge nonce issued for the Proof-Of-Possession flow.",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "created": {
                      "description": "The certificate's create date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "verificationCode": {
                      "description": "The certificate's verification code that will be used for proof of possession.",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificate": {
                      "description": "The certificate content",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                }
              },
              "x-ms-azure-resource": true
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/verify": {
      "post": {
        "tags": [
          "Certificates"
        ],
        "summary": "Verify certificate's private key possession.",
        "description": "Verifies the certificate's private key possession by providing the leaf cert issued by the verifying pre uploaded certificate.",
        "operationId": "Certificates_Verify",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateVerificationBody",
            "in": "body",
            "description": "The name of the certificate",
            "required": true,
            "schema": {
              "description": "The JSON-serialized leaf certificate",
              "type": "object",
              "properties": {
                "certificate": {
                  "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "ETag of the Certificate."
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the certificate.",
            "schema": {
              "description": "The X509 Certificate.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The description of an X509 CA Certificate.",
                  "type": "object",
                  "properties": {
                    "subject": {
                      "description": "The certificate's subject name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expiry": {
                      "description": "The certificate's expiration date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "The certificate's thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "isVerified": {
                      "description": "Determines whether certificate has been verified.",
                      "type": "boolean"
                    },
                    "created": {
                      "description": "The certificate's create date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "The certificate's last update date and time.",
                      "type": "string",
                      "format": "date-time-rfc1123",
                      "readOnly": true
                    },
                    "certificate": {
                      "description": "The certificate content",
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "description": "The name of the certificate.",
                  "type": "string",
                  "readOnly": true
                },
                "etag": {
                  "description": "The entity tag.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                }
              },
              "x-ms-azure-resource": true
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover": {
      "post": {
        "tags": [
          "POST"
        ],
        "operationId": "IotHub_ManualFailover",
        "summary": "Manually initiate a failover for the IoT Hub to its secondary region",
        "description": "Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see https://aka.ms/manualfailover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "iotHubName",
            "description": "Name of the IoT hub to failover",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "failoverInput",
            "description": "Region to failover to. Must be the Azure paired region. Get the value from the secondary location in the locations property. To learn more, see https://aka.ms/manualfailover/region",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Use to provide failover region when requesting manual Failover for a hub.",
              "type": "object",
              "properties": {
                "failoverRegion": {
                  "description": "Region the hub will be failed over to",
                  "type": "string"
                }
              },
              "required": [
                "failoverRegion"
              ]
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "Name of the resource group containing the IoT hub resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Long running manual failover operation for the IoT hub completed"
          },
          "202": {
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              },
              "Location": {
                "type": "string"
              }
            },
            "description": "Manual failover initiated"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "List private link resources",
        "description": "List private link resources for the given IotHub",
        "operationId": "PrivateLinkResources_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the list of private link resources",
            "schema": {
              "description": "The available private link resources for an IotHub",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of available private link resources for an IotHub",
                  "type": "array",
                  "items": {
                    "description": "The group information for creating a private endpoint on an IotHub",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource name."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource type."
                      },
                      "properties": {
                        "description": "The properties for a group information object",
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string",
                            "description": "The group id"
                          },
                          "requiredMembers": {
                            "description": "The required members for a specific group id",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "requiredZoneNames": {
                            "description": "The required DNS zones for a specific group id",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/{groupId}": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get the specified private link resource",
        "description": "Get the specified private link resource for the given IotHub",
        "operationId": "PrivateLinkResources_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The name of the private link resource",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the specified of private link resource",
            "schema": {
              "description": "The group information for creating a private endpoint on an IotHub",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties for a group information object",
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "description": "The group id"
                    },
                    "requiredMembers": {
                      "description": "The required members for a specific group id",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "requiredZoneNames": {
                      "description": "The required DNS zones for a specific group id",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "List private endpoint connections",
        "description": "List private endpoint connection properties",
        "operationId": "PrivateEndpointConnections_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the list of private endpoint connection properties",
            "schema": {
              "description": "The list of private endpoint connections for an IotHub",
              "type": "array",
              "items": {
                "description": "The private endpoint connection of an IotHub",
                "x-ms-azure-resource": true,
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource identifier."
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource name."
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource type."
                  },
                  "properties": {
                    "description": "The properties of a private endpoint connection",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The private endpoint property of a private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "The current state of a private endpoint connection",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The status of a private endpoint connection",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrivateLinkServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The description for the current state of a private endpoint connection"
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "Actions required for a private endpoint connection"
                          }
                        },
                        "required": [
                          "status",
                          "description"
                        ]
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "required": [
                  "properties"
                ]
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "GET"
        ],
        "summary": "Get private endpoint connection",
        "description": "Get private endpoint connection properties",
        "operationId": "PrivateEndpointConnections_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains the private endpoint connection properties",
            "schema": {
              "description": "The private endpoint connection of an IotHub",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "PUT"
        ],
        "summary": "Update private endpoint connection",
        "description": "Update the status of a private endpoint connection with the specified name",
        "operationId": "PrivateEndpointConnections_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The private endpoint connection with updated properties",
            "required": true,
            "schema": {
              "description": "The private endpoint connection of an IotHub",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the update operation.",
            "schema": {
              "description": "The private endpoint connection of an IotHub",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 201 (OK).",
            "schema": {
              "description": "The private endpoint connection of an IotHub",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "DELETE"
        ],
        "summary": "Delete private endpoint connection",
        "description": "Delete private endpoint connection with the specified name",
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the API.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The name of the resource group that contains the IoT hub.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the delete operation.",
            "schema": {
              "description": "The private endpoint connection of an IotHub",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "202": {
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              },
              "Location": {
                "type": "string"
              }
            },
            "description": "This is a long running operation. The operation returns a 202 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation.",
            "schema": {
              "description": "The private endpoint connection of an IotHub",
              "x-ms-azure-resource": true,
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
                },
                "properties": {
                  "description": "The properties of a private endpoint connection",
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The private endpoint property of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The current state of a private endpoint connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "The status of a private endpoint connection",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the current state of a private endpoint connection"
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Actions required for a private endpoint connection"
                        }
                      },
                      "required": [
                        "status",
                        "description"
                      ]
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "204": {
            "description": "PrivateEndpoint does not exist."
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AsyncOperationResult": {
      "type": "object",
      "description": "Result of a long running operation.",
      "properties": {
        "status": {
          "description": "current status of a long running operation.",
          "type": "string"
        },
        "error": {
          "description": "Error message containing code, description and details",
          "type": "object",
          "properties": {
            "code": {
              "description": "standard error code",
              "type": "string"
            },
            "message": {
              "description": "standard error description",
              "type": "string"
            },
            "details": {
              "description": "detailed summary of error",
              "type": "string"
            }
          }
        }
      }
    },
    "ErrorMessage": {
      "description": "Error response containing message and code.",
      "type": "object",
      "properties": {
        "code": {
          "description": "standard error code",
          "type": "string"
        },
        "message": {
          "description": "standard error description",
          "type": "string"
        },
        "details": {
          "description": "detailed summary of error",
          "type": "string"
        }
      }
    },
    "CertificateListDescription": {
      "description": "The JSON-serialized array of Certificate objects.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The array of Certificate objects.",
          "type": "array",
          "items": {
            "description": "The X509 Certificate.",
            "type": "object",
            "properties": {
              "properties": {
                "description": "The description of an X509 CA Certificate.",
                "type": "object",
                "properties": {
                  "subject": {
                    "description": "The certificate's subject name.",
                    "type": "string",
                    "readOnly": true
                  },
                  "expiry": {
                    "description": "The certificate's expiration date and time.",
                    "type": "string",
                    "format": "date-time-rfc1123",
                    "readOnly": true
                  },
                  "thumbprint": {
                    "description": "The certificate's thumbprint.",
                    "type": "string",
                    "readOnly": true
                  },
                  "isVerified": {
                    "description": "Determines whether certificate has been verified.",
                    "type": "boolean"
                  },
                  "created": {
                    "description": "The certificate's create date and time.",
                    "type": "string",
                    "format": "date-time-rfc1123",
                    "readOnly": true
                  },
                  "updated": {
                    "description": "The certificate's last update date and time.",
                    "type": "string",
                    "format": "date-time-rfc1123",
                    "readOnly": true
                  },
                  "certificate": {
                    "description": "The certificate content",
                    "type": "string"
                  }
                }
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "description": "The name of the certificate.",
                "type": "string",
                "readOnly": true
              },
              "etag": {
                "description": "The entity tag.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              }
            },
            "x-ms-azure-resource": true
          }
        }
      }
    },
    "CertificateBodyDescription": {
      "description": "The JSON-serialized X509 Certificate.",
      "type": "object",
      "properties": {
        "certificate": {
          "description": "base-64 representation of the X509 leaf certificate .cer file or just .pem file content.",
          "type": "string"
        },
        "isVerified": {
          "description": "True indicates that the certificate will be created in verified state and proof of possession will not be required.",
          "type": "boolean"
        }
      }
    },
    "CertificateResponse": {
      "description": "The X509 Certificate.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "properties of a certificate",
          "type": "object",
          "properties": {
            "subject": {
              "description": "The certificate's subject name.",
              "type": "string",
              "readOnly": true
            },
            "expiry": {
              "description": "The certificate's expiration date and time.",
              "type": "string",
              "format": "date-time-rfc1123",
              "readOnly": true
            },
            "thumbprint": {
              "description": "The certificate's thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "isVerified": {
              "description": "Determines whether certificate has been verified.",
              "type": "boolean"
            },
            "certificate": {
              "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
              "type": "string",
              "format": "byte"
            },
            "created": {
              "description": "The certificate's creation date and time.",
              "type": "string",
              "format": "date-time-rfc1123",
              "readOnly": true
            },
            "updated": {
              "description": "The certificate's last update date and time.",
              "type": "string",
              "format": "date-time-rfc1123",
              "readOnly": true
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "description": "The name of the certificate.",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "The entity tag.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "CertificateProperties": {
      "description": "The description of an X509 CA Certificate.",
      "type": "object",
      "properties": {
        "subject": {
          "description": "The certificate's subject name.",
          "type": "string",
          "readOnly": true
        },
        "expiry": {
          "description": "The certificate's expiration date and time.",
          "type": "string",
          "format": "date-time-rfc1123",
          "readOnly": true
        },
        "thumbprint": {
          "description": "The certificate's thumbprint.",
          "type": "string",
          "readOnly": true
        },
        "isVerified": {
          "description": "Determines whether certificate has been verified.",
          "type": "boolean"
        },
        "created": {
          "description": "The certificate's create date and time.",
          "type": "string",
          "format": "date-time-rfc1123",
          "readOnly": true
        },
        "updated": {
          "description": "The certificate's last update date and time.",
          "type": "string",
          "format": "date-time-rfc1123",
          "readOnly": true
        },
        "certificate": {
          "description": "The certificate content",
          "type": "string"
        }
      }
    },
    "IotDpsSkuInfo": {
      "type": "object",
      "description": "List of possible provisioning service SKUs.",
      "properties": {
        "name": {
          "description": "Sku name.",
          "enum": [
            "S1"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IotDpsSku",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "readOnly": true,
          "description": "Pricing tier name of the provisioning service."
        },
        "capacity": {
          "format": "int64",
          "type": "integer",
          "description": "The number of units to provision"
        }
      }
    },
    "ProvisioningServiceDescription": {
      "description": "The description of the provisioning service.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "resourcegroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "subscriptionid": {
          "type": "string",
          "description": "The subscription id of the resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "etag": {
          "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
          "type": "string"
        },
        "properties": {
          "description": "Service specific properties for a provisioning service",
          "type": "object",
          "properties": {
            "state": {
              "description": "Current state of the provisioning service.",
              "enum": [
                "Activating",
                "Active",
                "Deleting",
                "Deleted",
                "ActivationFailed",
                "DeletionFailed",
                "Transitioning",
                "Suspending",
                "Suspended",
                "Resuming",
                "FailingOver",
                "FailoverFailed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "state",
                "modelAsString": true
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "Whether requests from Public Network are allowed",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "ipFilterRules": {
              "description": "The IP filter rules.",
              "type": "array",
              "items": {
                "description": "The IP filter rules for a provisioning Service.",
                "type": "object",
                "properties": {
                  "filterName": {
                    "description": "The name of the IP filter rule.",
                    "type": "string"
                  },
                  "action": {
                    "description": "The desired action for requests captured by this rule.",
                    "enum": [
                      "Accept",
                      "Reject"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpFilterActionType",
                      "modelAsString": false
                    }
                  },
                  "ipMask": {
                    "description": "A string that contains the IP address range in CIDR notation for the rule.",
                    "type": "string"
                  },
                  "target": {
                    "description": "Target for requests captured by this rule.",
                    "enum": [
                      "all",
                      "serviceApi",
                      "deviceApi"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpFilterTargetType",
                      "modelAsString": false
                    }
                  }
                },
                "required": [
                  "filterName",
                  "action",
                  "ipMask"
                ]
              }
            },
            "privateEndpointConnections": {
              "description": "Private endpoint connections created on this IotHub",
              "type": "array",
              "items": {
                "description": "The private endpoint connection of a provisioning service",
                "x-ms-azure-resource": true,
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource identifier."
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource name.",
                    "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource type."
                  },
                  "properties": {
                    "description": "The properties of a private endpoint connection",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The private endpoint property of a private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "The current state of a private endpoint connection",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The status of a private endpoint connection",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrivateLinkServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The description for the current state of a private endpoint connection"
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "Actions required for a private endpoint connection"
                          }
                        },
                        "required": [
                          "status",
                          "description"
                        ]
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  },
                  "systemData": {
                    "readOnly": true,
                    "description": "Metadata pertaining to creation and last modification of the resource.",
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  }
                },
                "required": [
                  "properties"
                ]
              }
            },
            "provisioningState": {
              "description": "The ARM provisioning state of the provisioning service.",
              "type": "string"
            },
            "iotHubs": {
              "type": "array",
              "description": "List of IoT hubs associated with this provisioning service.",
              "items": {
                "type": "object",
                "description": "Description of the IoT hub.",
                "properties": {
                  "applyAllocationPolicy": {
                    "description": "flag for applying allocationPolicy or not for a given iot hub.",
                    "type": "boolean"
                  },
                  "allocationWeight": {
                    "description": "weight to apply for a given iot h.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Host name of the IoT hub."
                  },
                  "connectionString": {
                    "type": "string",
                    "description": "Connection string of the IoT hub."
                  },
                  "location": {
                    "type": "string",
                    "description": "ARM region of the IoT hub."
                  }
                },
                "required": [
                  "connectionString",
                  "location"
                ]
              }
            },
            "allocationPolicy": {
              "enum": [
                "Hashed",
                "GeoLatency",
                "Static"
              ],
              "type": "string",
              "description": "Allocation policy to be used by this provisioning service.",
              "x-ms-enum": {
                "name": "AllocationPolicy",
                "modelAsString": true
              }
            },
            "serviceOperationsHostName": {
              "description": "Service endpoint for provisioning service.",
              "type": "string",
              "readOnly": true
            },
            "deviceProvisioningHostName": {
              "type": "string",
              "description": "Device endpoint for this provisioning service.",
              "readOnly": true
            },
            "idScope": {
              "type": "string",
              "description": "Unique identifier of this provisioning service.",
              "readOnly": true
            },
            "authorizationPolicies": {
              "description": "List of authorization keys for a provisioning service.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Description of the shared access key.",
                "properties": {
                  "keyName": {
                    "type": "string",
                    "description": "Name of the key."
                  },
                  "primaryKey": {
                    "type": "string",
                    "description": "Primary SAS key value."
                  },
                  "secondaryKey": {
                    "type": "string",
                    "description": "Secondary SAS key value."
                  },
                  "rights": {
                    "description": "Rights that this key has.",
                    "enum": [
                      "ServiceConfig",
                      "EnrollmentRead",
                      "EnrollmentWrite",
                      "DeviceConnect",
                      "RegistrationStatusRead",
                      "RegistrationStatusWrite"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "AccessRightsDescription",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "keyName",
                  "rights"
                ]
              }
            },
            "enableDataResidency": {
              "type": "boolean",
              "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
            },
            "portalOperationsHostName": {
              "type": "string",
              "description": "Portal endpoint to enable CORS for this provisioning service."
            }
          }
        },
        "sku": {
          "description": "Sku info for a provisioning Service.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Sku name.",
              "enum": [
                "S1"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IotDpsSku",
                "modelAsString": true
              }
            },
            "tier": {
              "type": "string",
              "readOnly": true,
              "description": "Pricing tier name of the provisioning service."
            },
            "capacity": {
              "format": "int64",
              "type": "integer",
              "description": "The number of units to provision"
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "required": [
        "sku",
        "properties"
      ]
    },
    "IotDpsPropertiesDescription": {
      "description": "the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope",
      "type": "object",
      "properties": {
        "state": {
          "description": "Current state of the provisioning service.",
          "enum": [
            "Activating",
            "Active",
            "Deleting",
            "Deleted",
            "ActivationFailed",
            "DeletionFailed",
            "Transitioning",
            "Suspending",
            "Suspended",
            "Resuming",
            "FailingOver",
            "FailoverFailed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "state",
            "modelAsString": true
          }
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether requests from Public Network are allowed",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "ipFilterRules": {
          "description": "The IP filter rules.",
          "type": "array",
          "items": {
            "description": "The IP filter rules for a provisioning Service.",
            "type": "object",
            "properties": {
              "filterName": {
                "description": "The name of the IP filter rule.",
                "type": "string"
              },
              "action": {
                "description": "The desired action for requests captured by this rule.",
                "enum": [
                  "Accept",
                  "Reject"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpFilterActionType",
                  "modelAsString": false
                }
              },
              "ipMask": {
                "description": "A string that contains the IP address range in CIDR notation for the rule.",
                "type": "string"
              },
              "target": {
                "description": "Target for requests captured by this rule.",
                "enum": [
                  "all",
                  "serviceApi",
                  "deviceApi"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpFilterTargetType",
                  "modelAsString": false
                }
              }
            },
            "required": [
              "filterName",
              "action",
              "ipMask"
            ]
          }
        },
        "privateEndpointConnections": {
          "description": "Private endpoint connections created on this IotHub",
          "type": "array",
          "items": {
            "description": "The private endpoint connection of a provisioning service",
            "x-ms-azure-resource": true,
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name.",
                "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "properties": {
                "description": "The properties of a private endpoint connection",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The private endpoint property of a private endpoint connection",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "The current state of a private endpoint connection",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "The status of a private endpoint connection",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PrivateLinkServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The description for the current state of a private endpoint connection"
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "Actions required for a private endpoint connection"
                      }
                    },
                    "required": [
                      "status",
                      "description"
                    ]
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "provisioningState": {
          "description": "The ARM provisioning state of the provisioning service.",
          "type": "string"
        },
        "iotHubs": {
          "type": "array",
          "description": "List of IoT hubs associated with this provisioning service.",
          "items": {
            "type": "object",
            "description": "Description of the IoT hub.",
            "properties": {
              "applyAllocationPolicy": {
                "description": "flag for applying allocationPolicy or not for a given iot hub.",
                "type": "boolean"
              },
              "allocationWeight": {
                "description": "weight to apply for a given iot h.",
                "format": "int32",
                "type": "integer"
              },
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "Host name of the IoT hub."
              },
              "connectionString": {
                "type": "string",
                "description": "Connection string of the IoT hub."
              },
              "location": {
                "type": "string",
                "description": "ARM region of the IoT hub."
              }
            },
            "required": [
              "connectionString",
              "location"
            ]
          }
        },
        "allocationPolicy": {
          "enum": [
            "Hashed",
            "GeoLatency",
            "Static"
          ],
          "type": "string",
          "description": "Allocation policy to be used by this provisioning service.",
          "x-ms-enum": {
            "name": "AllocationPolicy",
            "modelAsString": true
          }
        },
        "serviceOperationsHostName": {
          "description": "Service endpoint for provisioning service.",
          "type": "string",
          "readOnly": true
        },
        "deviceProvisioningHostName": {
          "type": "string",
          "description": "Device endpoint for this provisioning service.",
          "readOnly": true
        },
        "idScope": {
          "type": "string",
          "description": "Unique identifier of this provisioning service.",
          "readOnly": true
        },
        "authorizationPolicies": {
          "description": "List of authorization keys for a provisioning service.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Description of the shared access key.",
            "properties": {
              "keyName": {
                "type": "string",
                "description": "Name of the key."
              },
              "primaryKey": {
                "type": "string",
                "description": "Primary SAS key value."
              },
              "secondaryKey": {
                "type": "string",
                "description": "Secondary SAS key value."
              },
              "rights": {
                "description": "Rights that this key has.",
                "enum": [
                  "ServiceConfig",
                  "EnrollmentRead",
                  "EnrollmentWrite",
                  "DeviceConnect",
                  "RegistrationStatusRead",
                  "RegistrationStatusWrite"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "AccessRightsDescription",
                  "modelAsString": true
                }
              }
            },
            "required": [
              "keyName",
              "rights"
            ]
          }
        },
        "enableDataResidency": {
          "type": "boolean",
          "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
        },
        "portalOperationsHostName": {
          "type": "string",
          "description": "Portal endpoint to enable CORS for this provisioning service."
        }
      }
    },
    "IotHubDefinitionDescription": {
      "type": "object",
      "description": "Description of the IoT hub.",
      "properties": {
        "applyAllocationPolicy": {
          "description": "flag for applying allocationPolicy or not for a given iot hub.",
          "type": "boolean"
        },
        "allocationWeight": {
          "description": "weight to apply for a given iot h.",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Host name of the IoT hub."
        },
        "connectionString": {
          "type": "string",
          "description": "Connection string of the IoT hub."
        },
        "location": {
          "type": "string",
          "description": "ARM region of the IoT hub."
        }
      },
      "required": [
        "connectionString",
        "location"
      ]
    },
    "IpFilterRule": {
      "description": "The IP filter rules for the IoT hub.",
      "type": "object",
      "properties": {
        "filterName": {
          "description": "The name of the IP filter rule.",
          "type": "string"
        },
        "action": {
          "description": "The desired action for requests captured by this rule.",
          "enum": [
            "Accept",
            "Reject"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IpFilterActionType",
            "modelAsString": false
          }
        },
        "ipMask": {
          "description": "A string that contains the IP address range in CIDR notation for the rule.",
          "type": "string"
        }
      },
      "required": [
        "filterName",
        "action",
        "ipMask"
      ]
    },
    "PrivateLinkResources": {
      "description": "The available private link resources for an IotHub",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of available private link resources for an IotHub",
          "type": "array",
          "items": {
            "description": "The group information for creating a private endpoint on an IotHub",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "properties": {
                "description": "The properties for a group information object",
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "description": "The group id"
                  },
                  "requiredMembers": {
                    "description": "The required members for a specific group id",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "requiredZoneNames": {
                    "description": "The required DNS zones for a specific group id",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        }
      }
    },
    "GroupIdInformation": {
      "description": "The group information for creating a private endpoint on an IotHub",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "properties": {
          "description": "The properties for a group information object",
          "type": "object",
          "properties": {
            "groupId": {
              "type": "string",
              "description": "The group id"
            },
            "requiredMembers": {
              "description": "The required members for a specific group id",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "requiredZoneNames": {
              "description": "The required DNS zones for a specific group id",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "GroupIdInformationProperties": {
      "description": "The properties for a group information object",
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group id"
        },
        "requiredMembers": {
          "description": "The required members for a specific group id",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "description": "The required DNS zones for a specific group id",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateEndpointConnectionsList": {
      "description": "The list of private endpoint connections for an IotHub",
      "type": "array",
      "items": {
        "description": "The private endpoint connection of an IotHub",
        "x-ms-azure-resource": true,
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The resource identifier."
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "The resource name."
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "The resource type."
          },
          "properties": {
            "description": "The properties of a private endpoint connection",
            "type": "object",
            "properties": {
              "privateEndpoint": {
                "description": "The private endpoint property of a private endpoint connection",
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource identifier."
                  }
                }
              },
              "privateLinkServiceConnectionState": {
                "description": "The current state of a private endpoint connection",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "The status of a private endpoint connection",
                    "enum": [
                      "Pending",
                      "Approved",
                      "Rejected",
                      "Disconnected"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PrivateLinkServiceConnectionStatus",
                      "modelAsString": true
                    }
                  },
                  "description": {
                    "type": "string",
                    "description": "The description for the current state of a private endpoint connection"
                  },
                  "actionsRequired": {
                    "type": "string",
                    "description": "Actions required for a private endpoint connection"
                  }
                },
                "required": [
                  "status",
                  "description"
                ]
              }
            },
            "required": [
              "privateLinkServiceConnectionState"
            ]
          }
        },
        "required": [
          "properties"
        ]
      }
    },
    "PrivateEndpointConnection": {
      "description": "The private endpoint connection of an IotHub",
      "x-ms-azure-resource": true,
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "properties": {
          "description": "The properties of a private endpoint connection",
          "type": "object",
          "properties": {
            "privateEndpoint": {
              "description": "The private endpoint property of a private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "The current state of a private endpoint connection",
              "type": "object",
              "properties": {
                "status": {
                  "description": "The status of a private endpoint connection",
                  "enum": [
                    "Pending",
                    "Approved",
                    "Rejected",
                    "Disconnected"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "PrivateLinkServiceConnectionStatus",
                    "modelAsString": true
                  }
                },
                "description": {
                  "type": "string",
                  "description": "The description for the current state of a private endpoint connection"
                },
                "actionsRequired": {
                  "type": "string",
                  "description": "Actions required for a private endpoint connection"
                }
              },
              "required": [
                "status",
                "description"
              ]
            }
          },
          "required": [
            "privateLinkServiceConnectionState"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "description": "The properties of a private endpoint connection",
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "description": "The private endpoint property of a private endpoint connection",
          "type": "object",
          "properties": {
            "id": {
              "readOnly": true,
              "type": "string",
              "description": "The resource identifier."
            }
          }
        },
        "privateLinkServiceConnectionState": {
          "description": "The current state of a private endpoint connection",
          "type": "object",
          "properties": {
            "status": {
              "description": "The status of a private endpoint connection",
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PrivateLinkServiceConnectionStatus",
                "modelAsString": true
              }
            },
            "description": {
              "type": "string",
              "description": "The description for the current state of a private endpoint connection"
            },
            "actionsRequired": {
              "type": "string",
              "description": "Actions required for a private endpoint connection"
            }
          },
          "required": [
            "status",
            "description"
          ]
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpoint": {
      "description": "The private endpoint property of a private endpoint connection",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "description": "The current state of a private endpoint connection",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of a private endpoint connection",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrivateLinkServiceConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string",
          "description": "The description for the current state of a private endpoint connection"
        },
        "actionsRequired": {
          "type": "string",
          "description": "Actions required for a private endpoint connection"
        }
      },
      "required": [
        "status",
        "description"
      ]
    },
    "SharedAccessSignatureAuthorizationRule[AccessRightsDescription]": {
      "type": "object",
      "description": "Description of the shared access key.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the key."
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary SAS key value."
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary SAS key value."
        },
        "rights": {
          "description": "Rights that this key has.",
          "enum": [
            "ServiceConfig",
            "EnrollmentRead",
            "EnrollmentWrite",
            "DeviceConnect",
            "RegistrationStatusRead",
            "RegistrationStatusWrite"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccessRightsDescription",
            "modelAsString": true
          }
        }
      },
      "required": [
        "keyName",
        "rights"
      ]
    },
    "Resource": {
      "description": "The common properties of an Azure resource.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      },
      "x-ms-azure-resource": true,
      "required": [
        "location"
      ]
    },
    "OperationListResult": {
      "description": "Result of the request to list IoT Hub operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of IoT Hub operations supported by the Microsoft.Devices resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "IoT Hub REST API operation",
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Operation name: {provider}/{resource}/{read | write | action | delete}"
              },
              "display": {
                "description": "The object that represents the operation.",
                "properties": {
                  "provider": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Service provider: Microsoft Devices"
                  },
                  "resource": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource Type: IotHubs"
                  },
                  "operation": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Name of the operation"
                  },
                  "description": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Description of the operation"
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "description": "IoT Hub REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{read | write | action | delete}"
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "readOnly": true,
              "type": "string",
              "description": "Service provider: Microsoft Devices"
            },
            "resource": {
              "readOnly": true,
              "type": "string",
              "description": "Resource Type: IotHubs"
            },
            "operation": {
              "readOnly": true,
              "type": "string",
              "description": "Name of the operation"
            },
            "description": {
              "readOnly": true,
              "type": "string",
              "description": "Description of the operation"
            }
          }
        }
      }
    },
    "ErrorDetails": {
      "description": "Error details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "httpStatusCode": {
          "description": "The HTTP status code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error message.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "The error details.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SharedAccessSignatureAuthorizationRuleListResult": {
      "description": "The list of shared access policies with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of shared access policies.",
          "type": "array",
          "items": {
            "description": "The properties of an IoT hub shared access policy.",
            "type": "object",
            "properties": {
              "keyName": {
                "description": "The name of the shared access policy.",
                "type": "string"
              },
              "primaryKey": {
                "description": "The primary key.",
                "type": "string"
              },
              "secondaryKey": {
                "description": "The secondary key.",
                "type": "string"
              },
              "rights": {
                "description": "The permissions assigned to the shared access policy.",
                "enum": [
                  "RegistryRead",
                  "RegistryWrite",
                  "ServiceConnect",
                  "DeviceConnect",
                  "RegistryRead, RegistryWrite",
                  "RegistryRead, ServiceConnect",
                  "RegistryRead, DeviceConnect",
                  "RegistryWrite, ServiceConnect",
                  "RegistryWrite, DeviceConnect",
                  "ServiceConnect, DeviceConnect",
                  "RegistryRead, RegistryWrite, ServiceConnect",
                  "RegistryRead, RegistryWrite, DeviceConnect",
                  "RegistryRead, ServiceConnect, DeviceConnect",
                  "RegistryWrite, ServiceConnect, DeviceConnect",
                  "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "AccessRights",
                  "modelAsString": false
                }
              }
            },
            "required": [
              "keyName",
              "rights"
            ]
          },
          "x-ms-identifiers": [
            "keyName"
          ]
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IotDpsSkuDefinitionListResult": {
      "type": "object",
      "description": "List of available SKUs.",
      "properties": {
        "value": {
          "description": "The list of SKUs",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Available SKUs of tier and units.",
            "properties": {
              "name": {
                "description": "Sku name.",
                "enum": [
                  "S1"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IotDpsSku",
                  "modelAsString": true
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IotDpsSkuDefinition": {
      "type": "object",
      "description": "Available SKUs of tier and units.",
      "properties": {
        "name": {
          "description": "Sku name.",
          "enum": [
            "S1"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IotDpsSku",
            "modelAsString": true
          }
        }
      }
    },
    "OperationInputs": {
      "description": "Input values.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the IoT hub to check.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "NameAvailabilityInfo": {
      "type": "object",
      "description": "Description of name availability.",
      "properties": {
        "nameAvailable": {
          "description": "specifies if a name is available or not",
          "type": "boolean"
        },
        "reason": {
          "description": "specifies the reason a name is unavailable",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NameUnavailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "description": "message containing a detailed reason name is unavailable",
          "type": "string"
        }
      }
    },
    "TagsResource": {
      "properties": {
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "A container holding only the Tags for a resource, allowing the user to update the tags on an IoT Hub instance."
    },
    "ProvisioningServiceDescriptionListResult": {
      "type": "object",
      "description": "List of provisioning service descriptions.",
      "properties": {
        "value": {
          "description": "List of provisioning service descriptions.",
          "type": "array",
          "items": {
            "description": "The description of the provisioning service.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name.",
                "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "location": {
                "type": "string",
                "description": "The resource location."
              },
              "resourcegroup": {
                "type": "string",
                "description": "The resource group of the resource."
              },
              "subscriptionid": {
                "type": "string",
                "description": "The subscription id of the resource."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The resource tags."
              },
              "etag": {
                "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                "type": "string"
              },
              "properties": {
                "description": "Service specific properties for a provisioning service",
                "type": "object",
                "properties": {
                  "state": {
                    "description": "Current state of the provisioning service.",
                    "enum": [
                      "Activating",
                      "Active",
                      "Deleting",
                      "Deleted",
                      "ActivationFailed",
                      "DeletionFailed",
                      "Transitioning",
                      "Suspending",
                      "Suspended",
                      "Resuming",
                      "FailingOver",
                      "FailoverFailed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "state",
                      "modelAsString": true
                    }
                  },
                  "publicNetworkAccess": {
                    "type": "string",
                    "description": "Whether requests from Public Network are allowed",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PublicNetworkAccess"
                    }
                  },
                  "ipFilterRules": {
                    "description": "The IP filter rules.",
                    "type": "array",
                    "items": {
                      "description": "The IP filter rules for a provisioning Service.",
                      "type": "object",
                      "properties": {
                        "filterName": {
                          "description": "The name of the IP filter rule.",
                          "type": "string"
                        },
                        "action": {
                          "description": "The desired action for requests captured by this rule.",
                          "enum": [
                            "Accept",
                            "Reject"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "IpFilterActionType",
                            "modelAsString": false
                          }
                        },
                        "ipMask": {
                          "description": "A string that contains the IP address range in CIDR notation for the rule.",
                          "type": "string"
                        },
                        "target": {
                          "description": "Target for requests captured by this rule.",
                          "enum": [
                            "all",
                            "serviceApi",
                            "deviceApi"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "IpFilterTargetType",
                            "modelAsString": false
                          }
                        }
                      },
                      "required": [
                        "filterName",
                        "action",
                        "ipMask"
                      ]
                    }
                  },
                  "privateEndpointConnections": {
                    "description": "Private endpoint connections created on this IotHub",
                    "type": "array",
                    "items": {
                      "description": "The private endpoint connection of a provisioning service",
                      "x-ms-azure-resource": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource name.",
                          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource type."
                        },
                        "properties": {
                          "description": "The properties of a private endpoint connection",
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The private endpoint property of a private endpoint connection",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource identifier."
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "The current state of a private endpoint connection",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "The status of a private endpoint connection",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PrivateLinkServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description for the current state of a private endpoint connection"
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "Actions required for a private endpoint connection"
                                }
                              },
                              "required": [
                                "status",
                                "description"
                              ]
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        },
                        "systemData": {
                          "readOnly": true,
                          "description": "Metadata pertaining to creation and last modification of the resource.",
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The ARM provisioning state of the provisioning service.",
                    "type": "string"
                  },
                  "iotHubs": {
                    "type": "array",
                    "description": "List of IoT hubs associated with this provisioning service.",
                    "items": {
                      "type": "object",
                      "description": "Description of the IoT hub.",
                      "properties": {
                        "applyAllocationPolicy": {
                          "description": "flag for applying allocationPolicy or not for a given iot hub.",
                          "type": "boolean"
                        },
                        "allocationWeight": {
                          "description": "weight to apply for a given iot h.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Host name of the IoT hub."
                        },
                        "connectionString": {
                          "type": "string",
                          "description": "Connection string of the IoT hub."
                        },
                        "location": {
                          "type": "string",
                          "description": "ARM region of the IoT hub."
                        }
                      },
                      "required": [
                        "connectionString",
                        "location"
                      ]
                    }
                  },
                  "allocationPolicy": {
                    "enum": [
                      "Hashed",
                      "GeoLatency",
                      "Static"
                    ],
                    "type": "string",
                    "description": "Allocation policy to be used by this provisioning service.",
                    "x-ms-enum": {
                      "name": "AllocationPolicy",
                      "modelAsString": true
                    }
                  },
                  "serviceOperationsHostName": {
                    "description": "Service endpoint for provisioning service.",
                    "type": "string",
                    "readOnly": true
                  },
                  "deviceProvisioningHostName": {
                    "type": "string",
                    "description": "Device endpoint for this provisioning service.",
                    "readOnly": true
                  },
                  "idScope": {
                    "type": "string",
                    "description": "Unique identifier of this provisioning service.",
                    "readOnly": true
                  },
                  "authorizationPolicies": {
                    "description": "List of authorization keys for a provisioning service.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Description of the shared access key.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "Name of the key."
                        },
                        "primaryKey": {
                          "type": "string",
                          "description": "Primary SAS key value."
                        },
                        "secondaryKey": {
                          "type": "string",
                          "description": "Secondary SAS key value."
                        },
                        "rights": {
                          "description": "Rights that this key has.",
                          "enum": [
                            "ServiceConfig",
                            "EnrollmentRead",
                            "EnrollmentWrite",
                            "DeviceConnect",
                            "RegistrationStatusRead",
                            "RegistrationStatusWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessRightsDescription",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "keyName",
                        "rights"
                      ]
                    }
                  },
                  "enableDataResidency": {
                    "type": "boolean",
                    "description": "Optional.\nIndicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery."
                  },
                  "portalOperationsHostName": {
                    "type": "string",
                    "description": "Portal endpoint to enable CORS for this provisioning service."
                  }
                }
              },
              "sku": {
                "description": "Sku info for a provisioning Service.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Sku name.",
                    "enum": [
                      "S1"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IotDpsSku",
                      "modelAsString": true
                    }
                  },
                  "tier": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Pricing tier name of the provisioning service."
                  },
                  "capacity": {
                    "format": "int64",
                    "type": "integer",
                    "description": "The number of units to provision"
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "required": [
              "sku",
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "the next link",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VerificationCodeResponse": {
      "type": "object",
      "description": "Description of the response of the verification code.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of certificate.",
          "readOnly": true
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "Request etag."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "properties": {
          "type": "object",
          "properties": {
            "verificationCode": {
              "type": "string",
              "description": "Verification code."
            },
            "subject": {
              "type": "string",
              "description": "Certificate subject."
            },
            "expiry": {
              "type": "string",
              "description": "Code expiry."
            },
            "thumbprint": {
              "type": "string",
              "description": "Certificate thumbprint."
            },
            "isVerified": {
              "type": "boolean",
              "description": "Indicate if the certificate is verified by owner of private key."
            },
            "certificate": {
              "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
              "type": "string",
              "format": "byte"
            },
            "created": {
              "type": "string",
              "description": "Certificate created time."
            },
            "updated": {
              "type": "string",
              "description": "Certificate updated time."
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "VerificationCodeRequest": {
      "type": "object",
      "description": "The JSON-serialized leaf certificate",
      "properties": {
        "certificate": {
          "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
          "type": "string"
        }
      }
    },
    "CertificateVerificationDescription": {
      "description": "The JSON-serialized leaf certificate",
      "type": "object",
      "properties": {
        "certificate": {
          "description": "base-64 representation of X509 certificate .cer file or just .pem file content.",
          "type": "string"
        }
      }
    },
    "CertificateDescription": {
      "description": "The X509 Certificate.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The description of an X509 CA Certificate.",
          "type": "object",
          "properties": {
            "subject": {
              "description": "The certificate's subject name.",
              "type": "string",
              "readOnly": true
            },
            "expiry": {
              "description": "The certificate's expiration date and time.",
              "type": "string",
              "format": "date-time-rfc1123",
              "readOnly": true
            },
            "thumbprint": {
              "description": "The certificate's thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "isVerified": {
              "description": "Determines whether certificate has been verified.",
              "type": "boolean"
            },
            "created": {
              "description": "The certificate's create date and time.",
              "type": "string",
              "format": "date-time-rfc1123",
              "readOnly": true
            },
            "updated": {
              "description": "The certificate's last update date and time.",
              "type": "string",
              "format": "date-time-rfc1123",
              "readOnly": true
            },
            "certificate": {
              "description": "The certificate content",
              "type": "string"
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "description": "The name of the certificate.",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "The entity tag.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        }
      },
      "x-ms-azure-resource": true
    },
    "CertificateWithNonceDescription": {
      "description": "The X509 Certificate.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The description of an X509 CA Certificate including the challenge nonce issued for the Proof-Of-Possession flow.",
          "type": "object",
          "properties": {
            "subject": {
              "description": "The certificate's subject name.",
              "type": "string",
              "readOnly": true
            },
            "expiry": {
              "description": "The certificate's expiration date and time.",
              "type": "string",
              "format": "date-time-rfc1123",
              "readOnly": true
            },
            "thumbprint": {
              "description": "The certificate's thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "isVerified": {
              "description": "Determines whether certificate has been verified.",
              "type": "boolean",
              "readOnly": true
            },
            "created": {
              "description": "The certificate's create date and time.",
              "type": "string",
              "format": "date-time-rfc1123",
              "readOnly": true
            },
            "updated": {
              "description": "The certificate's last update date and time.",
              "type": "string",
              "format": "date-time-rfc1123",
              "readOnly": true
            },
            "verificationCode": {
              "description": "The certificate's verification code that will be used for proof of possession.",
              "type": "string",
              "readOnly": true
            },
            "certificate": {
              "description": "The certificate content",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "description": "The name of the certificate.",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "The entity tag.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        }
      },
      "x-ms-azure-resource": true
    },
    "SharedAccessSignatureAuthorizationRule": {
      "description": "The properties of an IoT hub shared access policy.",
      "type": "object",
      "properties": {
        "keyName": {
          "description": "The name of the shared access policy.",
          "type": "string"
        },
        "primaryKey": {
          "description": "The primary key.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string"
        },
        "rights": {
          "description": "The permissions assigned to the shared access policy.",
          "enum": [
            "RegistryRead",
            "RegistryWrite",
            "ServiceConnect",
            "DeviceConnect",
            "RegistryRead, RegistryWrite",
            "RegistryRead, ServiceConnect",
            "RegistryRead, DeviceConnect",
            "RegistryWrite, ServiceConnect",
            "RegistryWrite, DeviceConnect",
            "ServiceConnect, DeviceConnect",
            "RegistryRead, RegistryWrite, ServiceConnect",
            "RegistryRead, RegistryWrite, DeviceConnect",
            "RegistryRead, ServiceConnect, DeviceConnect",
            "RegistryWrite, ServiceConnect, DeviceConnect",
            "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccessRights",
            "modelAsString": false
          }
        }
      },
      "required": [
        "keyName",
        "rights"
      ]
    },
    "CertificatePropertiesWithNonce": {
      "description": "The description of an X509 CA Certificate including the challenge nonce issued for the Proof-Of-Possession flow.",
      "type": "object",
      "properties": {
        "subject": {
          "description": "The certificate's subject name.",
          "type": "string",
          "readOnly": true
        },
        "expiry": {
          "description": "The certificate's expiration date and time.",
          "type": "string",
          "format": "date-time-rfc1123",
          "readOnly": true
        },
        "thumbprint": {
          "description": "The certificate's thumbprint.",
          "type": "string",
          "readOnly": true
        },
        "isVerified": {
          "description": "Determines whether certificate has been verified.",
          "type": "boolean",
          "readOnly": true
        },
        "created": {
          "description": "The certificate's create date and time.",
          "type": "string",
          "format": "date-time-rfc1123",
          "readOnly": true
        },
        "updated": {
          "description": "The certificate's last update date and time.",
          "type": "string",
          "format": "date-time-rfc1123",
          "readOnly": true
        },
        "verificationCode": {
          "description": "The certificate's verification code that will be used for proof of possession.",
          "type": "string",
          "readOnly": true
        },
        "certificate": {
          "description": "The certificate content",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IotHubProperties": {
      "description": "The properties of an IoT hub.",
      "type": "object",
      "properties": {
        "authorizationPolicies": {
          "description": "The shared access policies you can use to secure a connection to the IoT hub.",
          "type": "array",
          "items": {
            "description": "The properties of an IoT hub shared access policy.",
            "type": "object",
            "properties": {
              "keyName": {
                "description": "The name of the shared access policy.",
                "type": "string"
              },
              "primaryKey": {
                "description": "The primary key.",
                "type": "string"
              },
              "secondaryKey": {
                "description": "The secondary key.",
                "type": "string"
              },
              "rights": {
                "description": "The permissions assigned to the shared access policy.",
                "enum": [
                  "RegistryRead",
                  "RegistryWrite",
                  "ServiceConnect",
                  "DeviceConnect",
                  "RegistryRead, RegistryWrite",
                  "RegistryRead, ServiceConnect",
                  "RegistryRead, DeviceConnect",
                  "RegistryWrite, ServiceConnect",
                  "RegistryWrite, DeviceConnect",
                  "ServiceConnect, DeviceConnect",
                  "RegistryRead, RegistryWrite, ServiceConnect",
                  "RegistryRead, RegistryWrite, DeviceConnect",
                  "RegistryRead, ServiceConnect, DeviceConnect",
                  "RegistryWrite, ServiceConnect, DeviceConnect",
                  "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "AccessRights",
                  "modelAsString": false
                }
              }
            },
            "required": [
              "keyName",
              "rights"
            ]
          },
          "x-ms-identifiers": [
            "keyName"
          ]
        },
        "disableLocalAuth": {
          "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
          "type": "boolean"
        },
        "disableDeviceSAS": {
          "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
          "type": "boolean"
        },
        "disableModuleSAS": {
          "description": "If true, all module scoped SAS keys cannot be used for authentication.",
          "type": "boolean"
        },
        "restrictOutboundNetworkAccess": {
          "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
          "type": "boolean"
        },
        "allowedFqdnList": {
          "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
          "type": "array",
          "items": {
            "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
            "type": "string"
          }
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether requests from Public Network are allowed",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "ipFilterRules": {
          "description": "The IP filter rules.",
          "type": "array",
          "items": {
            "description": "The IP filter rules for the IoT hub.",
            "type": "object",
            "properties": {
              "filterName": {
                "description": "The name of the IP filter rule.",
                "type": "string"
              },
              "action": {
                "description": "The desired action for requests captured by this rule.",
                "enum": [
                  "Accept",
                  "Reject"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IpFilterActionType",
                  "modelAsString": false
                }
              },
              "ipMask": {
                "description": "A string that contains the IP address range in CIDR notation for the rule.",
                "type": "string"
              }
            },
            "required": [
              "filterName",
              "action",
              "ipMask"
            ]
          },
          "x-ms-identifiers": [
            "filterName"
          ]
        },
        "networkRuleSets": {
          "description": "Network Rule Set Properties of IotHub",
          "type": "object",
          "properties": {
            "defaultAction": {
              "type": "string",
              "description": "Default Action for Network Rule Set",
              "enum": [
                "Deny",
                "Allow"
              ],
              "x-ms-enum": {
                "name": "DefaultAction",
                "modelAsString": true
              },
              "default": "Deny"
            },
            "applyToBuiltInEventHubEndpoint": {
              "type": "boolean",
              "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
            },
            "ipRules": {
              "type": "array",
              "items": {
                "description": "IP Rule to be applied as part of Network Rule Set",
                "type": "object",
                "properties": {
                  "filterName": {
                    "type": "string",
                    "description": "Name of the IP filter rule."
                  },
                  "action": {
                    "type": "string",
                    "description": "IP Filter Action",
                    "enum": [
                      "Allow"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkRuleIPAction",
                      "modelAsString": true
                    },
                    "default": "Allow"
                  },
                  "ipMask": {
                    "type": "string",
                    "description": "A string that contains the IP address range in CIDR notation for the rule."
                  }
                },
                "required": [
                  "filterName",
                  "ipMask"
                ]
              },
              "x-ms-identifiers": [
                "filterName"
              ],
              "description": "List of IP Rules"
            }
          },
          "required": [
            "applyToBuiltInEventHubEndpoint",
            "ipRules"
          ]
        },
        "minTlsVersion": {
          "type": "string",
          "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
        },
        "privateEndpointConnections": {
          "description": "Private endpoint connections created on this IotHub",
          "type": "array",
          "items": {
            "description": "The private endpoint connection of an IotHub",
            "x-ms-azure-resource": true,
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "properties": {
                "description": "The properties of a private endpoint connection",
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The private endpoint property of a private endpoint connection",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource identifier."
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "The current state of a private endpoint connection",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "The status of a private endpoint connection",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PrivateLinkServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The description for the current state of a private endpoint connection"
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "Actions required for a private endpoint connection"
                      }
                    },
                    "required": [
                      "status",
                      "description"
                    ]
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "provisioningState": {
          "description": "The provisioning state.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "The hub state.",
          "type": "string",
          "readOnly": true
        },
        "hostName": {
          "description": "The name of the host.",
          "type": "string",
          "readOnly": true
        },
        "eventHubEndpoints": {
          "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
          "type": "object",
          "additionalProperties": {
            "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
            "type": "object",
            "properties": {
              "retentionTimeInDays": {
                "format": "int64",
                "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                "type": "integer"
              },
              "partitionCount": {
                "format": "int32",
                "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                "type": "integer"
              },
              "partitionIds": {
                "description": "The partition ids in the Event Hub-compatible endpoint.",
                "readOnly": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "path": {
                "description": "The Event Hub-compatible name.",
                "type": "string",
                "readOnly": true
              },
              "endpoint": {
                "description": "The Event Hub-compatible endpoint.",
                "type": "string",
                "readOnly": true
              }
            }
          }
        },
        "routing": {
          "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
          "type": "object",
          "properties": {
            "endpoints": {
              "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
              "type": "object",
              "properties": {
                "serviceBusQueues": {
                  "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                  "type": "array",
                  "items": {
                    "description": "The properties related to service bus queue endpoint types.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Id of the service bus queue endpoint",
                        "type": "string"
                      },
                      "connectionString": {
                        "description": "The connection string of the service bus queue endpoint.",
                        "type": "string"
                      },
                      "endpointUri": {
                        "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                        "type": "string"
                      },
                      "entityPath": {
                        "description": "Queue name on the service bus namespace",
                        "type": "string"
                      },
                      "authenticationType": {
                        "description": "Method used to authenticate against the service bus queue endpoint",
                        "enum": [
                          "keyBased",
                          "identityBased"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "authenticationType",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Managed identity properties of routing service bus queue endpoint.",
                        "type": "object",
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "The user assigned identity."
                          }
                        }
                      },
                      "name": {
                        "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                        "type": "string",
                        "pattern": "^[A-Za-z0-9-._]{1,64}$"
                      },
                      "subscriptionId": {
                        "description": "The subscription identifier of the service bus queue endpoint.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "The name of the resource group of the service bus queue endpoint.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "serviceBusTopics": {
                  "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                  "type": "array",
                  "items": {
                    "description": "The properties related to service bus topic endpoint types.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Id of the service bus topic endpoint",
                        "type": "string"
                      },
                      "connectionString": {
                        "description": "The connection string of the service bus topic endpoint.",
                        "type": "string"
                      },
                      "endpointUri": {
                        "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                        "type": "string"
                      },
                      "entityPath": {
                        "description": "Queue name on the service bus topic",
                        "type": "string"
                      },
                      "authenticationType": {
                        "description": "Method used to authenticate against the service bus topic endpoint",
                        "enum": [
                          "keyBased",
                          "identityBased"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "authenticationType",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Managed identity properties of routing service bus topic endpoint.",
                        "type": "object",
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "The user assigned identity."
                          }
                        }
                      },
                      "name": {
                        "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                        "type": "string",
                        "pattern": "^[A-Za-z0-9-._]{1,64}$"
                      },
                      "subscriptionId": {
                        "description": "The subscription identifier of the service bus topic endpoint.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "The name of the resource group of the service bus topic endpoint.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "eventHubs": {
                  "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                  "type": "array",
                  "items": {
                    "description": "The properties related to an event hub endpoint.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Id of the event hub endpoint",
                        "type": "string"
                      },
                      "connectionString": {
                        "description": "The connection string of the event hub endpoint. ",
                        "type": "string"
                      },
                      "endpointUri": {
                        "description": "The url of the event hub endpoint. It must include the protocol sb://",
                        "type": "string"
                      },
                      "entityPath": {
                        "description": "Event hub name on the event hub namespace",
                        "type": "string"
                      },
                      "authenticationType": {
                        "description": "Method used to authenticate against the event hub endpoint",
                        "enum": [
                          "keyBased",
                          "identityBased"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "authenticationType",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Managed identity properties of routing event hub endpoint.",
                        "type": "object",
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "The user assigned identity."
                          }
                        }
                      },
                      "name": {
                        "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                        "type": "string",
                        "pattern": "^[A-Za-z0-9-._]{1,64}$"
                      },
                      "subscriptionId": {
                        "description": "The subscription identifier of the event hub endpoint.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "The name of the resource group of the event hub endpoint.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "storageContainers": {
                  "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                  "type": "array",
                  "items": {
                    "description": "The properties related to a storage container endpoint.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Id of the storage container endpoint",
                        "type": "string"
                      },
                      "connectionString": {
                        "description": "The connection string of the storage account.",
                        "type": "string"
                      },
                      "endpointUri": {
                        "description": "The url of the storage endpoint. It must include the protocol https://",
                        "type": "string"
                      },
                      "authenticationType": {
                        "description": "Method used to authenticate against the storage endpoint",
                        "enum": [
                          "keyBased",
                          "identityBased"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "authenticationType",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Managed identity properties of routing storage endpoint.",
                        "type": "object",
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "The user assigned identity."
                          }
                        }
                      },
                      "name": {
                        "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                        "type": "string",
                        "pattern": "^[A-Za-z0-9-._]{1,64}$"
                      },
                      "subscriptionId": {
                        "description": "The subscription identifier of the storage account.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "The name of the resource group of the storage account.",
                        "type": "string"
                      },
                      "containerName": {
                        "description": "The name of storage container in the storage account.",
                        "type": "string"
                      },
                      "fileNameFormat": {
                        "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                        "type": "string"
                      },
                      "batchFrequencyInSeconds": {
                        "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                        "format": "int32",
                        "type": "integer",
                        "maximum": 720,
                        "minimum": 60
                      },
                      "maxChunkSizeInBytes": {
                        "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                        "format": "int32",
                        "type": "integer",
                        "maximum": 524288000,
                        "minimum": 10485760
                      },
                      "encoding": {
                        "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                        "type": "string",
                        "enum": [
                          "Avro",
                          "AvroDeflate",
                          "JSON"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "containerName"
                    ]
                  }
                },
                "cosmosDBSqlContainers": {
                  "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                  "type": "array",
                  "items": {
                    "description": "The properties related to a cosmos DB sql container endpoint.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                        "type": "string",
                        "pattern": "^[A-Za-z0-9-._]{1,64}$"
                      },
                      "id": {
                        "readOnly": true,
                        "description": "Id of the cosmos DB sql container endpoint",
                        "type": "string"
                      },
                      "subscriptionId": {
                        "description": "The subscription identifier of the cosmos DB account.",
                        "type": "string"
                      },
                      "resourceGroup": {
                        "description": "The name of the resource group of the cosmos DB account.",
                        "type": "string"
                      },
                      "endpointUri": {
                        "description": "The url of the cosmos DB account. It must include the protocol https://",
                        "type": "string",
                        "format": "uri"
                      },
                      "authenticationType": {
                        "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                        "enum": [
                          "keyBased",
                          "identityBased"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "authenticationType",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "description": "Managed identity properties of routing cosmos DB container endpoint.",
                        "type": "object",
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "The user assigned identity."
                          }
                        }
                      },
                      "primaryKey": {
                        "description": "The primary key of the cosmos DB account.",
                        "type": "string",
                        "x-ms-secret": true
                      },
                      "secondaryKey": {
                        "description": "The secondary key of the cosmos DB account.",
                        "type": "string",
                        "x-ms-secret": true
                      },
                      "databaseName": {
                        "description": "The name of the cosmos DB database in the cosmos DB account.",
                        "type": "string"
                      },
                      "containerName": {
                        "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                        "type": "string"
                      },
                      "partitionKeyName": {
                        "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                        "type": "string"
                      },
                      "partitionKeyTemplate": {
                        "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "endpointUri",
                      "databaseName",
                      "containerName"
                    ]
                  }
                }
              }
            },
            "routes": {
              "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
              "type": "array",
              "items": {
                "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                    "type": "string",
                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                  },
                  "source": {
                    "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                    "enum": [
                      "Invalid",
                      "DeviceMessages",
                      "TwinChangeEvents",
                      "DeviceLifecycleEvents",
                      "DeviceJobLifecycleEvents",
                      "DeviceConnectionStateEvents"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "RoutingSource",
                      "modelAsString": true
                    }
                  },
                  "condition": {
                    "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                    "type": "string"
                  },
                  "endpointNames": {
                    "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isEnabled": {
                    "description": "Used to specify whether a route is enabled.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "endpointNames",
                  "source",
                  "isEnabled"
                ]
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "fallbackRoute": {
              "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                  "type": "string"
                },
                "source": {
                  "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                  "enum": [
                    "DeviceMessages"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "RoutingSource",
                    "modelAsString": true
                  }
                },
                "condition": {
                  "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                  "type": "string"
                },
                "endpointNames": {
                  "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                  "minItems": 1,
                  "maxItems": 1,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "isEnabled": {
                  "description": "Used to specify whether the fallback route is enabled.",
                  "type": "boolean"
                }
              },
              "required": [
                "endpointNames",
                "source",
                "isEnabled"
              ]
            },
            "enrichments": {
              "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
              "type": "array",
              "items": {
                "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                "type": "object",
                "properties": {
                  "key": {
                    "description": "The key or name for the enrichment property.",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value for the enrichment property.",
                    "type": "string"
                  },
                  "endpointNames": {
                    "description": "The list of endpoints for which the enrichment is applied to the message.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "key",
                  "value",
                  "endpointNames"
                ]
              },
              "x-ms-identifiers": [
                "key"
              ]
            }
          }
        },
        "storageEndpoints": {
          "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
          "type": "object",
          "additionalProperties": {
            "description": "The properties of the Azure Storage endpoint for file upload.",
            "type": "object",
            "properties": {
              "sasTtlAsIso8601": {
                "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                "type": "string",
                "format": "duration"
              },
              "connectionString": {
                "description": "The connection string for the Azure Storage account to which files are uploaded.",
                "type": "string"
              },
              "containerName": {
                "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                "type": "string"
              },
              "authenticationType": {
                "description": "Specifies authentication type being used for connecting to the storage account.",
                "enum": [
                  "keyBased",
                  "identityBased"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "AuthenticationType",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Managed identity properties of storage endpoint for file upload.",
                "type": "object",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned identity."
                  }
                }
              }
            },
            "required": [
              "connectionString",
              "containerName"
            ]
          }
        },
        "messagingEndpoints": {
          "description": "The messaging endpoint properties for the file upload notification queue.",
          "type": "object",
          "additionalProperties": {
            "description": "The properties of the messaging endpoints used by this IoT hub.",
            "type": "object",
            "properties": {
              "lockDurationAsIso8601": {
                "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                "type": "string",
                "format": "duration"
              },
              "ttlAsIso8601": {
                "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                "type": "string",
                "format": "duration"
              },
              "maxDeliveryCount": {
                "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                "format": "int32",
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              }
            }
          }
        },
        "enableFileUploadNotifications": {
          "description": "If True, file upload notifications are enabled.",
          "type": "boolean"
        },
        "cloudToDevice": {
          "description": "The IoT hub cloud-to-device messaging properties.",
          "type": "object",
          "properties": {
            "maxDeliveryCount": {
              "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "defaultTtlAsIso8601": {
              "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
              "type": "string",
              "format": "duration"
            },
            "feedback": {
              "description": "The properties of the feedback queue for cloud-to-device messages.",
              "type": "object",
              "properties": {
                "lockDurationAsIso8601": {
                  "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                  "type": "string",
                  "format": "duration"
                },
                "ttlAsIso8601": {
                  "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                  "type": "string",
                  "format": "duration"
                },
                "maxDeliveryCount": {
                  "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                  "format": "int32",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 100
                }
              }
            }
          }
        },
        "comments": {
          "description": "IoT hub comments.",
          "type": "string"
        },
        "features": {
          "description": "The capabilities and features enabled for the IoT hub.",
          "enum": [
            "None",
            "DeviceManagement"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Capabilities",
            "modelAsString": true
          }
        },
        "locations": {
          "description": "Primary and secondary location for iot hub",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Public representation of one of the locations where a resource is provisioned.",
            "type": "object",
            "properties": {
              "location": {
                "description": "The name of the Azure region",
                "type": "string"
              },
              "role": {
                "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                "enum": [
                  "primary",
                  "secondary"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "IotHubReplicaRoleType",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": [
            "location"
          ]
        },
        "enableDataResidency": {
          "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
          "type": "boolean"
        }
      }
    },
    "IotHubSkuInfo": {
      "description": "Information about the SKU of the IoT hub.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the SKU.",
          "enum": [
            "F1",
            "S1",
            "S2",
            "S3",
            "B1",
            "B2",
            "B3"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IotHubSku",
            "modelAsString": true
          }
        },
        "tier": {
          "description": "The billing tier for the IoT hub.",
          "enum": [
            "Free",
            "Standard",
            "Basic"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "IotHubSkuTier",
            "modelAsString": false
          }
        },
        "capacity": {
          "format": "int64",
          "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ]
    },
    "EventHubProperties": {
      "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
      "type": "object",
      "properties": {
        "retentionTimeInDays": {
          "format": "int64",
          "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
          "type": "integer"
        },
        "partitionCount": {
          "format": "int32",
          "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
          "type": "integer"
        },
        "partitionIds": {
          "description": "The partition ids in the Event Hub-compatible endpoint.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "description": "The Event Hub-compatible name.",
          "type": "string",
          "readOnly": true
        },
        "endpoint": {
          "description": "The Event Hub-compatible endpoint.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StorageEndpointProperties": {
      "description": "The properties of the Azure Storage endpoint for file upload.",
      "type": "object",
      "properties": {
        "sasTtlAsIso8601": {
          "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
          "type": "string",
          "format": "duration"
        },
        "connectionString": {
          "description": "The connection string for the Azure Storage account to which files are uploaded.",
          "type": "string"
        },
        "containerName": {
          "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
          "type": "string"
        },
        "authenticationType": {
          "description": "Specifies authentication type being used for connecting to the storage account.",
          "enum": [
            "keyBased",
            "identityBased"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthenticationType",
            "modelAsString": true
          }
        },
        "identity": {
          "description": "Managed identity properties of storage endpoint for file upload.",
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned identity."
            }
          }
        }
      },
      "required": [
        "connectionString",
        "containerName"
      ]
    },
    "MessagingEndpointProperties": {
      "description": "The properties of the messaging endpoints used by this IoT hub.",
      "type": "object",
      "properties": {
        "lockDurationAsIso8601": {
          "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
          "type": "string",
          "format": "duration"
        },
        "ttlAsIso8601": {
          "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
          "type": "string",
          "format": "duration"
        },
        "maxDeliveryCount": {
          "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
          "format": "int32",
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      }
    },
    "CloudToDeviceProperties": {
      "description": "The IoT hub cloud-to-device messaging properties.",
      "type": "object",
      "properties": {
        "maxDeliveryCount": {
          "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
          "format": "int32",
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        },
        "defaultTtlAsIso8601": {
          "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
          "type": "string",
          "format": "duration"
        },
        "feedback": {
          "description": "The properties of the feedback queue for cloud-to-device messages.",
          "type": "object",
          "properties": {
            "lockDurationAsIso8601": {
              "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
              "type": "string",
              "format": "duration"
            },
            "ttlAsIso8601": {
              "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
              "type": "string",
              "format": "duration"
            },
            "maxDeliveryCount": {
              "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        }
      }
    },
    "NetworkRuleSetProperties": {
      "description": "Network Rule Set Properties of IotHub",
      "type": "object",
      "properties": {
        "defaultAction": {
          "type": "string",
          "description": "Default Action for Network Rule Set",
          "enum": [
            "Deny",
            "Allow"
          ],
          "x-ms-enum": {
            "name": "DefaultAction",
            "modelAsString": true
          },
          "default": "Deny"
        },
        "applyToBuiltInEventHubEndpoint": {
          "type": "boolean",
          "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
        },
        "ipRules": {
          "type": "array",
          "items": {
            "description": "IP Rule to be applied as part of Network Rule Set",
            "type": "object",
            "properties": {
              "filterName": {
                "type": "string",
                "description": "Name of the IP filter rule."
              },
              "action": {
                "type": "string",
                "description": "IP Filter Action",
                "enum": [
                  "Allow"
                ],
                "x-ms-enum": {
                  "name": "NetworkRuleIPAction",
                  "modelAsString": true
                },
                "default": "Allow"
              },
              "ipMask": {
                "type": "string",
                "description": "A string that contains the IP address range in CIDR notation for the rule."
              }
            },
            "required": [
              "filterName",
              "ipMask"
            ]
          },
          "x-ms-identifiers": [
            "filterName"
          ],
          "description": "List of IP Rules"
        }
      },
      "required": [
        "applyToBuiltInEventHubEndpoint",
        "ipRules"
      ]
    },
    "NetworkRuleSetIpRule": {
      "description": "IP Rule to be applied as part of Network Rule Set",
      "type": "object",
      "properties": {
        "filterName": {
          "type": "string",
          "description": "Name of the IP filter rule."
        },
        "action": {
          "type": "string",
          "description": "IP Filter Action",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleIPAction",
            "modelAsString": true
          },
          "default": "Allow"
        },
        "ipMask": {
          "type": "string",
          "description": "A string that contains the IP address range in CIDR notation for the rule."
        }
      },
      "required": [
        "filterName",
        "ipMask"
      ]
    },
    "FeedbackProperties": {
      "description": "The properties of the feedback queue for cloud-to-device messages.",
      "type": "object",
      "properties": {
        "lockDurationAsIso8601": {
          "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
          "type": "string",
          "format": "duration"
        },
        "ttlAsIso8601": {
          "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
          "type": "string",
          "format": "duration"
        },
        "maxDeliveryCount": {
          "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
          "format": "int32",
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      }
    },
    "RoutingProperties": {
      "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
          "type": "object",
          "properties": {
            "serviceBusQueues": {
              "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
              "type": "array",
              "items": {
                "description": "The properties related to service bus queue endpoint types.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Id of the service bus queue endpoint",
                    "type": "string"
                  },
                  "connectionString": {
                    "description": "The connection string of the service bus queue endpoint.",
                    "type": "string"
                  },
                  "endpointUri": {
                    "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                    "type": "string"
                  },
                  "entityPath": {
                    "description": "Queue name on the service bus namespace",
                    "type": "string"
                  },
                  "authenticationType": {
                    "description": "Method used to authenticate against the service bus queue endpoint",
                    "enum": [
                      "keyBased",
                      "identityBased"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "authenticationType",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Managed identity properties of routing service bus queue endpoint.",
                    "type": "object",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned identity."
                      }
                    }
                  },
                  "name": {
                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                    "type": "string",
                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                  },
                  "subscriptionId": {
                    "description": "The subscription identifier of the service bus queue endpoint.",
                    "type": "string"
                  },
                  "resourceGroup": {
                    "description": "The name of the resource group of the service bus queue endpoint.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "serviceBusTopics": {
              "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
              "type": "array",
              "items": {
                "description": "The properties related to service bus topic endpoint types.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Id of the service bus topic endpoint",
                    "type": "string"
                  },
                  "connectionString": {
                    "description": "The connection string of the service bus topic endpoint.",
                    "type": "string"
                  },
                  "endpointUri": {
                    "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                    "type": "string"
                  },
                  "entityPath": {
                    "description": "Queue name on the service bus topic",
                    "type": "string"
                  },
                  "authenticationType": {
                    "description": "Method used to authenticate against the service bus topic endpoint",
                    "enum": [
                      "keyBased",
                      "identityBased"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "authenticationType",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Managed identity properties of routing service bus topic endpoint.",
                    "type": "object",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned identity."
                      }
                    }
                  },
                  "name": {
                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                    "type": "string",
                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                  },
                  "subscriptionId": {
                    "description": "The subscription identifier of the service bus topic endpoint.",
                    "type": "string"
                  },
                  "resourceGroup": {
                    "description": "The name of the resource group of the service bus topic endpoint.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "eventHubs": {
              "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
              "type": "array",
              "items": {
                "description": "The properties related to an event hub endpoint.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Id of the event hub endpoint",
                    "type": "string"
                  },
                  "connectionString": {
                    "description": "The connection string of the event hub endpoint. ",
                    "type": "string"
                  },
                  "endpointUri": {
                    "description": "The url of the event hub endpoint. It must include the protocol sb://",
                    "type": "string"
                  },
                  "entityPath": {
                    "description": "Event hub name on the event hub namespace",
                    "type": "string"
                  },
                  "authenticationType": {
                    "description": "Method used to authenticate against the event hub endpoint",
                    "enum": [
                      "keyBased",
                      "identityBased"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "authenticationType",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Managed identity properties of routing event hub endpoint.",
                    "type": "object",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned identity."
                      }
                    }
                  },
                  "name": {
                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                    "type": "string",
                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                  },
                  "subscriptionId": {
                    "description": "The subscription identifier of the event hub endpoint.",
                    "type": "string"
                  },
                  "resourceGroup": {
                    "description": "The name of the resource group of the event hub endpoint.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "storageContainers": {
              "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
              "type": "array",
              "items": {
                "description": "The properties related to a storage container endpoint.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Id of the storage container endpoint",
                    "type": "string"
                  },
                  "connectionString": {
                    "description": "The connection string of the storage account.",
                    "type": "string"
                  },
                  "endpointUri": {
                    "description": "The url of the storage endpoint. It must include the protocol https://",
                    "type": "string"
                  },
                  "authenticationType": {
                    "description": "Method used to authenticate against the storage endpoint",
                    "enum": [
                      "keyBased",
                      "identityBased"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "authenticationType",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Managed identity properties of routing storage endpoint.",
                    "type": "object",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned identity."
                      }
                    }
                  },
                  "name": {
                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                    "type": "string",
                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                  },
                  "subscriptionId": {
                    "description": "The subscription identifier of the storage account.",
                    "type": "string"
                  },
                  "resourceGroup": {
                    "description": "The name of the resource group of the storage account.",
                    "type": "string"
                  },
                  "containerName": {
                    "description": "The name of storage container in the storage account.",
                    "type": "string"
                  },
                  "fileNameFormat": {
                    "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                    "type": "string"
                  },
                  "batchFrequencyInSeconds": {
                    "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                    "format": "int32",
                    "type": "integer",
                    "maximum": 720,
                    "minimum": 60
                  },
                  "maxChunkSizeInBytes": {
                    "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                    "format": "int32",
                    "type": "integer",
                    "maximum": 524288000,
                    "minimum": 10485760
                  },
                  "encoding": {
                    "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                    "type": "string",
                    "enum": [
                      "Avro",
                      "AvroDeflate",
                      "JSON"
                    ]
                  }
                },
                "required": [
                  "name",
                  "containerName"
                ]
              }
            },
            "cosmosDBSqlContainers": {
              "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
              "type": "array",
              "items": {
                "description": "The properties related to a cosmos DB sql container endpoint.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                    "type": "string",
                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                  },
                  "id": {
                    "readOnly": true,
                    "description": "Id of the cosmos DB sql container endpoint",
                    "type": "string"
                  },
                  "subscriptionId": {
                    "description": "The subscription identifier of the cosmos DB account.",
                    "type": "string"
                  },
                  "resourceGroup": {
                    "description": "The name of the resource group of the cosmos DB account.",
                    "type": "string"
                  },
                  "endpointUri": {
                    "description": "The url of the cosmos DB account. It must include the protocol https://",
                    "type": "string",
                    "format": "uri"
                  },
                  "authenticationType": {
                    "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                    "enum": [
                      "keyBased",
                      "identityBased"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "authenticationType",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Managed identity properties of routing cosmos DB container endpoint.",
                    "type": "object",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned identity."
                      }
                    }
                  },
                  "primaryKey": {
                    "description": "The primary key of the cosmos DB account.",
                    "type": "string",
                    "x-ms-secret": true
                  },
                  "secondaryKey": {
                    "description": "The secondary key of the cosmos DB account.",
                    "type": "string",
                    "x-ms-secret": true
                  },
                  "databaseName": {
                    "description": "The name of the cosmos DB database in the cosmos DB account.",
                    "type": "string"
                  },
                  "containerName": {
                    "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                    "type": "string"
                  },
                  "partitionKeyName": {
                    "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                    "type": "string"
                  },
                  "partitionKeyTemplate": {
                    "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "endpointUri",
                  "databaseName",
                  "containerName"
                ]
              }
            }
          }
        },
        "routes": {
          "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
          "type": "array",
          "items": {
            "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                "type": "string",
                "pattern": "^[A-Za-z0-9-._]{1,64}$"
              },
              "source": {
                "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                "enum": [
                  "Invalid",
                  "DeviceMessages",
                  "TwinChangeEvents",
                  "DeviceLifecycleEvents",
                  "DeviceJobLifecycleEvents",
                  "DeviceConnectionStateEvents"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "RoutingSource",
                  "modelAsString": true
                }
              },
              "condition": {
                "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                "type": "string"
              },
              "endpointNames": {
                "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "isEnabled": {
                "description": "Used to specify whether a route is enabled.",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "endpointNames",
              "source",
              "isEnabled"
            ]
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "fallbackRoute": {
          "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
              "type": "string"
            },
            "source": {
              "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
              "enum": [
                "DeviceMessages"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RoutingSource",
                "modelAsString": true
              }
            },
            "condition": {
              "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
              "type": "string"
            },
            "endpointNames": {
              "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
              "minItems": 1,
              "maxItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isEnabled": {
              "description": "Used to specify whether the fallback route is enabled.",
              "type": "boolean"
            }
          },
          "required": [
            "endpointNames",
            "source",
            "isEnabled"
          ]
        },
        "enrichments": {
          "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
          "type": "array",
          "items": {
            "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
            "type": "object",
            "properties": {
              "key": {
                "description": "The key or name for the enrichment property.",
                "type": "string"
              },
              "value": {
                "description": "The value for the enrichment property.",
                "type": "string"
              },
              "endpointNames": {
                "description": "The list of endpoints for which the enrichment is applied to the message.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "key",
              "value",
              "endpointNames"
            ]
          },
          "x-ms-identifiers": [
            "key"
          ]
        }
      }
    },
    "RoutingEndpoints": {
      "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
      "type": "object",
      "properties": {
        "serviceBusQueues": {
          "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
          "type": "array",
          "items": {
            "description": "The properties related to service bus queue endpoint types.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Id of the service bus queue endpoint",
                "type": "string"
              },
              "connectionString": {
                "description": "The connection string of the service bus queue endpoint.",
                "type": "string"
              },
              "endpointUri": {
                "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                "type": "string"
              },
              "entityPath": {
                "description": "Queue name on the service bus namespace",
                "type": "string"
              },
              "authenticationType": {
                "description": "Method used to authenticate against the service bus queue endpoint",
                "enum": [
                  "keyBased",
                  "identityBased"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "authenticationType",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Managed identity properties of routing service bus queue endpoint.",
                "type": "object",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned identity."
                  }
                }
              },
              "name": {
                "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                "type": "string",
                "pattern": "^[A-Za-z0-9-._]{1,64}$"
              },
              "subscriptionId": {
                "description": "The subscription identifier of the service bus queue endpoint.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "The name of the resource group of the service bus queue endpoint.",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "serviceBusTopics": {
          "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
          "type": "array",
          "items": {
            "description": "The properties related to service bus topic endpoint types.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Id of the service bus topic endpoint",
                "type": "string"
              },
              "connectionString": {
                "description": "The connection string of the service bus topic endpoint.",
                "type": "string"
              },
              "endpointUri": {
                "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                "type": "string"
              },
              "entityPath": {
                "description": "Queue name on the service bus topic",
                "type": "string"
              },
              "authenticationType": {
                "description": "Method used to authenticate against the service bus topic endpoint",
                "enum": [
                  "keyBased",
                  "identityBased"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "authenticationType",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Managed identity properties of routing service bus topic endpoint.",
                "type": "object",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned identity."
                  }
                }
              },
              "name": {
                "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                "type": "string",
                "pattern": "^[A-Za-z0-9-._]{1,64}$"
              },
              "subscriptionId": {
                "description": "The subscription identifier of the service bus topic endpoint.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "The name of the resource group of the service bus topic endpoint.",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "eventHubs": {
          "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
          "type": "array",
          "items": {
            "description": "The properties related to an event hub endpoint.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Id of the event hub endpoint",
                "type": "string"
              },
              "connectionString": {
                "description": "The connection string of the event hub endpoint. ",
                "type": "string"
              },
              "endpointUri": {
                "description": "The url of the event hub endpoint. It must include the protocol sb://",
                "type": "string"
              },
              "entityPath": {
                "description": "Event hub name on the event hub namespace",
                "type": "string"
              },
              "authenticationType": {
                "description": "Method used to authenticate against the event hub endpoint",
                "enum": [
                  "keyBased",
                  "identityBased"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "authenticationType",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Managed identity properties of routing event hub endpoint.",
                "type": "object",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned identity."
                  }
                }
              },
              "name": {
                "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                "type": "string",
                "pattern": "^[A-Za-z0-9-._]{1,64}$"
              },
              "subscriptionId": {
                "description": "The subscription identifier of the event hub endpoint.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "The name of the resource group of the event hub endpoint.",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "storageContainers": {
          "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
          "type": "array",
          "items": {
            "description": "The properties related to a storage container endpoint.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Id of the storage container endpoint",
                "type": "string"
              },
              "connectionString": {
                "description": "The connection string of the storage account.",
                "type": "string"
              },
              "endpointUri": {
                "description": "The url of the storage endpoint. It must include the protocol https://",
                "type": "string"
              },
              "authenticationType": {
                "description": "Method used to authenticate against the storage endpoint",
                "enum": [
                  "keyBased",
                  "identityBased"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "authenticationType",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Managed identity properties of routing storage endpoint.",
                "type": "object",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned identity."
                  }
                }
              },
              "name": {
                "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                "type": "string",
                "pattern": "^[A-Za-z0-9-._]{1,64}$"
              },
              "subscriptionId": {
                "description": "The subscription identifier of the storage account.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "The name of the resource group of the storage account.",
                "type": "string"
              },
              "containerName": {
                "description": "The name of storage container in the storage account.",
                "type": "string"
              },
              "fileNameFormat": {
                "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                "type": "string"
              },
              "batchFrequencyInSeconds": {
                "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                "format": "int32",
                "type": "integer",
                "maximum": 720,
                "minimum": 60
              },
              "maxChunkSizeInBytes": {
                "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                "format": "int32",
                "type": "integer",
                "maximum": 524288000,
                "minimum": 10485760
              },
              "encoding": {
                "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                "type": "string",
                "enum": [
                  "Avro",
                  "AvroDeflate",
                  "JSON"
                ]
              }
            },
            "required": [
              "name",
              "containerName"
            ]
          }
        },
        "cosmosDBSqlContainers": {
          "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
          "type": "array",
          "items": {
            "description": "The properties related to a cosmos DB sql container endpoint.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                "type": "string",
                "pattern": "^[A-Za-z0-9-._]{1,64}$"
              },
              "id": {
                "readOnly": true,
                "description": "Id of the cosmos DB sql container endpoint",
                "type": "string"
              },
              "subscriptionId": {
                "description": "The subscription identifier of the cosmos DB account.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "The name of the resource group of the cosmos DB account.",
                "type": "string"
              },
              "endpointUri": {
                "description": "The url of the cosmos DB account. It must include the protocol https://",
                "type": "string",
                "format": "uri"
              },
              "authenticationType": {
                "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                "enum": [
                  "keyBased",
                  "identityBased"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "authenticationType",
                  "modelAsString": true
                }
              },
              "identity": {
                "description": "Managed identity properties of routing cosmos DB container endpoint.",
                "type": "object",
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "The user assigned identity."
                  }
                }
              },
              "primaryKey": {
                "description": "The primary key of the cosmos DB account.",
                "type": "string",
                "x-ms-secret": true
              },
              "secondaryKey": {
                "description": "The secondary key of the cosmos DB account.",
                "type": "string",
                "x-ms-secret": true
              },
              "databaseName": {
                "description": "The name of the cosmos DB database in the cosmos DB account.",
                "type": "string"
              },
              "containerName": {
                "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                "type": "string"
              },
              "partitionKeyName": {
                "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                "type": "string"
              },
              "partitionKeyTemplate": {
                "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                "type": "string"
              }
            },
            "required": [
              "name",
              "endpointUri",
              "databaseName",
              "containerName"
            ]
          }
        }
      }
    },
    "RoutingServiceBusQueueEndpointProperties": {
      "description": "The properties related to service bus queue endpoint types.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the service bus queue endpoint",
          "type": "string"
        },
        "connectionString": {
          "description": "The connection string of the service bus queue endpoint.",
          "type": "string"
        },
        "endpointUri": {
          "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
          "type": "string"
        },
        "entityPath": {
          "description": "Queue name on the service bus namespace",
          "type": "string"
        },
        "authenticationType": {
          "description": "Method used to authenticate against the service bus queue endpoint",
          "enum": [
            "keyBased",
            "identityBased"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "authenticationType",
            "modelAsString": true
          }
        },
        "identity": {
          "description": "Managed identity properties of routing service bus queue endpoint.",
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned identity."
            }
          }
        },
        "name": {
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
          "type": "string",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "subscriptionId": {
          "description": "The subscription identifier of the service bus queue endpoint.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "The name of the resource group of the service bus queue endpoint.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "RoutingServiceBusTopicEndpointProperties": {
      "description": "The properties related to service bus topic endpoint types.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the service bus topic endpoint",
          "type": "string"
        },
        "connectionString": {
          "description": "The connection string of the service bus topic endpoint.",
          "type": "string"
        },
        "endpointUri": {
          "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
          "type": "string"
        },
        "entityPath": {
          "description": "Queue name on the service bus topic",
          "type": "string"
        },
        "authenticationType": {
          "description": "Method used to authenticate against the service bus topic endpoint",
          "enum": [
            "keyBased",
            "identityBased"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "authenticationType",
            "modelAsString": true
          }
        },
        "identity": {
          "description": "Managed identity properties of routing service bus topic endpoint.",
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned identity."
            }
          }
        },
        "name": {
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
          "type": "string",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "subscriptionId": {
          "description": "The subscription identifier of the service bus topic endpoint.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "The name of the resource group of the service bus topic endpoint.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "RoutingEventHubProperties": {
      "description": "The properties related to an event hub endpoint.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the event hub endpoint",
          "type": "string"
        },
        "connectionString": {
          "description": "The connection string of the event hub endpoint. ",
          "type": "string"
        },
        "endpointUri": {
          "description": "The url of the event hub endpoint. It must include the protocol sb://",
          "type": "string"
        },
        "entityPath": {
          "description": "Event hub name on the event hub namespace",
          "type": "string"
        },
        "authenticationType": {
          "description": "Method used to authenticate against the event hub endpoint",
          "enum": [
            "keyBased",
            "identityBased"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "authenticationType",
            "modelAsString": true
          }
        },
        "identity": {
          "description": "Managed identity properties of routing event hub endpoint.",
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned identity."
            }
          }
        },
        "name": {
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
          "type": "string",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "subscriptionId": {
          "description": "The subscription identifier of the event hub endpoint.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "The name of the resource group of the event hub endpoint.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "RoutingStorageContainerProperties": {
      "description": "The properties related to a storage container endpoint.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the storage container endpoint",
          "type": "string"
        },
        "connectionString": {
          "description": "The connection string of the storage account.",
          "type": "string"
        },
        "endpointUri": {
          "description": "The url of the storage endpoint. It must include the protocol https://",
          "type": "string"
        },
        "authenticationType": {
          "description": "Method used to authenticate against the storage endpoint",
          "enum": [
            "keyBased",
            "identityBased"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "authenticationType",
            "modelAsString": true
          }
        },
        "identity": {
          "description": "Managed identity properties of routing storage endpoint.",
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned identity."
            }
          }
        },
        "name": {
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
          "type": "string",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "subscriptionId": {
          "description": "The subscription identifier of the storage account.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "The name of the resource group of the storage account.",
          "type": "string"
        },
        "containerName": {
          "description": "The name of storage container in the storage account.",
          "type": "string"
        },
        "fileNameFormat": {
          "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
          "type": "string"
        },
        "batchFrequencyInSeconds": {
          "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
          "format": "int32",
          "type": "integer",
          "maximum": 720,
          "minimum": 60
        },
        "maxChunkSizeInBytes": {
          "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
          "format": "int32",
          "type": "integer",
          "maximum": 524288000,
          "minimum": 10485760
        },
        "encoding": {
          "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
          "type": "string",
          "enum": [
            "Avro",
            "AvroDeflate",
            "JSON"
          ]
        }
      },
      "required": [
        "name",
        "containerName"
      ]
    },
    "RoutingCosmosDBSqlApiProperties": {
      "description": "The properties related to a cosmos DB sql container endpoint.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
          "type": "string",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "id": {
          "readOnly": true,
          "description": "Id of the cosmos DB sql container endpoint",
          "type": "string"
        },
        "subscriptionId": {
          "description": "The subscription identifier of the cosmos DB account.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "The name of the resource group of the cosmos DB account.",
          "type": "string"
        },
        "endpointUri": {
          "description": "The url of the cosmos DB account. It must include the protocol https://",
          "type": "string",
          "format": "uri"
        },
        "authenticationType": {
          "description": "Method used to authenticate against the cosmos DB sql container endpoint",
          "enum": [
            "keyBased",
            "identityBased"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "authenticationType",
            "modelAsString": true
          }
        },
        "identity": {
          "description": "Managed identity properties of routing cosmos DB container endpoint.",
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned identity."
            }
          }
        },
        "primaryKey": {
          "description": "The primary key of the cosmos DB account.",
          "type": "string",
          "x-ms-secret": true
        },
        "secondaryKey": {
          "description": "The secondary key of the cosmos DB account.",
          "type": "string",
          "x-ms-secret": true
        },
        "databaseName": {
          "description": "The name of the cosmos DB database in the cosmos DB account.",
          "type": "string"
        },
        "containerName": {
          "description": "The name of the cosmos DB sql container in the cosmos DB database.",
          "type": "string"
        },
        "partitionKeyName": {
          "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
          "type": "string"
        },
        "partitionKeyTemplate": {
          "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "endpointUri",
        "databaseName",
        "containerName"
      ]
    },
    "RouteProperties": {
      "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
          "type": "string",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "source": {
          "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
          "enum": [
            "Invalid",
            "DeviceMessages",
            "TwinChangeEvents",
            "DeviceLifecycleEvents",
            "DeviceJobLifecycleEvents",
            "DeviceConnectionStateEvents"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoutingSource",
            "modelAsString": true
          }
        },
        "condition": {
          "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
          "type": "string"
        },
        "endpointNames": {
          "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
          "minItems": 1,
          "maxItems": 1,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isEnabled": {
          "description": "Used to specify whether a route is enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "endpointNames",
        "source",
        "isEnabled"
      ]
    },
    "FallbackRouteProperties": {
      "description": "The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
          "type": "string"
        },
        "source": {
          "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
          "enum": [
            "DeviceMessages"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoutingSource",
            "modelAsString": true
          }
        },
        "condition": {
          "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
          "type": "string"
        },
        "endpointNames": {
          "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
          "minItems": 1,
          "maxItems": 1,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isEnabled": {
          "description": "Used to specify whether the fallback route is enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "endpointNames",
        "source",
        "isEnabled"
      ]
    },
    "EnrichmentProperties": {
      "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The key or name for the enrichment property.",
          "type": "string"
        },
        "value": {
          "description": "The value for the enrichment property.",
          "type": "string"
        },
        "endpointNames": {
          "description": "The list of endpoints for which the enrichment is applied to the message.",
          "minItems": 1,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "key",
        "value",
        "endpointNames"
      ]
    },
    "IotHubDescription": {
      "description": "The description of the IoT hub.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "etag": {
          "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
          "type": "string"
        },
        "properties": {
          "description": "IotHub properties",
          "type": "object",
          "properties": {
            "authorizationPolicies": {
              "description": "The shared access policies you can use to secure a connection to the IoT hub.",
              "type": "array",
              "items": {
                "description": "The properties of an IoT hub shared access policy.",
                "type": "object",
                "properties": {
                  "keyName": {
                    "description": "The name of the shared access policy.",
                    "type": "string"
                  },
                  "primaryKey": {
                    "description": "The primary key.",
                    "type": "string"
                  },
                  "secondaryKey": {
                    "description": "The secondary key.",
                    "type": "string"
                  },
                  "rights": {
                    "description": "The permissions assigned to the shared access policy.",
                    "enum": [
                      "RegistryRead",
                      "RegistryWrite",
                      "ServiceConnect",
                      "DeviceConnect",
                      "RegistryRead, RegistryWrite",
                      "RegistryRead, ServiceConnect",
                      "RegistryRead, DeviceConnect",
                      "RegistryWrite, ServiceConnect",
                      "RegistryWrite, DeviceConnect",
                      "ServiceConnect, DeviceConnect",
                      "RegistryRead, RegistryWrite, ServiceConnect",
                      "RegistryRead, RegistryWrite, DeviceConnect",
                      "RegistryRead, ServiceConnect, DeviceConnect",
                      "RegistryWrite, ServiceConnect, DeviceConnect",
                      "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "AccessRights",
                      "modelAsString": false
                    }
                  }
                },
                "required": [
                  "keyName",
                  "rights"
                ]
              },
              "x-ms-identifiers": [
                "keyName"
              ]
            },
            "disableLocalAuth": {
              "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
              "type": "boolean"
            },
            "disableDeviceSAS": {
              "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
              "type": "boolean"
            },
            "disableModuleSAS": {
              "description": "If true, all module scoped SAS keys cannot be used for authentication.",
              "type": "boolean"
            },
            "restrictOutboundNetworkAccess": {
              "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
              "type": "boolean"
            },
            "allowedFqdnList": {
              "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
              "type": "array",
              "items": {
                "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                "type": "string"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "Whether requests from Public Network are allowed",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "ipFilterRules": {
              "description": "The IP filter rules.",
              "type": "array",
              "items": {
                "description": "The IP filter rules for the IoT hub.",
                "type": "object",
                "properties": {
                  "filterName": {
                    "description": "The name of the IP filter rule.",
                    "type": "string"
                  },
                  "action": {
                    "description": "The desired action for requests captured by this rule.",
                    "enum": [
                      "Accept",
                      "Reject"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IpFilterActionType",
                      "modelAsString": false
                    }
                  },
                  "ipMask": {
                    "description": "A string that contains the IP address range in CIDR notation for the rule.",
                    "type": "string"
                  }
                },
                "required": [
                  "filterName",
                  "action",
                  "ipMask"
                ]
              },
              "x-ms-identifiers": [
                "filterName"
              ]
            },
            "networkRuleSets": {
              "description": "Network Rule Set Properties of IotHub",
              "type": "object",
              "properties": {
                "defaultAction": {
                  "type": "string",
                  "description": "Default Action for Network Rule Set",
                  "enum": [
                    "Deny",
                    "Allow"
                  ],
                  "x-ms-enum": {
                    "name": "DefaultAction",
                    "modelAsString": true
                  },
                  "default": "Deny"
                },
                "applyToBuiltInEventHubEndpoint": {
                  "type": "boolean",
                  "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                },
                "ipRules": {
                  "type": "array",
                  "items": {
                    "description": "IP Rule to be applied as part of Network Rule Set",
                    "type": "object",
                    "properties": {
                      "filterName": {
                        "type": "string",
                        "description": "Name of the IP filter rule."
                      },
                      "action": {
                        "type": "string",
                        "description": "IP Filter Action",
                        "enum": [
                          "Allow"
                        ],
                        "x-ms-enum": {
                          "name": "NetworkRuleIPAction",
                          "modelAsString": true
                        },
                        "default": "Allow"
                      },
                      "ipMask": {
                        "type": "string",
                        "description": "A string that contains the IP address range in CIDR notation for the rule."
                      }
                    },
                    "required": [
                      "filterName",
                      "ipMask"
                    ]
                  },
                  "x-ms-identifiers": [
                    "filterName"
                  ],
                  "description": "List of IP Rules"
                }
              },
              "required": [
                "applyToBuiltInEventHubEndpoint",
                "ipRules"
              ]
            },
            "minTlsVersion": {
              "type": "string",
              "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
            },
            "privateEndpointConnections": {
              "description": "Private endpoint connections created on this IotHub",
              "type": "array",
              "items": {
                "description": "The private endpoint connection of an IotHub",
                "x-ms-azure-resource": true,
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource identifier."
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource name."
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The resource type."
                  },
                  "properties": {
                    "description": "The properties of a private endpoint connection",
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The private endpoint property of a private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The resource identifier."
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "The current state of a private endpoint connection",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The status of a private endpoint connection",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrivateLinkServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The description for the current state of a private endpoint connection"
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "Actions required for a private endpoint connection"
                          }
                        },
                        "required": [
                          "status",
                          "description"
                        ]
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "required": [
                  "properties"
                ]
              }
            },
            "provisioningState": {
              "description": "The provisioning state.",
              "type": "string",
              "readOnly": true
            },
            "state": {
              "description": "The hub state.",
              "type": "string",
              "readOnly": true
            },
            "hostName": {
              "description": "The name of the host.",
              "type": "string",
              "readOnly": true
            },
            "eventHubEndpoints": {
              "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
              "type": "object",
              "additionalProperties": {
                "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                "type": "object",
                "properties": {
                  "retentionTimeInDays": {
                    "format": "int64",
                    "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                    "type": "integer"
                  },
                  "partitionCount": {
                    "format": "int32",
                    "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                    "type": "integer"
                  },
                  "partitionIds": {
                    "description": "The partition ids in the Event Hub-compatible endpoint.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "path": {
                    "description": "The Event Hub-compatible name.",
                    "type": "string",
                    "readOnly": true
                  },
                  "endpoint": {
                    "description": "The Event Hub-compatible endpoint.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            },
            "routing": {
              "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
              "type": "object",
              "properties": {
                "endpoints": {
                  "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                  "type": "object",
                  "properties": {
                    "serviceBusQueues": {
                      "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                      "type": "array",
                      "items": {
                        "description": "The properties related to service bus queue endpoint types.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Id of the service bus queue endpoint",
                            "type": "string"
                          },
                          "connectionString": {
                            "description": "The connection string of the service bus queue endpoint.",
                            "type": "string"
                          },
                          "endpointUri": {
                            "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                            "type": "string"
                          },
                          "entityPath": {
                            "description": "Queue name on the service bus namespace",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Method used to authenticate against the service bus queue endpoint",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "authenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of routing service bus queue endpoint.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          },
                          "name": {
                            "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                            "type": "string",
                            "pattern": "^[A-Za-z0-9-._]{1,64}$"
                          },
                          "subscriptionId": {
                            "description": "The subscription identifier of the service bus queue endpoint.",
                            "type": "string"
                          },
                          "resourceGroup": {
                            "description": "The name of the resource group of the service bus queue endpoint.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "serviceBusTopics": {
                      "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                      "type": "array",
                      "items": {
                        "description": "The properties related to service bus topic endpoint types.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Id of the service bus topic endpoint",
                            "type": "string"
                          },
                          "connectionString": {
                            "description": "The connection string of the service bus topic endpoint.",
                            "type": "string"
                          },
                          "endpointUri": {
                            "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                            "type": "string"
                          },
                          "entityPath": {
                            "description": "Queue name on the service bus topic",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Method used to authenticate against the service bus topic endpoint",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "authenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of routing service bus topic endpoint.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          },
                          "name": {
                            "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                            "type": "string",
                            "pattern": "^[A-Za-z0-9-._]{1,64}$"
                          },
                          "subscriptionId": {
                            "description": "The subscription identifier of the service bus topic endpoint.",
                            "type": "string"
                          },
                          "resourceGroup": {
                            "description": "The name of the resource group of the service bus topic endpoint.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "eventHubs": {
                      "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                      "type": "array",
                      "items": {
                        "description": "The properties related to an event hub endpoint.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Id of the event hub endpoint",
                            "type": "string"
                          },
                          "connectionString": {
                            "description": "The connection string of the event hub endpoint. ",
                            "type": "string"
                          },
                          "endpointUri": {
                            "description": "The url of the event hub endpoint. It must include the protocol sb://",
                            "type": "string"
                          },
                          "entityPath": {
                            "description": "Event hub name on the event hub namespace",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Method used to authenticate against the event hub endpoint",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "authenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of routing event hub endpoint.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          },
                          "name": {
                            "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                            "type": "string",
                            "pattern": "^[A-Za-z0-9-._]{1,64}$"
                          },
                          "subscriptionId": {
                            "description": "The subscription identifier of the event hub endpoint.",
                            "type": "string"
                          },
                          "resourceGroup": {
                            "description": "The name of the resource group of the event hub endpoint.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "storageContainers": {
                      "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                      "type": "array",
                      "items": {
                        "description": "The properties related to a storage container endpoint.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Id of the storage container endpoint",
                            "type": "string"
                          },
                          "connectionString": {
                            "description": "The connection string of the storage account.",
                            "type": "string"
                          },
                          "endpointUri": {
                            "description": "The url of the storage endpoint. It must include the protocol https://",
                            "type": "string"
                          },
                          "authenticationType": {
                            "description": "Method used to authenticate against the storage endpoint",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "authenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of routing storage endpoint.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          },
                          "name": {
                            "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                            "type": "string",
                            "pattern": "^[A-Za-z0-9-._]{1,64}$"
                          },
                          "subscriptionId": {
                            "description": "The subscription identifier of the storage account.",
                            "type": "string"
                          },
                          "resourceGroup": {
                            "description": "The name of the resource group of the storage account.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "The name of storage container in the storage account.",
                            "type": "string"
                          },
                          "fileNameFormat": {
                            "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                            "type": "string"
                          },
                          "batchFrequencyInSeconds": {
                            "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                            "format": "int32",
                            "type": "integer",
                            "maximum": 720,
                            "minimum": 60
                          },
                          "maxChunkSizeInBytes": {
                            "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                            "format": "int32",
                            "type": "integer",
                            "maximum": 524288000,
                            "minimum": 10485760
                          },
                          "encoding": {
                            "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                            "type": "string",
                            "enum": [
                              "Avro",
                              "AvroDeflate",
                              "JSON"
                            ]
                          }
                        },
                        "required": [
                          "name",
                          "containerName"
                        ]
                      }
                    },
                    "cosmosDBSqlContainers": {
                      "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                      "type": "array",
                      "items": {
                        "description": "The properties related to a cosmos DB sql container endpoint.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                            "type": "string",
                            "pattern": "^[A-Za-z0-9-._]{1,64}$"
                          },
                          "id": {
                            "readOnly": true,
                            "description": "Id of the cosmos DB sql container endpoint",
                            "type": "string"
                          },
                          "subscriptionId": {
                            "description": "The subscription identifier of the cosmos DB account.",
                            "type": "string"
                          },
                          "resourceGroup": {
                            "description": "The name of the resource group of the cosmos DB account.",
                            "type": "string"
                          },
                          "endpointUri": {
                            "description": "The url of the cosmos DB account. It must include the protocol https://",
                            "type": "string",
                            "format": "uri"
                          },
                          "authenticationType": {
                            "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                            "enum": [
                              "keyBased",
                              "identityBased"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "authenticationType",
                              "modelAsString": true
                            }
                          },
                          "identity": {
                            "description": "Managed identity properties of routing cosmos DB container endpoint.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentity": {
                                "type": "string",
                                "description": "The user assigned identity."
                              }
                            }
                          },
                          "primaryKey": {
                            "description": "The primary key of the cosmos DB account.",
                            "type": "string",
                            "x-ms-secret": true
                          },
                          "secondaryKey": {
                            "description": "The secondary key of the cosmos DB account.",
                            "type": "string",
                            "x-ms-secret": true
                          },
                          "databaseName": {
                            "description": "The name of the cosmos DB database in the cosmos DB account.",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                            "type": "string"
                          },
                          "partitionKeyName": {
                            "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                            "type": "string"
                          },
                          "partitionKeyTemplate": {
                            "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "endpointUri",
                          "databaseName",
                          "containerName"
                        ]
                      }
                    }
                  }
                },
                "routes": {
                  "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                  "type": "array",
                  "items": {
                    "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                        "type": "string",
                        "pattern": "^[A-Za-z0-9-._]{1,64}$"
                      },
                      "source": {
                        "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                        "enum": [
                          "Invalid",
                          "DeviceMessages",
                          "TwinChangeEvents",
                          "DeviceLifecycleEvents",
                          "DeviceJobLifecycleEvents",
                          "DeviceConnectionStateEvents"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "RoutingSource",
                          "modelAsString": true
                        }
                      },
                      "condition": {
                        "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                        "type": "string"
                      },
                      "endpointNames": {
                        "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                        "minItems": 1,
                        "maxItems": 1,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "isEnabled": {
                        "description": "Used to specify whether a route is enabled.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "name",
                      "endpointNames",
                      "source",
                      "isEnabled"
                    ]
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "fallbackRoute": {
                  "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                      "type": "string"
                    },
                    "source": {
                      "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                      "enum": [
                        "DeviceMessages"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "RoutingSource",
                        "modelAsString": true
                      }
                    },
                    "condition": {
                      "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                      "type": "string"
                    },
                    "endpointNames": {
                      "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                      "minItems": 1,
                      "maxItems": 1,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isEnabled": {
                      "description": "Used to specify whether the fallback route is enabled.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "endpointNames",
                    "source",
                    "isEnabled"
                  ]
                },
                "enrichments": {
                  "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                  "type": "array",
                  "items": {
                    "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "The key or name for the enrichment property.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value for the enrichment property.",
                        "type": "string"
                      },
                      "endpointNames": {
                        "description": "The list of endpoints for which the enrichment is applied to the message.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "key",
                      "value",
                      "endpointNames"
                    ]
                  },
                  "x-ms-identifiers": [
                    "key"
                  ]
                }
              }
            },
            "storageEndpoints": {
              "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
              "type": "object",
              "additionalProperties": {
                "description": "The properties of the Azure Storage endpoint for file upload.",
                "type": "object",
                "properties": {
                  "sasTtlAsIso8601": {
                    "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                    "type": "string",
                    "format": "duration"
                  },
                  "connectionString": {
                    "description": "The connection string for the Azure Storage account to which files are uploaded.",
                    "type": "string"
                  },
                  "containerName": {
                    "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                    "type": "string"
                  },
                  "authenticationType": {
                    "description": "Specifies authentication type being used for connecting to the storage account.",
                    "enum": [
                      "keyBased",
                      "identityBased"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "AuthenticationType",
                      "modelAsString": true
                    }
                  },
                  "identity": {
                    "description": "Managed identity properties of storage endpoint for file upload.",
                    "type": "object",
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "The user assigned identity."
                      }
                    }
                  }
                },
                "required": [
                  "connectionString",
                  "containerName"
                ]
              }
            },
            "messagingEndpoints": {
              "description": "The messaging endpoint properties for the file upload notification queue.",
              "type": "object",
              "additionalProperties": {
                "description": "The properties of the messaging endpoints used by this IoT hub.",
                "type": "object",
                "properties": {
                  "lockDurationAsIso8601": {
                    "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                    "type": "string",
                    "format": "duration"
                  },
                  "ttlAsIso8601": {
                    "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                    "type": "string",
                    "format": "duration"
                  },
                  "maxDeliveryCount": {
                    "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                  }
                }
              }
            },
            "enableFileUploadNotifications": {
              "description": "If True, file upload notifications are enabled.",
              "type": "boolean"
            },
            "cloudToDevice": {
              "description": "The IoT hub cloud-to-device messaging properties.",
              "type": "object",
              "properties": {
                "maxDeliveryCount": {
                  "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                  "format": "int32",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 100
                },
                "defaultTtlAsIso8601": {
                  "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                  "type": "string",
                  "format": "duration"
                },
                "feedback": {
                  "description": "The properties of the feedback queue for cloud-to-device messages.",
                  "type": "object",
                  "properties": {
                    "lockDurationAsIso8601": {
                      "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                      "type": "string",
                      "format": "duration"
                    },
                    "ttlAsIso8601": {
                      "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                      "type": "string",
                      "format": "duration"
                    },
                    "maxDeliveryCount": {
                      "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                      "format": "int32",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 100
                    }
                  }
                }
              }
            },
            "comments": {
              "description": "IoT hub comments.",
              "type": "string"
            },
            "features": {
              "description": "The capabilities and features enabled for the IoT hub.",
              "enum": [
                "None",
                "DeviceManagement"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "Capabilities",
                "modelAsString": true
              }
            },
            "locations": {
              "description": "Primary and secondary location for iot hub",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "Public representation of one of the locations where a resource is provisioned.",
                "type": "object",
                "properties": {
                  "location": {
                    "description": "The name of the Azure region",
                    "type": "string"
                  },
                  "role": {
                    "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                    "enum": [
                      "primary",
                      "secondary"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IotHubReplicaRoleType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "location"
              ]
            },
            "enableDataResidency": {
              "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
              "type": "boolean"
            }
          }
        },
        "sku": {
          "description": "IotHub SKU info",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the SKU.",
              "enum": [
                "F1",
                "S1",
                "S2",
                "S3",
                "B1",
                "B2",
                "B3"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IotHubSku",
                "modelAsString": true
              }
            },
            "tier": {
              "description": "The billing tier for the IoT hub.",
              "enum": [
                "Free",
                "Standard",
                "Basic"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "IotHubSkuTier",
                "modelAsString": false
              }
            },
            "capacity": {
              "format": "int64",
              "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        },
        "identity": {
          "description": "The managed identities for the IotHub.",
          "type": "object",
          "properties": {
            "principalId": {
              "description": "Principal Id",
              "type": "string",
              "readOnly": true
            },
            "tenantId": {
              "description": "Tenant Id",
              "type": "string",
              "readOnly": true
            },
            "type": {
              "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
              "type": "string",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "required": [
        "sku"
      ]
    },
    "IotHubQuotaMetricInfoListResult": {
      "description": "The JSON-serialized array of IotHubQuotaMetricInfo objects with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The array of quota metrics objects.",
          "type": "array",
          "items": {
            "description": "Quota metrics properties.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the quota metric.",
                "type": "string",
                "readOnly": true
              },
              "currentValue": {
                "format": "int64",
                "description": "The current value for the quota metric.",
                "type": "integer",
                "readOnly": true
              },
              "maxValue": {
                "format": "int64",
                "description": "The maximum value of the quota metric.",
                "type": "integer",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EndpointHealthDataListResult": {
      "description": "The JSON-serialized array of EndpointHealthData objects with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "JSON-serialized array of Endpoint health data",
          "type": "array",
          "items": {
            "description": "The health data for an endpoint",
            "type": "object",
            "properties": {
              "endpointId": {
                "description": "Id of the endpoint",
                "type": "string"
              },
              "healthStatus": {
                "description": "Health statuses have following meanings. The 'healthy' status shows that the endpoint is accepting messages as expected. The 'unhealthy' status shows that the endpoint is not accepting messages as expected and IoT Hub is retrying to send data to this endpoint. The status of an unhealthy endpoint will be updated to healthy when IoT Hub has established an eventually consistent state of health. The 'dead' status shows that the endpoint is not accepting messages, after IoT Hub retried sending messages for the retrial period. See IoT Hub metrics to identify errors and monitor issues with endpoints. The 'unknown' status shows that the IoT Hub has not established a connection with the endpoint. No messages have been delivered to or rejected from this endpoint",
                "enum": [
                  "unknown",
                  "healthy",
                  "degraded",
                  "unhealthy",
                  "dead"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "EndpointHealthStatus",
                  "modelAsString": true
                }
              },
              "lastKnownError": {
                "description": "Last error obtained when a message failed to be delivered to iot hub",
                "type": "string"
              },
              "lastKnownErrorTime": {
                "description": "Time at which the last known error occurred",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "lastSuccessfulSendAttemptTime": {
                "description": "Last time iot hub successfully sent a message to the endpoint",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "lastSendAttemptTime": {
                "description": "Last time iot hub tried to send a message to the endpoint",
                "type": "string",
                "format": "date-time-rfc1123"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to more results",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EndpointHealthData": {
      "description": "The health data for an endpoint",
      "type": "object",
      "properties": {
        "endpointId": {
          "description": "Id of the endpoint",
          "type": "string"
        },
        "healthStatus": {
          "description": "Health statuses have following meanings. The 'healthy' status shows that the endpoint is accepting messages as expected. The 'unhealthy' status shows that the endpoint is not accepting messages as expected and IoT Hub is retrying to send data to this endpoint. The status of an unhealthy endpoint will be updated to healthy when IoT Hub has established an eventually consistent state of health. The 'dead' status shows that the endpoint is not accepting messages, after IoT Hub retried sending messages for the retrial period. See IoT Hub metrics to identify errors and monitor issues with endpoints. The 'unknown' status shows that the IoT Hub has not established a connection with the endpoint. No messages have been delivered to or rejected from this endpoint",
          "enum": [
            "unknown",
            "healthy",
            "degraded",
            "unhealthy",
            "dead"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointHealthStatus",
            "modelAsString": true
          }
        },
        "lastKnownError": {
          "description": "Last error obtained when a message failed to be delivered to iot hub",
          "type": "string"
        },
        "lastKnownErrorTime": {
          "description": "Time at which the last known error occurred",
          "type": "string",
          "format": "date-time-rfc1123"
        },
        "lastSuccessfulSendAttemptTime": {
          "description": "Last time iot hub successfully sent a message to the endpoint",
          "type": "string",
          "format": "date-time-rfc1123"
        },
        "lastSendAttemptTime": {
          "description": "Last time iot hub tried to send a message to the endpoint",
          "type": "string",
          "format": "date-time-rfc1123"
        }
      }
    },
    "RegistryStatistics": {
      "description": "Identity registry statistics.",
      "type": "object",
      "properties": {
        "totalDeviceCount": {
          "format": "int64",
          "description": "The total count of devices in the identity registry.",
          "type": "integer",
          "readOnly": true
        },
        "enabledDeviceCount": {
          "format": "int64",
          "description": "The count of enabled devices in the identity registry.",
          "type": "integer",
          "readOnly": true
        },
        "disabledDeviceCount": {
          "format": "int64",
          "description": "The count of disabled devices in the identity registry.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "JobResponseListResult": {
      "description": "The JSON-serialized array of JobResponse objects with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The array of JobResponse objects.",
          "type": "array",
          "items": {
            "description": "The properties of the Job Response object.",
            "type": "object",
            "properties": {
              "jobId": {
                "description": "The job identifier.",
                "type": "string",
                "readOnly": true
              },
              "startTimeUtc": {
                "format": "date-time-rfc1123",
                "description": "The start time of the job.",
                "type": "string",
                "readOnly": true
              },
              "endTimeUtc": {
                "format": "date-time-rfc1123",
                "description": "The time the job stopped processing.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the job.",
                "enum": [
                  "unknown",
                  "export",
                  "import",
                  "backup",
                  "readDeviceProperties",
                  "writeDeviceProperties",
                  "updateDeviceConfiguration",
                  "rebootDevice",
                  "factoryResetDevice",
                  "firmwareUpdate"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-enum": {
                  "name": "JobType",
                  "modelAsString": true
                }
              },
              "status": {
                "description": "The status of the job.",
                "enum": [
                  "unknown",
                  "enqueued",
                  "running",
                  "completed",
                  "failed",
                  "cancelled"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-enum": {
                  "name": "JobStatus",
                  "modelAsString": false
                }
              },
              "failureReason": {
                "description": "If status == failed, this string containing the reason for the failure.",
                "type": "string",
                "readOnly": true
              },
              "statusMessage": {
                "description": "The status message for the job.",
                "type": "string",
                "readOnly": true
              },
              "parentJobId": {
                "description": "The job identifier of the parent job, if any.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IotHubSkuDescription": {
      "description": "SKU properties.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "The type of the resource.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the SKU.",
              "enum": [
                "F1",
                "S1",
                "S2",
                "S3",
                "B1",
                "B2",
                "B3"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IotHubSku",
                "modelAsString": true
              }
            },
            "tier": {
              "description": "The billing tier for the IoT hub.",
              "enum": [
                "Free",
                "Standard",
                "Basic"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "IotHubSkuTier",
                "modelAsString": false
              }
            },
            "capacity": {
              "format": "int64",
              "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        },
        "capacity": {
          "description": "IotHub capacity",
          "type": "object",
          "properties": {
            "minimum": {
              "format": "int64",
              "description": "The minimum number of units.",
              "type": "integer",
              "minimum": 1,
              "maximum": 1,
              "readOnly": true
            },
            "maximum": {
              "format": "int64",
              "description": "The maximum number of units.",
              "type": "integer",
              "readOnly": true
            },
            "default": {
              "format": "int64",
              "description": "The default number of units.",
              "type": "integer",
              "readOnly": true
            },
            "scaleType": {
              "description": "The type of the scaling enabled.",
              "enum": [
                "Automatic",
                "Manual",
                "None"
              ],
              "readOnly": true,
              "type": "string",
              "x-ms-enum": {
                "name": "IotHubScaleType",
                "modelAsString": false
              }
            }
          }
        }
      },
      "required": [
        "sku",
        "capacity"
      ]
    },
    "IotHubCapacity": {
      "description": "IoT Hub capacity information.",
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int64",
          "description": "The minimum number of units.",
          "type": "integer",
          "minimum": 1,
          "maximum": 1,
          "readOnly": true
        },
        "maximum": {
          "format": "int64",
          "description": "The maximum number of units.",
          "type": "integer",
          "readOnly": true
        },
        "default": {
          "format": "int64",
          "description": "The default number of units.",
          "type": "integer",
          "readOnly": true
        },
        "scaleType": {
          "description": "The type of the scaling enabled.",
          "enum": [
            "Automatic",
            "Manual",
            "None"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "IotHubScaleType",
            "modelAsString": false
          }
        }
      }
    },
    "EventHubConsumerGroupsListResult": {
      "description": "The JSON-serialized array of Event Hub-compatible consumer group names with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of consumer groups objects",
          "type": "array",
          "items": {
            "description": "The properties of the EventHubConsumerGroupInfo object.",
            "x-ms-azure-resource": true,
            "type": "object",
            "properties": {
              "properties": {
                "description": "The tags.",
                "type": "object",
                "additionalProperties": {}
              },
              "id": {
                "description": "The Event Hub-compatible consumer group identifier.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The Event Hub-compatible consumer group name.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "the resource type.",
                "type": "string",
                "readOnly": true
              },
              "etag": {
                "description": "The etag.",
                "type": "string",
                "readOnly": true
              }
            }
          }
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EventHubConsumerGroupBodyDescription": {
      "description": "The EventHub consumer group.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The EventHub consumer group name.",
          "type": "object",
          "properties": {
            "name": {
              "description": "EventHub consumer group name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "EventHubConsumerGroupName": {
      "description": "The EventHub consumer group name.",
      "type": "object",
      "properties": {
        "name": {
          "description": "EventHub consumer group name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "EventHubConsumerGroupInfo": {
      "description": "The properties of the EventHubConsumerGroupInfo object.",
      "x-ms-azure-resource": true,
      "type": "object",
      "properties": {
        "properties": {
          "description": "The tags.",
          "type": "object",
          "additionalProperties": {}
        },
        "id": {
          "description": "The Event Hub-compatible consumer group identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The Event Hub-compatible consumer group name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "the resource type.",
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "description": "The etag.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IotHubSkuDescriptionListResult": {
      "description": "The JSON-serialized array of IotHubSkuDescription objects with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The array of IotHubSkuDescription.",
          "type": "array",
          "items": {
            "description": "SKU properties.",
            "type": "object",
            "properties": {
              "resourceType": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "sku": {
                "description": "The type of the resource.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the SKU.",
                    "enum": [
                      "F1",
                      "S1",
                      "S2",
                      "S3",
                      "B1",
                      "B2",
                      "B3"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IotHubSku",
                      "modelAsString": true
                    }
                  },
                  "tier": {
                    "description": "The billing tier for the IoT hub.",
                    "enum": [
                      "Free",
                      "Standard",
                      "Basic"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "IotHubSkuTier",
                      "modelAsString": false
                    }
                  },
                  "capacity": {
                    "format": "int64",
                    "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                    "type": "integer"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "capacity": {
                "description": "IotHub capacity",
                "type": "object",
                "properties": {
                  "minimum": {
                    "format": "int64",
                    "description": "The minimum number of units.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1,
                    "readOnly": true
                  },
                  "maximum": {
                    "format": "int64",
                    "description": "The maximum number of units.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "default": {
                    "format": "int64",
                    "description": "The default number of units.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "scaleType": {
                    "description": "The type of the scaling enabled.",
                    "enum": [
                      "Automatic",
                      "Manual",
                      "None"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IotHubScaleType",
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "required": [
              "sku",
              "capacity"
            ]
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobResponse": {
      "description": "The properties of the Job Response object.",
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The job identifier.",
          "type": "string",
          "readOnly": true
        },
        "startTimeUtc": {
          "format": "date-time-rfc1123",
          "description": "The start time of the job.",
          "type": "string",
          "readOnly": true
        },
        "endTimeUtc": {
          "format": "date-time-rfc1123",
          "description": "The time the job stopped processing.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the job.",
          "enum": [
            "unknown",
            "export",
            "import",
            "backup",
            "readDeviceProperties",
            "writeDeviceProperties",
            "updateDeviceConfiguration",
            "rebootDevice",
            "factoryResetDevice",
            "firmwareUpdate"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          }
        },
        "status": {
          "description": "The status of the job.",
          "enum": [
            "unknown",
            "enqueued",
            "running",
            "completed",
            "failed",
            "cancelled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "failureReason": {
          "description": "If status == failed, this string containing the reason for the failure.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "description": "The status message for the job.",
          "type": "string",
          "readOnly": true
        },
        "parentJobId": {
          "description": "The job identifier of the parent job, if any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IotHubDescriptionListResult": {
      "description": "The JSON-serialized array of IotHubDescription objects with a next link.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The array of IotHubDescription objects.",
          "type": "array",
          "items": {
            "description": "The description of the IoT hub.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The resource identifier."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The resource name.",
                "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The resource type."
              },
              "location": {
                "type": "string",
                "description": "The resource location."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The resource tags."
              },
              "etag": {
                "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.",
                "type": "string"
              },
              "properties": {
                "description": "IotHub properties",
                "type": "object",
                "properties": {
                  "authorizationPolicies": {
                    "description": "The shared access policies you can use to secure a connection to the IoT hub.",
                    "type": "array",
                    "items": {
                      "description": "The properties of an IoT hub shared access policy.",
                      "type": "object",
                      "properties": {
                        "keyName": {
                          "description": "The name of the shared access policy.",
                          "type": "string"
                        },
                        "primaryKey": {
                          "description": "The primary key.",
                          "type": "string"
                        },
                        "secondaryKey": {
                          "description": "The secondary key.",
                          "type": "string"
                        },
                        "rights": {
                          "description": "The permissions assigned to the shared access policy.",
                          "enum": [
                            "RegistryRead",
                            "RegistryWrite",
                            "ServiceConnect",
                            "DeviceConnect",
                            "RegistryRead, RegistryWrite",
                            "RegistryRead, ServiceConnect",
                            "RegistryRead, DeviceConnect",
                            "RegistryWrite, ServiceConnect",
                            "RegistryWrite, DeviceConnect",
                            "ServiceConnect, DeviceConnect",
                            "RegistryRead, RegistryWrite, ServiceConnect",
                            "RegistryRead, RegistryWrite, DeviceConnect",
                            "RegistryRead, ServiceConnect, DeviceConnect",
                            "RegistryWrite, ServiceConnect, DeviceConnect",
                            "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessRights",
                            "modelAsString": false
                          }
                        }
                      },
                      "required": [
                        "keyName",
                        "rights"
                      ]
                    },
                    "x-ms-identifiers": [
                      "keyName"
                    ]
                  },
                  "disableLocalAuth": {
                    "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.",
                    "type": "boolean"
                  },
                  "disableDeviceSAS": {
                    "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.",
                    "type": "boolean"
                  },
                  "disableModuleSAS": {
                    "description": "If true, all module scoped SAS keys cannot be used for authentication.",
                    "type": "boolean"
                  },
                  "restrictOutboundNetworkAccess": {
                    "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.",
                    "type": "boolean"
                  },
                  "allowedFqdnList": {
                    "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
                    "type": "array",
                    "items": {
                      "description": "FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net",
                      "type": "string"
                    }
                  },
                  "publicNetworkAccess": {
                    "type": "string",
                    "description": "Whether requests from Public Network are allowed",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PublicNetworkAccess"
                    }
                  },
                  "ipFilterRules": {
                    "description": "The IP filter rules.",
                    "type": "array",
                    "items": {
                      "description": "The IP filter rules for the IoT hub.",
                      "type": "object",
                      "properties": {
                        "filterName": {
                          "description": "The name of the IP filter rule.",
                          "type": "string"
                        },
                        "action": {
                          "description": "The desired action for requests captured by this rule.",
                          "enum": [
                            "Accept",
                            "Reject"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "IpFilterActionType",
                            "modelAsString": false
                          }
                        },
                        "ipMask": {
                          "description": "A string that contains the IP address range in CIDR notation for the rule.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "filterName",
                        "action",
                        "ipMask"
                      ]
                    },
                    "x-ms-identifiers": [
                      "filterName"
                    ]
                  },
                  "networkRuleSets": {
                    "description": "Network Rule Set Properties of IotHub",
                    "type": "object",
                    "properties": {
                      "defaultAction": {
                        "type": "string",
                        "description": "Default Action for Network Rule Set",
                        "enum": [
                          "Deny",
                          "Allow"
                        ],
                        "x-ms-enum": {
                          "name": "DefaultAction",
                          "modelAsString": true
                        },
                        "default": "Deny"
                      },
                      "applyToBuiltInEventHubEndpoint": {
                        "type": "boolean",
                        "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
                      },
                      "ipRules": {
                        "type": "array",
                        "items": {
                          "description": "IP Rule to be applied as part of Network Rule Set",
                          "type": "object",
                          "properties": {
                            "filterName": {
                              "type": "string",
                              "description": "Name of the IP filter rule."
                            },
                            "action": {
                              "type": "string",
                              "description": "IP Filter Action",
                              "enum": [
                                "Allow"
                              ],
                              "x-ms-enum": {
                                "name": "NetworkRuleIPAction",
                                "modelAsString": true
                              },
                              "default": "Allow"
                            },
                            "ipMask": {
                              "type": "string",
                              "description": "A string that contains the IP address range in CIDR notation for the rule."
                            }
                          },
                          "required": [
                            "filterName",
                            "ipMask"
                          ]
                        },
                        "x-ms-identifiers": [
                          "filterName"
                        ],
                        "description": "List of IP Rules"
                      }
                    },
                    "required": [
                      "applyToBuiltInEventHubEndpoint",
                      "ipRules"
                    ]
                  },
                  "minTlsVersion": {
                    "type": "string",
                    "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
                  },
                  "privateEndpointConnections": {
                    "description": "Private endpoint connections created on this IotHub",
                    "type": "array",
                    "items": {
                      "description": "The private endpoint connection of an IotHub",
                      "x-ms-azure-resource": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource identifier."
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource name."
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The resource type."
                        },
                        "properties": {
                          "description": "The properties of a private endpoint connection",
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The private endpoint property of a private endpoint connection",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The resource identifier."
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "The current state of a private endpoint connection",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "The status of a private endpoint connection",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PrivateLinkServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description for the current state of a private endpoint connection"
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "Actions required for a private endpoint connection"
                                }
                              },
                              "required": [
                                "status",
                                "description"
                              ]
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state.",
                    "type": "string",
                    "readOnly": true
                  },
                  "state": {
                    "description": "The hub state.",
                    "type": "string",
                    "readOnly": true
                  },
                  "hostName": {
                    "description": "The name of the host.",
                    "type": "string",
                    "readOnly": true
                  },
                  "eventHubEndpoints": {
                    "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
                      "type": "object",
                      "properties": {
                        "retentionTimeInDays": {
                          "format": "int64",
                          "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages",
                          "type": "integer"
                        },
                        "partitionCount": {
                          "format": "int32",
                          "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.",
                          "type": "integer"
                        },
                        "partitionIds": {
                          "description": "The partition ids in the Event Hub-compatible endpoint.",
                          "readOnly": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "path": {
                          "description": "The Event Hub-compatible name.",
                          "type": "string",
                          "readOnly": true
                        },
                        "endpoint": {
                          "description": "The Event Hub-compatible endpoint.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "routing": {
                    "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
                    "type": "object",
                    "properties": {
                      "endpoints": {
                        "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
                        "type": "object",
                        "properties": {
                          "serviceBusQueues": {
                            "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
                            "type": "array",
                            "items": {
                              "description": "The properties related to service bus queue endpoint types.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Id of the service bus queue endpoint",
                                  "type": "string"
                                },
                                "connectionString": {
                                  "description": "The connection string of the service bus queue endpoint.",
                                  "type": "string"
                                },
                                "endpointUri": {
                                  "description": "The url of the service bus queue endpoint. It must include the protocol sb://",
                                  "type": "string"
                                },
                                "entityPath": {
                                  "description": "Queue name on the service bus namespace",
                                  "type": "string"
                                },
                                "authenticationType": {
                                  "description": "Method used to authenticate against the service bus queue endpoint",
                                  "enum": [
                                    "keyBased",
                                    "identityBased"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "authenticationType",
                                    "modelAsString": true
                                  }
                                },
                                "identity": {
                                  "description": "Managed identity properties of routing service bus queue endpoint.",
                                  "type": "object",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned identity."
                                    }
                                  }
                                },
                                "name": {
                                  "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
                                  "type": "string",
                                  "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                },
                                "subscriptionId": {
                                  "description": "The subscription identifier of the service bus queue endpoint.",
                                  "type": "string"
                                },
                                "resourceGroup": {
                                  "description": "The name of the resource group of the service bus queue endpoint.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          },
                          "serviceBusTopics": {
                            "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
                            "type": "array",
                            "items": {
                              "description": "The properties related to service bus topic endpoint types.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Id of the service bus topic endpoint",
                                  "type": "string"
                                },
                                "connectionString": {
                                  "description": "The connection string of the service bus topic endpoint.",
                                  "type": "string"
                                },
                                "endpointUri": {
                                  "description": "The url of the service bus topic endpoint. It must include the protocol sb://",
                                  "type": "string"
                                },
                                "entityPath": {
                                  "description": "Queue name on the service bus topic",
                                  "type": "string"
                                },
                                "authenticationType": {
                                  "description": "Method used to authenticate against the service bus topic endpoint",
                                  "enum": [
                                    "keyBased",
                                    "identityBased"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "authenticationType",
                                    "modelAsString": true
                                  }
                                },
                                "identity": {
                                  "description": "Managed identity properties of routing service bus topic endpoint.",
                                  "type": "object",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned identity."
                                    }
                                  }
                                },
                                "name": {
                                  "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
                                  "type": "string",
                                  "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                },
                                "subscriptionId": {
                                  "description": "The subscription identifier of the service bus topic endpoint.",
                                  "type": "string"
                                },
                                "resourceGroup": {
                                  "description": "The name of the resource group of the service bus topic endpoint.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          },
                          "eventHubs": {
                            "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
                            "type": "array",
                            "items": {
                              "description": "The properties related to an event hub endpoint.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Id of the event hub endpoint",
                                  "type": "string"
                                },
                                "connectionString": {
                                  "description": "The connection string of the event hub endpoint. ",
                                  "type": "string"
                                },
                                "endpointUri": {
                                  "description": "The url of the event hub endpoint. It must include the protocol sb://",
                                  "type": "string"
                                },
                                "entityPath": {
                                  "description": "Event hub name on the event hub namespace",
                                  "type": "string"
                                },
                                "authenticationType": {
                                  "description": "Method used to authenticate against the event hub endpoint",
                                  "enum": [
                                    "keyBased",
                                    "identityBased"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "authenticationType",
                                    "modelAsString": true
                                  }
                                },
                                "identity": {
                                  "description": "Managed identity properties of routing event hub endpoint.",
                                  "type": "object",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned identity."
                                    }
                                  }
                                },
                                "name": {
                                  "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                  "type": "string",
                                  "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                },
                                "subscriptionId": {
                                  "description": "The subscription identifier of the event hub endpoint.",
                                  "type": "string"
                                },
                                "resourceGroup": {
                                  "description": "The name of the resource group of the event hub endpoint.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          },
                          "storageContainers": {
                            "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
                            "type": "array",
                            "items": {
                              "description": "The properties related to a storage container endpoint.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Id of the storage container endpoint",
                                  "type": "string"
                                },
                                "connectionString": {
                                  "description": "The connection string of the storage account.",
                                  "type": "string"
                                },
                                "endpointUri": {
                                  "description": "The url of the storage endpoint. It must include the protocol https://",
                                  "type": "string"
                                },
                                "authenticationType": {
                                  "description": "Method used to authenticate against the storage endpoint",
                                  "enum": [
                                    "keyBased",
                                    "identityBased"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "authenticationType",
                                    "modelAsString": true
                                  }
                                },
                                "identity": {
                                  "description": "Managed identity properties of routing storage endpoint.",
                                  "type": "object",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned identity."
                                    }
                                  }
                                },
                                "name": {
                                  "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                  "type": "string",
                                  "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                },
                                "subscriptionId": {
                                  "description": "The subscription identifier of the storage account.",
                                  "type": "string"
                                },
                                "resourceGroup": {
                                  "description": "The name of the resource group of the storage account.",
                                  "type": "string"
                                },
                                "containerName": {
                                  "description": "The name of storage container in the storage account.",
                                  "type": "string"
                                },
                                "fileNameFormat": {
                                  "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.",
                                  "type": "string"
                                },
                                "batchFrequencyInSeconds": {
                                  "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.",
                                  "format": "int32",
                                  "type": "integer",
                                  "maximum": 720,
                                  "minimum": 60
                                },
                                "maxChunkSizeInBytes": {
                                  "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).",
                                  "format": "int32",
                                  "type": "integer",
                                  "maximum": 524288000,
                                  "minimum": 10485760
                                },
                                "encoding": {
                                  "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.",
                                  "type": "string",
                                  "enum": [
                                    "Avro",
                                    "AvroDeflate",
                                    "JSON"
                                  ]
                                }
                              },
                              "required": [
                                "name",
                                "containerName"
                              ]
                            }
                          },
                          "cosmosDBSqlContainers": {
                            "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
                            "type": "array",
                            "items": {
                              "description": "The properties related to a cosmos DB sql container endpoint.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
                                  "type": "string",
                                  "pattern": "^[A-Za-z0-9-._]{1,64}$"
                                },
                                "id": {
                                  "readOnly": true,
                                  "description": "Id of the cosmos DB sql container endpoint",
                                  "type": "string"
                                },
                                "subscriptionId": {
                                  "description": "The subscription identifier of the cosmos DB account.",
                                  "type": "string"
                                },
                                "resourceGroup": {
                                  "description": "The name of the resource group of the cosmos DB account.",
                                  "type": "string"
                                },
                                "endpointUri": {
                                  "description": "The url of the cosmos DB account. It must include the protocol https://",
                                  "type": "string",
                                  "format": "uri"
                                },
                                "authenticationType": {
                                  "description": "Method used to authenticate against the cosmos DB sql container endpoint",
                                  "enum": [
                                    "keyBased",
                                    "identityBased"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "authenticationType",
                                    "modelAsString": true
                                  }
                                },
                                "identity": {
                                  "description": "Managed identity properties of routing cosmos DB container endpoint.",
                                  "type": "object",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "type": "string",
                                      "description": "The user assigned identity."
                                    }
                                  }
                                },
                                "primaryKey": {
                                  "description": "The primary key of the cosmos DB account.",
                                  "type": "string",
                                  "x-ms-secret": true
                                },
                                "secondaryKey": {
                                  "description": "The secondary key of the cosmos DB account.",
                                  "type": "string",
                                  "x-ms-secret": true
                                },
                                "databaseName": {
                                  "description": "The name of the cosmos DB database in the cosmos DB account.",
                                  "type": "string"
                                },
                                "containerName": {
                                  "description": "The name of the cosmos DB sql container in the cosmos DB database.",
                                  "type": "string"
                                },
                                "partitionKeyName": {
                                  "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.",
                                  "type": "string"
                                },
                                "partitionKeyTemplate": {
                                  "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "endpointUri",
                                "databaseName",
                                "containerName"
                              ]
                            }
                          }
                        }
                      },
                      "routes": {
                        "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
                        "type": "array",
                        "items": {
                          "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                              "type": "string",
                              "pattern": "^[A-Za-z0-9-._]{1,64}$"
                            },
                            "source": {
                              "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                              "enum": [
                                "Invalid",
                                "DeviceMessages",
                                "TwinChangeEvents",
                                "DeviceLifecycleEvents",
                                "DeviceJobLifecycleEvents",
                                "DeviceConnectionStateEvents"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "RoutingSource",
                                "modelAsString": true
                              }
                            },
                            "condition": {
                              "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                              "type": "string"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                              "minItems": 1,
                              "maxItems": 1,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "isEnabled": {
                              "description": "Used to specify whether a route is enabled.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "name",
                            "endpointNames",
                            "source",
                            "isEnabled"
                          ]
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "fallbackRoute": {
                        "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                            "type": "string"
                          },
                          "source": {
                            "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages",
                            "enum": [
                              "DeviceMessages"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "RoutingSource",
                              "modelAsString": true
                            }
                          },
                          "condition": {
                            "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                            "type": "string"
                          },
                          "endpointNames": {
                            "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
                            "minItems": 1,
                            "maxItems": 1,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "isEnabled": {
                            "description": "Used to specify whether the fallback route is enabled.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "endpointNames",
                          "source",
                          "isEnabled"
                        ]
                      },
                      "enrichments": {
                        "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
                        "type": "array",
                        "items": {
                          "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key or name for the enrichment property.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value for the enrichment property.",
                              "type": "string"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints for which the enrichment is applied to the message.",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "key",
                            "value",
                            "endpointNames"
                          ]
                        },
                        "x-ms-identifiers": [
                          "key"
                        ]
                      }
                    }
                  },
                  "storageEndpoints": {
                    "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "The properties of the Azure Storage endpoint for file upload.",
                      "type": "object",
                      "properties": {
                        "sasTtlAsIso8601": {
                          "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.",
                          "type": "string",
                          "format": "duration"
                        },
                        "connectionString": {
                          "description": "The connection string for the Azure Storage account to which files are uploaded.",
                          "type": "string"
                        },
                        "containerName": {
                          "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.",
                          "type": "string"
                        },
                        "authenticationType": {
                          "description": "Specifies authentication type being used for connecting to the storage account.",
                          "enum": [
                            "keyBased",
                            "identityBased"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AuthenticationType",
                            "modelAsString": true
                          }
                        },
                        "identity": {
                          "description": "Managed identity properties of storage endpoint for file upload.",
                          "type": "object",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The user assigned identity."
                            }
                          }
                        }
                      },
                      "required": [
                        "connectionString",
                        "containerName"
                      ]
                    }
                  },
                  "messagingEndpoints": {
                    "description": "The messaging endpoint properties for the file upload notification queue.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "The properties of the messaging endpoints used by this IoT hub.",
                      "type": "object",
                      "properties": {
                        "lockDurationAsIso8601": {
                          "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                          "type": "string",
                          "format": "duration"
                        },
                        "ttlAsIso8601": {
                          "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                          "type": "string",
                          "format": "duration"
                        },
                        "maxDeliveryCount": {
                          "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 100
                        }
                      }
                    }
                  },
                  "enableFileUploadNotifications": {
                    "description": "If True, file upload notifications are enabled.",
                    "type": "boolean"
                  },
                  "cloudToDevice": {
                    "description": "The IoT hub cloud-to-device messaging properties.",
                    "type": "object",
                    "properties": {
                      "maxDeliveryCount": {
                        "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                        "format": "int32",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                      },
                      "defaultTtlAsIso8601": {
                        "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                        "type": "string",
                        "format": "duration"
                      },
                      "feedback": {
                        "description": "The properties of the feedback queue for cloud-to-device messages.",
                        "type": "object",
                        "properties": {
                          "lockDurationAsIso8601": {
                            "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                            "type": "string",
                            "format": "duration"
                          },
                          "ttlAsIso8601": {
                            "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                            "type": "string",
                            "format": "duration"
                          },
                          "maxDeliveryCount": {
                            "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        }
                      }
                    }
                  },
                  "comments": {
                    "description": "IoT hub comments.",
                    "type": "string"
                  },
                  "features": {
                    "description": "The capabilities and features enabled for the IoT hub.",
                    "enum": [
                      "None",
                      "DeviceManagement"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "Capabilities",
                      "modelAsString": true
                    }
                  },
                  "locations": {
                    "description": "Primary and secondary location for iot hub",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "Public representation of one of the locations where a resource is provisioned.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "description": "The name of the Azure region",
                          "type": "string"
                        },
                        "role": {
                          "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
                          "enum": [
                            "primary",
                            "secondary"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "IotHubReplicaRoleType",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "location"
                    ]
                  },
                  "enableDataResidency": {
                    "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery.",
                    "type": "boolean"
                  }
                }
              },
              "sku": {
                "description": "IotHub SKU info",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the SKU.",
                    "enum": [
                      "F1",
                      "S1",
                      "S2",
                      "S3",
                      "B1",
                      "B2",
                      "B3"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "IotHubSku",
                      "modelAsString": true
                    }
                  },
                  "tier": {
                    "description": "The billing tier for the IoT hub.",
                    "enum": [
                      "Free",
                      "Standard",
                      "Basic"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "IotHubSkuTier",
                      "modelAsString": false
                    }
                  },
                  "capacity": {
                    "format": "int64",
                    "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.",
                    "type": "integer"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "identity": {
                "description": "The managed identities for the IotHub.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "Principal Id",
                    "type": "string",
                    "readOnly": true
                  },
                  "tenantId": {
                    "description": "Tenant Id",
                    "type": "string",
                    "readOnly": true
                  },
                  "type": {
                    "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                    "type": "string",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceIdentityType",
                      "modelAsString": false
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "required": [
              "sku"
            ]
          }
        },
        "nextLink": {
          "description": "The next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IotHubQuotaMetricInfo": {
      "description": "Quota metrics properties.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the quota metric.",
          "type": "string",
          "readOnly": true
        },
        "currentValue": {
          "format": "int64",
          "description": "The current value for the quota metric.",
          "type": "integer",
          "readOnly": true
        },
        "maxValue": {
          "format": "int64",
          "description": "The maximum value of the quota metric.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "IotHubNameAvailabilityInfo": {
      "description": "The properties indicating whether a given IoT hub name is available.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "The value which indicates whether the provided name is available.",
          "type": "boolean",
          "readOnly": true
        },
        "reason": {
          "description": "The reason for unavailability.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "IotHubNameUnavailabilityReason",
            "modelAsString": false
          }
        },
        "message": {
          "description": "The detailed reason message.",
          "type": "string"
        }
      }
    },
    "UserSubscriptionQuotaListResult": {
      "type": "object",
      "description": "Json-serialized array of User subscription quota response",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "User subscription quota response",
            "type": "object",
            "properties": {
              "id": {
                "description": "IotHub type id",
                "type": "string"
              },
              "type": {
                "description": "Response type",
                "type": "string"
              },
              "unit": {
                "description": "Unit of IotHub type",
                "type": "string"
              },
              "currentValue": {
                "description": "Current number of IotHub type",
                "format": "int32",
                "type": "integer"
              },
              "limit": {
                "description": "Numerical limit on IotHub type",
                "format": "int32",
                "type": "integer"
              },
              "name": {
                "description": "IotHub type",
                "type": "object",
                "properties": {
                  "value": {
                    "description": "IotHub type",
                    "type": "string"
                  },
                  "localizedValue": {
                    "description": "Localized value of name",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserSubscriptionQuota": {
      "description": "User subscription quota response",
      "type": "object",
      "properties": {
        "id": {
          "description": "IotHub type id",
          "type": "string"
        },
        "type": {
          "description": "Response type",
          "type": "string"
        },
        "unit": {
          "description": "Unit of IotHub type",
          "type": "string"
        },
        "currentValue": {
          "description": "Current number of IotHub type",
          "format": "int32",
          "type": "integer"
        },
        "limit": {
          "description": "Numerical limit on IotHub type",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "IotHub type",
          "type": "object",
          "properties": {
            "value": {
              "description": "IotHub type",
              "type": "string"
            },
            "localizedValue": {
              "description": "Localized value of name",
              "type": "string"
            }
          }
        }
      }
    },
    "Name": {
      "description": "Name of Iot Hub type",
      "type": "object",
      "properties": {
        "value": {
          "description": "IotHub type",
          "type": "string"
        },
        "localizedValue": {
          "description": "Localized value of name",
          "type": "string"
        }
      }
    },
    "TestAllRoutesInput": {
      "description": "Input for testing all routes",
      "type": "object",
      "properties": {
        "routingSource": {
          "description": "Routing source",
          "enum": [
            "Invalid",
            "DeviceMessages",
            "TwinChangeEvents",
            "DeviceLifecycleEvents",
            "DeviceJobLifecycleEvents",
            "DeviceConnectionStateEvents"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoutingSource",
            "modelAsString": true
          }
        },
        "message": {
          "description": "Routing message",
          "type": "object",
          "properties": {
            "body": {
              "description": "Body of routing message",
              "type": "string"
            },
            "appProperties": {
              "description": "App properties",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "systemProperties": {
              "description": "System properties",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "twin": {
          "description": "Routing Twin Reference",
          "type": "object",
          "properties": {
            "tags": {
              "description": "Twin Tags",
              "type": "object"
            },
            "properties": {
              "properties": {
                "desired": {
                  "description": "Twin desired properties",
                  "type": "object"
                },
                "reported": {
                  "description": "Twin desired properties",
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "RoutingTwin": {
      "description": "Twin reference input parameter. This is an optional parameter",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Twin Tags",
          "type": "object"
        },
        "properties": {
          "properties": {
            "desired": {
              "description": "Twin desired properties",
              "type": "object"
            },
            "reported": {
              "description": "Twin desired properties",
              "type": "object"
            }
          }
        }
      }
    },
    "RoutingMessage": {
      "description": "Routing message",
      "type": "object",
      "properties": {
        "body": {
          "description": "Body of routing message",
          "type": "string"
        },
        "appProperties": {
          "description": "App properties",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "systemProperties": {
          "description": "System properties",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TestAllRoutesResult": {
      "description": "Result of testing all routes",
      "type": "object",
      "properties": {
        "routes": {
          "description": "JSON-serialized array of matched routes",
          "type": "array",
          "items": {
            "description": "Routes that matched",
            "type": "object",
            "properties": {
              "properties": {
                "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
                    "type": "string",
                    "pattern": "^[A-Za-z0-9-._]{1,64}$"
                  },
                  "source": {
                    "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
                    "enum": [
                      "Invalid",
                      "DeviceMessages",
                      "TwinChangeEvents",
                      "DeviceLifecycleEvents",
                      "DeviceJobLifecycleEvents",
                      "DeviceConnectionStateEvents"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "RoutingSource",
                      "modelAsString": true
                    }
                  },
                  "condition": {
                    "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
                    "type": "string"
                  },
                  "endpointNames": {
                    "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isEnabled": {
                    "description": "Used to specify whether a route is enabled.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "endpointNames",
                  "source",
                  "isEnabled"
                ]
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MatchedRoute": {
      "description": "Routes that matched",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
              "type": "string",
              "pattern": "^[A-Za-z0-9-._]{1,64}$"
            },
            "source": {
              "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
              "enum": [
                "Invalid",
                "DeviceMessages",
                "TwinChangeEvents",
                "DeviceLifecycleEvents",
                "DeviceJobLifecycleEvents",
                "DeviceConnectionStateEvents"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RoutingSource",
                "modelAsString": true
              }
            },
            "condition": {
              "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
              "type": "string"
            },
            "endpointNames": {
              "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
              "minItems": 1,
              "maxItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isEnabled": {
              "description": "Used to specify whether a route is enabled.",
              "type": "boolean"
            }
          },
          "required": [
            "name",
            "endpointNames",
            "source",
            "isEnabled"
          ]
        }
      }
    },
    "TestRouteInput": {
      "required": [
        "route"
      ],
      "description": "Input for testing route",
      "type": "object",
      "properties": {
        "message": {
          "description": "Routing message",
          "type": "object",
          "properties": {
            "body": {
              "description": "Body of routing message",
              "type": "string"
            },
            "appProperties": {
              "description": "App properties",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "systemProperties": {
              "description": "System properties",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "route": {
          "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
              "type": "string",
              "pattern": "^[A-Za-z0-9-._]{1,64}$"
            },
            "source": {
              "description": "The source that the routing rule is to be applied to, such as DeviceMessages.",
              "enum": [
                "Invalid",
                "DeviceMessages",
                "TwinChangeEvents",
                "DeviceLifecycleEvents",
                "DeviceJobLifecycleEvents",
                "DeviceConnectionStateEvents"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RoutingSource",
                "modelAsString": true
              }
            },
            "condition": {
              "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language",
              "type": "string"
            },
            "endpointNames": {
              "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
              "minItems": 1,
              "maxItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isEnabled": {
              "description": "Used to specify whether a route is enabled.",
              "type": "boolean"
            }
          },
          "required": [
            "name",
            "endpointNames",
            "source",
            "isEnabled"
          ]
        },
        "twin": {
          "description": "Routing Twin Reference",
          "type": "object",
          "properties": {
            "tags": {
              "description": "Twin Tags",
              "type": "object"
            },
            "properties": {
              "properties": {
                "desired": {
                  "description": "Twin desired properties",
                  "type": "object"
                },
                "reported": {
                  "description": "Twin desired properties",
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "TestRouteResult": {
      "description": "Result of testing one route",
      "type": "object",
      "properties": {
        "result": {
          "description": "Result of testing route",
          "enum": [
            "undefined",
            "false",
            "true"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TestResultStatus",
            "modelAsString": true
          }
        },
        "details": {
          "description": "Detailed result of testing route",
          "type": "object",
          "properties": {
            "compilationErrors": {
              "description": "JSON-serialized list of route compilation errors",
              "type": "array",
              "items": {
                "description": "Compilation error when evaluating route",
                "type": "object",
                "properties": {
                  "message": {
                    "description": "Route error message",
                    "type": "string"
                  },
                  "severity": {
                    "description": "Severity of the route error",
                    "enum": [
                      "error",
                      "warning"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "RouteErrorSeverity",
                      "modelAsString": true
                    }
                  },
                  "location": {
                    "description": "Location where the route error happened",
                    "type": "object",
                    "properties": {
                      "start": {
                        "description": "Start where the route error happened",
                        "type": "object",
                        "properties": {
                          "line": {
                            "description": "Line where the route error happened",
                            "format": "int32",
                            "type": "integer"
                          },
                          "column": {
                            "description": "Column where the route error happened",
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      },
                      "end": {
                        "description": "End where the route error happened",
                        "type": "object",
                        "properties": {
                          "line": {
                            "description": "Line where the route error happened",
                            "format": "int32",
                            "type": "integer"
                          },
                          "column": {
                            "description": "Column where the route error happened",
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "TestRouteResultDetails": {
      "description": "Detailed result of testing a route",
      "type": "object",
      "properties": {
        "compilationErrors": {
          "description": "JSON-serialized list of route compilation errors",
          "type": "array",
          "items": {
            "description": "Compilation error when evaluating route",
            "type": "object",
            "properties": {
              "message": {
                "description": "Route error message",
                "type": "string"
              },
              "severity": {
                "description": "Severity of the route error",
                "enum": [
                  "error",
                  "warning"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "RouteErrorSeverity",
                  "modelAsString": true
                }
              },
              "location": {
                "description": "Location where the route error happened",
                "type": "object",
                "properties": {
                  "start": {
                    "description": "Start where the route error happened",
                    "type": "object",
                    "properties": {
                      "line": {
                        "description": "Line where the route error happened",
                        "format": "int32",
                        "type": "integer"
                      },
                      "column": {
                        "description": "Column where the route error happened",
                        "format": "int32",
                        "type": "integer"
                      }
                    }
                  },
                  "end": {
                    "description": "End where the route error happened",
                    "type": "object",
                    "properties": {
                      "line": {
                        "description": "Line where the route error happened",
                        "format": "int32",
                        "type": "integer"
                      },
                      "column": {
                        "description": "Column where the route error happened",
                        "format": "int32",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RouteCompilationError": {
      "description": "Compilation error when evaluating route",
      "type": "object",
      "properties": {
        "message": {
          "description": "Route error message",
          "type": "string"
        },
        "severity": {
          "description": "Severity of the route error",
          "enum": [
            "error",
            "warning"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RouteErrorSeverity",
            "modelAsString": true
          }
        },
        "location": {
          "description": "Location where the route error happened",
          "type": "object",
          "properties": {
            "start": {
              "description": "Start where the route error happened",
              "type": "object",
              "properties": {
                "line": {
                  "description": "Line where the route error happened",
                  "format": "int32",
                  "type": "integer"
                },
                "column": {
                  "description": "Column where the route error happened",
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "end": {
              "description": "End where the route error happened",
              "type": "object",
              "properties": {
                "line": {
                  "description": "Line where the route error happened",
                  "format": "int32",
                  "type": "integer"
                },
                "column": {
                  "description": "Column where the route error happened",
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "RouteErrorRange": {
      "description": "Range of route errors",
      "type": "object",
      "properties": {
        "start": {
          "description": "Start where the route error happened",
          "type": "object",
          "properties": {
            "line": {
              "description": "Line where the route error happened",
              "format": "int32",
              "type": "integer"
            },
            "column": {
              "description": "Column where the route error happened",
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "end": {
          "description": "End where the route error happened",
          "type": "object",
          "properties": {
            "line": {
              "description": "Line where the route error happened",
              "format": "int32",
              "type": "integer"
            },
            "column": {
              "description": "Column where the route error happened",
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "RouteErrorPosition": {
      "description": "Position where the route error happened",
      "type": "object",
      "properties": {
        "line": {
          "description": "Line where the route error happened",
          "format": "int32",
          "type": "integer"
        },
        "column": {
          "description": "Column where the route error happened",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ExportDevicesRequest": {
      "description": "Use to provide parameters when requesting an export of all devices in the IoT hub.",
      "type": "object",
      "properties": {
        "exportBlobContainerUri": {
          "description": "The export blob container URI.",
          "type": "string"
        },
        "excludeKeys": {
          "description": "The value indicating whether keys should be excluded during export.",
          "type": "boolean"
        },
        "exportBlobName": {
          "description": "The name of the blob that will be created in the provided output blob container. This blob will contain the exported device registry information for the IoT Hub.",
          "type": "string"
        },
        "authenticationType": {
          "description": "Specifies authentication type being used for connecting to the storage account.",
          "enum": [
            "keyBased",
            "identityBased"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthenticationType",
            "modelAsString": true
          }
        },
        "identity": {
          "description": "Managed identity properties of storage endpoint for export devices.",
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned identity."
            }
          }
        },
        "includeConfigurations": {
          "description": "The value indicating whether configurations should be exported.",
          "type": "boolean"
        },
        "configurationsBlobName": {
          "description": "The name of the blob that will be created in the provided output blob container. This blob will contain the exported configurations for the Iot Hub.",
          "type": "string"
        }
      },
      "required": [
        "exportBlobContainerUri",
        "excludeKeys"
      ]
    },
    "ImportDevicesRequest": {
      "description": "Use to provide parameters when requesting an import of all devices in the hub.",
      "type": "object",
      "properties": {
        "inputBlobContainerUri": {
          "description": "The input blob container URI.",
          "type": "string"
        },
        "outputBlobContainerUri": {
          "description": "The output blob container URI.",
          "type": "string"
        },
        "inputBlobName": {
          "description": "The blob name to be used when importing from the provided input blob container.",
          "type": "string"
        },
        "outputBlobName": {
          "description": "The blob name to use for storing the status of the import job.",
          "type": "string"
        },
        "authenticationType": {
          "description": "Specifies authentication type being used for connecting to the storage account.",
          "enum": [
            "keyBased",
            "identityBased"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthenticationType",
            "modelAsString": true
          }
        },
        "identity": {
          "description": "Managed identity properties of storage endpoint for import devices.",
          "type": "object",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The user assigned identity."
            }
          }
        },
        "includeConfigurations": {
          "description": "The value indicating whether configurations should be imported.",
          "type": "boolean"
        },
        "configurationsBlobName": {
          "description": "The blob name to be used when importing configurations from the provided input blob container.",
          "type": "string"
        }
      },
      "required": [
        "inputBlobContainerUri",
        "outputBlobContainerUri"
      ]
    },
    "FailoverInput": {
      "description": "Use to provide failover region when requesting manual Failover for a hub.",
      "type": "object",
      "properties": {
        "failoverRegion": {
          "description": "Region the hub will be failed over to",
          "type": "string"
        }
      },
      "required": [
        "failoverRegion"
      ]
    },
    "IotHubLocationDescription": {
      "description": "Public representation of one of the locations where a resource is provisioned.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The name of the Azure region",
          "type": "string"
        },
        "role": {
          "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.",
          "enum": [
            "primary",
            "secondary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IotHubReplicaRoleType",
            "modelAsString": true
          }
        }
      }
    },
    "ArmIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Principal Id",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "Tenant Id",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
          "type": "string",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "type": "string",
                "readOnly": true
              },
              "clientId": {
                "type": "string",
                "readOnly": true
              }
            }
          }
        }
      }
    },
    "ArmUserIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ManagedIdentity": {
      "description": "The properties of the Managed identity.",
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "The user assigned identity."
        }
      }
    },
    "systemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription identifier.",
      "required": true,
      "type": "string"
    },
    "api-version": {
      "name": "api-version",
      "in": "query",
      "description": "The version of the API.",
      "required": true,
      "type": "string"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "description": "The name of the resource group that contains the IoT hub.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "resourceName": {
      "name": "resourceName",
      "in": "path",
      "description": "The name of the IoT hub.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "groupId": {
      "name": "groupId",
      "in": "path",
      "description": "The name of the private link resource",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "privateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "description": "The name of the private endpoint connection",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "certificateName": {
      "name": "certificateName",
      "in": "path",
      "description": "The name of the certificate",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9-._]{1,64}$",
      "x-ms-parameter-location": "method"
    }
  }
}