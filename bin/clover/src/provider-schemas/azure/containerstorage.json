{
  "swagger": "2.0",
  "info": {
    "title": "Azure containerstorage",
    "version": "2023-07-01-preview-preview",
    "description": "Azure containerstorage service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.ContainerStorage/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerStorage/pools": {
      "get": {
        "operationId": "Pools_ListBySubscription",
        "tags": [
          "Pools"
        ],
        "description": "List Pool resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Pool list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Pool items on this page",
                  "items": {
                    "type": "object",
                    "description": "Pool resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is being provisioned"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource create request has been accepted"
                                }
                              ]
                            }
                          },
                          "status": {
                            "description": "The operational status of the resource",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "state of the resource",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Available",
                                  "Unavailable"
                                ],
                                "x-ms-enum": {
                                  "name": "ResourceOperationStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Pending",
                                      "value": "Pending",
                                      "description": "The resource is pending."
                                    },
                                    {
                                      "name": "Available",
                                      "value": "Available",
                                      "description": "The resource is available."
                                    },
                                    {
                                      "name": "Unavailable",
                                      "value": "Unavailable",
                                      "description": "The resource is unavailable."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for state."
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "zones": {
                            "type": "array",
                            "description": "List of availability zones that resources can be created in.",
                            "maxItems": 3,
                            "items": {
                              "type": "string",
                              "description": "Availability Zones",
                              "enum": [
                                "1",
                                "2",
                                "3"
                              ],
                              "x-ms-enum": {
                                "name": "Zone",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Zone1",
                                    "value": "1",
                                    "description": "First availability zone."
                                  },
                                  {
                                    "name": "Zone2",
                                    "value": "2",
                                    "description": "Second availability zone."
                                  },
                                  {
                                    "name": "Zone3",
                                    "value": "3",
                                    "description": "Third availability zone."
                                  }
                                ]
                              }
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "resources": {
                            "description": "Resources represent the resources the pool should have.",
                            "type": "object",
                            "properties": {
                              "requests": {
                                "description": "Requests for capacity for the pool.",
                                "type": "object",
                                "properties": {
                                  "storage": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Requested capacity of the pool in GiB.",
                                    "default": 1024,
                                    "minimum": 1024,
                                    "maximum": 65536
                                  }
                                }
                              }
                            }
                          },
                          "poolType": {
                            "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
                            "type": "object",
                            "properties": {
                              "azureDisk": {
                                "description": "Disk Pool Properties",
                                "type": "object",
                                "properties": {
                                  "resourceGroup": {
                                    "type": "string",
                                    "description": "Managed resource group for the pool.",
                                    "readOnly": true
                                  },
                                  "skuName": {
                                    "description": "Sku name",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "type": "string",
                                    "enum": [
                                      "Premium_LRS",
                                      "Standard_LRS",
                                      "StandardSSD_LRS",
                                      "UltraSSD_LRS",
                                      "Premium_ZRS",
                                      "PremiumV2_LRS",
                                      "StandardSSD_ZRS"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AzureDiskSkuName",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Premium_LRS",
                                          "value": "Premium_LRS",
                                          "description": "Premium_LRS SKU"
                                        },
                                        {
                                          "name": "Standard_LRS",
                                          "value": "Standard_LRS",
                                          "description": "Standard_LRS SKU"
                                        },
                                        {
                                          "name": "StandardSSD_LRS",
                                          "value": "StandardSSD_LRS",
                                          "description": "StandardSSD_LRS SKU"
                                        },
                                        {
                                          "name": "UltraSSD_LRS",
                                          "value": "UltraSSD_LRS",
                                          "description": "UltraSSD_LRS SKU"
                                        },
                                        {
                                          "name": "Premium_ZRS",
                                          "value": "Premium_ZRS",
                                          "description": "Premium_ZRS SKU"
                                        },
                                        {
                                          "name": "PremiumV2_LRS",
                                          "value": "PremiumV2_LRS",
                                          "description": "PremiumV2_LRS SKU"
                                        },
                                        {
                                          "name": "StandardSSD_ZRS",
                                          "value": "StandardSSD_ZRS",
                                          "description": "StandardSSD_ZRS SKU"
                                        }
                                      ]
                                    }
                                  },
                                  "encryption": {
                                    "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "keyName": {
                                        "type": "string",
                                        "description": "The name of the key vault key."
                                      },
                                      "keyVaultUri": {
                                        "type": "string",
                                        "description": "The URI of the key vault."
                                      },
                                      "identity": {
                                        "description": "The managed service identities assigned to this resource.",
                                        "type": "object",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                            "readOnly": true
                                          },
                                          "tenantId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                            "readOnly": true
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                            "enum": [
                                              "None",
                                              "SystemAssigned",
                                              "UserAssigned",
                                              "SystemAssigned, UserAssigned"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ManagedServiceIdentityType",
                                              "modelAsString": true
                                            }
                                          },
                                          "userAssignedIdentities": {
                                            "type": "object",
                                            "title": "User-Assigned Identities",
                                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                            "additionalProperties": {
                                              "type": "object",
                                              "description": "User assigned identity properties",
                                              "properties": {
                                                "principalId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The principal ID of the assigned identity.",
                                                  "readOnly": true
                                                },
                                                "clientId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The client ID of the assigned identity.",
                                                  "readOnly": true
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "keyName",
                                      "keyVaultUri"
                                    ]
                                  },
                                  "disks": {
                                    "type": "array",
                                    "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                                    "items": {
                                      "type": "object",
                                      "description": "Model for disk for that pool is using",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                        },
                                        "reference": {
                                          "type": "string",
                                          "description": "Reference is the location of the disk in an external system."
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "reference"
                                      ]
                                    }
                                  }
                                }
                              },
                              "elasticSan": {
                                "description": "Elastic San Pool Properties",
                                "type": "object",
                                "properties": {
                                  "resourceGroup": {
                                    "type": "string",
                                    "description": "Managed resource group for the pool.",
                                    "readOnly": true
                                  },
                                  "skuName": {
                                    "description": "Sku name",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "type": "string",
                                    "enum": [
                                      "Premium_LRS",
                                      "Premium_ZRS"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ElasticSanSkuName",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Premium_LRS",
                                          "value": "Premium_LRS",
                                          "description": "Premium_LRS SKU"
                                        },
                                        {
                                          "name": "Premium_ZRS",
                                          "value": "Premium_ZRS",
                                          "description": "Premium_ZRS SKU"
                                        }
                                      ]
                                    }
                                  },
                                  "encryption": {
                                    "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "keyName": {
                                        "type": "string",
                                        "description": "The name of the key vault key."
                                      },
                                      "keyVaultUri": {
                                        "type": "string",
                                        "description": "The URI of the key vault."
                                      },
                                      "identity": {
                                        "description": "The managed service identities assigned to this resource.",
                                        "type": "object",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                            "readOnly": true
                                          },
                                          "tenantId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                            "readOnly": true
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                            "enum": [
                                              "None",
                                              "SystemAssigned",
                                              "UserAssigned",
                                              "SystemAssigned, UserAssigned"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ManagedServiceIdentityType",
                                              "modelAsString": true
                                            }
                                          },
                                          "userAssignedIdentities": {
                                            "type": "object",
                                            "title": "User-Assigned Identities",
                                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                            "additionalProperties": {
                                              "type": "object",
                                              "description": "User assigned identity properties",
                                              "properties": {
                                                "principalId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The principal ID of the assigned identity.",
                                                  "readOnly": true
                                                },
                                                "clientId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The client ID of the assigned identity.",
                                                  "readOnly": true
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "keyName",
                                      "keyVaultUri"
                                    ]
                                  }
                                }
                              },
                              "ephemeralDisk": {
                                "description": "Ephemeral Pool Properties",
                                "type": "object",
                                "properties": {
                                  "replicas": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The number of data copies. Default 3.",
                                    "default": 3,
                                    "minimum": 1,
                                    "maximum": 3
                                  },
                                  "disks": {
                                    "type": "array",
                                    "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                                    "items": {
                                      "type": "object",
                                      "description": "Model for disk for that pool is using",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                        },
                                        "reference": {
                                          "type": "string",
                                          "description": "Reference is the location of the disk in an external system."
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "reference"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "reclaimPolicy": {
                            "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Delete",
                              "Retain"
                            ],
                            "x-ms-enum": {
                              "name": "ReclaimPolicy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Delete",
                                  "value": "Delete",
                                  "description": "Delete resource"
                                },
                                {
                                  "name": "Retain",
                                  "value": "Retain",
                                  "description": "Retain resource"
                                }
                              ]
                            }
                          },
                          "assignments": {
                            "type": "array",
                            "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
                            "items": {
                              "type": "object",
                              "description": "Assignment Properties",
                              "properties": {
                                "status": {
                                  "description": "Indicates if the assignment is in a usable state",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State of the assignment resource",
                                      "type": "string",
                                      "enum": [
                                        "Assigning",
                                        "Assigned",
                                        "Unassigning",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AssignmentStatusState",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Assigning",
                                            "value": "Assigning",
                                            "description": "The assignment of the pool to the resource is in progress"
                                          },
                                          {
                                            "name": "Assigned",
                                            "value": "Assigned",
                                            "description": "The assignment to the pool was successful."
                                          },
                                          {
                                            "name": "Unassigning",
                                            "value": "Unassigning",
                                            "description": "The pool is being unassigned."
                                          },
                                          {
                                            "name": "Failed",
                                            "value": "Failed",
                                            "description": "The operation of assigning or unassigning the pool failed."
                                          }
                                        ]
                                      }
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "Reason for the status"
                                    }
                                  },
                                  "required": [
                                    "state"
                                  ]
                                },
                                "id": {
                                  "description": "Resource id for the assigned resource",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ],
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.ContainerService/managedClusters"
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          }
                        },
                        "required": [
                          "poolType"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools": {
      "get": {
        "operationId": "Pools_ListByResourceGroup",
        "tags": [
          "Pools"
        ],
        "description": "List Pool resources by resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Pool list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Pool items on this page",
                  "items": {
                    "type": "object",
                    "description": "Pool resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is being provisioned"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource create request has been accepted"
                                }
                              ]
                            }
                          },
                          "status": {
                            "description": "The operational status of the resource",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "state of the resource",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Available",
                                  "Unavailable"
                                ],
                                "x-ms-enum": {
                                  "name": "ResourceOperationStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Pending",
                                      "value": "Pending",
                                      "description": "The resource is pending."
                                    },
                                    {
                                      "name": "Available",
                                      "value": "Available",
                                      "description": "The resource is available."
                                    },
                                    {
                                      "name": "Unavailable",
                                      "value": "Unavailable",
                                      "description": "The resource is unavailable."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for state."
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "zones": {
                            "type": "array",
                            "description": "List of availability zones that resources can be created in.",
                            "maxItems": 3,
                            "items": {
                              "type": "string",
                              "description": "Availability Zones",
                              "enum": [
                                "1",
                                "2",
                                "3"
                              ],
                              "x-ms-enum": {
                                "name": "Zone",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Zone1",
                                    "value": "1",
                                    "description": "First availability zone."
                                  },
                                  {
                                    "name": "Zone2",
                                    "value": "2",
                                    "description": "Second availability zone."
                                  },
                                  {
                                    "name": "Zone3",
                                    "value": "3",
                                    "description": "Third availability zone."
                                  }
                                ]
                              }
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "resources": {
                            "description": "Resources represent the resources the pool should have.",
                            "type": "object",
                            "properties": {
                              "requests": {
                                "description": "Requests for capacity for the pool.",
                                "type": "object",
                                "properties": {
                                  "storage": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Requested capacity of the pool in GiB.",
                                    "default": 1024,
                                    "minimum": 1024,
                                    "maximum": 65536
                                  }
                                }
                              }
                            }
                          },
                          "poolType": {
                            "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
                            "type": "object",
                            "properties": {
                              "azureDisk": {
                                "description": "Disk Pool Properties",
                                "type": "object",
                                "properties": {
                                  "resourceGroup": {
                                    "type": "string",
                                    "description": "Managed resource group for the pool.",
                                    "readOnly": true
                                  },
                                  "skuName": {
                                    "description": "Sku name",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "type": "string",
                                    "enum": [
                                      "Premium_LRS",
                                      "Standard_LRS",
                                      "StandardSSD_LRS",
                                      "UltraSSD_LRS",
                                      "Premium_ZRS",
                                      "PremiumV2_LRS",
                                      "StandardSSD_ZRS"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AzureDiskSkuName",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Premium_LRS",
                                          "value": "Premium_LRS",
                                          "description": "Premium_LRS SKU"
                                        },
                                        {
                                          "name": "Standard_LRS",
                                          "value": "Standard_LRS",
                                          "description": "Standard_LRS SKU"
                                        },
                                        {
                                          "name": "StandardSSD_LRS",
                                          "value": "StandardSSD_LRS",
                                          "description": "StandardSSD_LRS SKU"
                                        },
                                        {
                                          "name": "UltraSSD_LRS",
                                          "value": "UltraSSD_LRS",
                                          "description": "UltraSSD_LRS SKU"
                                        },
                                        {
                                          "name": "Premium_ZRS",
                                          "value": "Premium_ZRS",
                                          "description": "Premium_ZRS SKU"
                                        },
                                        {
                                          "name": "PremiumV2_LRS",
                                          "value": "PremiumV2_LRS",
                                          "description": "PremiumV2_LRS SKU"
                                        },
                                        {
                                          "name": "StandardSSD_ZRS",
                                          "value": "StandardSSD_ZRS",
                                          "description": "StandardSSD_ZRS SKU"
                                        }
                                      ]
                                    }
                                  },
                                  "encryption": {
                                    "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "keyName": {
                                        "type": "string",
                                        "description": "The name of the key vault key."
                                      },
                                      "keyVaultUri": {
                                        "type": "string",
                                        "description": "The URI of the key vault."
                                      },
                                      "identity": {
                                        "description": "The managed service identities assigned to this resource.",
                                        "type": "object",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                            "readOnly": true
                                          },
                                          "tenantId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                            "readOnly": true
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                            "enum": [
                                              "None",
                                              "SystemAssigned",
                                              "UserAssigned",
                                              "SystemAssigned, UserAssigned"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ManagedServiceIdentityType",
                                              "modelAsString": true
                                            }
                                          },
                                          "userAssignedIdentities": {
                                            "type": "object",
                                            "title": "User-Assigned Identities",
                                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                            "additionalProperties": {
                                              "type": "object",
                                              "description": "User assigned identity properties",
                                              "properties": {
                                                "principalId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The principal ID of the assigned identity.",
                                                  "readOnly": true
                                                },
                                                "clientId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The client ID of the assigned identity.",
                                                  "readOnly": true
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "keyName",
                                      "keyVaultUri"
                                    ]
                                  },
                                  "disks": {
                                    "type": "array",
                                    "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                                    "items": {
                                      "type": "object",
                                      "description": "Model for disk for that pool is using",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                        },
                                        "reference": {
                                          "type": "string",
                                          "description": "Reference is the location of the disk in an external system."
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "reference"
                                      ]
                                    }
                                  }
                                }
                              },
                              "elasticSan": {
                                "description": "Elastic San Pool Properties",
                                "type": "object",
                                "properties": {
                                  "resourceGroup": {
                                    "type": "string",
                                    "description": "Managed resource group for the pool.",
                                    "readOnly": true
                                  },
                                  "skuName": {
                                    "description": "Sku name",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "type": "string",
                                    "enum": [
                                      "Premium_LRS",
                                      "Premium_ZRS"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ElasticSanSkuName",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Premium_LRS",
                                          "value": "Premium_LRS",
                                          "description": "Premium_LRS SKU"
                                        },
                                        {
                                          "name": "Premium_ZRS",
                                          "value": "Premium_ZRS",
                                          "description": "Premium_ZRS SKU"
                                        }
                                      ]
                                    }
                                  },
                                  "encryption": {
                                    "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "keyName": {
                                        "type": "string",
                                        "description": "The name of the key vault key."
                                      },
                                      "keyVaultUri": {
                                        "type": "string",
                                        "description": "The URI of the key vault."
                                      },
                                      "identity": {
                                        "description": "The managed service identities assigned to this resource.",
                                        "type": "object",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                            "readOnly": true
                                          },
                                          "tenantId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                            "readOnly": true
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                            "enum": [
                                              "None",
                                              "SystemAssigned",
                                              "UserAssigned",
                                              "SystemAssigned, UserAssigned"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ManagedServiceIdentityType",
                                              "modelAsString": true
                                            }
                                          },
                                          "userAssignedIdentities": {
                                            "type": "object",
                                            "title": "User-Assigned Identities",
                                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                            "additionalProperties": {
                                              "type": "object",
                                              "description": "User assigned identity properties",
                                              "properties": {
                                                "principalId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The principal ID of the assigned identity.",
                                                  "readOnly": true
                                                },
                                                "clientId": {
                                                  "type": "string",
                                                  "format": "uuid",
                                                  "description": "The client ID of the assigned identity.",
                                                  "readOnly": true
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "keyName",
                                      "keyVaultUri"
                                    ]
                                  }
                                }
                              },
                              "ephemeralDisk": {
                                "description": "Ephemeral Pool Properties",
                                "type": "object",
                                "properties": {
                                  "replicas": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The number of data copies. Default 3.",
                                    "default": 3,
                                    "minimum": 1,
                                    "maximum": 3
                                  },
                                  "disks": {
                                    "type": "array",
                                    "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                                    "items": {
                                      "type": "object",
                                      "description": "Model for disk for that pool is using",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                        },
                                        "reference": {
                                          "type": "string",
                                          "description": "Reference is the location of the disk in an external system."
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "reference"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "reclaimPolicy": {
                            "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Delete",
                              "Retain"
                            ],
                            "x-ms-enum": {
                              "name": "ReclaimPolicy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Delete",
                                  "value": "Delete",
                                  "description": "Delete resource"
                                },
                                {
                                  "name": "Retain",
                                  "value": "Retain",
                                  "description": "Retain resource"
                                }
                              ]
                            }
                          },
                          "assignments": {
                            "type": "array",
                            "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
                            "items": {
                              "type": "object",
                              "description": "Assignment Properties",
                              "properties": {
                                "status": {
                                  "description": "Indicates if the assignment is in a usable state",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "state": {
                                      "description": "State of the assignment resource",
                                      "type": "string",
                                      "enum": [
                                        "Assigning",
                                        "Assigned",
                                        "Unassigning",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AssignmentStatusState",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Assigning",
                                            "value": "Assigning",
                                            "description": "The assignment of the pool to the resource is in progress"
                                          },
                                          {
                                            "name": "Assigned",
                                            "value": "Assigned",
                                            "description": "The assignment to the pool was successful."
                                          },
                                          {
                                            "name": "Unassigning",
                                            "value": "Unassigning",
                                            "description": "The pool is being unassigned."
                                          },
                                          {
                                            "name": "Failed",
                                            "value": "Failed",
                                            "description": "The operation of assigning or unassigning the pool failed."
                                          }
                                        ]
                                      }
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "Reason for the status"
                                    }
                                  },
                                  "required": [
                                    "state"
                                  ]
                                },
                                "id": {
                                  "description": "Resource id for the assigned resource",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ],
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.ContainerService/managedClusters"
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          }
                        },
                        "required": [
                          "poolType"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}": {
      "get": {
        "operationId": "Pools_Get",
        "tags": [
          "Pools"
        ],
        "description": "Get a Pool",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Pool resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The operational status of the resource",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "List of availability zones that resources can be created in.",
                      "maxItems": 3,
                      "items": {
                        "type": "string",
                        "description": "Availability Zones",
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ],
                        "x-ms-enum": {
                          "name": "Zone",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Zone1",
                              "value": "1",
                              "description": "First availability zone."
                            },
                            {
                              "name": "Zone2",
                              "value": "2",
                              "description": "Second availability zone."
                            },
                            {
                              "name": "Zone3",
                              "value": "3",
                              "description": "Third availability zone."
                            }
                          ]
                        }
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resources": {
                      "description": "Resources represent the resources the pool should have.",
                      "type": "object",
                      "properties": {
                        "requests": {
                          "description": "Requests for capacity for the pool.",
                          "type": "object",
                          "properties": {
                            "storage": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Requested capacity of the pool in GiB.",
                              "default": 1024,
                              "minimum": 1024,
                              "maximum": 65536
                            }
                          }
                        }
                      }
                    },
                    "poolType": {
                      "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
                      "type": "object",
                      "properties": {
                        "azureDisk": {
                          "description": "Disk Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Standard_LRS",
                                "StandardSSD_LRS",
                                "UltraSSD_LRS",
                                "Premium_ZRS",
                                "PremiumV2_LRS",
                                "StandardSSD_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "AzureDiskSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Standard_LRS",
                                    "value": "Standard_LRS",
                                    "description": "Standard_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_LRS",
                                    "value": "StandardSSD_LRS",
                                    "description": "StandardSSD_LRS SKU"
                                  },
                                  {
                                    "name": "UltraSSD_LRS",
                                    "value": "UltraSSD_LRS",
                                    "description": "UltraSSD_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  },
                                  {
                                    "name": "PremiumV2_LRS",
                                    "value": "PremiumV2_LRS",
                                    "description": "PremiumV2_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_ZRS",
                                    "value": "StandardSSD_ZRS",
                                    "description": "StandardSSD_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        },
                        "elasticSan": {
                          "description": "Elastic San Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Premium_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "ElasticSanSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            }
                          }
                        },
                        "ephemeralDisk": {
                          "description": "Ephemeral Pool Properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The number of data copies. Default 3.",
                              "default": 3,
                              "minimum": 1,
                              "maximum": 3
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "reclaimPolicy": {
                      "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Retain"
                      ],
                      "x-ms-enum": {
                        "name": "ReclaimPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Delete",
                            "value": "Delete",
                            "description": "Delete resource"
                          },
                          {
                            "name": "Retain",
                            "value": "Retain",
                            "description": "Retain resource"
                          }
                        ]
                      }
                    },
                    "assignments": {
                      "type": "array",
                      "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
                      "items": {
                        "type": "object",
                        "description": "Assignment Properties",
                        "properties": {
                          "status": {
                            "description": "Indicates if the assignment is in a usable state",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "State of the assignment resource",
                                "type": "string",
                                "enum": [
                                  "Assigning",
                                  "Assigned",
                                  "Unassigning",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "AssignmentStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Assigning",
                                      "value": "Assigning",
                                      "description": "The assignment of the pool to the resource is in progress"
                                    },
                                    {
                                      "name": "Assigned",
                                      "value": "Assigned",
                                      "description": "The assignment to the pool was successful."
                                    },
                                    {
                                      "name": "Unassigning",
                                      "value": "Unassigning",
                                      "description": "The pool is being unassigned."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The operation of assigning or unassigning the pool failed."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for the status"
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "id": {
                            "description": "Resource id for the assigned resource",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ContainerService/managedClusters"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "poolType"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Pools_CreateOrUpdate",
        "tags": [
          "Pools"
        ],
        "description": "Create a Pool",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Pool resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The operational status of the resource",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "List of availability zones that resources can be created in.",
                      "maxItems": 3,
                      "items": {
                        "type": "string",
                        "description": "Availability Zones",
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ],
                        "x-ms-enum": {
                          "name": "Zone",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Zone1",
                              "value": "1",
                              "description": "First availability zone."
                            },
                            {
                              "name": "Zone2",
                              "value": "2",
                              "description": "Second availability zone."
                            },
                            {
                              "name": "Zone3",
                              "value": "3",
                              "description": "Third availability zone."
                            }
                          ]
                        }
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resources": {
                      "description": "Resources represent the resources the pool should have.",
                      "type": "object",
                      "properties": {
                        "requests": {
                          "description": "Requests for capacity for the pool.",
                          "type": "object",
                          "properties": {
                            "storage": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Requested capacity of the pool in GiB.",
                              "default": 1024,
                              "minimum": 1024,
                              "maximum": 65536
                            }
                          }
                        }
                      }
                    },
                    "poolType": {
                      "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
                      "type": "object",
                      "properties": {
                        "azureDisk": {
                          "description": "Disk Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Standard_LRS",
                                "StandardSSD_LRS",
                                "UltraSSD_LRS",
                                "Premium_ZRS",
                                "PremiumV2_LRS",
                                "StandardSSD_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "AzureDiskSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Standard_LRS",
                                    "value": "Standard_LRS",
                                    "description": "Standard_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_LRS",
                                    "value": "StandardSSD_LRS",
                                    "description": "StandardSSD_LRS SKU"
                                  },
                                  {
                                    "name": "UltraSSD_LRS",
                                    "value": "UltraSSD_LRS",
                                    "description": "UltraSSD_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  },
                                  {
                                    "name": "PremiumV2_LRS",
                                    "value": "PremiumV2_LRS",
                                    "description": "PremiumV2_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_ZRS",
                                    "value": "StandardSSD_ZRS",
                                    "description": "StandardSSD_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        },
                        "elasticSan": {
                          "description": "Elastic San Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Premium_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "ElasticSanSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            }
                          }
                        },
                        "ephemeralDisk": {
                          "description": "Ephemeral Pool Properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The number of data copies. Default 3.",
                              "default": 3,
                              "minimum": 1,
                              "maximum": 3
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "reclaimPolicy": {
                      "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Retain"
                      ],
                      "x-ms-enum": {
                        "name": "ReclaimPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Delete",
                            "value": "Delete",
                            "description": "Delete resource"
                          },
                          {
                            "name": "Retain",
                            "value": "Retain",
                            "description": "Retain resource"
                          }
                        ]
                      }
                    },
                    "assignments": {
                      "type": "array",
                      "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
                      "items": {
                        "type": "object",
                        "description": "Assignment Properties",
                        "properties": {
                          "status": {
                            "description": "Indicates if the assignment is in a usable state",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "State of the assignment resource",
                                "type": "string",
                                "enum": [
                                  "Assigning",
                                  "Assigned",
                                  "Unassigning",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "AssignmentStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Assigning",
                                      "value": "Assigning",
                                      "description": "The assignment of the pool to the resource is in progress"
                                    },
                                    {
                                      "name": "Assigned",
                                      "value": "Assigned",
                                      "description": "The assignment to the pool was successful."
                                    },
                                    {
                                      "name": "Unassigning",
                                      "value": "Unassigning",
                                      "description": "The pool is being unassigned."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The operation of assigning or unassigning the pool failed."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for the status"
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "id": {
                            "description": "Resource id for the assigned resource",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ContainerService/managedClusters"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "poolType"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Pool' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Pool resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The operational status of the resource",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "List of availability zones that resources can be created in.",
                      "maxItems": 3,
                      "items": {
                        "type": "string",
                        "description": "Availability Zones",
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ],
                        "x-ms-enum": {
                          "name": "Zone",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Zone1",
                              "value": "1",
                              "description": "First availability zone."
                            },
                            {
                              "name": "Zone2",
                              "value": "2",
                              "description": "Second availability zone."
                            },
                            {
                              "name": "Zone3",
                              "value": "3",
                              "description": "Third availability zone."
                            }
                          ]
                        }
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resources": {
                      "description": "Resources represent the resources the pool should have.",
                      "type": "object",
                      "properties": {
                        "requests": {
                          "description": "Requests for capacity for the pool.",
                          "type": "object",
                          "properties": {
                            "storage": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Requested capacity of the pool in GiB.",
                              "default": 1024,
                              "minimum": 1024,
                              "maximum": 65536
                            }
                          }
                        }
                      }
                    },
                    "poolType": {
                      "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
                      "type": "object",
                      "properties": {
                        "azureDisk": {
                          "description": "Disk Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Standard_LRS",
                                "StandardSSD_LRS",
                                "UltraSSD_LRS",
                                "Premium_ZRS",
                                "PremiumV2_LRS",
                                "StandardSSD_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "AzureDiskSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Standard_LRS",
                                    "value": "Standard_LRS",
                                    "description": "Standard_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_LRS",
                                    "value": "StandardSSD_LRS",
                                    "description": "StandardSSD_LRS SKU"
                                  },
                                  {
                                    "name": "UltraSSD_LRS",
                                    "value": "UltraSSD_LRS",
                                    "description": "UltraSSD_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  },
                                  {
                                    "name": "PremiumV2_LRS",
                                    "value": "PremiumV2_LRS",
                                    "description": "PremiumV2_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_ZRS",
                                    "value": "StandardSSD_ZRS",
                                    "description": "StandardSSD_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        },
                        "elasticSan": {
                          "description": "Elastic San Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Premium_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "ElasticSanSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            }
                          }
                        },
                        "ephemeralDisk": {
                          "description": "Ephemeral Pool Properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The number of data copies. Default 3.",
                              "default": 3,
                              "minimum": 1,
                              "maximum": 3
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "reclaimPolicy": {
                      "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Retain"
                      ],
                      "x-ms-enum": {
                        "name": "ReclaimPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Delete",
                            "value": "Delete",
                            "description": "Delete resource"
                          },
                          {
                            "name": "Retain",
                            "value": "Retain",
                            "description": "Retain resource"
                          }
                        ]
                      }
                    },
                    "assignments": {
                      "type": "array",
                      "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
                      "items": {
                        "type": "object",
                        "description": "Assignment Properties",
                        "properties": {
                          "status": {
                            "description": "Indicates if the assignment is in a usable state",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "State of the assignment resource",
                                "type": "string",
                                "enum": [
                                  "Assigning",
                                  "Assigned",
                                  "Unassigning",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "AssignmentStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Assigning",
                                      "value": "Assigning",
                                      "description": "The assignment of the pool to the resource is in progress"
                                    },
                                    {
                                      "name": "Assigned",
                                      "value": "Assigned",
                                      "description": "The assignment to the pool was successful."
                                    },
                                    {
                                      "name": "Unassigning",
                                      "value": "Unassigning",
                                      "description": "The pool is being unassigned."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The operation of assigning or unassigning the pool failed."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for the status"
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "id": {
                            "description": "Resource id for the assigned resource",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ContainerService/managedClusters"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "poolType"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Pool' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Pool resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The operational status of the resource",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "List of availability zones that resources can be created in.",
                      "maxItems": 3,
                      "items": {
                        "type": "string",
                        "description": "Availability Zones",
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ],
                        "x-ms-enum": {
                          "name": "Zone",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Zone1",
                              "value": "1",
                              "description": "First availability zone."
                            },
                            {
                              "name": "Zone2",
                              "value": "2",
                              "description": "Second availability zone."
                            },
                            {
                              "name": "Zone3",
                              "value": "3",
                              "description": "Third availability zone."
                            }
                          ]
                        }
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resources": {
                      "description": "Resources represent the resources the pool should have.",
                      "type": "object",
                      "properties": {
                        "requests": {
                          "description": "Requests for capacity for the pool.",
                          "type": "object",
                          "properties": {
                            "storage": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Requested capacity of the pool in GiB.",
                              "default": 1024,
                              "minimum": 1024,
                              "maximum": 65536
                            }
                          }
                        }
                      }
                    },
                    "poolType": {
                      "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
                      "type": "object",
                      "properties": {
                        "azureDisk": {
                          "description": "Disk Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Standard_LRS",
                                "StandardSSD_LRS",
                                "UltraSSD_LRS",
                                "Premium_ZRS",
                                "PremiumV2_LRS",
                                "StandardSSD_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "AzureDiskSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Standard_LRS",
                                    "value": "Standard_LRS",
                                    "description": "Standard_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_LRS",
                                    "value": "StandardSSD_LRS",
                                    "description": "StandardSSD_LRS SKU"
                                  },
                                  {
                                    "name": "UltraSSD_LRS",
                                    "value": "UltraSSD_LRS",
                                    "description": "UltraSSD_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  },
                                  {
                                    "name": "PremiumV2_LRS",
                                    "value": "PremiumV2_LRS",
                                    "description": "PremiumV2_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_ZRS",
                                    "value": "StandardSSD_ZRS",
                                    "description": "StandardSSD_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        },
                        "elasticSan": {
                          "description": "Elastic San Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Premium_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "ElasticSanSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            }
                          }
                        },
                        "ephemeralDisk": {
                          "description": "Ephemeral Pool Properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The number of data copies. Default 3.",
                              "default": 3,
                              "minimum": 1,
                              "maximum": 3
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "reclaimPolicy": {
                      "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Retain"
                      ],
                      "x-ms-enum": {
                        "name": "ReclaimPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Delete",
                            "value": "Delete",
                            "description": "Delete resource"
                          },
                          {
                            "name": "Retain",
                            "value": "Retain",
                            "description": "Retain resource"
                          }
                        ]
                      }
                    },
                    "assignments": {
                      "type": "array",
                      "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
                      "items": {
                        "type": "object",
                        "description": "Assignment Properties",
                        "properties": {
                          "status": {
                            "description": "Indicates if the assignment is in a usable state",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "State of the assignment resource",
                                "type": "string",
                                "enum": [
                                  "Assigning",
                                  "Assigned",
                                  "Unassigning",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "AssignmentStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Assigning",
                                      "value": "Assigning",
                                      "description": "The assignment of the pool to the resource is in progress"
                                    },
                                    {
                                      "name": "Assigned",
                                      "value": "Assigned",
                                      "description": "The assignment to the pool was successful."
                                    },
                                    {
                                      "name": "Unassigning",
                                      "value": "Unassigning",
                                      "description": "The pool is being unassigned."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The operation of assigning or unassigning the pool failed."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for the status"
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "id": {
                            "description": "Resource id for the assigned resource",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ContainerService/managedClusters"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "poolType"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Pools_Update",
        "tags": [
          "Pools"
        ],
        "description": "Update a Pool",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Pool.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "resources": {
                      "description": "Resources represent the resources the pool should have.",
                      "type": "object",
                      "properties": {
                        "requests": {
                          "description": "Requests for capacity for the pool.",
                          "type": "object",
                          "properties": {
                            "storage": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Requested capacity of the pool in GiB.",
                              "default": 1024,
                              "minimum": 1024,
                              "maximum": 65536
                            }
                          }
                        }
                      }
                    },
                    "poolType": {
                      "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
                      "type": "object",
                      "properties": {
                        "azureDisk": {
                          "description": "Disk Pool Properties",
                          "type": "object",
                          "properties": {
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        },
                        "elasticSan": {
                          "description": "Elastic San Pool Properties",
                          "type": "object"
                        },
                        "ephemeralDisk": {
                          "description": "Ephemeral Pool Properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The number of data copies. Default 3.",
                              "default": 3,
                              "minimum": 1,
                              "maximum": 3
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "assignments": {
                      "type": "array",
                      "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
                      "items": {
                        "type": "object",
                        "description": "Assignment Properties",
                        "properties": {
                          "status": {
                            "description": "Indicates if the assignment is in a usable state",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "State of the assignment resource",
                                "type": "string",
                                "enum": [
                                  "Assigning",
                                  "Assigned",
                                  "Unassigning",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "AssignmentStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Assigning",
                                      "value": "Assigning",
                                      "description": "The assignment of the pool to the resource is in progress"
                                    },
                                    {
                                      "name": "Assigned",
                                      "value": "Assigned",
                                      "description": "The assignment to the pool was successful."
                                    },
                                    {
                                      "name": "Unassigning",
                                      "value": "Unassigning",
                                      "description": "The pool is being unassigned."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The operation of assigning or unassigning the pool failed."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for the status"
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "id": {
                            "description": "Resource id for the assigned resource",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ContainerService/managedClusters"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Pool resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The operational status of the resource",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "zones": {
                      "type": "array",
                      "description": "List of availability zones that resources can be created in.",
                      "maxItems": 3,
                      "items": {
                        "type": "string",
                        "description": "Availability Zones",
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ],
                        "x-ms-enum": {
                          "name": "Zone",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Zone1",
                              "value": "1",
                              "description": "First availability zone."
                            },
                            {
                              "name": "Zone2",
                              "value": "2",
                              "description": "Second availability zone."
                            },
                            {
                              "name": "Zone3",
                              "value": "3",
                              "description": "Third availability zone."
                            }
                          ]
                        }
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resources": {
                      "description": "Resources represent the resources the pool should have.",
                      "type": "object",
                      "properties": {
                        "requests": {
                          "description": "Requests for capacity for the pool.",
                          "type": "object",
                          "properties": {
                            "storage": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Requested capacity of the pool in GiB.",
                              "default": 1024,
                              "minimum": 1024,
                              "maximum": 65536
                            }
                          }
                        }
                      }
                    },
                    "poolType": {
                      "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
                      "type": "object",
                      "properties": {
                        "azureDisk": {
                          "description": "Disk Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Standard_LRS",
                                "StandardSSD_LRS",
                                "UltraSSD_LRS",
                                "Premium_ZRS",
                                "PremiumV2_LRS",
                                "StandardSSD_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "AzureDiskSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Standard_LRS",
                                    "value": "Standard_LRS",
                                    "description": "Standard_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_LRS",
                                    "value": "StandardSSD_LRS",
                                    "description": "StandardSSD_LRS SKU"
                                  },
                                  {
                                    "name": "UltraSSD_LRS",
                                    "value": "UltraSSD_LRS",
                                    "description": "UltraSSD_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  },
                                  {
                                    "name": "PremiumV2_LRS",
                                    "value": "PremiumV2_LRS",
                                    "description": "PremiumV2_LRS SKU"
                                  },
                                  {
                                    "name": "StandardSSD_ZRS",
                                    "value": "StandardSSD_ZRS",
                                    "description": "StandardSSD_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        },
                        "elasticSan": {
                          "description": "Elastic San Pool Properties",
                          "type": "object",
                          "properties": {
                            "resourceGroup": {
                              "type": "string",
                              "description": "Managed resource group for the pool.",
                              "readOnly": true
                            },
                            "skuName": {
                              "description": "Sku name",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "Premium_LRS",
                                "Premium_ZRS"
                              ],
                              "x-ms-enum": {
                                "name": "ElasticSanSkuName",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Premium_LRS",
                                    "value": "Premium_LRS",
                                    "description": "Premium_LRS SKU"
                                  },
                                  {
                                    "name": "Premium_ZRS",
                                    "value": "Premium_ZRS",
                                    "description": "Premium_ZRS SKU"
                                  }
                                ]
                              }
                            },
                            "encryption": {
                              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "object",
                              "properties": {
                                "keyName": {
                                  "type": "string",
                                  "description": "The name of the key vault key."
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "The URI of the key vault."
                                },
                                "identity": {
                                  "description": "The managed service identities assigned to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "tenantId": {
                                      "type": "string",
                                      "format": "uuid",
                                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                      "readOnly": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                      "enum": [
                                        "None",
                                        "SystemAssigned",
                                        "UserAssigned",
                                        "SystemAssigned, UserAssigned"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ManagedServiceIdentityType",
                                        "modelAsString": true
                                      }
                                    },
                                    "userAssignedIdentities": {
                                      "type": "object",
                                      "title": "User-Assigned Identities",
                                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "User assigned identity properties",
                                        "properties": {
                                          "principalId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The principal ID of the assigned identity.",
                                            "readOnly": true
                                          },
                                          "clientId": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "The client ID of the assigned identity.",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              },
                              "required": [
                                "keyName",
                                "keyVaultUri"
                              ]
                            }
                          }
                        },
                        "ephemeralDisk": {
                          "description": "Ephemeral Pool Properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The number of data copies. Default 3.",
                              "default": 3,
                              "minimum": 1,
                              "maximum": 3
                            },
                            "disks": {
                              "type": "array",
                              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                              "items": {
                                "type": "object",
                                "description": "Model for disk for that pool is using",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                  },
                                  "reference": {
                                    "type": "string",
                                    "description": "Reference is the location of the disk in an external system."
                                  }
                                },
                                "required": [
                                  "id",
                                  "reference"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "reclaimPolicy": {
                      "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Retain"
                      ],
                      "x-ms-enum": {
                        "name": "ReclaimPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Delete",
                            "value": "Delete",
                            "description": "Delete resource"
                          },
                          {
                            "name": "Retain",
                            "value": "Retain",
                            "description": "Retain resource"
                          }
                        ]
                      }
                    },
                    "assignments": {
                      "type": "array",
                      "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
                      "items": {
                        "type": "object",
                        "description": "Assignment Properties",
                        "properties": {
                          "status": {
                            "description": "Indicates if the assignment is in a usable state",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "State of the assignment resource",
                                "type": "string",
                                "enum": [
                                  "Assigning",
                                  "Assigned",
                                  "Unassigning",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "AssignmentStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Assigning",
                                      "value": "Assigning",
                                      "description": "The assignment of the pool to the resource is in progress"
                                    },
                                    {
                                      "name": "Assigned",
                                      "value": "Assigned",
                                      "description": "The assignment to the pool was successful."
                                    },
                                    {
                                      "name": "Unassigning",
                                      "value": "Unassigning",
                                      "description": "The pool is being unassigned."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The operation of assigning or unassigning the pool failed."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for the status"
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "id": {
                            "description": "Resource id for the assigned resource",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ContainerService/managedClusters"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "poolType"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Pools_Delete",
        "tags": [
          "Pools"
        ],
        "description": "Delete a Pool",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}/snapshots": {
      "get": {
        "operationId": "Snapshots_ListByPool",
        "tags": [
          "Snapshots"
        ],
        "description": "List Snapshot resources by Pool",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Snapshot list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Snapshot items on this page",
                  "items": {
                    "type": "object",
                    "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is being provisioned"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource create request has been accepted"
                                }
                              ]
                            }
                          },
                          "status": {
                            "description": "The status of the resource.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "state of the resource",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Available",
                                  "Unavailable"
                                ],
                                "x-ms-enum": {
                                  "name": "ResourceOperationStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Pending",
                                      "value": "Pending",
                                      "description": "The resource is pending."
                                    },
                                    {
                                      "name": "Available",
                                      "value": "Available",
                                      "description": "The resource is available."
                                    },
                                    {
                                      "name": "Unavailable",
                                      "value": "Unavailable",
                                      "description": "The resource is unavailable."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for state."
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "source": {
                            "type": "string",
                            "description": "Reference to the source volume",
                            "minLength": 3,
                            "maxLength": 253,
                            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          }
                        },
                        "required": [
                          "source"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}/snapshots/{snapshotName}": {
      "get": {
        "operationId": "Snapshots_Get",
        "tags": [
          "Snapshots"
        ],
        "description": "Get a Snapshot",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "Volume Snapshot Resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "Reference to the source volume",
                      "minLength": 3,
                      "maxLength": 253,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  },
                  "required": [
                    "source"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Snapshots_CreateOrUpdate",
        "tags": [
          "Snapshots"
        ],
        "description": "Create a Snapshot",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "Volume Snapshot Resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "Reference to the source volume",
                      "minLength": 3,
                      "maxLength": 253,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  },
                  "required": [
                    "source"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Snapshot' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "Reference to the source volume",
                      "minLength": 3,
                      "maxLength": 253,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  },
                  "required": [
                    "source"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Snapshot' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "Reference to the source volume",
                      "minLength": 3,
                      "maxLength": 253,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  },
                  "required": [
                    "source"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Snapshots_Delete",
        "tags": [
          "Snapshots"
        ],
        "description": "Delete a Snapshot",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "Volume Snapshot Resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}/volumes": {
      "get": {
        "operationId": "Volumes_ListByPool",
        "tags": [
          "Volumes"
        ],
        "description": "List Volume resources by Pool",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Volume list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Volume items on this page",
                  "items": {
                    "type": "object",
                    "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is being provisioned"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource create request has been accepted"
                                }
                              ]
                            }
                          },
                          "status": {
                            "description": "The status of the resource.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "state": {
                                "description": "state of the resource",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Available",
                                  "Unavailable"
                                ],
                                "x-ms-enum": {
                                  "name": "ResourceOperationStatusState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Pending",
                                      "value": "Pending",
                                      "description": "The resource is pending."
                                    },
                                    {
                                      "name": "Available",
                                      "value": "Available",
                                      "description": "The resource is available."
                                    },
                                    {
                                      "name": "Unavailable",
                                      "value": "Unavailable",
                                      "description": "The resource is unavailable."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for state."
                              }
                            },
                            "required": [
                              "state"
                            ]
                          },
                          "labels": {
                            "type": "object",
                            "description": "String KV pairs indicating labels",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "capacityGiB": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Requested capacity in GiB",
                            "minimum": 1,
                            "maximum": 65536
                          },
                          "volumeType": {
                            "description": "Properties of the volume",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "elasticSan": {
                                "description": "Properties of the ElasticSAN iSCSI target",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "targetIqn": {
                                    "type": "string",
                                    "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
                                  },
                                  "targetPortalHostname": {
                                    "type": "string",
                                    "description": "iSCSI Target Portal Host Name"
                                  },
                                  "targetPortalPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "iSCSI Target Portal Port"
                                  }
                                },
                                "required": [
                                  "targetIqn",
                                  "targetPortalHostname",
                                  "targetPortalPort"
                                ]
                              }
                            }
                          }
                        },
                        "required": [
                          "labels",
                          "capacityGiB"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}/volumes/{volumeName}": {
      "get": {
        "operationId": "Volumes_Get",
        "tags": [
          "Volumes"
        ],
        "description": "Get a Volume",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "Volume Resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "labels": {
                      "type": "object",
                      "description": "String KV pairs indicating labels",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "capacityGiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Requested capacity in GiB",
                      "minimum": 1,
                      "maximum": 65536
                    },
                    "volumeType": {
                      "description": "Properties of the volume",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "elasticSan": {
                          "description": "Properties of the ElasticSAN iSCSI target",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "targetIqn": {
                              "type": "string",
                              "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
                            },
                            "targetPortalHostname": {
                              "type": "string",
                              "description": "iSCSI Target Portal Host Name"
                            },
                            "targetPortalPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "iSCSI Target Portal Port"
                            }
                          },
                          "required": [
                            "targetIqn",
                            "targetPortalHostname",
                            "targetPortalPort"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "labels",
                    "capacityGiB"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Volumes_CreateOrUpdate",
        "tags": [
          "Volumes"
        ],
        "description": "Create a Volume",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "Volume Resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "labels": {
                      "type": "object",
                      "description": "String KV pairs indicating labels",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "capacityGiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Requested capacity in GiB",
                      "minimum": 1,
                      "maximum": 65536
                    },
                    "volumeType": {
                      "description": "Properties of the volume",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "elasticSan": {
                          "description": "Properties of the ElasticSAN iSCSI target",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "targetIqn": {
                              "type": "string",
                              "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
                            },
                            "targetPortalHostname": {
                              "type": "string",
                              "description": "iSCSI Target Portal Host Name"
                            },
                            "targetPortalPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "iSCSI Target Portal Port"
                            }
                          },
                          "required": [
                            "targetIqn",
                            "targetPortalHostname",
                            "targetPortalPort"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "labels",
                    "capacityGiB"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Volume' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "labels": {
                      "type": "object",
                      "description": "String KV pairs indicating labels",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "capacityGiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Requested capacity in GiB",
                      "minimum": 1,
                      "maximum": 65536
                    },
                    "volumeType": {
                      "description": "Properties of the volume",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "elasticSan": {
                          "description": "Properties of the ElasticSAN iSCSI target",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "targetIqn": {
                              "type": "string",
                              "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
                            },
                            "targetPortalHostname": {
                              "type": "string",
                              "description": "iSCSI Target Portal Host Name"
                            },
                            "targetPortalPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "iSCSI Target Portal Port"
                            }
                          },
                          "required": [
                            "targetIqn",
                            "targetPortalHostname",
                            "targetPortalPort"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "labels",
                    "capacityGiB"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Volume' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "labels": {
                      "type": "object",
                      "description": "String KV pairs indicating labels",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "capacityGiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Requested capacity in GiB",
                      "minimum": 1,
                      "maximum": 65536
                    },
                    "volumeType": {
                      "description": "Properties of the volume",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "elasticSan": {
                          "description": "Properties of the ElasticSAN iSCSI target",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "targetIqn": {
                              "type": "string",
                              "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
                            },
                            "targetPortalHostname": {
                              "type": "string",
                              "description": "iSCSI Target Portal Host Name"
                            },
                            "targetPortalPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "iSCSI Target Portal Port"
                            }
                          },
                          "required": [
                            "targetIqn",
                            "targetPortalHostname",
                            "targetPortalPort"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "labels",
                    "capacityGiB"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Volumes_Update",
        "tags": [
          "Volumes"
        ],
        "description": "Update a Volume",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "Volume Resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Volume.",
              "properties": {
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "labels": {
                      "type": "object",
                      "description": "String KV pairs indicating labels",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "capacityGiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Requested capacity in GiB",
                      "minimum": 1,
                      "maximum": 65536
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The status of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "state": {
                          "description": "state of the resource",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Available",
                            "Unavailable"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOperationStatusState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource is pending."
                              },
                              {
                                "name": "Available",
                                "value": "Available",
                                "description": "The resource is available."
                              },
                              {
                                "name": "Unavailable",
                                "value": "Unavailable",
                                "description": "The resource is unavailable."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Reason for state."
                        }
                      },
                      "required": [
                        "state"
                      ]
                    },
                    "labels": {
                      "type": "object",
                      "description": "String KV pairs indicating labels",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "capacityGiB": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Requested capacity in GiB",
                      "minimum": 1,
                      "maximum": 65536
                    },
                    "volumeType": {
                      "description": "Properties of the volume",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "elasticSan": {
                          "description": "Properties of the ElasticSAN iSCSI target",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "targetIqn": {
                              "type": "string",
                              "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
                            },
                            "targetPortalHostname": {
                              "type": "string",
                              "description": "iSCSI Target Portal Host Name"
                            },
                            "targetPortalPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "iSCSI Target Portal Port"
                            }
                          },
                          "required": [
                            "targetIqn",
                            "targetPortalHostname",
                            "targetPortalPort"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "labels",
                    "capacityGiB"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Volumes_Delete",
        "tags": [
          "Volumes"
        ],
        "description": "Delete a Volume",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Pool Object",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "Volume Resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 253,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    }
  },
  "definitions": {
    "Assignment": {
      "type": "object",
      "description": "Assignment Properties",
      "properties": {
        "status": {
          "description": "Indicates if the assignment is in a usable state",
          "readOnly": true,
          "type": "object",
          "properties": {
            "state": {
              "description": "State of the assignment resource",
              "type": "string",
              "enum": [
                "Assigning",
                "Assigned",
                "Unassigning",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "AssignmentStatusState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Assigning",
                    "value": "Assigning",
                    "description": "The assignment of the pool to the resource is in progress"
                  },
                  {
                    "name": "Assigned",
                    "value": "Assigned",
                    "description": "The assignment to the pool was successful."
                  },
                  {
                    "name": "Unassigning",
                    "value": "Unassigning",
                    "description": "The pool is being unassigned."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The operation of assigning or unassigning the pool failed."
                  }
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "Reason for the status"
            }
          },
          "required": [
            "state"
          ]
        },
        "id": {
          "description": "Resource id for the assigned resource",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ContainerService/managedClusters"
              }
            ]
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "AssignmentId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ContainerService/managedClusters"
          }
        ]
      }
    },
    "AssignmentStatus": {
      "type": "object",
      "description": "Status of the assignment resource",
      "properties": {
        "state": {
          "description": "State of the assignment resource",
          "type": "string",
          "enum": [
            "Assigning",
            "Assigned",
            "Unassigning",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "AssignmentStatusState",
            "modelAsString": true,
            "values": [
              {
                "name": "Assigning",
                "value": "Assigning",
                "description": "The assignment of the pool to the resource is in progress"
              },
              {
                "name": "Assigned",
                "value": "Assigned",
                "description": "The assignment to the pool was successful."
              },
              {
                "name": "Unassigning",
                "value": "Unassigning",
                "description": "The pool is being unassigned."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The operation of assigning or unassigning the pool failed."
              }
            ]
          }
        },
        "message": {
          "type": "string",
          "description": "Reason for the status"
        }
      },
      "required": [
        "state"
      ]
    },
    "AssignmentStatusState": {
      "type": "string",
      "description": "Status of the assignment resource",
      "enum": [
        "Assigning",
        "Assigned",
        "Unassigning",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AssignmentStatusState",
        "modelAsString": true,
        "values": [
          {
            "name": "Assigning",
            "value": "Assigning",
            "description": "The assignment of the pool to the resource is in progress"
          },
          {
            "name": "Assigned",
            "value": "Assigned",
            "description": "The assignment to the pool was successful."
          },
          {
            "name": "Unassigning",
            "value": "Unassigning",
            "description": "The pool is being unassigned."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation of assigning or unassigning the pool failed."
          }
        ]
      }
    },
    "AzureDisk": {
      "type": "object",
      "description": "Azure Disk Pool Properties",
      "properties": {
        "resourceGroup": {
          "type": "string",
          "description": "Managed resource group for the pool.",
          "readOnly": true
        },
        "skuName": {
          "description": "Sku name",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Premium_LRS",
            "Standard_LRS",
            "StandardSSD_LRS",
            "UltraSSD_LRS",
            "Premium_ZRS",
            "PremiumV2_LRS",
            "StandardSSD_ZRS"
          ],
          "x-ms-enum": {
            "name": "AzureDiskSkuName",
            "modelAsString": true,
            "values": [
              {
                "name": "Premium_LRS",
                "value": "Premium_LRS",
                "description": "Premium_LRS SKU"
              },
              {
                "name": "Standard_LRS",
                "value": "Standard_LRS",
                "description": "Standard_LRS SKU"
              },
              {
                "name": "StandardSSD_LRS",
                "value": "StandardSSD_LRS",
                "description": "StandardSSD_LRS SKU"
              },
              {
                "name": "UltraSSD_LRS",
                "value": "UltraSSD_LRS",
                "description": "UltraSSD_LRS SKU"
              },
              {
                "name": "Premium_ZRS",
                "value": "Premium_ZRS",
                "description": "Premium_ZRS SKU"
              },
              {
                "name": "PremiumV2_LRS",
                "value": "PremiumV2_LRS",
                "description": "PremiumV2_LRS SKU"
              },
              {
                "name": "StandardSSD_ZRS",
                "value": "StandardSSD_ZRS",
                "description": "StandardSSD_ZRS SKU"
              }
            ]
          }
        },
        "encryption": {
          "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "keyName": {
              "type": "string",
              "description": "The name of the key vault key."
            },
            "keyVaultUri": {
              "type": "string",
              "description": "The URI of the key vault."
            },
            "identity": {
              "description": "The managed service identities assigned to this resource.",
              "type": "object",
              "properties": {
                "principalId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "tenantId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                  "enum": [
                    "None",
                    "SystemAssigned",
                    "UserAssigned",
                    "SystemAssigned, UserAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "ManagedServiceIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentities": {
                  "type": "object",
                  "title": "User-Assigned Identities",
                  "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                  "additionalProperties": {
                    "type": "object",
                    "description": "User assigned identity properties",
                    "properties": {
                      "principalId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The principal ID of the assigned identity.",
                        "readOnly": true
                      },
                      "clientId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The client ID of the assigned identity.",
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "required": [
            "keyName",
            "keyVaultUri"
          ]
        },
        "disks": {
          "type": "array",
          "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
          "items": {
            "type": "object",
            "description": "Model for disk for that pool is using",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
              },
              "reference": {
                "type": "string",
                "description": "Reference is the location of the disk in an external system."
              }
            },
            "required": [
              "id",
              "reference"
            ]
          }
        }
      }
    },
    "AzureDiskSkuName": {
      "type": "string",
      "description": "SKU of the underlying managed disk",
      "enum": [
        "Premium_LRS",
        "Standard_LRS",
        "StandardSSD_LRS",
        "UltraSSD_LRS",
        "Premium_ZRS",
        "PremiumV2_LRS",
        "StandardSSD_ZRS"
      ],
      "x-ms-enum": {
        "name": "AzureDiskSkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Premium_LRS",
            "value": "Premium_LRS",
            "description": "Premium_LRS SKU"
          },
          {
            "name": "Standard_LRS",
            "value": "Standard_LRS",
            "description": "Standard_LRS SKU"
          },
          {
            "name": "StandardSSD_LRS",
            "value": "StandardSSD_LRS",
            "description": "StandardSSD_LRS SKU"
          },
          {
            "name": "UltraSSD_LRS",
            "value": "UltraSSD_LRS",
            "description": "UltraSSD_LRS SKU"
          },
          {
            "name": "Premium_ZRS",
            "value": "Premium_ZRS",
            "description": "Premium_ZRS SKU"
          },
          {
            "name": "PremiumV2_LRS",
            "value": "PremiumV2_LRS",
            "description": "PremiumV2_LRS SKU"
          },
          {
            "name": "StandardSSD_ZRS",
            "value": "StandardSSD_ZRS",
            "description": "StandardSSD_ZRS SKU"
          }
        ]
      }
    },
    "AzureDiskUpdate": {
      "type": "object",
      "description": "Azure Disk Pool Properties",
      "properties": {
        "disks": {
          "type": "array",
          "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
          "items": {
            "type": "object",
            "description": "Model for disk for that pool is using",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
              },
              "reference": {
                "type": "string",
                "description": "Reference is the location of the disk in an external system."
              }
            },
            "required": [
              "id",
              "reference"
            ]
          }
        }
      }
    },
    "Disk": {
      "type": "object",
      "description": "Model for disk for that pool is using",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
        },
        "reference": {
          "type": "string",
          "description": "Reference is the location of the disk in an external system."
        }
      },
      "required": [
        "id",
        "reference"
      ]
    },
    "DiskPoolProperties": {
      "type": "object",
      "description": "Properties shared between the azureDisk and ephemeralDisk",
      "properties": {
        "disks": {
          "type": "array",
          "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
          "items": {
            "type": "object",
            "description": "Model for disk for that pool is using",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
              },
              "reference": {
                "type": "string",
                "description": "Reference is the location of the disk in an external system."
              }
            },
            "required": [
              "id",
              "reference"
            ]
          }
        }
      }
    },
    "ElasticSan": {
      "type": "object",
      "description": "Elastic San Pool Properties",
      "properties": {
        "resourceGroup": {
          "type": "string",
          "description": "Managed resource group for the pool.",
          "readOnly": true
        },
        "skuName": {
          "description": "Sku name",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Premium_LRS",
            "Premium_ZRS"
          ],
          "x-ms-enum": {
            "name": "ElasticSanSkuName",
            "modelAsString": true,
            "values": [
              {
                "name": "Premium_LRS",
                "value": "Premium_LRS",
                "description": "Premium_LRS SKU"
              },
              {
                "name": "Premium_ZRS",
                "value": "Premium_ZRS",
                "description": "Premium_ZRS SKU"
              }
            ]
          }
        },
        "encryption": {
          "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "keyName": {
              "type": "string",
              "description": "The name of the key vault key."
            },
            "keyVaultUri": {
              "type": "string",
              "description": "The URI of the key vault."
            },
            "identity": {
              "description": "The managed service identities assigned to this resource.",
              "type": "object",
              "properties": {
                "principalId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "tenantId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                  "enum": [
                    "None",
                    "SystemAssigned",
                    "UserAssigned",
                    "SystemAssigned, UserAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "ManagedServiceIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentities": {
                  "type": "object",
                  "title": "User-Assigned Identities",
                  "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                  "additionalProperties": {
                    "type": "object",
                    "description": "User assigned identity properties",
                    "properties": {
                      "principalId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The principal ID of the assigned identity.",
                        "readOnly": true
                      },
                      "clientId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The client ID of the assigned identity.",
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "required": [
            "keyName",
            "keyVaultUri"
          ]
        }
      }
    },
    "ElasticSanSkuName": {
      "type": "string",
      "description": "ElasticSAN SKUs",
      "enum": [
        "Premium_LRS",
        "Premium_ZRS"
      ],
      "x-ms-enum": {
        "name": "ElasticSanSkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Premium_LRS",
            "value": "Premium_LRS",
            "description": "Premium_LRS SKU"
          },
          {
            "name": "Premium_ZRS",
            "value": "Premium_ZRS",
            "description": "Premium_ZRS SKU"
          }
        ]
      }
    },
    "ElasticSanUpdate": {
      "type": "object",
      "description": "Elastic San Pool Properties"
    },
    "ElasticSanVolumeProperties": {
      "type": "object",
      "description": "Properties of the ElasticSAN iSCSI target",
      "properties": {
        "targetIqn": {
          "type": "string",
          "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
        },
        "targetPortalHostname": {
          "type": "string",
          "description": "iSCSI Target Portal Host Name"
        },
        "targetPortalPort": {
          "type": "integer",
          "format": "int32",
          "description": "iSCSI Target Portal Port"
        }
      },
      "required": [
        "targetIqn",
        "targetPortalHostname",
        "targetPortalPort"
      ]
    },
    "Encryption": {
      "type": "object",
      "description": "Encryption key properties for the pool.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of the key vault key."
        },
        "keyVaultUri": {
          "type": "string",
          "description": "The URI of the key vault."
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "keyName",
        "keyVaultUri"
      ]
    },
    "EphemeralDisk": {
      "type": "object",
      "description": "Ephemeral Disk Pool Properties",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int64",
          "description": "The number of data copies. Default 3.",
          "default": 3,
          "minimum": 1,
          "maximum": 3
        },
        "disks": {
          "type": "array",
          "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
          "items": {
            "type": "object",
            "description": "Model for disk for that pool is using",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
              },
              "reference": {
                "type": "string",
                "description": "Reference is the location of the disk in an external system."
              }
            },
            "required": [
              "id",
              "reference"
            ]
          }
        }
      }
    },
    "Pool": {
      "type": "object",
      "description": "Pool resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            },
            "status": {
              "description": "The operational status of the resource",
              "readOnly": true,
              "type": "object",
              "properties": {
                "state": {
                  "description": "state of the resource",
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Available",
                    "Unavailable"
                  ],
                  "x-ms-enum": {
                    "name": "ResourceOperationStatusState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Pending",
                        "value": "Pending",
                        "description": "The resource is pending."
                      },
                      {
                        "name": "Available",
                        "value": "Available",
                        "description": "The resource is available."
                      },
                      {
                        "name": "Unavailable",
                        "value": "Unavailable",
                        "description": "The resource is unavailable."
                      }
                    ]
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Reason for state."
                }
              },
              "required": [
                "state"
              ]
            },
            "zones": {
              "type": "array",
              "description": "List of availability zones that resources can be created in.",
              "maxItems": 3,
              "items": {
                "type": "string",
                "description": "Availability Zones",
                "enum": [
                  "1",
                  "2",
                  "3"
                ],
                "x-ms-enum": {
                  "name": "Zone",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Zone1",
                      "value": "1",
                      "description": "First availability zone."
                    },
                    {
                      "name": "Zone2",
                      "value": "2",
                      "description": "Second availability zone."
                    },
                    {
                      "name": "Zone3",
                      "value": "3",
                      "description": "Third availability zone."
                    }
                  ]
                }
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "resources": {
              "description": "Resources represent the resources the pool should have.",
              "type": "object",
              "properties": {
                "requests": {
                  "description": "Requests for capacity for the pool.",
                  "type": "object",
                  "properties": {
                    "storage": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Requested capacity of the pool in GiB.",
                      "default": 1024,
                      "minimum": 1024,
                      "maximum": 65536
                    }
                  }
                }
              }
            },
            "poolType": {
              "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
              "type": "object",
              "properties": {
                "azureDisk": {
                  "description": "Disk Pool Properties",
                  "type": "object",
                  "properties": {
                    "resourceGroup": {
                      "type": "string",
                      "description": "Managed resource group for the pool.",
                      "readOnly": true
                    },
                    "skuName": {
                      "description": "Sku name",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Premium_LRS",
                        "Standard_LRS",
                        "StandardSSD_LRS",
                        "UltraSSD_LRS",
                        "Premium_ZRS",
                        "PremiumV2_LRS",
                        "StandardSSD_ZRS"
                      ],
                      "x-ms-enum": {
                        "name": "AzureDiskSkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Premium_LRS",
                            "value": "Premium_LRS",
                            "description": "Premium_LRS SKU"
                          },
                          {
                            "name": "Standard_LRS",
                            "value": "Standard_LRS",
                            "description": "Standard_LRS SKU"
                          },
                          {
                            "name": "StandardSSD_LRS",
                            "value": "StandardSSD_LRS",
                            "description": "StandardSSD_LRS SKU"
                          },
                          {
                            "name": "UltraSSD_LRS",
                            "value": "UltraSSD_LRS",
                            "description": "UltraSSD_LRS SKU"
                          },
                          {
                            "name": "Premium_ZRS",
                            "value": "Premium_ZRS",
                            "description": "Premium_ZRS SKU"
                          },
                          {
                            "name": "PremiumV2_LRS",
                            "value": "PremiumV2_LRS",
                            "description": "PremiumV2_LRS SKU"
                          },
                          {
                            "name": "StandardSSD_ZRS",
                            "value": "StandardSSD_ZRS",
                            "description": "StandardSSD_ZRS SKU"
                          }
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key."
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The URI of the key vault."
                        },
                        "identity": {
                          "description": "The managed service identities assigned to this resource.",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "type": "string",
                              "format": "uuid",
                              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                              "readOnly": true
                            },
                            "tenantId": {
                              "type": "string",
                              "format": "uuid",
                              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                              "readOnly": true
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                              "enum": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned",
                                "SystemAssigned, UserAssigned"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedServiceIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentities": {
                              "type": "object",
                              "title": "User-Assigned Identities",
                              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                              "additionalProperties": {
                                "type": "object",
                                "description": "User assigned identity properties",
                                "properties": {
                                  "principalId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The principal ID of the assigned identity.",
                                    "readOnly": true
                                  },
                                  "clientId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The client ID of the assigned identity.",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      },
                      "required": [
                        "keyName",
                        "keyVaultUri"
                      ]
                    },
                    "disks": {
                      "type": "array",
                      "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                      "items": {
                        "type": "object",
                        "description": "Model for disk for that pool is using",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                          },
                          "reference": {
                            "type": "string",
                            "description": "Reference is the location of the disk in an external system."
                          }
                        },
                        "required": [
                          "id",
                          "reference"
                        ]
                      }
                    }
                  }
                },
                "elasticSan": {
                  "description": "Elastic San Pool Properties",
                  "type": "object",
                  "properties": {
                    "resourceGroup": {
                      "type": "string",
                      "description": "Managed resource group for the pool.",
                      "readOnly": true
                    },
                    "skuName": {
                      "description": "Sku name",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Premium_LRS",
                        "Premium_ZRS"
                      ],
                      "x-ms-enum": {
                        "name": "ElasticSanSkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Premium_LRS",
                            "value": "Premium_LRS",
                            "description": "Premium_LRS SKU"
                          },
                          {
                            "name": "Premium_ZRS",
                            "value": "Premium_ZRS",
                            "description": "Premium_ZRS SKU"
                          }
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key."
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The URI of the key vault."
                        },
                        "identity": {
                          "description": "The managed service identities assigned to this resource.",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "type": "string",
                              "format": "uuid",
                              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                              "readOnly": true
                            },
                            "tenantId": {
                              "type": "string",
                              "format": "uuid",
                              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                              "readOnly": true
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                              "enum": [
                                "None",
                                "SystemAssigned",
                                "UserAssigned",
                                "SystemAssigned, UserAssigned"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedServiceIdentityType",
                                "modelAsString": true
                              }
                            },
                            "userAssignedIdentities": {
                              "type": "object",
                              "title": "User-Assigned Identities",
                              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                              "additionalProperties": {
                                "type": "object",
                                "description": "User assigned identity properties",
                                "properties": {
                                  "principalId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The principal ID of the assigned identity.",
                                    "readOnly": true
                                  },
                                  "clientId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The client ID of the assigned identity.",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      },
                      "required": [
                        "keyName",
                        "keyVaultUri"
                      ]
                    }
                  }
                },
                "ephemeralDisk": {
                  "description": "Ephemeral Pool Properties",
                  "type": "object",
                  "properties": {
                    "replicas": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The number of data copies. Default 3.",
                      "default": 3,
                      "minimum": 1,
                      "maximum": 3
                    },
                    "disks": {
                      "type": "array",
                      "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                      "items": {
                        "type": "object",
                        "description": "Model for disk for that pool is using",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                          },
                          "reference": {
                            "type": "string",
                            "description": "Reference is the location of the disk in an external system."
                          }
                        },
                        "required": [
                          "id",
                          "reference"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "reclaimPolicy": {
              "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Delete",
                "Retain"
              ],
              "x-ms-enum": {
                "name": "ReclaimPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Delete",
                    "value": "Delete",
                    "description": "Delete resource"
                  },
                  {
                    "name": "Retain",
                    "value": "Retain",
                    "description": "Retain resource"
                  }
                ]
              }
            },
            "assignments": {
              "type": "array",
              "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
              "items": {
                "type": "object",
                "description": "Assignment Properties",
                "properties": {
                  "status": {
                    "description": "Indicates if the assignment is in a usable state",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State of the assignment resource",
                        "type": "string",
                        "enum": [
                          "Assigning",
                          "Assigned",
                          "Unassigning",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "AssignmentStatusState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Assigning",
                              "value": "Assigning",
                              "description": "The assignment of the pool to the resource is in progress"
                            },
                            {
                              "name": "Assigned",
                              "value": "Assigned",
                              "description": "The assignment to the pool was successful."
                            },
                            {
                              "name": "Unassigning",
                              "value": "Unassigning",
                              "description": "The pool is being unassigned."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "The operation of assigning or unassigning the pool failed."
                            }
                          ]
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "Reason for the status"
                      }
                    },
                    "required": [
                      "state"
                    ]
                  },
                  "id": {
                    "description": "Resource id for the assigned resource",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ContainerService/managedClusters"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          },
          "required": [
            "poolType"
          ]
        }
      }
    },
    "PoolListResult": {
      "type": "object",
      "description": "The response of a Pool list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Pool items on this page",
          "items": {
            "type": "object",
            "description": "Pool resource",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is being provisioned"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted"
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource create request has been accepted"
                        }
                      ]
                    }
                  },
                  "status": {
                    "description": "The operational status of the resource",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "state of the resource",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Available",
                          "Unavailable"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceOperationStatusState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Pending",
                              "value": "Pending",
                              "description": "The resource is pending."
                            },
                            {
                              "name": "Available",
                              "value": "Available",
                              "description": "The resource is available."
                            },
                            {
                              "name": "Unavailable",
                              "value": "Unavailable",
                              "description": "The resource is unavailable."
                            }
                          ]
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "Reason for state."
                      }
                    },
                    "required": [
                      "state"
                    ]
                  },
                  "zones": {
                    "type": "array",
                    "description": "List of availability zones that resources can be created in.",
                    "maxItems": 3,
                    "items": {
                      "type": "string",
                      "description": "Availability Zones",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ],
                      "x-ms-enum": {
                        "name": "Zone",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Zone1",
                            "value": "1",
                            "description": "First availability zone."
                          },
                          {
                            "name": "Zone2",
                            "value": "2",
                            "description": "Second availability zone."
                          },
                          {
                            "name": "Zone3",
                            "value": "3",
                            "description": "Third availability zone."
                          }
                        ]
                      }
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "resources": {
                    "description": "Resources represent the resources the pool should have.",
                    "type": "object",
                    "properties": {
                      "requests": {
                        "description": "Requests for capacity for the pool.",
                        "type": "object",
                        "properties": {
                          "storage": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Requested capacity of the pool in GiB.",
                            "default": 1024,
                            "minimum": 1024,
                            "maximum": 65536
                          }
                        }
                      }
                    }
                  },
                  "poolType": {
                    "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
                    "type": "object",
                    "properties": {
                      "azureDisk": {
                        "description": "Disk Pool Properties",
                        "type": "object",
                        "properties": {
                          "resourceGroup": {
                            "type": "string",
                            "description": "Managed resource group for the pool.",
                            "readOnly": true
                          },
                          "skuName": {
                            "description": "Sku name",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Premium_LRS",
                              "Standard_LRS",
                              "StandardSSD_LRS",
                              "UltraSSD_LRS",
                              "Premium_ZRS",
                              "PremiumV2_LRS",
                              "StandardSSD_ZRS"
                            ],
                            "x-ms-enum": {
                              "name": "AzureDiskSkuName",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Premium_LRS",
                                  "value": "Premium_LRS",
                                  "description": "Premium_LRS SKU"
                                },
                                {
                                  "name": "Standard_LRS",
                                  "value": "Standard_LRS",
                                  "description": "Standard_LRS SKU"
                                },
                                {
                                  "name": "StandardSSD_LRS",
                                  "value": "StandardSSD_LRS",
                                  "description": "StandardSSD_LRS SKU"
                                },
                                {
                                  "name": "UltraSSD_LRS",
                                  "value": "UltraSSD_LRS",
                                  "description": "UltraSSD_LRS SKU"
                                },
                                {
                                  "name": "Premium_ZRS",
                                  "value": "Premium_ZRS",
                                  "description": "Premium_ZRS SKU"
                                },
                                {
                                  "name": "PremiumV2_LRS",
                                  "value": "PremiumV2_LRS",
                                  "description": "PremiumV2_LRS SKU"
                                },
                                {
                                  "name": "StandardSSD_ZRS",
                                  "value": "StandardSSD_ZRS",
                                  "description": "StandardSSD_ZRS SKU"
                                }
                              ]
                            }
                          },
                          "encryption": {
                            "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "The name of the key vault key."
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "The URI of the key vault."
                              },
                              "identity": {
                                "description": "The managed service identities assigned to this resource.",
                                "type": "object",
                                "properties": {
                                  "principalId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                    "readOnly": true
                                  },
                                  "tenantId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                    "readOnly": true
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                    "enum": [
                                      "None",
                                      "SystemAssigned",
                                      "UserAssigned",
                                      "SystemAssigned, UserAssigned"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ManagedServiceIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentities": {
                                    "type": "object",
                                    "title": "User-Assigned Identities",
                                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "User assigned identity properties",
                                      "properties": {
                                        "principalId": {
                                          "type": "string",
                                          "format": "uuid",
                                          "description": "The principal ID of the assigned identity.",
                                          "readOnly": true
                                        },
                                        "clientId": {
                                          "type": "string",
                                          "format": "uuid",
                                          "description": "The client ID of the assigned identity.",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              }
                            },
                            "required": [
                              "keyName",
                              "keyVaultUri"
                            ]
                          },
                          "disks": {
                            "type": "array",
                            "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                            "items": {
                              "type": "object",
                              "description": "Model for disk for that pool is using",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                },
                                "reference": {
                                  "type": "string",
                                  "description": "Reference is the location of the disk in an external system."
                                }
                              },
                              "required": [
                                "id",
                                "reference"
                              ]
                            }
                          }
                        }
                      },
                      "elasticSan": {
                        "description": "Elastic San Pool Properties",
                        "type": "object",
                        "properties": {
                          "resourceGroup": {
                            "type": "string",
                            "description": "Managed resource group for the pool.",
                            "readOnly": true
                          },
                          "skuName": {
                            "description": "Sku name",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Premium_LRS",
                              "Premium_ZRS"
                            ],
                            "x-ms-enum": {
                              "name": "ElasticSanSkuName",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Premium_LRS",
                                  "value": "Premium_LRS",
                                  "description": "Premium_LRS SKU"
                                },
                                {
                                  "name": "Premium_ZRS",
                                  "value": "Premium_ZRS",
                                  "description": "Premium_ZRS SKU"
                                }
                              ]
                            }
                          },
                          "encryption": {
                            "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "The name of the key vault key."
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "The URI of the key vault."
                              },
                              "identity": {
                                "description": "The managed service identities assigned to this resource.",
                                "type": "object",
                                "properties": {
                                  "principalId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                    "readOnly": true
                                  },
                                  "tenantId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                    "readOnly": true
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                    "enum": [
                                      "None",
                                      "SystemAssigned",
                                      "UserAssigned",
                                      "SystemAssigned, UserAssigned"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ManagedServiceIdentityType",
                                      "modelAsString": true
                                    }
                                  },
                                  "userAssignedIdentities": {
                                    "type": "object",
                                    "title": "User-Assigned Identities",
                                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "User assigned identity properties",
                                      "properties": {
                                        "principalId": {
                                          "type": "string",
                                          "format": "uuid",
                                          "description": "The principal ID of the assigned identity.",
                                          "readOnly": true
                                        },
                                        "clientId": {
                                          "type": "string",
                                          "format": "uuid",
                                          "description": "The client ID of the assigned identity.",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              }
                            },
                            "required": [
                              "keyName",
                              "keyVaultUri"
                            ]
                          }
                        }
                      },
                      "ephemeralDisk": {
                        "description": "Ephemeral Pool Properties",
                        "type": "object",
                        "properties": {
                          "replicas": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The number of data copies. Default 3.",
                            "default": 3,
                            "minimum": 1,
                            "maximum": 3
                          },
                          "disks": {
                            "type": "array",
                            "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                            "items": {
                              "type": "object",
                              "description": "Model for disk for that pool is using",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                                },
                                "reference": {
                                  "type": "string",
                                  "description": "Reference is the location of the disk in an external system."
                                }
                              },
                              "required": [
                                "id",
                                "reference"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "reclaimPolicy": {
                    "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "Delete",
                      "Retain"
                    ],
                    "x-ms-enum": {
                      "name": "ReclaimPolicy",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Delete",
                          "value": "Delete",
                          "description": "Delete resource"
                        },
                        {
                          "name": "Retain",
                          "value": "Retain",
                          "description": "Retain resource"
                        }
                      ]
                    }
                  },
                  "assignments": {
                    "type": "array",
                    "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
                    "items": {
                      "type": "object",
                      "description": "Assignment Properties",
                      "properties": {
                        "status": {
                          "description": "Indicates if the assignment is in a usable state",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "state": {
                              "description": "State of the assignment resource",
                              "type": "string",
                              "enum": [
                                "Assigning",
                                "Assigned",
                                "Unassigning",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "AssignmentStatusState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Assigning",
                                    "value": "Assigning",
                                    "description": "The assignment of the pool to the resource is in progress"
                                  },
                                  {
                                    "name": "Assigned",
                                    "value": "Assigned",
                                    "description": "The assignment to the pool was successful."
                                  },
                                  {
                                    "name": "Unassigning",
                                    "value": "Unassigning",
                                    "description": "The pool is being unassigned."
                                  },
                                  {
                                    "name": "Failed",
                                    "value": "Failed",
                                    "description": "The operation of assigning or unassigning the pool failed."
                                  }
                                ]
                              }
                            },
                            "message": {
                              "type": "string",
                              "description": "Reason for the status"
                            }
                          },
                          "required": [
                            "state"
                          ]
                        },
                        "id": {
                          "description": "Resource id for the assigned resource",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ContainerService/managedClusters"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                },
                "required": [
                  "poolType"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PoolProperties": {
      "type": "object",
      "description": "Pool Properties",
      "properties": {
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is being provisioned"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource create request has been accepted"
              }
            ]
          }
        },
        "status": {
          "description": "The operational status of the resource",
          "readOnly": true,
          "type": "object",
          "properties": {
            "state": {
              "description": "state of the resource",
              "type": "string",
              "enum": [
                "Pending",
                "Available",
                "Unavailable"
              ],
              "x-ms-enum": {
                "name": "ResourceOperationStatusState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The resource is pending."
                  },
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "The resource is available."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "The resource is unavailable."
                  }
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "Reason for state."
            }
          },
          "required": [
            "state"
          ]
        },
        "zones": {
          "type": "array",
          "description": "List of availability zones that resources can be created in.",
          "maxItems": 3,
          "items": {
            "type": "string",
            "description": "Availability Zones",
            "enum": [
              "1",
              "2",
              "3"
            ],
            "x-ms-enum": {
              "name": "Zone",
              "modelAsString": true,
              "values": [
                {
                  "name": "Zone1",
                  "value": "1",
                  "description": "First availability zone."
                },
                {
                  "name": "Zone2",
                  "value": "2",
                  "description": "Second availability zone."
                },
                {
                  "name": "Zone3",
                  "value": "3",
                  "description": "Third availability zone."
                }
              ]
            }
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "resources": {
          "description": "Resources represent the resources the pool should have.",
          "type": "object",
          "properties": {
            "requests": {
              "description": "Requests for capacity for the pool.",
              "type": "object",
              "properties": {
                "storage": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Requested capacity of the pool in GiB.",
                  "default": 1024,
                  "minimum": 1024,
                  "maximum": 65536
                }
              }
            }
          }
        },
        "poolType": {
          "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
          "type": "object",
          "properties": {
            "azureDisk": {
              "description": "Disk Pool Properties",
              "type": "object",
              "properties": {
                "resourceGroup": {
                  "type": "string",
                  "description": "Managed resource group for the pool.",
                  "readOnly": true
                },
                "skuName": {
                  "description": "Sku name",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Premium_LRS",
                    "Standard_LRS",
                    "StandardSSD_LRS",
                    "UltraSSD_LRS",
                    "Premium_ZRS",
                    "PremiumV2_LRS",
                    "StandardSSD_ZRS"
                  ],
                  "x-ms-enum": {
                    "name": "AzureDiskSkuName",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Premium_LRS",
                        "value": "Premium_LRS",
                        "description": "Premium_LRS SKU"
                      },
                      {
                        "name": "Standard_LRS",
                        "value": "Standard_LRS",
                        "description": "Standard_LRS SKU"
                      },
                      {
                        "name": "StandardSSD_LRS",
                        "value": "StandardSSD_LRS",
                        "description": "StandardSSD_LRS SKU"
                      },
                      {
                        "name": "UltraSSD_LRS",
                        "value": "UltraSSD_LRS",
                        "description": "UltraSSD_LRS SKU"
                      },
                      {
                        "name": "Premium_ZRS",
                        "value": "Premium_ZRS",
                        "description": "Premium_ZRS SKU"
                      },
                      {
                        "name": "PremiumV2_LRS",
                        "value": "PremiumV2_LRS",
                        "description": "PremiumV2_LRS SKU"
                      },
                      {
                        "name": "StandardSSD_ZRS",
                        "value": "StandardSSD_ZRS",
                        "description": "StandardSSD_ZRS SKU"
                      }
                    ]
                  }
                },
                "encryption": {
                  "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "keyName": {
                      "type": "string",
                      "description": "The name of the key vault key."
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "The URI of the key vault."
                    },
                    "identity": {
                      "description": "The managed service identities assigned to this resource.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                          "readOnly": true
                        },
                        "tenantId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                          "enum": [
                            "None",
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "ManagedServiceIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "title": "User-Assigned Identities",
                          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                          "additionalProperties": {
                            "type": "object",
                            "description": "User assigned identity properties",
                            "properties": {
                              "principalId": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The principal ID of the assigned identity.",
                                "readOnly": true
                              },
                              "clientId": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The client ID of the assigned identity.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "keyName",
                    "keyVaultUri"
                  ]
                },
                "disks": {
                  "type": "array",
                  "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                  "items": {
                    "type": "object",
                    "description": "Model for disk for that pool is using",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Reference is the location of the disk in an external system."
                      }
                    },
                    "required": [
                      "id",
                      "reference"
                    ]
                  }
                }
              }
            },
            "elasticSan": {
              "description": "Elastic San Pool Properties",
              "type": "object",
              "properties": {
                "resourceGroup": {
                  "type": "string",
                  "description": "Managed resource group for the pool.",
                  "readOnly": true
                },
                "skuName": {
                  "description": "Sku name",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Premium_LRS",
                    "Premium_ZRS"
                  ],
                  "x-ms-enum": {
                    "name": "ElasticSanSkuName",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Premium_LRS",
                        "value": "Premium_LRS",
                        "description": "Premium_LRS SKU"
                      },
                      {
                        "name": "Premium_ZRS",
                        "value": "Premium_ZRS",
                        "description": "Premium_ZRS SKU"
                      }
                    ]
                  }
                },
                "encryption": {
                  "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "keyName": {
                      "type": "string",
                      "description": "The name of the key vault key."
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "The URI of the key vault."
                    },
                    "identity": {
                      "description": "The managed service identities assigned to this resource.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                          "readOnly": true
                        },
                        "tenantId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                          "enum": [
                            "None",
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned, UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "ManagedServiceIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "title": "User-Assigned Identities",
                          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                          "additionalProperties": {
                            "type": "object",
                            "description": "User assigned identity properties",
                            "properties": {
                              "principalId": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The principal ID of the assigned identity.",
                                "readOnly": true
                              },
                              "clientId": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The client ID of the assigned identity.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "keyName",
                    "keyVaultUri"
                  ]
                }
              }
            },
            "ephemeralDisk": {
              "description": "Ephemeral Pool Properties",
              "type": "object",
              "properties": {
                "replicas": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The number of data copies. Default 3.",
                  "default": 3,
                  "minimum": 1,
                  "maximum": 3
                },
                "disks": {
                  "type": "array",
                  "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                  "items": {
                    "type": "object",
                    "description": "Model for disk for that pool is using",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Reference is the location of the disk in an external system."
                      }
                    },
                    "required": [
                      "id",
                      "reference"
                    ]
                  }
                }
              }
            }
          }
        },
        "reclaimPolicy": {
          "description": "ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Delete",
            "Retain"
          ],
          "x-ms-enum": {
            "name": "ReclaimPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Delete",
                "value": "Delete",
                "description": "Delete resource"
              },
              {
                "name": "Retain",
                "value": "Retain",
                "description": "Retain resource"
              }
            ]
          }
        },
        "assignments": {
          "type": "array",
          "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
          "items": {
            "type": "object",
            "description": "Assignment Properties",
            "properties": {
              "status": {
                "description": "Indicates if the assignment is in a usable state",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "state": {
                    "description": "State of the assignment resource",
                    "type": "string",
                    "enum": [
                      "Assigning",
                      "Assigned",
                      "Unassigning",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "AssignmentStatusState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Assigning",
                          "value": "Assigning",
                          "description": "The assignment of the pool to the resource is in progress"
                        },
                        {
                          "name": "Assigned",
                          "value": "Assigned",
                          "description": "The assignment to the pool was successful."
                        },
                        {
                          "name": "Unassigning",
                          "value": "Unassigning",
                          "description": "The pool is being unassigned."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The operation of assigning or unassigning the pool failed."
                        }
                      ]
                    }
                  },
                  "message": {
                    "type": "string",
                    "description": "Reason for the status"
                  }
                },
                "required": [
                  "state"
                ]
              },
              "id": {
                "description": "Resource id for the assigned resource",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.ContainerService/managedClusters"
                    }
                  ]
                }
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "required": [
        "poolType"
      ]
    },
    "PoolType": {
      "type": "object",
      "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan",
      "properties": {
        "azureDisk": {
          "description": "Disk Pool Properties",
          "type": "object",
          "properties": {
            "resourceGroup": {
              "type": "string",
              "description": "Managed resource group for the pool.",
              "readOnly": true
            },
            "skuName": {
              "description": "Sku name",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Premium_LRS",
                "Standard_LRS",
                "StandardSSD_LRS",
                "UltraSSD_LRS",
                "Premium_ZRS",
                "PremiumV2_LRS",
                "StandardSSD_ZRS"
              ],
              "x-ms-enum": {
                "name": "AzureDiskSkuName",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Premium_LRS",
                    "value": "Premium_LRS",
                    "description": "Premium_LRS SKU"
                  },
                  {
                    "name": "Standard_LRS",
                    "value": "Standard_LRS",
                    "description": "Standard_LRS SKU"
                  },
                  {
                    "name": "StandardSSD_LRS",
                    "value": "StandardSSD_LRS",
                    "description": "StandardSSD_LRS SKU"
                  },
                  {
                    "name": "UltraSSD_LRS",
                    "value": "UltraSSD_LRS",
                    "description": "UltraSSD_LRS SKU"
                  },
                  {
                    "name": "Premium_ZRS",
                    "value": "Premium_ZRS",
                    "description": "Premium_ZRS SKU"
                  },
                  {
                    "name": "PremiumV2_LRS",
                    "value": "PremiumV2_LRS",
                    "description": "PremiumV2_LRS SKU"
                  },
                  {
                    "name": "StandardSSD_ZRS",
                    "value": "StandardSSD_ZRS",
                    "description": "StandardSSD_ZRS SKU"
                  }
                ]
              }
            },
            "encryption": {
              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "The name of the key vault key."
                },
                "keyVaultUri": {
                  "type": "string",
                  "description": "The URI of the key vault."
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "keyName",
                "keyVaultUri"
              ]
            },
            "disks": {
              "type": "array",
              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
              "items": {
                "type": "object",
                "description": "Model for disk for that pool is using",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                  },
                  "reference": {
                    "type": "string",
                    "description": "Reference is the location of the disk in an external system."
                  }
                },
                "required": [
                  "id",
                  "reference"
                ]
              }
            }
          }
        },
        "elasticSan": {
          "description": "Elastic San Pool Properties",
          "type": "object",
          "properties": {
            "resourceGroup": {
              "type": "string",
              "description": "Managed resource group for the pool.",
              "readOnly": true
            },
            "skuName": {
              "description": "Sku name",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Premium_LRS",
                "Premium_ZRS"
              ],
              "x-ms-enum": {
                "name": "ElasticSanSkuName",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Premium_LRS",
                    "value": "Premium_LRS",
                    "description": "Premium_LRS SKU"
                  },
                  {
                    "name": "Premium_ZRS",
                    "value": "Premium_ZRS",
                    "description": "Premium_ZRS SKU"
                  }
                ]
              }
            },
            "encryption": {
              "description": "Encryption specifies the encryption configuration for the Azure Disk pool",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "The name of the key vault key."
                },
                "keyVaultUri": {
                  "type": "string",
                  "description": "The URI of the key vault."
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "keyName",
                "keyVaultUri"
              ]
            }
          }
        },
        "ephemeralDisk": {
          "description": "Ephemeral Pool Properties",
          "type": "object",
          "properties": {
            "replicas": {
              "type": "integer",
              "format": "int64",
              "description": "The number of data copies. Default 3.",
              "default": 3,
              "minimum": 1,
              "maximum": 3
            },
            "disks": {
              "type": "array",
              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
              "items": {
                "type": "object",
                "description": "Model for disk for that pool is using",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                  },
                  "reference": {
                    "type": "string",
                    "description": "Reference is the location of the disk in an external system."
                  }
                },
                "required": [
                  "id",
                  "reference"
                ]
              }
            }
          }
        }
      }
    },
    "PoolTypeUpdate": {
      "type": "object",
      "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan",
      "properties": {
        "azureDisk": {
          "description": "Disk Pool Properties",
          "type": "object",
          "properties": {
            "disks": {
              "type": "array",
              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
              "items": {
                "type": "object",
                "description": "Model for disk for that pool is using",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                  },
                  "reference": {
                    "type": "string",
                    "description": "Reference is the location of the disk in an external system."
                  }
                },
                "required": [
                  "id",
                  "reference"
                ]
              }
            }
          }
        },
        "elasticSan": {
          "description": "Elastic San Pool Properties",
          "type": "object"
        },
        "ephemeralDisk": {
          "description": "Ephemeral Pool Properties",
          "type": "object",
          "properties": {
            "replicas": {
              "type": "integer",
              "format": "int64",
              "description": "The number of data copies. Default 3.",
              "default": 3,
              "minimum": 1,
              "maximum": 3
            },
            "disks": {
              "type": "array",
              "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
              "items": {
                "type": "object",
                "description": "Model for disk for that pool is using",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                  },
                  "reference": {
                    "type": "string",
                    "description": "Reference is the location of the disk in an external system."
                  }
                },
                "required": [
                  "id",
                  "reference"
                ]
              }
            }
          }
        }
      }
    },
    "PoolUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Pool.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resources": {
              "description": "Resources represent the resources the pool should have.",
              "type": "object",
              "properties": {
                "requests": {
                  "description": "Requests for capacity for the pool.",
                  "type": "object",
                  "properties": {
                    "storage": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Requested capacity of the pool in GiB.",
                      "default": 1024,
                      "minimum": 1024,
                      "maximum": 65536
                    }
                  }
                }
              }
            },
            "poolType": {
              "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
              "type": "object",
              "properties": {
                "azureDisk": {
                  "description": "Disk Pool Properties",
                  "type": "object",
                  "properties": {
                    "disks": {
                      "type": "array",
                      "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                      "items": {
                        "type": "object",
                        "description": "Model for disk for that pool is using",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                          },
                          "reference": {
                            "type": "string",
                            "description": "Reference is the location of the disk in an external system."
                          }
                        },
                        "required": [
                          "id",
                          "reference"
                        ]
                      }
                    }
                  }
                },
                "elasticSan": {
                  "description": "Elastic San Pool Properties",
                  "type": "object"
                },
                "ephemeralDisk": {
                  "description": "Ephemeral Pool Properties",
                  "type": "object",
                  "properties": {
                    "replicas": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The number of data copies. Default 3.",
                      "default": 3,
                      "minimum": 1,
                      "maximum": 3
                    },
                    "disks": {
                      "type": "array",
                      "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                      "items": {
                        "type": "object",
                        "description": "Model for disk for that pool is using",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                          },
                          "reference": {
                            "type": "string",
                            "description": "Reference is the location of the disk in an external system."
                          }
                        },
                        "required": [
                          "id",
                          "reference"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "assignments": {
              "type": "array",
              "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
              "items": {
                "type": "object",
                "description": "Assignment Properties",
                "properties": {
                  "status": {
                    "description": "Indicates if the assignment is in a usable state",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "State of the assignment resource",
                        "type": "string",
                        "enum": [
                          "Assigning",
                          "Assigned",
                          "Unassigning",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "AssignmentStatusState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Assigning",
                              "value": "Assigning",
                              "description": "The assignment of the pool to the resource is in progress"
                            },
                            {
                              "name": "Assigned",
                              "value": "Assigned",
                              "description": "The assignment to the pool was successful."
                            },
                            {
                              "name": "Unassigning",
                              "value": "Unassigning",
                              "description": "The pool is being unassigned."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "The operation of assigning or unassigning the pool failed."
                            }
                          ]
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "Reason for the status"
                      }
                    },
                    "required": [
                      "state"
                    ]
                  },
                  "id": {
                    "description": "Resource id for the assigned resource",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ContainerService/managedClusters"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        }
      }
    },
    "PoolUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Pool.",
      "properties": {
        "resources": {
          "description": "Resources represent the resources the pool should have.",
          "type": "object",
          "properties": {
            "requests": {
              "description": "Requests for capacity for the pool.",
              "type": "object",
              "properties": {
                "storage": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Requested capacity of the pool in GiB.",
                  "default": 1024,
                  "minimum": 1024,
                  "maximum": 65536
                }
              }
            }
          }
        },
        "poolType": {
          "description": "Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.",
          "type": "object",
          "properties": {
            "azureDisk": {
              "description": "Disk Pool Properties",
              "type": "object",
              "properties": {
                "disks": {
                  "type": "array",
                  "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                  "items": {
                    "type": "object",
                    "description": "Model for disk for that pool is using",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Reference is the location of the disk in an external system."
                      }
                    },
                    "required": [
                      "id",
                      "reference"
                    ]
                  }
                }
              }
            },
            "elasticSan": {
              "description": "Elastic San Pool Properties",
              "type": "object"
            },
            "ephemeralDisk": {
              "description": "Ephemeral Pool Properties",
              "type": "object",
              "properties": {
                "replicas": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The number of data copies. Default 3.",
                  "default": 3,
                  "minimum": 1,
                  "maximum": 3
                },
                "disks": {
                  "type": "array",
                  "description": "Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).",
                  "items": {
                    "type": "object",
                    "description": "Model for disk for that pool is using",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Reference is the location of the disk in an external system."
                      }
                    },
                    "required": [
                      "id",
                      "reference"
                    ]
                  }
                }
              }
            }
          }
        },
        "assignments": {
          "type": "array",
          "description": "List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.",
          "items": {
            "type": "object",
            "description": "Assignment Properties",
            "properties": {
              "status": {
                "description": "Indicates if the assignment is in a usable state",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "state": {
                    "description": "State of the assignment resource",
                    "type": "string",
                    "enum": [
                      "Assigning",
                      "Assigned",
                      "Unassigning",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "AssignmentStatusState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Assigning",
                          "value": "Assigning",
                          "description": "The assignment of the pool to the resource is in progress"
                        },
                        {
                          "name": "Assigned",
                          "value": "Assigned",
                          "description": "The assignment to the pool was successful."
                        },
                        {
                          "name": "Unassigning",
                          "value": "Unassigning",
                          "description": "The pool is being unassigned."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The operation of assigning or unassigning the pool failed."
                        }
                      ]
                    }
                  },
                  "message": {
                    "type": "string",
                    "description": "Reason for the status"
                  }
                },
                "required": [
                  "state"
                ]
              },
              "id": {
                "description": "Resource id for the assigned resource",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.ContainerService/managedClusters"
                    }
                  ]
                }
              }
            },
            "required": [
              "id"
            ]
          }
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is being provisioned"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource create request has been accepted"
          }
        ]
      }
    },
    "ReclaimPolicy": {
      "type": "string",
      "description": "Reclaim policy",
      "enum": [
        "Delete",
        "Retain"
      ],
      "x-ms-enum": {
        "name": "ReclaimPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Delete",
            "value": "Delete",
            "description": "Delete resource"
          },
          {
            "name": "Retain",
            "value": "Retain",
            "description": "Retain resource"
          }
        ]
      }
    },
    "Requests": {
      "type": "object",
      "description": "Requests for capacity for the pool.",
      "properties": {
        "storage": {
          "type": "integer",
          "format": "int64",
          "description": "Requested capacity of the pool in GiB.",
          "default": 1024,
          "minimum": 1024,
          "maximum": 65536
        }
      }
    },
    "ResourceOperationStatusState": {
      "type": "string",
      "description": "State of the resource.",
      "enum": [
        "Pending",
        "Available",
        "Unavailable"
      ],
      "x-ms-enum": {
        "name": "ResourceOperationStatusState",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The resource is pending."
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "The resource is available."
          },
          {
            "name": "Unavailable",
            "value": "Unavailable",
            "description": "The resource is unavailable."
          }
        ]
      }
    },
    "ResourceOperationalStatus": {
      "type": "object",
      "description": "Status of the resource",
      "properties": {
        "state": {
          "description": "state of the resource",
          "type": "string",
          "enum": [
            "Pending",
            "Available",
            "Unavailable"
          ],
          "x-ms-enum": {
            "name": "ResourceOperationStatusState",
            "modelAsString": true,
            "values": [
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The resource is pending."
              },
              {
                "name": "Available",
                "value": "Available",
                "description": "The resource is available."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "The resource is unavailable."
              }
            ]
          }
        },
        "message": {
          "type": "string",
          "description": "Reason for state."
        }
      },
      "required": [
        "state"
      ]
    },
    "Resources": {
      "type": "object",
      "description": "Resource Requests for the pool.",
      "properties": {
        "requests": {
          "description": "Requests for capacity for the pool.",
          "type": "object",
          "properties": {
            "storage": {
              "type": "integer",
              "format": "int64",
              "description": "Requested capacity of the pool in GiB.",
              "default": 1024,
              "minimum": 1024,
              "maximum": 65536
            }
          }
        }
      }
    },
    "Snapshot": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            },
            "status": {
              "description": "The status of the resource.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "state": {
                  "description": "state of the resource",
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Available",
                    "Unavailable"
                  ],
                  "x-ms-enum": {
                    "name": "ResourceOperationStatusState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Pending",
                        "value": "Pending",
                        "description": "The resource is pending."
                      },
                      {
                        "name": "Available",
                        "value": "Available",
                        "description": "The resource is available."
                      },
                      {
                        "name": "Unavailable",
                        "value": "Unavailable",
                        "description": "The resource is unavailable."
                      }
                    ]
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Reason for state."
                }
              },
              "required": [
                "state"
              ]
            },
            "source": {
              "type": "string",
              "description": "Reference to the source volume",
              "minLength": 3,
              "maxLength": 253,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          },
          "required": [
            "source"
          ]
        }
      }
    },
    "SnapshotListResult": {
      "type": "object",
      "description": "The response of a Snapshot list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Snapshot items on this page",
          "items": {
            "type": "object",
            "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is being provisioned"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted"
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource create request has been accepted"
                        }
                      ]
                    }
                  },
                  "status": {
                    "description": "The status of the resource.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "state of the resource",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Available",
                          "Unavailable"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceOperationStatusState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Pending",
                              "value": "Pending",
                              "description": "The resource is pending."
                            },
                            {
                              "name": "Available",
                              "value": "Available",
                              "description": "The resource is available."
                            },
                            {
                              "name": "Unavailable",
                              "value": "Unavailable",
                              "description": "The resource is unavailable."
                            }
                          ]
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "Reason for state."
                      }
                    },
                    "required": [
                      "state"
                    ]
                  },
                  "source": {
                    "type": "string",
                    "description": "Reference to the source volume",
                    "minLength": 3,
                    "maxLength": 253,
                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  }
                },
                "required": [
                  "source"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SnapshotProperties": {
      "type": "object",
      "description": "Volume Snapshot Properties",
      "properties": {
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is being provisioned"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource create request has been accepted"
              }
            ]
          }
        },
        "status": {
          "description": "The status of the resource.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "state": {
              "description": "state of the resource",
              "type": "string",
              "enum": [
                "Pending",
                "Available",
                "Unavailable"
              ],
              "x-ms-enum": {
                "name": "ResourceOperationStatusState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The resource is pending."
                  },
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "The resource is available."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "The resource is unavailable."
                  }
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "Reason for state."
            }
          },
          "required": [
            "state"
          ]
        },
        "source": {
          "type": "string",
          "description": "Reference to the source volume",
          "minLength": 3,
          "maxLength": 253,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "source"
      ]
    },
    "Volume": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            },
            "status": {
              "description": "The status of the resource.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "state": {
                  "description": "state of the resource",
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Available",
                    "Unavailable"
                  ],
                  "x-ms-enum": {
                    "name": "ResourceOperationStatusState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Pending",
                        "value": "Pending",
                        "description": "The resource is pending."
                      },
                      {
                        "name": "Available",
                        "value": "Available",
                        "description": "The resource is available."
                      },
                      {
                        "name": "Unavailable",
                        "value": "Unavailable",
                        "description": "The resource is unavailable."
                      }
                    ]
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Reason for state."
                }
              },
              "required": [
                "state"
              ]
            },
            "labels": {
              "type": "object",
              "description": "String KV pairs indicating labels",
              "additionalProperties": {
                "type": "string"
              }
            },
            "capacityGiB": {
              "type": "integer",
              "format": "int64",
              "description": "Requested capacity in GiB",
              "minimum": 1,
              "maximum": 65536
            },
            "volumeType": {
              "description": "Properties of the volume",
              "readOnly": true,
              "type": "object",
              "properties": {
                "elasticSan": {
                  "description": "Properties of the ElasticSAN iSCSI target",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "targetIqn": {
                      "type": "string",
                      "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
                    },
                    "targetPortalHostname": {
                      "type": "string",
                      "description": "iSCSI Target Portal Host Name"
                    },
                    "targetPortalPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "iSCSI Target Portal Port"
                    }
                  },
                  "required": [
                    "targetIqn",
                    "targetPortalHostname",
                    "targetPortalPort"
                  ]
                }
              }
            }
          },
          "required": [
            "labels",
            "capacityGiB"
          ]
        }
      }
    },
    "VolumeListResult": {
      "type": "object",
      "description": "The response of a Volume list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Volume items on this page",
          "items": {
            "type": "object",
            "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is being provisioned"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted"
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource create request has been accepted"
                        }
                      ]
                    }
                  },
                  "status": {
                    "description": "The status of the resource.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "state": {
                        "description": "state of the resource",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Available",
                          "Unavailable"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceOperationStatusState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Pending",
                              "value": "Pending",
                              "description": "The resource is pending."
                            },
                            {
                              "name": "Available",
                              "value": "Available",
                              "description": "The resource is available."
                            },
                            {
                              "name": "Unavailable",
                              "value": "Unavailable",
                              "description": "The resource is unavailable."
                            }
                          ]
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "Reason for state."
                      }
                    },
                    "required": [
                      "state"
                    ]
                  },
                  "labels": {
                    "type": "object",
                    "description": "String KV pairs indicating labels",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "capacityGiB": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Requested capacity in GiB",
                    "minimum": 1,
                    "maximum": 65536
                  },
                  "volumeType": {
                    "description": "Properties of the volume",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "elasticSan": {
                        "description": "Properties of the ElasticSAN iSCSI target",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "targetIqn": {
                            "type": "string",
                            "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
                          },
                          "targetPortalHostname": {
                            "type": "string",
                            "description": "iSCSI Target Portal Host Name"
                          },
                          "targetPortalPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "iSCSI Target Portal Port"
                          }
                        },
                        "required": [
                          "targetIqn",
                          "targetPortalHostname",
                          "targetPortalPort"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "labels",
                  "capacityGiB"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VolumeProperties": {
      "type": "object",
      "description": "Volume Properties",
      "properties": {
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is being provisioned"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource create request has been accepted"
              }
            ]
          }
        },
        "status": {
          "description": "The status of the resource.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "state": {
              "description": "state of the resource",
              "type": "string",
              "enum": [
                "Pending",
                "Available",
                "Unavailable"
              ],
              "x-ms-enum": {
                "name": "ResourceOperationStatusState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The resource is pending."
                  },
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "The resource is available."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "The resource is unavailable."
                  }
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "Reason for state."
            }
          },
          "required": [
            "state"
          ]
        },
        "labels": {
          "type": "object",
          "description": "String KV pairs indicating labels",
          "additionalProperties": {
            "type": "string"
          }
        },
        "capacityGiB": {
          "type": "integer",
          "format": "int64",
          "description": "Requested capacity in GiB",
          "minimum": 1,
          "maximum": 65536
        },
        "volumeType": {
          "description": "Properties of the volume",
          "readOnly": true,
          "type": "object",
          "properties": {
            "elasticSan": {
              "description": "Properties of the ElasticSAN iSCSI target",
              "readOnly": true,
              "type": "object",
              "properties": {
                "targetIqn": {
                  "type": "string",
                  "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
                },
                "targetPortalHostname": {
                  "type": "string",
                  "description": "iSCSI Target Portal Host Name"
                },
                "targetPortalPort": {
                  "type": "integer",
                  "format": "int32",
                  "description": "iSCSI Target Portal Port"
                }
              },
              "required": [
                "targetIqn",
                "targetPortalHostname",
                "targetPortalPort"
              ]
            }
          }
        }
      },
      "required": [
        "labels",
        "capacityGiB"
      ]
    },
    "VolumeType": {
      "type": "object",
      "description": "Properties of the volume",
      "properties": {
        "elasticSan": {
          "description": "Properties of the ElasticSAN iSCSI target",
          "readOnly": true,
          "type": "object",
          "properties": {
            "targetIqn": {
              "type": "string",
              "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\""
            },
            "targetPortalHostname": {
              "type": "string",
              "description": "iSCSI Target Portal Host Name"
            },
            "targetPortalPort": {
              "type": "integer",
              "format": "int32",
              "description": "iSCSI Target Portal Port"
            }
          },
          "required": [
            "targetIqn",
            "targetPortalHostname",
            "targetPortalPort"
          ]
        }
      }
    },
    "VolumeUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Volume.",
      "properties": {
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "labels": {
              "type": "object",
              "description": "String KV pairs indicating labels",
              "additionalProperties": {
                "type": "string"
              }
            },
            "capacityGiB": {
              "type": "integer",
              "format": "int64",
              "description": "Requested capacity in GiB",
              "minimum": 1,
              "maximum": 65536
            }
          }
        }
      }
    },
    "VolumeUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Volume.",
      "properties": {
        "labels": {
          "type": "object",
          "description": "String KV pairs indicating labels",
          "additionalProperties": {
            "type": "string"
          }
        },
        "capacityGiB": {
          "type": "integer",
          "format": "int64",
          "description": "Requested capacity in GiB",
          "minimum": 1,
          "maximum": 65536
        }
      }
    },
    "Zone": {
      "type": "string",
      "description": "Availability Zones",
      "enum": [
        "1",
        "2",
        "3"
      ],
      "x-ms-enum": {
        "name": "Zone",
        "modelAsString": true,
        "values": [
          {
            "name": "Zone1",
            "value": "1",
            "description": "First availability zone."
          },
          {
            "name": "Zone2",
            "value": "2",
            "description": "Second availability zone."
          },
          {
            "name": "Zone3",
            "value": "3",
            "description": "Third availability zone."
          }
        ]
      }
    }
  },
  "parameters": {}
}