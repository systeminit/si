{
  "swagger": "2.0",
  "info": {
    "title": "Azure servicebus",
    "version": "2024-01-01",
    "description": "Azure servicebus service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules": {
      "get": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_ListAuthorizationRules",
        "description": "Gets the authorization rules for a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639376.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rules returned successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "rights": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Manage",
                                "Send",
                                "Listen"
                              ],
                              "x-ms-enum": {
                                "name": "AccessRights",
                                "modelAsString": false
                              }
                            },
                            "description": "The rights associated with the rule."
                          }
                        },
                        "required": [
                          "rights"
                        ],
                        "description": "AuthorizationRule properties."
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of a namespace authorization rule."
                  },
                  "description": "Result of the List Authorization Rules operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Authorization Rules."
                }
              },
              "description": "The response to the List Namespace operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "description": "Creates or updates an authorization rule for a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639410.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            },
            "description": "The shared access authorization rule."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "description": "Deletes a namespace authorization rule.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639417.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_GetAuthorizationRule",
        "description": "Gets an authorization rule for a namespace by rule name.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639392.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_ListKeys",
        "description": "Gets the primary and secondary connection strings for the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639398.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace authorization rule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace authorization rule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the authorization rule."
                }
              },
              "description": "Namespace/ServiceBus Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_RegenerateKeys",
        "description": "Regenerates the primary or secondary connection strings for the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt718977.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "keyType": {
                  "type": "string",
                  "description": "The access key to regenerate.",
                  "enum": [
                    "PrimaryKey",
                    "SecondaryKey"
                  ],
                  "x-ms-enum": {
                    "name": "KeyType",
                    "modelAsString": false
                  }
                },
                "key": {
                  "type": "string",
                  "description": "Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType"
                }
              },
              "required": [
                "keyType"
              ],
              "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset."
            },
            "description": "Parameters supplied to regenerate the authorization rule."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule successfully regenerated.",
            "schema": {
              "type": "object",
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace authorization rule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace authorization rule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the authorization rule."
                }
              },
              "description": "Namespace/ServiceBus Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules": {
      "get": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_ListAuthorizationRules",
        "description": "Gets all authorization rules for a queue.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705607.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The queue name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rules successfully returned.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "rights": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Manage",
                                "Send",
                                "Listen"
                              ],
                              "x-ms-enum": {
                                "name": "AccessRights",
                                "modelAsString": false
                              }
                            },
                            "description": "The rights associated with the rule."
                          }
                        },
                        "required": [
                          "rights"
                        ],
                        "description": "AuthorizationRule properties."
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of a namespace authorization rule."
                  },
                  "description": "Result of the List Authorization Rules operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Authorization Rules."
                }
              },
              "description": "The response to the List Namespace operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_CreateOrUpdateAuthorizationRule",
        "description": "Creates an authorization rule for a queue.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The queue name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            },
            "description": "The shared access authorization rule."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_DeleteAuthorizationRule",
        "description": "Deletes a queue authorization rule.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705609.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The queue name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_GetAuthorizationRule",
        "description": "Gets an authorization rule for a queue by rule name.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705611.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The queue name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}/ListKeys": {
      "post": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_ListKeys",
        "description": "Primary and secondary connection strings to the queue.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705608.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The queue name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace authorization rule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace authorization rule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the authorization rule."
                }
              },
              "description": "Namespace/ServiceBus Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_RegenerateKeys",
        "description": "Regenerates the primary or secondary connection strings to the queue.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705606.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The queue name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "keyType": {
                  "type": "string",
                  "description": "The access key to regenerate.",
                  "enum": [
                    "PrimaryKey",
                    "SecondaryKey"
                  ],
                  "x-ms-enum": {
                    "name": "KeyType",
                    "modelAsString": false
                  }
                },
                "key": {
                  "type": "string",
                  "description": "Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType"
                }
              },
              "required": [
                "keyType"
              ],
              "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset."
            },
            "description": "Parameters supplied to regenerate the authorization rule."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully regenerated.",
            "schema": {
              "type": "object",
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace authorization rule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace authorization rule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the authorization rule."
                }
              },
              "description": "Namespace/ServiceBus Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules": {
      "get": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_ListAuthorizationRules",
        "description": "Gets authorization rules for a topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720681.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rules successfully returned.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "rights": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Manage",
                                "Send",
                                "Listen"
                              ],
                              "x-ms-enum": {
                                "name": "AccessRights",
                                "modelAsString": false
                              }
                            },
                            "description": "The rights associated with the rule."
                          }
                        },
                        "required": [
                          "rights"
                        ],
                        "description": "AuthorizationRule properties."
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of a namespace authorization rule."
                  },
                  "description": "Result of the List Authorization Rules operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Authorization Rules."
                }
              },
              "description": "The response to the List Namespace operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_CreateOrUpdateAuthorizationRule",
        "description": "Creates an authorization rule for the specified topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720678.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            },
            "description": "The shared access authorization rule."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Topic authorization rule successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            }
          }
        }
      },
      "get": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_GetAuthorizationRule",
        "description": "Returns the specified authorization rule.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720676.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Topic authorization rule returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_DeleteAuthorizationRule",
        "description": "Deletes a topic authorization rule.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720681.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Topic authorization rule successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}/ListKeys": {
      "post": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_ListKeys",
        "description": "Gets the primary and secondary connection strings for the topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720677.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace authorization rule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace authorization rule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the authorization rule."
                }
              },
              "description": "Namespace/ServiceBus Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_RegenerateKeys",
        "description": "Regenerates primary or secondary connection strings for the topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720679.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "keyType": {
                  "type": "string",
                  "description": "The access key to regenerate.",
                  "enum": [
                    "PrimaryKey",
                    "SecondaryKey"
                  ],
                  "x-ms-enum": {
                    "name": "KeyType",
                    "modelAsString": false
                  }
                },
                "key": {
                  "type": "string",
                  "description": "Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType"
                }
              },
              "required": [
                "keyType"
              ],
              "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset."
            },
            "description": "Parameters supplied to regenerate the authorization rule."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully regenerated.",
            "schema": {
              "type": "object",
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace authorization rule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace authorization rule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the authorization rule."
                }
              },
              "description": "Namespace/ServiceBus Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules": {
      "get": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_ListAuthorizationRules",
        "description": "Gets the authorization rules for a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639376.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "DisasterRecoveryConfigs authorization rules returned successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "rights": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Manage",
                                "Send",
                                "Listen"
                              ],
                              "x-ms-enum": {
                                "name": "AccessRights",
                                "modelAsString": false
                              }
                            },
                            "description": "The rights associated with the rule."
                          }
                        },
                        "required": [
                          "rights"
                        ],
                        "description": "AuthorizationRule properties."
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of a namespace authorization rule."
                  },
                  "description": "Result of the List Authorization Rules operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Authorization Rules."
                }
              },
              "description": "The response to the List Namespace operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_GetAuthorizationRule",
        "description": "Gets an authorization rule for a namespace by rule name.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639392.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "DisasterRecoveryConfigs authorization rule returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "rights": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Manage",
                          "Send",
                          "Listen"
                        ],
                        "x-ms-enum": {
                          "name": "AccessRights",
                          "modelAsString": false
                        }
                      },
                      "description": "The rights associated with the rule."
                    }
                  },
                  "required": [
                    "rights"
                  ],
                  "description": "AuthorizationRule properties."
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of a namespace authorization rule."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_ListKeys",
        "description": "Gets the primary and secondary connection strings for the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639398.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The authorization rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "primaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the created namespace authorization rule."
                },
                "secondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary connection string of the created namespace authorization rule."
                },
                "aliasPrimaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Primary connection string of the alias if GEO DR is enabled"
                },
                "aliasSecondaryConnectionString": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Secondary  connection string of the alias if GEO DR is enabled"
                },
                "primaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "secondaryKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
                },
                "keyName": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A string that describes the authorization rule."
                }
              },
              "description": "Namespace/ServiceBus Connection String"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/CheckNameAvailability": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CheckNameAvailability",
        "description": "Check the give namespace name availability.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The Name to check the namespace name availability and The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number."
                }
              },
              "required": [
                "name"
              ],
              "description": "Description of a Check Name availability request properties."
            },
            "description": "Parameters to check availability of the given namespace name"
          }
        ],
        "responses": {
          "200": {
            "description": "check availability returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The detailed info regarding the reason associated with the namespace."
                },
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Value indicating namespace is availability, true if the namespace is available; otherwise, false."
                },
                "reason": {
                  "description": "The reason for unavailability of a namespace.",
                  "type": "string",
                  "enum": [
                    "None",
                    "InvalidName",
                    "SubscriptionIsDisabled",
                    "NameInUse",
                    "NameInLockdown",
                    "TooManyNamespaceInCurrentSubscription"
                  ],
                  "x-ms-enum": {
                    "name": "UnavailableReason",
                    "modelAsString": false
                  }
                }
              },
              "description": "Description of a Check Name availability request properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/CheckNameAvailability": {
      "post": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_CheckNameAvailability",
        "description": "Check the give namespace name availability.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The Name to check the namespace name availability and The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number."
                }
              },
              "required": [
                "name"
              ],
              "description": "Description of a Check Name availability request properties."
            },
            "description": "Parameters to check availability of the given namespace name"
          }
        ],
        "responses": {
          "200": {
            "description": "check availability returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The detailed info regarding the reason associated with the namespace."
                },
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Value indicating namespace is availability, true if the namespace is available; otherwise, false."
                },
                "reason": {
                  "description": "The reason for unavailability of a namespace.",
                  "type": "string",
                  "enum": [
                    "None",
                    "InvalidName",
                    "SubscriptionIsDisabled",
                    "NameInUse",
                    "NameInLockdown",
                    "TooManyNamespaceInCurrentSubscription"
                  ],
                  "x-ms-enum": {
                    "name": "UnavailableReason",
                    "modelAsString": false
                  }
                }
              },
              "description": "Description of a Check Name availability request properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs": {
      "get": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_List",
        "description": "Gets all Alias(Disaster Recovery configurations)",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Alias(Disaster Recovery configurations) for servicebus namespace",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                            "enum": [
                              "Accepted",
                              "Succeeded",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningStateDR",
                              "modelAsString": false
                            }
                          },
                          "pendingReplicationOperationsCount": {
                            "readOnly": true,
                            "format": "int64",
                            "type": "integer",
                            "description": "Number of entities pending to be replicated."
                          },
                          "partnerNamespace": {
                            "type": "string",
                            "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                          },
                          "alternateName": {
                            "type": "string",
                            "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                          },
                          "role": {
                            "readOnly": true,
                            "type": "string",
                            "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                            "enum": [
                              "Primary",
                              "PrimaryNotReplicating",
                              "Secondary"
                            ],
                            "x-ms-enum": {
                              "name": "RoleDisasterRecovery",
                              "modelAsString": false
                            }
                          }
                        },
                        "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
                  },
                  "description": "List of Alias(Disaster Recovery configurations)"
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)"
                }
              },
              "description": "The result of the List Alias(Disaster Recovery configuration) operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}": {
      "put": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_CreateOrUpdate",
        "description": "Creates or updates a new Alias(Disaster Recovery configuration)",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                      "enum": [
                        "Accepted",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateDR",
                        "modelAsString": false
                      }
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    },
                    "partnerNamespace": {
                      "type": "string",
                      "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "role": {
                      "readOnly": true,
                      "type": "string",
                      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                      "enum": [
                        "Primary",
                        "PrimaryNotReplicating",
                        "Secondary"
                      ],
                      "x-ms-enum": {
                        "name": "RoleDisasterRecovery",
                        "modelAsString": false
                      }
                    }
                  },
                  "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
            },
            "description": "Parameters required to create an Alias(Disaster Recovery configuration)"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Alias(Disaster Recovery configuration) successfully created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                      "enum": [
                        "Accepted",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateDR",
                        "modelAsString": false
                      }
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    },
                    "partnerNamespace": {
                      "type": "string",
                      "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "role": {
                      "readOnly": true,
                      "type": "string",
                      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                      "enum": [
                        "Primary",
                        "PrimaryNotReplicating",
                        "Secondary"
                      ],
                      "x-ms-enum": {
                        "name": "RoleDisasterRecovery",
                        "modelAsString": false
                      }
                    }
                  },
                  "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
            }
          },
          "201": {
            "description": "Alias(Disaster Recovery configuration) creation request received",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                      "enum": [
                        "Accepted",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateDR",
                        "modelAsString": false
                      }
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    },
                    "partnerNamespace": {
                      "type": "string",
                      "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "role": {
                      "readOnly": true,
                      "type": "string",
                      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                      "enum": [
                        "Primary",
                        "PrimaryNotReplicating",
                        "Secondary"
                      ],
                      "x-ms-enum": {
                        "name": "RoleDisasterRecovery",
                        "modelAsString": false
                      }
                    }
                  },
                  "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_Delete",
        "description": "Deletes an Alias(Disaster Recovery configuration)",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Alias(Disaster Recovery configuration) request accepted"
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_Get",
        "description": "Retrieves Alias(Disaster Recovery configuration) for primary or secondary namespace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Alias(Disaster Recovery configurations)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                      "enum": [
                        "Accepted",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningStateDR",
                        "modelAsString": false
                      }
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    },
                    "partnerNamespace": {
                      "type": "string",
                      "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                    },
                    "role": {
                      "readOnly": true,
                      "type": "string",
                      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                      "enum": [
                        "Primary",
                        "PrimaryNotReplicating",
                        "Secondary"
                      ],
                      "x-ms-enum": {
                        "name": "RoleDisasterRecovery",
                        "modelAsString": false
                      }
                    }
                  },
                  "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing": {
      "post": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_BreakPairing",
        "description": "This operation disables the Disaster Recovery and stops replicating changes from primary to secondary namespaces",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Break-Pairing operation is successful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover": {
      "post": {
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "operationId": "DisasterRecoveryConfigs_FailOver",
        "description": "Invokes GEO DR failover and reconfigure the alias to point to the secondary namespace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The Disaster Recovery configuration name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "IsSafeFailover": {
                      "type": "boolean",
                      "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary."
                    }
                  },
                  "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary."
                }
              },
              "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary."
            },
            "description": "Parameters required to create an Alias(Disaster Recovery configuration)"
          }
        ],
        "responses": {
          "200": {
            "description": "Failover operation is successful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues": {
      "get": {
        "tags": [
          "Queues"
        ],
        "operationId": "Queues_ListByNamespace",
        "description": "Gets the queues within a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639415.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "$skip",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Queues successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Queue Properties",
                        "type": "object",
                        "properties": {
                          "countDetails": {
                            "readOnly": true,
                            "description": "Message Count Details.",
                            "type": "object",
                            "properties": {
                              "activeMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of active messages in the queue, topic, or subscription."
                              },
                              "deadLetterMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of messages that are dead lettered."
                              },
                              "scheduledMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of scheduled messages."
                              },
                              "transferMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of messages transferred to another queue, topic, or subscription."
                              },
                              "transferDeadLetterMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of messages transferred into dead letters."
                              }
                            }
                          },
                          "createdAt": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The exact time the message was created."
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "The exact time the message was updated."
                          },
                          "accessedAt": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "Last time a message was sent, or the last time there was a receive request to this queue."
                          },
                          "sizeInBytes": {
                            "readOnly": true,
                            "format": "int64",
                            "type": "integer",
                            "description": "The size of the queue, in bytes."
                          },
                          "messageCount": {
                            "readOnly": true,
                            "format": "int64",
                            "type": "integer",
                            "description": "The number of messages in the queue."
                          },
                          "lockDuration": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
                          },
                          "maxSizeInMegabytes": {
                            "format": "int32",
                            "type": "integer",
                            "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024."
                          },
                          "maxMessageSizeInKilobytes": {
                            "format": "int64",
                            "type": "integer",
                            "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024."
                          },
                          "requiresDuplicateDetection": {
                            "type": "boolean",
                            "description": "A value indicating if this queue requires duplicate detection."
                          },
                          "requiresSession": {
                            "type": "boolean",
                            "description": "A value that indicates whether the queue supports the concept of sessions."
                          },
                          "defaultMessageTimeToLive": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                          },
                          "deadLetteringOnMessageExpiration": {
                            "type": "boolean",
                            "description": "A value that indicates whether this queue has dead letter support when a message expires."
                          },
                          "duplicateDetectionHistoryTimeWindow": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                          },
                          "maxDeliveryCount": {
                            "format": "int32",
                            "type": "integer",
                            "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10."
                          },
                          "status": {
                            "description": "Enumerates the possible values for the status of a messaging entity.",
                            "type": "string",
                            "enum": [
                              "Active",
                              "Disabled",
                              "Restoring",
                              "SendDisabled",
                              "ReceiveDisabled",
                              "Creating",
                              "Deleting",
                              "Renaming",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "EntityStatus",
                              "modelAsString": false
                            }
                          },
                          "enableBatchedOperations": {
                            "type": "boolean",
                            "description": "Value that indicates whether server-side batched operations are enabled."
                          },
                          "autoDeleteOnIdle": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
                          },
                          "enablePartitioning": {
                            "type": "boolean",
                            "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers."
                          },
                          "enableExpress": {
                            "type": "boolean",
                            "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
                          },
                          "forwardTo": {
                            "type": "string",
                            "description": "Queue/Topic name to forward the messages"
                          },
                          "forwardDeadLetteredMessagesTo": {
                            "type": "string",
                            "description": "Queue/Topic name to forward the Dead Letter message"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of queue Resource."
                  },
                  "description": "Result of the List Queues operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of queues."
                }
              },
              "description": "The response to the List Queues operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}": {
      "put": {
        "tags": [
          "Queues"
        ],
        "operationId": "Queues_CreateOrUpdate",
        "description": "Creates or updates a Service Bus queue. This operation is idempotent.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639395.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The queue name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Queue Properties",
                  "type": "object",
                  "properties": {
                    "countDetails": {
                      "readOnly": true,
                      "description": "Message Count Details.",
                      "type": "object",
                      "properties": {
                        "activeMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of active messages in the queue, topic, or subscription."
                        },
                        "deadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages that are dead lettered."
                        },
                        "scheduledMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of scheduled messages."
                        },
                        "transferMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred to another queue, topic, or subscription."
                        },
                        "transferDeadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred into dead letters."
                        }
                      }
                    },
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The exact time the message was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The exact time the message was updated."
                    },
                    "accessedAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Last time a message was sent, or the last time there was a receive request to this queue."
                    },
                    "sizeInBytes": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "The size of the queue, in bytes."
                    },
                    "messageCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "The number of messages in the queue."
                    },
                    "lockDuration": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
                    },
                    "maxSizeInMegabytes": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024."
                    },
                    "maxMessageSizeInKilobytes": {
                      "format": "int64",
                      "type": "integer",
                      "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024."
                    },
                    "requiresDuplicateDetection": {
                      "type": "boolean",
                      "description": "A value indicating if this queue requires duplicate detection."
                    },
                    "requiresSession": {
                      "type": "boolean",
                      "description": "A value that indicates whether the queue supports the concept of sessions."
                    },
                    "defaultMessageTimeToLive": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                    },
                    "deadLetteringOnMessageExpiration": {
                      "type": "boolean",
                      "description": "A value that indicates whether this queue has dead letter support when a message expires."
                    },
                    "duplicateDetectionHistoryTimeWindow": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                    },
                    "maxDeliveryCount": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10."
                    },
                    "status": {
                      "description": "Enumerates the possible values for the status of a messaging entity.",
                      "type": "string",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "enableBatchedOperations": {
                      "type": "boolean",
                      "description": "Value that indicates whether server-side batched operations are enabled."
                    },
                    "autoDeleteOnIdle": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
                    },
                    "enablePartitioning": {
                      "type": "boolean",
                      "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers."
                    },
                    "enableExpress": {
                      "type": "boolean",
                      "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
                    },
                    "forwardTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the messages"
                    },
                    "forwardDeadLetteredMessagesTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the Dead Letter message"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of queue Resource."
            },
            "description": "Parameters supplied to create or update a queue resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Queue successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Queue Properties",
                  "type": "object",
                  "properties": {
                    "countDetails": {
                      "readOnly": true,
                      "description": "Message Count Details.",
                      "type": "object",
                      "properties": {
                        "activeMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of active messages in the queue, topic, or subscription."
                        },
                        "deadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages that are dead lettered."
                        },
                        "scheduledMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of scheduled messages."
                        },
                        "transferMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred to another queue, topic, or subscription."
                        },
                        "transferDeadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred into dead letters."
                        }
                      }
                    },
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The exact time the message was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The exact time the message was updated."
                    },
                    "accessedAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Last time a message was sent, or the last time there was a receive request to this queue."
                    },
                    "sizeInBytes": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "The size of the queue, in bytes."
                    },
                    "messageCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "The number of messages in the queue."
                    },
                    "lockDuration": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
                    },
                    "maxSizeInMegabytes": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024."
                    },
                    "maxMessageSizeInKilobytes": {
                      "format": "int64",
                      "type": "integer",
                      "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024."
                    },
                    "requiresDuplicateDetection": {
                      "type": "boolean",
                      "description": "A value indicating if this queue requires duplicate detection."
                    },
                    "requiresSession": {
                      "type": "boolean",
                      "description": "A value that indicates whether the queue supports the concept of sessions."
                    },
                    "defaultMessageTimeToLive": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                    },
                    "deadLetteringOnMessageExpiration": {
                      "type": "boolean",
                      "description": "A value that indicates whether this queue has dead letter support when a message expires."
                    },
                    "duplicateDetectionHistoryTimeWindow": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                    },
                    "maxDeliveryCount": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10."
                    },
                    "status": {
                      "description": "Enumerates the possible values for the status of a messaging entity.",
                      "type": "string",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "enableBatchedOperations": {
                      "type": "boolean",
                      "description": "Value that indicates whether server-side batched operations are enabled."
                    },
                    "autoDeleteOnIdle": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
                    },
                    "enablePartitioning": {
                      "type": "boolean",
                      "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers."
                    },
                    "enableExpress": {
                      "type": "boolean",
                      "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
                    },
                    "forwardTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the messages"
                    },
                    "forwardDeadLetteredMessagesTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the Dead Letter message"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of queue Resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Queues"
        ],
        "operationId": "Queues_Delete",
        "description": "Deletes a queue from the specified namespace in a resource group.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639411.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The queue name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Queue successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "Queues"
        ],
        "operationId": "Queues_Get",
        "description": "Returns a description for the specified queue.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639380.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The queue name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Queue description successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Queue Properties",
                  "type": "object",
                  "properties": {
                    "countDetails": {
                      "readOnly": true,
                      "description": "Message Count Details.",
                      "type": "object",
                      "properties": {
                        "activeMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of active messages in the queue, topic, or subscription."
                        },
                        "deadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages that are dead lettered."
                        },
                        "scheduledMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of scheduled messages."
                        },
                        "transferMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred to another queue, topic, or subscription."
                        },
                        "transferDeadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred into dead letters."
                        }
                      }
                    },
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The exact time the message was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The exact time the message was updated."
                    },
                    "accessedAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Last time a message was sent, or the last time there was a receive request to this queue."
                    },
                    "sizeInBytes": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "The size of the queue, in bytes."
                    },
                    "messageCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "The number of messages in the queue."
                    },
                    "lockDuration": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
                    },
                    "maxSizeInMegabytes": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024."
                    },
                    "maxMessageSizeInKilobytes": {
                      "format": "int64",
                      "type": "integer",
                      "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024."
                    },
                    "requiresDuplicateDetection": {
                      "type": "boolean",
                      "description": "A value indicating if this queue requires duplicate detection."
                    },
                    "requiresSession": {
                      "type": "boolean",
                      "description": "A value that indicates whether the queue supports the concept of sessions."
                    },
                    "defaultMessageTimeToLive": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                    },
                    "deadLetteringOnMessageExpiration": {
                      "type": "boolean",
                      "description": "A value that indicates whether this queue has dead letter support when a message expires."
                    },
                    "duplicateDetectionHistoryTimeWindow": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                    },
                    "maxDeliveryCount": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10."
                    },
                    "status": {
                      "description": "Enumerates the possible values for the status of a messaging entity.",
                      "type": "string",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "enableBatchedOperations": {
                      "type": "boolean",
                      "description": "Value that indicates whether server-side batched operations are enabled."
                    },
                    "autoDeleteOnIdle": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
                    },
                    "enablePartitioning": {
                      "type": "boolean",
                      "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers."
                    },
                    "enableExpress": {
                      "type": "boolean",
                      "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
                    },
                    "forwardTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the messages"
                    },
                    "forwardDeadLetteredMessagesTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the Dead Letter message"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of queue Resource."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}/rules": {
      "get": {
        "tags": [
          "Rules"
        ],
        "operationId": "Rules_ListBySubscriptions",
        "description": "List all the rules within given topic-subscription",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "subscriptionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The subscription name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "$skip",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of Rules.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of Rule resource",
                        "type": "object",
                        "properties": {
                          "action": {
                            "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
                            "type": "object",
                            "properties": {
                              "sqlExpression": {
                                "type": "string",
                                "description": "SQL expression. e.g. MyProperty='ABC'"
                              },
                              "compatibilityLevel": {
                                "format": "int32",
                                "type": "integer",
                                "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                              },
                              "requiresPreprocessing": {
                                "type": "boolean",
                                "default": true,
                                "description": "Value that indicates whether the rule action requires preprocessing."
                              }
                            }
                          },
                          "filterType": {
                            "description": "Filter type that is evaluated against a BrokeredMessage.",
                            "type": "string",
                            "enum": [
                              "SqlFilter",
                              "CorrelationFilter"
                            ],
                            "x-ms-enum": {
                              "name": "FilterType",
                              "modelAsString": false
                            }
                          },
                          "sqlFilter": {
                            "description": "Properties of sqlFilter",
                            "type": "object",
                            "properties": {
                              "sqlExpression": {
                                "type": "string",
                                "description": "The SQL expression. e.g. MyProperty='ABC'"
                              },
                              "compatibilityLevel": {
                                "format": "int32",
                                "type": "integer",
                                "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                              },
                              "requiresPreprocessing": {
                                "type": "boolean",
                                "default": true,
                                "description": "Value that indicates whether the rule action requires preprocessing."
                              }
                            }
                          },
                          "correlationFilter": {
                            "description": "Properties of correlationFilter",
                            "type": "object",
                            "properties": {
                              "properties": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "dictionary object for custom filters"
                              },
                              "correlationId": {
                                "type": "string",
                                "description": "Identifier of the correlation."
                              },
                              "messageId": {
                                "type": "string",
                                "description": "Identifier of the message."
                              },
                              "to": {
                                "type": "string",
                                "description": "Address to send to."
                              },
                              "replyTo": {
                                "type": "string",
                                "description": "Address of the queue to reply to."
                              },
                              "label": {
                                "type": "string",
                                "description": "Application specific label."
                              },
                              "sessionId": {
                                "type": "string",
                                "description": "Session identifier."
                              },
                              "replyToSessionId": {
                                "type": "string",
                                "description": "Session identifier to reply to."
                              },
                              "contentType": {
                                "type": "string",
                                "description": "Content type of the message."
                              },
                              "requiresPreprocessing": {
                                "type": "boolean",
                                "default": true,
                                "description": "Value that indicates whether the rule action requires preprocessing."
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of Rule Resource."
                  },
                  "description": "Result of the List Rules operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of rules"
                }
              },
              "description": "The response of the List rule operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}/rules/{ruleName}": {
      "put": {
        "tags": [
          "Rules"
        ],
        "operationId": "Rules_CreateOrUpdate",
        "description": "Creates a new rule and updates an existing rule",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "subscriptionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The subscription name."
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The rule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of Rule resource",
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
                      "type": "object",
                      "properties": {
                        "sqlExpression": {
                          "type": "string",
                          "description": "SQL expression. e.g. MyProperty='ABC'"
                        },
                        "compatibilityLevel": {
                          "format": "int32",
                          "type": "integer",
                          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                        },
                        "requiresPreprocessing": {
                          "type": "boolean",
                          "default": true,
                          "description": "Value that indicates whether the rule action requires preprocessing."
                        }
                      }
                    },
                    "filterType": {
                      "description": "Filter type that is evaluated against a BrokeredMessage.",
                      "type": "string",
                      "enum": [
                        "SqlFilter",
                        "CorrelationFilter"
                      ],
                      "x-ms-enum": {
                        "name": "FilterType",
                        "modelAsString": false
                      }
                    },
                    "sqlFilter": {
                      "description": "Properties of sqlFilter",
                      "type": "object",
                      "properties": {
                        "sqlExpression": {
                          "type": "string",
                          "description": "The SQL expression. e.g. MyProperty='ABC'"
                        },
                        "compatibilityLevel": {
                          "format": "int32",
                          "type": "integer",
                          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                        },
                        "requiresPreprocessing": {
                          "type": "boolean",
                          "default": true,
                          "description": "Value that indicates whether the rule action requires preprocessing."
                        }
                      }
                    },
                    "correlationFilter": {
                      "description": "Properties of correlationFilter",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "dictionary object for custom filters"
                        },
                        "correlationId": {
                          "type": "string",
                          "description": "Identifier of the correlation."
                        },
                        "messageId": {
                          "type": "string",
                          "description": "Identifier of the message."
                        },
                        "to": {
                          "type": "string",
                          "description": "Address to send to."
                        },
                        "replyTo": {
                          "type": "string",
                          "description": "Address of the queue to reply to."
                        },
                        "label": {
                          "type": "string",
                          "description": "Application specific label."
                        },
                        "sessionId": {
                          "type": "string",
                          "description": "Session identifier."
                        },
                        "replyToSessionId": {
                          "type": "string",
                          "description": "Session identifier to reply to."
                        },
                        "contentType": {
                          "type": "string",
                          "description": "Content type of the message."
                        },
                        "requiresPreprocessing": {
                          "type": "boolean",
                          "default": true,
                          "description": "Value that indicates whether the rule action requires preprocessing."
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of Rule Resource."
            },
            "description": "Parameters supplied to create a rule."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Rule created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of Rule resource",
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
                      "type": "object",
                      "properties": {
                        "sqlExpression": {
                          "type": "string",
                          "description": "SQL expression. e.g. MyProperty='ABC'"
                        },
                        "compatibilityLevel": {
                          "format": "int32",
                          "type": "integer",
                          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                        },
                        "requiresPreprocessing": {
                          "type": "boolean",
                          "default": true,
                          "description": "Value that indicates whether the rule action requires preprocessing."
                        }
                      }
                    },
                    "filterType": {
                      "description": "Filter type that is evaluated against a BrokeredMessage.",
                      "type": "string",
                      "enum": [
                        "SqlFilter",
                        "CorrelationFilter"
                      ],
                      "x-ms-enum": {
                        "name": "FilterType",
                        "modelAsString": false
                      }
                    },
                    "sqlFilter": {
                      "description": "Properties of sqlFilter",
                      "type": "object",
                      "properties": {
                        "sqlExpression": {
                          "type": "string",
                          "description": "The SQL expression. e.g. MyProperty='ABC'"
                        },
                        "compatibilityLevel": {
                          "format": "int32",
                          "type": "integer",
                          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                        },
                        "requiresPreprocessing": {
                          "type": "boolean",
                          "default": true,
                          "description": "Value that indicates whether the rule action requires preprocessing."
                        }
                      }
                    },
                    "correlationFilter": {
                      "description": "Properties of correlationFilter",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "dictionary object for custom filters"
                        },
                        "correlationId": {
                          "type": "string",
                          "description": "Identifier of the correlation."
                        },
                        "messageId": {
                          "type": "string",
                          "description": "Identifier of the message."
                        },
                        "to": {
                          "type": "string",
                          "description": "Address to send to."
                        },
                        "replyTo": {
                          "type": "string",
                          "description": "Address of the queue to reply to."
                        },
                        "label": {
                          "type": "string",
                          "description": "Application specific label."
                        },
                        "sessionId": {
                          "type": "string",
                          "description": "Session identifier."
                        },
                        "replyToSessionId": {
                          "type": "string",
                          "description": "Session identifier to reply to."
                        },
                        "contentType": {
                          "type": "string",
                          "description": "Content type of the message."
                        },
                        "requiresPreprocessing": {
                          "type": "boolean",
                          "default": true,
                          "description": "Value that indicates whether the rule action requires preprocessing."
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of Rule Resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Rules"
        ],
        "operationId": "Rules_Delete",
        "description": "Deletes an existing rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "subscriptionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The subscription name."
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Rule deleted."
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Rules_Get",
        "description": "Retrieves the description for the specified rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "subscriptionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The subscription name."
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The rule name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved rule description.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of Rule resource",
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
                      "type": "object",
                      "properties": {
                        "sqlExpression": {
                          "type": "string",
                          "description": "SQL expression. e.g. MyProperty='ABC'"
                        },
                        "compatibilityLevel": {
                          "format": "int32",
                          "type": "integer",
                          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                        },
                        "requiresPreprocessing": {
                          "type": "boolean",
                          "default": true,
                          "description": "Value that indicates whether the rule action requires preprocessing."
                        }
                      }
                    },
                    "filterType": {
                      "description": "Filter type that is evaluated against a BrokeredMessage.",
                      "type": "string",
                      "enum": [
                        "SqlFilter",
                        "CorrelationFilter"
                      ],
                      "x-ms-enum": {
                        "name": "FilterType",
                        "modelAsString": false
                      }
                    },
                    "sqlFilter": {
                      "description": "Properties of sqlFilter",
                      "type": "object",
                      "properties": {
                        "sqlExpression": {
                          "type": "string",
                          "description": "The SQL expression. e.g. MyProperty='ABC'"
                        },
                        "compatibilityLevel": {
                          "format": "int32",
                          "type": "integer",
                          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                        },
                        "requiresPreprocessing": {
                          "type": "boolean",
                          "default": true,
                          "description": "Value that indicates whether the rule action requires preprocessing."
                        }
                      }
                    },
                    "correlationFilter": {
                      "description": "Properties of correlationFilter",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "dictionary object for custom filters"
                        },
                        "correlationId": {
                          "type": "string",
                          "description": "Identifier of the correlation."
                        },
                        "messageId": {
                          "type": "string",
                          "description": "Identifier of the message."
                        },
                        "to": {
                          "type": "string",
                          "description": "Address to send to."
                        },
                        "replyTo": {
                          "type": "string",
                          "description": "Address of the queue to reply to."
                        },
                        "label": {
                          "type": "string",
                          "description": "Application specific label."
                        },
                        "sessionId": {
                          "type": "string",
                          "description": "Session identifier."
                        },
                        "replyToSessionId": {
                          "type": "string",
                          "description": "Session identifier to reply to."
                        },
                        "contentType": {
                          "type": "string",
                          "description": "Content type of the message."
                        },
                        "requiresPreprocessing": {
                          "type": "boolean",
                          "default": true,
                          "description": "Value that indicates whether the rule action requires preprocessing."
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of Rule Resource."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations": {
      "get": {
        "tags": [
          "MigrationConfigs"
        ],
        "operationId": "MigrationConfigs_List",
        "description": "Gets all migrationConfigurations",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of migrationConfigurations for servicebus namespace",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning state of Migration Configuration "
                          },
                          "pendingReplicationOperationsCount": {
                            "readOnly": true,
                            "format": "int64",
                            "type": "integer",
                            "description": "Number of entities pending to be replicated."
                          },
                          "targetNamespace": {
                            "type": "string",
                            "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration"
                          },
                          "postMigrationName": {
                            "type": "string",
                            "description": "Name to access Standard Namespace after migration"
                          },
                          "migrationState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active"
                          }
                        },
                        "required": [
                          "targetNamespace",
                          "postMigrationName"
                        ],
                        "description": "Properties required to the Create Migration Configuration"
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Single item in List or Get Migration Config operation"
                  },
                  "description": "List of Migration Configs"
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of migrationConfigurations"
                }
              },
              "description": "The result of the List migrationConfigurations operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations/{configName}": {
      "put": {
        "tags": [
          "MigrationConfigs"
        ],
        "operationId": "MigrationConfigs_CreateAndStartMigration",
        "description": "Creates Migration configuration and starts migration of entities from Standard to Premium namespace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "configName",
            "in": "path",
            "description": "The configuration name. Should always be \"$default\".",
            "required": true,
            "type": "string",
            "enum": [
              "$default"
            ],
            "x-ms-enum": {
              "name": "MigrationConfigurationName",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of Migration Configuration "
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    },
                    "targetNamespace": {
                      "type": "string",
                      "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration"
                    },
                    "postMigrationName": {
                      "type": "string",
                      "description": "Name to access Standard Namespace after migration"
                    },
                    "migrationState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active"
                    }
                  },
                  "required": [
                    "targetNamespace",
                    "postMigrationName"
                  ],
                  "description": "Properties required to the Create Migration Configuration"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Migration Config operation"
            },
            "description": "Parameters required to create Migration Configuration"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Migration Config successfully created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of Migration Configuration "
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    },
                    "targetNamespace": {
                      "type": "string",
                      "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration"
                    },
                    "postMigrationName": {
                      "type": "string",
                      "description": "Name to access Standard Namespace after migration"
                    },
                    "migrationState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active"
                    }
                  },
                  "required": [
                    "targetNamespace",
                    "postMigrationName"
                  ],
                  "description": "Properties required to the Create Migration Configuration"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Migration Config operation"
            }
          },
          "201": {
            "description": "Migration Config creation request received",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of Migration Configuration "
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    },
                    "targetNamespace": {
                      "type": "string",
                      "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration"
                    },
                    "postMigrationName": {
                      "type": "string",
                      "description": "Name to access Standard Namespace after migration"
                    },
                    "migrationState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active"
                    }
                  },
                  "required": [
                    "targetNamespace",
                    "postMigrationName"
                  ],
                  "description": "Properties required to the Create Migration Configuration"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Migration Config operation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MigrationConfigs"
        ],
        "operationId": "MigrationConfigs_Delete",
        "description": "Deletes a MigrationConfiguration",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "configName",
            "in": "path",
            "description": "The configuration name. Should always be \"$default\".",
            "required": true,
            "type": "string",
            "enum": [
              "$default"
            ],
            "x-ms-enum": {
              "name": "MigrationConfigurationName",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Migration Config request accepted"
          },
          "204": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "MigrationConfigs"
        ],
        "operationId": "MigrationConfigs_Get",
        "description": "Retrieves Migration Config",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "configName",
            "in": "path",
            "description": "The configuration name. Should always be \"$default\".",
            "required": true,
            "type": "string",
            "enum": [
              "$default"
            ],
            "x-ms-enum": {
              "name": "MigrationConfigurationName",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Migration Config)",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of Migration Configuration "
                    },
                    "pendingReplicationOperationsCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of entities pending to be replicated."
                    },
                    "targetNamespace": {
                      "type": "string",
                      "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration"
                    },
                    "postMigrationName": {
                      "type": "string",
                      "description": "Name to access Standard Namespace after migration"
                    },
                    "migrationState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active"
                    }
                  },
                  "required": [
                    "targetNamespace",
                    "postMigrationName"
                  ],
                  "description": "Properties required to the Create Migration Configuration"
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Single item in List or Get Migration Config operation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations/{configName}/upgrade": {
      "post": {
        "tags": [
          "MigrationConfigs"
        ],
        "operationId": "MigrationConfigs_CompleteMigration",
        "description": "This operation Completes Migration of entities by pointing the connection strings to Premium namespace and any entities created after the operation will be under Premium Namespace. CompleteMigration operation will fail when entity migration is in-progress.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "configName",
            "in": "path",
            "description": "The configuration name. Should always be \"$default\".",
            "required": true,
            "type": "string",
            "enum": [
              "$default"
            ],
            "x-ms-enum": {
              "name": "MigrationConfigurationName",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "upgrade operation of Migration Config is successful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrationConfigurations/{configName}/revert": {
      "post": {
        "tags": [
          "MigrationConfigs"
        ],
        "operationId": "MigrationConfigs_Revert",
        "description": "This operation reverts Migration",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "configName",
            "in": "path",
            "description": "The configuration name. Should always be \"$default\".",
            "required": true,
            "type": "string",
            "enum": [
              "$default"
            ],
            "x-ms-enum": {
              "name": "MigrationConfigurationName",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "MigrationConfig Revert operation is successful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_List",
        "description": "Gets all the available namespaces within the subscription, irrespective of the resource groups.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource Id"
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource name"
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource type"
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The Geo-location where the resource lives"
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags"
                      },
                      "sku": {
                        "description": "Properties of SKU",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of this SKU.",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": false
                            }
                          },
                          "tier": {
                            "type": "string",
                            "description": "The billing tier of this particular SKU.",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "capacity": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "identity": {
                        "description": "Properties of BYOK Identity description",
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "ObjectId from the KeyVault",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "TenantId from the KeyVault",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of managed service identity.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned",
                              "None"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "description": "Recognized Dictionary value.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "Principal Id of user assigned identity",
                                  "type": "string",
                                  "x-ms-client-name": "PrincipalId",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "description": "Client Id of user assigned identity",
                                  "type": "string",
                                  "x-ms-client-name": "ClientId",
                                  "readOnly": true
                                }
                              }
                            },
                            "description": "Properties for User Assigned Identities"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the namespace.",
                        "type": "object",
                        "properties": {
                          "minimumTlsVersion": {
                            "type": "string",
                            "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning state of the namespace."
                          },
                          "status": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of the namespace."
                          },
                          "createdAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The time the namespace was created"
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The time the namespace was updated."
                          },
                          "serviceBusEndpoint": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Endpoint you can use to perform Service Bus operations."
                          },
                          "metricId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Identifier for Azure Insights metrics"
                          },
                          "zoneRedundant": {
                            "type": "boolean",
                            "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "encryption": {
                            "description": "Properties of BYOK Encryption description",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "keyVaultProperties": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "keyName": {
                                      "type": "string",
                                      "description": "Name of the Key from KeyVault"
                                    },
                                    "keyVaultUri": {
                                      "type": "string",
                                      "description": "Uri of KeyVault"
                                    },
                                    "keyVersion": {
                                      "type": "string",
                                      "description": "Version of KeyVault"
                                    },
                                    "identity": {
                                      "type": "object",
                                      "x-ms-client-flatten": true,
                                      "properties": {
                                        "userAssignedIdentity": {
                                          "type": "string",
                                          "description": "ARM ID of user Identity selected for encryption"
                                        }
                                      }
                                    }
                                  },
                                  "description": "Properties to configure keyVault Properties"
                                },
                                "x-ms-client-name": "KeyVaultProperties",
                                "description": "Properties of KeyVault"
                              },
                              "keySource": {
                                "type": "string",
                                "description": "Enumerates the possible value of keySource for Encryption",
                                "default": "Microsoft.KeyVault",
                                "enum": [
                                  "Microsoft.KeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "keySource",
                                  "modelAsString": false
                                }
                              },
                              "requireInfrastructureEncryption": {
                                "type": "boolean",
                                "description": "Enable Infrastructure Encryption (Double Encryption)"
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Properties of the PrivateEndpointConnection.",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                                },
                                "location": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The geo-location where the resource lives"
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PrivateLinkConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndPointProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "systemData": {
                                  "readOnly": true,
                                  "description": "The system meta data relating to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The type of identity that last modified the resource."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "disableLocalAuth": {
                            "type": "boolean",
                            "description": "This property disables SAS authentication for the Service Bus namespace."
                          },
                          "alternateName": {
                            "type": "string",
                            "description": "Alternate name for namespace"
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled",
                              "SecuredByPerimeter"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "premiumMessagingPartitions": {
                            "format": "int32",
                            "type": "integer",
                            "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
                          }
                        }
                      }
                    },
                    "description": "Description of a namespace resource."
                  },
                  "description": "Result of the List Namespace operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
                }
              },
              "description": "The response of the List Namespace operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListByResourceGroup",
        "description": "Gets the available namespaces within a resource group.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource Id"
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource name"
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource type"
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The Geo-location where the resource lives"
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags"
                      },
                      "sku": {
                        "description": "Properties of SKU",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of this SKU.",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": false
                            }
                          },
                          "tier": {
                            "type": "string",
                            "description": "The billing tier of this particular SKU.",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "capacity": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "identity": {
                        "description": "Properties of BYOK Identity description",
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "ObjectId from the KeyVault",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "TenantId from the KeyVault",
                            "readOnly": true
                          },
                          "type": {
                            "description": "Type of managed service identity.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned",
                              "None"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "description": "Recognized Dictionary value.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "Principal Id of user assigned identity",
                                  "type": "string",
                                  "x-ms-client-name": "PrincipalId",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "description": "Client Id of user assigned identity",
                                  "type": "string",
                                  "x-ms-client-name": "ClientId",
                                  "readOnly": true
                                }
                              }
                            },
                            "description": "Properties for User Assigned Identities"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the namespace.",
                        "type": "object",
                        "properties": {
                          "minimumTlsVersion": {
                            "type": "string",
                            "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                            "enum": [
                              "1.0",
                              "1.1",
                              "1.2"
                            ],
                            "x-ms-enum": {
                              "name": "TlsVersion",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Provisioning state of the namespace."
                          },
                          "status": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Status of the namespace."
                          },
                          "createdAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The time the namespace was created"
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The time the namespace was updated."
                          },
                          "serviceBusEndpoint": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Endpoint you can use to perform Service Bus operations."
                          },
                          "metricId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Identifier for Azure Insights metrics"
                          },
                          "zoneRedundant": {
                            "type": "boolean",
                            "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "encryption": {
                            "description": "Properties of BYOK Encryption description",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "keyVaultProperties": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "keyName": {
                                      "type": "string",
                                      "description": "Name of the Key from KeyVault"
                                    },
                                    "keyVaultUri": {
                                      "type": "string",
                                      "description": "Uri of KeyVault"
                                    },
                                    "keyVersion": {
                                      "type": "string",
                                      "description": "Version of KeyVault"
                                    },
                                    "identity": {
                                      "type": "object",
                                      "x-ms-client-flatten": true,
                                      "properties": {
                                        "userAssignedIdentity": {
                                          "type": "string",
                                          "description": "ARM ID of user Identity selected for encryption"
                                        }
                                      }
                                    }
                                  },
                                  "description": "Properties to configure keyVault Properties"
                                },
                                "x-ms-client-name": "KeyVaultProperties",
                                "description": "Properties of KeyVault"
                              },
                              "keySource": {
                                "type": "string",
                                "description": "Enumerates the possible value of keySource for Encryption",
                                "default": "Microsoft.KeyVault",
                                "enum": [
                                  "Microsoft.KeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "keySource",
                                  "modelAsString": false
                                }
                              },
                              "requireInfrastructureEncryption": {
                                "type": "boolean",
                                "description": "Enable Infrastructure Encryption (Double Encryption)"
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "List of private endpoint connections.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Properties of the PrivateEndpointConnection.",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                                },
                                "location": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The geo-location where the resource lives"
                                },
                                "properties": {
                                  "description": "Properties of the PrivateEndpointConnection.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "The Private Endpoint resource for this Connection.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ARM identifier for Private Endpoint.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Details about the state of the connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Status of the connection.",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "PrivateLinkConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "description": "Description of the connection state.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "Provisioning state of the Private Endpoint Connection.",
                                      "enum": [
                                        "Creating",
                                        "Updating",
                                        "Deleting",
                                        "Succeeded",
                                        "Canceled",
                                        "Failed"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "EndPointProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "systemData": {
                                  "readOnly": true,
                                  "description": "The system meta data relating to this resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The type of identity that last modified the resource."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "disableLocalAuth": {
                            "type": "boolean",
                            "description": "This property disables SAS authentication for the Service Bus namespace."
                          },
                          "alternateName": {
                            "type": "string",
                            "description": "Alternate name for namespace"
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled",
                              "SecuredByPerimeter"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "premiumMessagingPartitions": {
                            "format": "int32",
                            "type": "integer",
                            "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
                          }
                        }
                      }
                    },
                    "description": "Description of a namespace resource."
                  },
                  "description": "Result of the List Namespace operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
                }
              },
              "description": "The response of the List Namespace operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "description": "Creates or updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The Geo-location where the resource lives"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags"
                },
                "sku": {
                  "description": "Properties of SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the namespace.",
                  "type": "object",
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was created"
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics"
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of KeyVault"
                              },
                              "identity": {
                                "type": "object",
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Service Bus namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name for namespace"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "premiumMessagingPartitions": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
                    }
                  }
                }
              },
              "description": "Description of a namespace resource."
            },
            "description": "Parameters supplied to create a namespace resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The Geo-location where the resource lives"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags"
                },
                "sku": {
                  "description": "Properties of SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the namespace.",
                  "type": "object",
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was created"
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics"
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of KeyVault"
                              },
                              "identity": {
                                "type": "object",
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Service Bus namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name for namespace"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "premiumMessagingPartitions": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
                    }
                  }
                }
              },
              "description": "Description of a namespace resource."
            }
          },
          "201": {
            "description": "Namespace create request accepted.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The Geo-location where the resource lives"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags"
                },
                "sku": {
                  "description": "Properties of SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the namespace.",
                  "type": "object",
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was created"
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics"
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of KeyVault"
                              },
                              "identity": {
                                "type": "object",
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Service Bus namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name for namespace"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "premiumMessagingPartitions": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
                    }
                  }
                }
              },
              "description": "Description of a namespace resource."
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully deleted."
          },
          "202": {
            "description": "Namespace delete request accepted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "description": "Gets a description for the specified namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The Geo-location where the resource lives"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags"
                },
                "sku": {
                  "description": "Properties of SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the namespace.",
                  "type": "object",
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was created"
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics"
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of KeyVault"
                              },
                              "identity": {
                                "type": "object",
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Service Bus namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name for namespace"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "premiumMessagingPartitions": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
                    }
                  }
                }
              },
              "description": "Description of a namespace resource."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Update",
        "description": "Updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "description": "Resource location"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "sku": {
                  "description": "Properties of SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the namespace.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was created"
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics"
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of KeyVault"
                              },
                              "identity": {
                                "type": "object",
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Service Bus namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name for namespace"
                    }
                  }
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                }
              },
              "description": "Description of a namespace resource."
            },
            "description": "Parameters supplied to update a namespace resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The Geo-location where the resource lives"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags"
                },
                "sku": {
                  "description": "Properties of SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the namespace.",
                  "type": "object",
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was created"
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics"
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of KeyVault"
                              },
                              "identity": {
                                "type": "object",
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Service Bus namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name for namespace"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "premiumMessagingPartitions": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
                    }
                  }
                }
              },
              "description": "Description of a namespace resource."
            }
          },
          "201": {
            "description": "Namespace update request accepted.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The Geo-location where the resource lives"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags"
                },
                "sku": {
                  "description": "Properties of SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of this SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false
                      }
                    },
                    "tier": {
                      "type": "string",
                      "description": "The billing tier of this particular SKU.",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "capacity": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "Properties of BYOK Identity description",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "ObjectId from the KeyVault",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "TenantId from the KeyVault",
                      "readOnly": true
                    },
                    "type": {
                      "description": "Type of managed service identity.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Recognized Dictionary value.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "PrincipalId",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user assigned identity",
                            "type": "string",
                            "x-ms-client-name": "ClientId",
                            "readOnly": true
                          }
                        }
                      },
                      "description": "Properties for User Assigned Identities"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the namespace.",
                  "type": "object",
                  "properties": {
                    "minimumTlsVersion": {
                      "type": "string",
                      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                      "enum": [
                        "1.0",
                        "1.1",
                        "1.2"
                      ],
                      "x-ms-enum": {
                        "name": "TlsVersion",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Provisioning state of the namespace."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Status of the namespace."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was created"
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The time the namespace was updated."
                    },
                    "serviceBusEndpoint": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Endpoint you can use to perform Service Bus operations."
                    },
                    "metricId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Identifier for Azure Insights metrics"
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "encryption": {
                      "description": "Properties of BYOK Encryption description",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "keyVaultProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "Name of the Key from KeyVault"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "Uri of KeyVault"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "Version of KeyVault"
                              },
                              "identity": {
                                "type": "object",
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "ARM ID of user Identity selected for encryption"
                                  }
                                }
                              }
                            },
                            "description": "Properties to configure keyVault Properties"
                          },
                          "x-ms-client-name": "KeyVaultProperties",
                          "description": "Properties of KeyVault"
                        },
                        "keySource": {
                          "type": "string",
                          "description": "Enumerates the possible value of keySource for Encryption",
                          "default": "Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "keySource",
                            "modelAsString": false
                          }
                        },
                        "requireInfrastructureEncryption": {
                          "type": "boolean",
                          "description": "Enable Infrastructure Encryption (Double Encryption)"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "List of private endpoint connections.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Properties of the PrivateEndpointConnection.",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                          },
                          "location": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The geo-location where the resource lives"
                          },
                          "properties": {
                            "description": "Properties of the PrivateEndpointConnection.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "The Private Endpoint resource for this Connection.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The ARM identifier for Private Endpoint.",
                                    "type": "string"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Details about the state of the connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Status of the connection.",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "PrivateLinkConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "description": "Description of the connection state.",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "Provisioning state of the Private Endpoint Connection.",
                                "enum": [
                                  "Creating",
                                  "Updating",
                                  "Deleting",
                                  "Succeeded",
                                  "Canceled",
                                  "Failed"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "EndPointProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "The system meta data relating to this resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The type of identity that last modified the resource."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disableLocalAuth": {
                      "type": "boolean",
                      "description": "This property disables SAS authentication for the Service Bus namespace."
                    },
                    "alternateName": {
                      "type": "string",
                      "description": "Alternate name for namespace"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "premiumMessagingPartitions": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
                    }
                  }
                }
              },
              "description": "Description of a namespace resource."
            }
          },
          "202": {
            "description": "Namespace update request accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "description": "Gets the available PrivateEndpointConnections within a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "PrivateEndpointConnections successfully returned.",
            "schema": {
              "type": "object",
              "description": "Result of the list of all private endpoint connections operation.",
              "properties": {
                "value": {
                  "description": "A collection of private endpoint connection resources.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Properties of the PrivateEndpointConnection.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "Properties of the PrivateEndpointConnection.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "The Private Endpoint resource for this Connection.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The ARM identifier for Private Endpoint.",
                                "type": "string"
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "Details about the state of the connection.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Status of the connection.",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected",
                                  "Disconnected"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "PrivateLinkConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "description": "Description of the connection state.",
                                "type": "string"
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Private Endpoint Connection.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Canceled",
                              "Failed"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "EndPointProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of private endpoint connection resources.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "put": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "description": "Creates or updates PrivateEndpointConnections of service namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The PrivateEndpointConnection name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            },
            "description": "Parameters supplied to update Status of PrivateEndPoint Connection to namespace resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Status of PrivateEndPoint Connection Created successfully.",
            "schema": {
              "type": "object",
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Request to update Status of PrivateEndPoint Connection accepted.",
            "schema": {
              "type": "object",
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request to update Status of PrivateEndPoint Connection accepted.",
            "schema": {
              "type": "object",
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes an existing Private Endpoint Connection.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The PrivateEndpointConnection name"
          }
        ],
        "responses": {
          "200": {
            "description": "Private Endpoint Connection successfully deleted."
          },
          "202": {
            "description": "Private Endpoint Connection  delete request accepted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets a description for the specified Private Endpoint Connection.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The PrivateEndpointConnection name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Description of Private Endpoint Connection returned successfully.",
            "schema": {
              "type": "object",
              "description": "Properties of the PrivateEndpointConnection.",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Properties of the PrivateEndpointConnection.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "The Private Endpoint resource for this Connection.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ARM identifier for Private Endpoint.",
                          "type": "string"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Details about the state of the connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of the connection.",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "PrivateLinkConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Description of the connection state.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Private Endpoint Connection.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Canceled",
                        "Failed"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "EndPointProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "Namespaces PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_Get",
        "description": "Gets lists of resources that supports Privatelinks.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Private Link resource List",
            "schema": {
              "type": "object",
              "description": "Result of the List private link resources operation.",
              "properties": {
                "value": {
                  "description": "A collection of private link resources",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Information of the private link resource.",
                    "properties": {
                      "properties": {
                        "description": "Properties of the private link resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string"
                          },
                          "requiredMembers": {
                            "type": "array",
                            "description": "Required Members",
                            "items": {
                              "type": "string"
                            }
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "description": "Required Zone Names",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "Fully qualified identifier of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the resource",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the resource",
                        "type": "string"
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "A link for the next page of private link resources.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/networkRuleSets/default": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateNetworkRuleSet",
        "description": "Create or update NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "NetworkRuleSet properties",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "trustedServiceAccessEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                    },
                    "defaultAction": {
                      "type": "string",
                      "description": "Default Action for Network Rule Set",
                      "enum": [
                        "Allow",
                        "Deny"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultAction",
                        "modelAsString": true
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "subnet": {
                            "description": "Subnet properties",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource ID of Virtual Network Subnet"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "ignoreMissingVnetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Value that indicates whether to ignore missing VNet Service Endpoint"
                          }
                        },
                        "description": "Description of VirtualNetworkRules - NetworkRules resource."
                      },
                      "description": "List VirtualNetwork Rules"
                    },
                    "ipRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "ipMask": {
                            "type": "string",
                            "description": "IP Mask"
                          },
                          "action": {
                            "type": "string",
                            "description": "The IP Filter Action",
                            "enum": [
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkRuleIPAction",
                              "modelAsString": true
                            },
                            "default": "Allow"
                          }
                        },
                        "description": "Description of NetWorkRuleSet - IpRules resource."
                      },
                      "description": "List of IpRules"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of NetworkRuleSet resource."
            },
            "description": "The Namespace IpFilterRule."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace NetworkRuleSet successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "NetworkRuleSet properties",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "trustedServiceAccessEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                    },
                    "defaultAction": {
                      "type": "string",
                      "description": "Default Action for Network Rule Set",
                      "enum": [
                        "Allow",
                        "Deny"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultAction",
                        "modelAsString": true
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "subnet": {
                            "description": "Subnet properties",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource ID of Virtual Network Subnet"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "ignoreMissingVnetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Value that indicates whether to ignore missing VNet Service Endpoint"
                          }
                        },
                        "description": "Description of VirtualNetworkRules - NetworkRules resource."
                      },
                      "description": "List VirtualNetwork Rules"
                    },
                    "ipRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "ipMask": {
                            "type": "string",
                            "description": "IP Mask"
                          },
                          "action": {
                            "type": "string",
                            "description": "The IP Filter Action",
                            "enum": [
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkRuleIPAction",
                              "modelAsString": true
                            },
                            "default": "Allow"
                          }
                        },
                        "description": "Description of NetWorkRuleSet - IpRules resource."
                      },
                      "description": "List of IpRules"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of NetworkRuleSet resource."
            }
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetNetworkRuleSet",
        "description": "Gets NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace NetworkRuleSet successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "NetworkRuleSet properties",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "trustedServiceAccessEnabled": {
                      "type": "boolean",
                      "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                    },
                    "defaultAction": {
                      "type": "string",
                      "description": "Default Action for Network Rule Set",
                      "enum": [
                        "Allow",
                        "Deny"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultAction",
                        "modelAsString": true
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "subnet": {
                            "description": "Subnet properties",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource ID of Virtual Network Subnet"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "ignoreMissingVnetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Value that indicates whether to ignore missing VNet Service Endpoint"
                          }
                        },
                        "description": "Description of VirtualNetworkRules - NetworkRules resource."
                      },
                      "description": "List VirtualNetwork Rules"
                    },
                    "ipRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "ipMask": {
                            "type": "string",
                            "description": "IP Mask"
                          },
                          "action": {
                            "type": "string",
                            "description": "The IP Filter Action",
                            "enum": [
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkRuleIPAction",
                              "modelAsString": true
                            },
                            "default": "Allow"
                          }
                        },
                        "description": "Description of NetWorkRuleSet - IpRules resource."
                      },
                      "description": "List of IpRules"
                    },
                    "publicNetworkAccess": {
                      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of NetworkRuleSet resource."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/networkRuleSets": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListNetworkRuleSets",
        "description": "Gets list of NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "List of NetworkRuleSets for Namespace successfully returned.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "NetworkRuleSet properties",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "trustedServiceAccessEnabled": {
                            "type": "boolean",
                            "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                          },
                          "defaultAction": {
                            "type": "string",
                            "description": "Default Action for Network Rule Set",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "DefaultAction",
                              "modelAsString": true
                            }
                          },
                          "virtualNetworkRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-ms-client-flatten": true,
                              "properties": {
                                "subnet": {
                                  "description": "Subnet properties",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Resource ID of Virtual Network Subnet"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "ignoreMissingVnetServiceEndpoint": {
                                  "type": "boolean",
                                  "description": "Value that indicates whether to ignore missing VNet Service Endpoint"
                                }
                              },
                              "description": "Description of VirtualNetworkRules - NetworkRules resource."
                            },
                            "description": "List VirtualNetwork Rules"
                          },
                          "ipRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "x-ms-client-flatten": true,
                              "properties": {
                                "ipMask": {
                                  "type": "string",
                                  "description": "IP Mask"
                                },
                                "action": {
                                  "type": "string",
                                  "description": "The IP Filter Action",
                                  "enum": [
                                    "Allow"
                                  ],
                                  "x-ms-enum": {
                                    "name": "NetworkRuleIPAction",
                                    "modelAsString": true
                                  },
                                  "default": "Allow"
                                }
                              },
                              "description": "Description of NetWorkRuleSet - IpRules resource."
                            },
                            "description": "List of IpRules"
                          },
                          "publicNetworkAccess": {
                            "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccessFlag",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of NetworkRuleSet resource."
                  },
                  "description": "Result of the List NetworkRuleSet operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet."
                }
              },
              "description": "The response of the List NetworkRuleSet operation."
            }
          }
        }
      }
    },
    "/providers/Microsoft.ServiceBus/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available ServiceBus REST API operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Result of the request to list ServiceBus operations. It contains a list of operations and a URL link to get the next set of results.",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "description": "List of ServiceBus operations supported by the Microsoft.ServiceBus resource provider.",
                  "items": {
                    "description": "A Service Bus REST API operation",
                    "type": "object",
                    "properties": {
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Operation name: {provider}/{resource}/{operation}"
                      },
                      "isDataAction": {
                        "description": "Indicates whether the operation is a data action",
                        "type": "boolean"
                      },
                      "display": {
                        "description": "Display of the operation",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "description": "Resource provider of the operation",
                            "type": "string",
                            "readOnly": true
                          },
                          "resource": {
                            "description": "Resource of the operation",
                            "type": "string",
                            "readOnly": true
                          },
                          "operation": {
                            "description": "Localized friendly name for the operation",
                            "type": "string",
                            "readOnly": true
                          },
                          "description": {
                            "description": "Localized friendly description for the operation",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "description": "Origin of the operation",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the operation",
                        "type": "object",
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "readOnly": true,
                  "type": "string",
                  "description": "URL to get the next set of operation list results if there are any."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_ListByTopic",
        "description": "List all the subscriptions under a specified topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639400.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "$skip",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of subscriptions.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of subscriptions resource.",
                        "type": "object",
                        "properties": {
                          "messageCount": {
                            "readOnly": true,
                            "format": "int64",
                            "type": "integer",
                            "description": "Number of messages."
                          },
                          "createdAt": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "Exact time the message was created."
                          },
                          "accessedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "Last time there was a receive request to this subscription."
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The exact time the message was updated."
                          },
                          "countDetails": {
                            "readOnly": true,
                            "description": "Message count details",
                            "type": "object",
                            "properties": {
                              "activeMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of active messages in the queue, topic, or subscription."
                              },
                              "deadLetterMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of messages that are dead lettered."
                              },
                              "scheduledMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of scheduled messages."
                              },
                              "transferMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of messages transferred to another queue, topic, or subscription."
                              },
                              "transferDeadLetterMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of messages transferred into dead letters."
                              }
                            }
                          },
                          "lockDuration": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute."
                          },
                          "requiresSession": {
                            "type": "boolean",
                            "description": "Value indicating if a subscription supports the concept of sessions."
                          },
                          "defaultMessageTimeToLive": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                          },
                          "deadLetteringOnFilterEvaluationExceptions": {
                            "type": "boolean",
                            "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
                          },
                          "deadLetteringOnMessageExpiration": {
                            "type": "boolean",
                            "description": "Value that indicates whether a subscription has dead letter support when a message expires."
                          },
                          "duplicateDetectionHistoryTimeWindow": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                          },
                          "maxDeliveryCount": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Number of maximum deliveries."
                          },
                          "status": {
                            "description": "Enumerates the possible values for the status of a messaging entity.",
                            "type": "string",
                            "enum": [
                              "Active",
                              "Disabled",
                              "Restoring",
                              "SendDisabled",
                              "ReceiveDisabled",
                              "Creating",
                              "Deleting",
                              "Renaming",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "EntityStatus",
                              "modelAsString": false
                            }
                          },
                          "enableBatchedOperations": {
                            "type": "boolean",
                            "description": "Value that indicates whether server-side batched operations are enabled."
                          },
                          "autoDeleteOnIdle": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                          },
                          "forwardTo": {
                            "type": "string",
                            "description": "Queue/Topic name to forward the messages"
                          },
                          "forwardDeadLetteredMessagesTo": {
                            "type": "string",
                            "description": "Queue/Topic name to forward the Dead Letter message"
                          },
                          "isClientAffine": {
                            "type": "boolean",
                            "description": "Value that indicates whether the subscription has an affinity to the client id."
                          },
                          "clientAffineProperties": {
                            "description": "Properties specific to client affine subscriptions.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "type": "string",
                                "description": "Indicates the Client ID of the application that created the client-affine subscription."
                              },
                              "isDurable": {
                                "type": "boolean",
                                "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not."
                              },
                              "isShared": {
                                "type": "boolean",
                                "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not."
                              }
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of subscription resource."
                  },
                  "description": "Result of the List Subscriptions operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of subscriptions."
                }
              },
              "description": "The response to the List Subscriptions operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_CreateOrUpdate",
        "description": "Creates a topic subscription.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639385.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "subscriptionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The subscription name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of subscriptions resource.",
                  "type": "object",
                  "properties": {
                    "messageCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of messages."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Exact time the message was created."
                    },
                    "accessedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Last time there was a receive request to this subscription."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "countDetails": {
                      "readOnly": true,
                      "description": "Message count details",
                      "type": "object",
                      "properties": {
                        "activeMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of active messages in the queue, topic, or subscription."
                        },
                        "deadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages that are dead lettered."
                        },
                        "scheduledMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of scheduled messages."
                        },
                        "transferMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred to another queue, topic, or subscription."
                        },
                        "transferDeadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred into dead letters."
                        }
                      }
                    },
                    "lockDuration": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute."
                    },
                    "requiresSession": {
                      "type": "boolean",
                      "description": "Value indicating if a subscription supports the concept of sessions."
                    },
                    "defaultMessageTimeToLive": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                    },
                    "deadLetteringOnFilterEvaluationExceptions": {
                      "type": "boolean",
                      "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
                    },
                    "deadLetteringOnMessageExpiration": {
                      "type": "boolean",
                      "description": "Value that indicates whether a subscription has dead letter support when a message expires."
                    },
                    "duplicateDetectionHistoryTimeWindow": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                    },
                    "maxDeliveryCount": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Number of maximum deliveries."
                    },
                    "status": {
                      "description": "Enumerates the possible values for the status of a messaging entity.",
                      "type": "string",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "enableBatchedOperations": {
                      "type": "boolean",
                      "description": "Value that indicates whether server-side batched operations are enabled."
                    },
                    "autoDeleteOnIdle": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                    },
                    "forwardTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the messages"
                    },
                    "forwardDeadLetteredMessagesTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the Dead Letter message"
                    },
                    "isClientAffine": {
                      "type": "boolean",
                      "description": "Value that indicates whether the subscription has an affinity to the client id."
                    },
                    "clientAffineProperties": {
                      "description": "Properties specific to client affine subscriptions.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Indicates the Client ID of the application that created the client-affine subscription."
                        },
                        "isDurable": {
                          "type": "boolean",
                          "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not."
                        },
                        "isShared": {
                          "type": "boolean",
                          "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not."
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of subscription resource."
            },
            "description": "Parameters supplied to create a subscription resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription create request accepted.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of subscriptions resource.",
                  "type": "object",
                  "properties": {
                    "messageCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of messages."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Exact time the message was created."
                    },
                    "accessedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Last time there was a receive request to this subscription."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "countDetails": {
                      "readOnly": true,
                      "description": "Message count details",
                      "type": "object",
                      "properties": {
                        "activeMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of active messages in the queue, topic, or subscription."
                        },
                        "deadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages that are dead lettered."
                        },
                        "scheduledMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of scheduled messages."
                        },
                        "transferMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred to another queue, topic, or subscription."
                        },
                        "transferDeadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred into dead letters."
                        }
                      }
                    },
                    "lockDuration": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute."
                    },
                    "requiresSession": {
                      "type": "boolean",
                      "description": "Value indicating if a subscription supports the concept of sessions."
                    },
                    "defaultMessageTimeToLive": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                    },
                    "deadLetteringOnFilterEvaluationExceptions": {
                      "type": "boolean",
                      "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
                    },
                    "deadLetteringOnMessageExpiration": {
                      "type": "boolean",
                      "description": "Value that indicates whether a subscription has dead letter support when a message expires."
                    },
                    "duplicateDetectionHistoryTimeWindow": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                    },
                    "maxDeliveryCount": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Number of maximum deliveries."
                    },
                    "status": {
                      "description": "Enumerates the possible values for the status of a messaging entity.",
                      "type": "string",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "enableBatchedOperations": {
                      "type": "boolean",
                      "description": "Value that indicates whether server-side batched operations are enabled."
                    },
                    "autoDeleteOnIdle": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                    },
                    "forwardTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the messages"
                    },
                    "forwardDeadLetteredMessagesTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the Dead Letter message"
                    },
                    "isClientAffine": {
                      "type": "boolean",
                      "description": "Value that indicates whether the subscription has an affinity to the client id."
                    },
                    "clientAffineProperties": {
                      "description": "Properties specific to client affine subscriptions.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Indicates the Client ID of the application that created the client-affine subscription."
                        },
                        "isDurable": {
                          "type": "boolean",
                          "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not."
                        },
                        "isShared": {
                          "type": "boolean",
                          "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not."
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of subscription resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_Delete",
        "description": "Deletes a subscription from the specified topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639381.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "subscriptionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The subscription name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_Get",
        "description": "Returns a subscription description for the specified topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639402.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "subscriptionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The subscription name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved subscription description.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of subscriptions resource.",
                  "type": "object",
                  "properties": {
                    "messageCount": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Number of messages."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Exact time the message was created."
                    },
                    "accessedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Last time there was a receive request to this subscription."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "countDetails": {
                      "readOnly": true,
                      "description": "Message count details",
                      "type": "object",
                      "properties": {
                        "activeMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of active messages in the queue, topic, or subscription."
                        },
                        "deadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages that are dead lettered."
                        },
                        "scheduledMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of scheduled messages."
                        },
                        "transferMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred to another queue, topic, or subscription."
                        },
                        "transferDeadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred into dead letters."
                        }
                      }
                    },
                    "lockDuration": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute."
                    },
                    "requiresSession": {
                      "type": "boolean",
                      "description": "Value indicating if a subscription supports the concept of sessions."
                    },
                    "defaultMessageTimeToLive": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                    },
                    "deadLetteringOnFilterEvaluationExceptions": {
                      "type": "boolean",
                      "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
                    },
                    "deadLetteringOnMessageExpiration": {
                      "type": "boolean",
                      "description": "Value that indicates whether a subscription has dead letter support when a message expires."
                    },
                    "duplicateDetectionHistoryTimeWindow": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                    },
                    "maxDeliveryCount": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Number of maximum deliveries."
                    },
                    "status": {
                      "description": "Enumerates the possible values for the status of a messaging entity.",
                      "type": "string",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "enableBatchedOperations": {
                      "type": "boolean",
                      "description": "Value that indicates whether server-side batched operations are enabled."
                    },
                    "autoDeleteOnIdle": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                    },
                    "forwardTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the messages"
                    },
                    "forwardDeadLetteredMessagesTo": {
                      "type": "string",
                      "description": "Queue/Topic name to forward the Dead Letter message"
                    },
                    "isClientAffine": {
                      "type": "boolean",
                      "description": "Value that indicates whether the subscription has an affinity to the client id."
                    },
                    "clientAffineProperties": {
                      "description": "Properties specific to client affine subscriptions.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Indicates the Client ID of the application that created the client-affine subscription."
                        },
                        "isDurable": {
                          "type": "boolean",
                          "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not."
                        },
                        "isShared": {
                          "type": "boolean",
                          "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not."
                        }
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of subscription resource."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics": {
      "get": {
        "tags": [
          "Topics"
        ],
        "operationId": "Topics_ListByNamespace",
        "description": "Gets all the topics in a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639388.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          },
          {
            "name": "$skip",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of topics.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                      },
                      "location": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of topic resource.",
                        "type": "object",
                        "properties": {
                          "sizeInBytes": {
                            "readOnly": true,
                            "format": "int64",
                            "type": "integer",
                            "description": "Size of the topic, in bytes."
                          },
                          "createdAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "Exact time the message was created."
                          },
                          "updatedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "The exact time the message was updated."
                          },
                          "accessedAt": {
                            "readOnly": true,
                            "format": "date-time",
                            "type": "string",
                            "description": "Last time the message was sent, or a request was received, for this topic."
                          },
                          "subscriptionCount": {
                            "readOnly": true,
                            "format": "int32",
                            "type": "integer",
                            "description": "Number of subscriptions."
                          },
                          "countDetails": {
                            "readOnly": true,
                            "description": "Message count details",
                            "type": "object",
                            "properties": {
                              "activeMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of active messages in the queue, topic, or subscription."
                              },
                              "deadLetterMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of messages that are dead lettered."
                              },
                              "scheduledMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of scheduled messages."
                              },
                              "transferMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of messages transferred to another queue, topic, or subscription."
                              },
                              "transferDeadLetterMessageCount": {
                                "readOnly": true,
                                "format": "int64",
                                "type": "integer",
                                "description": "Number of messages transferred into dead letters."
                              }
                            }
                          },
                          "defaultMessageTimeToLive": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                          },
                          "maxSizeInMegabytes": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."
                          },
                          "maxMessageSizeInKilobytes": {
                            "format": "int64",
                            "type": "integer",
                            "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."
                          },
                          "requiresDuplicateDetection": {
                            "type": "boolean",
                            "description": "Value indicating if this topic requires duplicate detection."
                          },
                          "duplicateDetectionHistoryTimeWindow": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                          },
                          "enableBatchedOperations": {
                            "type": "boolean",
                            "description": "Value that indicates whether server-side batched operations are enabled."
                          },
                          "status": {
                            "description": "Enumerates the possible values for the status of a messaging entity.",
                            "type": "string",
                            "enum": [
                              "Active",
                              "Disabled",
                              "Restoring",
                              "SendDisabled",
                              "ReceiveDisabled",
                              "Creating",
                              "Deleting",
                              "Renaming",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "EntityStatus",
                              "modelAsString": false
                            }
                          },
                          "supportOrdering": {
                            "type": "boolean",
                            "description": "Value that indicates whether the topic supports ordering."
                          },
                          "autoDeleteOnIdle": {
                            "format": "duration",
                            "type": "string",
                            "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                          },
                          "enablePartitioning": {
                            "type": "boolean",
                            "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."
                          },
                          "enableExpress": {
                            "type": "boolean",
                            "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The type of identity that last modified the resource."
                          }
                        }
                      }
                    },
                    "description": "Description of topic resource."
                  },
                  "description": "Result of the List Topics operation."
                },
                "nextLink": {
                  "type": "string",
                  "description": "Link to the next set of results. Not empty if Value contains incomplete list of topics."
                }
              },
              "description": "The response to the List Topics operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}": {
      "put": {
        "tags": [
          "Topics"
        ],
        "operationId": "Topics_CreateOrUpdate",
        "description": "Creates a topic in the specified namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639409.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of topic resource.",
                  "type": "object",
                  "properties": {
                    "sizeInBytes": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Size of the topic, in bytes."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the message was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "accessedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Last time the message was sent, or a request was received, for this topic."
                    },
                    "subscriptionCount": {
                      "readOnly": true,
                      "format": "int32",
                      "type": "integer",
                      "description": "Number of subscriptions."
                    },
                    "countDetails": {
                      "readOnly": true,
                      "description": "Message count details",
                      "type": "object",
                      "properties": {
                        "activeMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of active messages in the queue, topic, or subscription."
                        },
                        "deadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages that are dead lettered."
                        },
                        "scheduledMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of scheduled messages."
                        },
                        "transferMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred to another queue, topic, or subscription."
                        },
                        "transferDeadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred into dead letters."
                        }
                      }
                    },
                    "defaultMessageTimeToLive": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                    },
                    "maxSizeInMegabytes": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."
                    },
                    "maxMessageSizeInKilobytes": {
                      "format": "int64",
                      "type": "integer",
                      "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."
                    },
                    "requiresDuplicateDetection": {
                      "type": "boolean",
                      "description": "Value indicating if this topic requires duplicate detection."
                    },
                    "duplicateDetectionHistoryTimeWindow": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                    },
                    "enableBatchedOperations": {
                      "type": "boolean",
                      "description": "Value that indicates whether server-side batched operations are enabled."
                    },
                    "status": {
                      "description": "Enumerates the possible values for the status of a messaging entity.",
                      "type": "string",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "supportOrdering": {
                      "type": "boolean",
                      "description": "Value that indicates whether the topic supports ordering."
                    },
                    "autoDeleteOnIdle": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                    },
                    "enablePartitioning": {
                      "type": "boolean",
                      "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."
                    },
                    "enableExpress": {
                      "type": "boolean",
                      "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of topic resource."
            },
            "description": "Parameters supplied to create a topic resource."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Topic successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of topic resource.",
                  "type": "object",
                  "properties": {
                    "sizeInBytes": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Size of the topic, in bytes."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the message was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "accessedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Last time the message was sent, or a request was received, for this topic."
                    },
                    "subscriptionCount": {
                      "readOnly": true,
                      "format": "int32",
                      "type": "integer",
                      "description": "Number of subscriptions."
                    },
                    "countDetails": {
                      "readOnly": true,
                      "description": "Message count details",
                      "type": "object",
                      "properties": {
                        "activeMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of active messages in the queue, topic, or subscription."
                        },
                        "deadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages that are dead lettered."
                        },
                        "scheduledMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of scheduled messages."
                        },
                        "transferMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred to another queue, topic, or subscription."
                        },
                        "transferDeadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred into dead letters."
                        }
                      }
                    },
                    "defaultMessageTimeToLive": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                    },
                    "maxSizeInMegabytes": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."
                    },
                    "maxMessageSizeInKilobytes": {
                      "format": "int64",
                      "type": "integer",
                      "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."
                    },
                    "requiresDuplicateDetection": {
                      "type": "boolean",
                      "description": "Value indicating if this topic requires duplicate detection."
                    },
                    "duplicateDetectionHistoryTimeWindow": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                    },
                    "enableBatchedOperations": {
                      "type": "boolean",
                      "description": "Value that indicates whether server-side batched operations are enabled."
                    },
                    "status": {
                      "description": "Enumerates the possible values for the status of a messaging entity.",
                      "type": "string",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "supportOrdering": {
                      "type": "boolean",
                      "description": "Value that indicates whether the topic supports ordering."
                    },
                    "autoDeleteOnIdle": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                    },
                    "enablePartitioning": {
                      "type": "boolean",
                      "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."
                    },
                    "enableExpress": {
                      "type": "boolean",
                      "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of topic resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Topics"
        ],
        "operationId": "Topics_Delete",
        "description": "Deletes a topic from the specified namespace and resource group.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639404.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Topic successfully deleted."
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Topics"
        ],
        "operationId": "Topics_Get",
        "description": "Returns a description for the specified topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639399.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "x-ms-parameter-location": "method",
            "description": "The namespace name"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "description": "The topic name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        ],
        "responses": {
          "200": {
            "description": "Topic description successfully retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of topic resource.",
                  "type": "object",
                  "properties": {
                    "sizeInBytes": {
                      "readOnly": true,
                      "format": "int64",
                      "type": "integer",
                      "description": "Size of the topic, in bytes."
                    },
                    "createdAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Exact time the message was created."
                    },
                    "updatedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "The exact time the message was updated."
                    },
                    "accessedAt": {
                      "readOnly": true,
                      "format": "date-time",
                      "type": "string",
                      "description": "Last time the message was sent, or a request was received, for this topic."
                    },
                    "subscriptionCount": {
                      "readOnly": true,
                      "format": "int32",
                      "type": "integer",
                      "description": "Number of subscriptions."
                    },
                    "countDetails": {
                      "readOnly": true,
                      "description": "Message count details",
                      "type": "object",
                      "properties": {
                        "activeMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of active messages in the queue, topic, or subscription."
                        },
                        "deadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages that are dead lettered."
                        },
                        "scheduledMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of scheduled messages."
                        },
                        "transferMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred to another queue, topic, or subscription."
                        },
                        "transferDeadLetterMessageCount": {
                          "readOnly": true,
                          "format": "int64",
                          "type": "integer",
                          "description": "Number of messages transferred into dead letters."
                        }
                      }
                    },
                    "defaultMessageTimeToLive": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                    },
                    "maxSizeInMegabytes": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."
                    },
                    "maxMessageSizeInKilobytes": {
                      "format": "int64",
                      "type": "integer",
                      "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."
                    },
                    "requiresDuplicateDetection": {
                      "type": "boolean",
                      "description": "Value indicating if this topic requires duplicate detection."
                    },
                    "duplicateDetectionHistoryTimeWindow": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                    },
                    "enableBatchedOperations": {
                      "type": "boolean",
                      "description": "Value that indicates whether server-side batched operations are enabled."
                    },
                    "status": {
                      "description": "Enumerates the possible values for the status of a messaging entity.",
                      "type": "string",
                      "enum": [
                        "Active",
                        "Disabled",
                        "Restoring",
                        "SendDisabled",
                        "ReceiveDisabled",
                        "Creating",
                        "Deleting",
                        "Renaming",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": false
                      }
                    },
                    "supportOrdering": {
                      "type": "boolean",
                      "description": "Value that indicates whether the topic supports ordering."
                    },
                    "autoDeleteOnIdle": {
                      "format": "duration",
                      "type": "string",
                      "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                    },
                    "enablePartitioning": {
                      "type": "boolean",
                      "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."
                    },
                    "enableExpress": {
                      "type": "boolean",
                      "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The type of identity that last modified the resource."
                    }
                  }
                }
              },
              "description": "Description of topic resource."
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SBAuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "properties": {
                  "rights": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Manage",
                        "Send",
                        "Listen"
                      ],
                      "x-ms-enum": {
                        "name": "AccessRights",
                        "modelAsString": false
                      }
                    },
                    "description": "The rights associated with the rule."
                  }
                },
                "required": [
                  "rights"
                ],
                "description": "AuthorizationRule properties."
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Description of a namespace authorization rule."
          },
          "description": "Result of the List Authorization Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Authorization Rules."
        }
      },
      "description": "The response to the List Namespace operation."
    },
    "SBAuthorizationRule": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "rights": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "x-ms-enum": {
                  "name": "AccessRights",
                  "modelAsString": false
                }
              },
              "description": "The rights associated with the rule."
            }
          },
          "required": [
            "rights"
          ],
          "description": "AuthorizationRule properties."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Description of a namespace authorization rule."
    },
    "AccessKeys": {
      "type": "object",
      "properties": {
        "primaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Primary connection string of the created namespace authorization rule."
        },
        "secondaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Secondary connection string of the created namespace authorization rule."
        },
        "aliasPrimaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Primary connection string of the alias if GEO DR is enabled"
        },
        "aliasSecondaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Secondary  connection string of the alias if GEO DR is enabled"
        },
        "primaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "secondaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "keyName": {
          "readOnly": true,
          "type": "string",
          "description": "A string that describes the authorization rule."
        }
      },
      "description": "Namespace/ServiceBus Connection String"
    },
    "RegenerateAccessKeyParameters": {
      "type": "object",
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The access key to regenerate.",
          "enum": [
            "PrimaryKey",
            "SecondaryKey"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "key": {
          "type": "string",
          "description": "Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType"
        }
      },
      "required": [
        "keyType"
      ],
      "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset."
    },
    "CheckNameAvailability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Name to check the namespace name availability and The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number."
        }
      },
      "required": [
        "name"
      ],
      "description": "Description of a Check Name availability request properties."
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "properties": {
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The detailed info regarding the reason associated with the namespace."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Value indicating namespace is availability, true if the namespace is available; otherwise, false."
        },
        "reason": {
          "description": "The reason for unavailability of a namespace.",
          "type": "string",
          "enum": [
            "None",
            "InvalidName",
            "SubscriptionIsDisabled",
            "NameInUse",
            "NameInLockdown",
            "TooManyNamespaceInCurrentSubscription"
          ],
          "x-ms-enum": {
            "name": "UnavailableReason",
            "modelAsString": false
          }
        }
      },
      "description": "Description of a Check Name availability request properties."
    },
    "UnavailableReason": {
      "type": "string",
      "enum": [
        "None",
        "InvalidName",
        "SubscriptionIsDisabled",
        "NameInUse",
        "NameInLockdown",
        "TooManyNamespaceInCurrentSubscription"
      ],
      "x-ms-enum": {
        "name": "UnavailableReason",
        "modelAsString": false
      },
      "description": "Specifies the reason for the unavailability of the service."
    },
    "ArmDisasterRecovery": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
              "enum": [
                "Accepted",
                "Succeeded",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStateDR",
                "modelAsString": false
              }
            },
            "pendingReplicationOperationsCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of entities pending to be replicated."
            },
            "partnerNamespace": {
              "type": "string",
              "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
            },
            "alternateName": {
              "type": "string",
              "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
            },
            "role": {
              "readOnly": true,
              "type": "string",
              "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
              "enum": [
                "Primary",
                "PrimaryNotReplicating",
                "Secondary"
              ],
              "x-ms-enum": {
                "name": "RoleDisasterRecovery",
                "modelAsString": false
              }
            }
          },
          "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
    },
    "FailoverProperties": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "IsSafeFailover": {
              "type": "boolean",
              "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary."
            }
          },
          "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary."
        }
      },
      "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary."
    },
    "ArmDisasterRecoveryListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "properties": {
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                    "enum": [
                      "Accepted",
                      "Succeeded",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningStateDR",
                      "modelAsString": false
                    }
                  },
                  "pendingReplicationOperationsCount": {
                    "readOnly": true,
                    "format": "int64",
                    "type": "integer",
                    "description": "Number of entities pending to be replicated."
                  },
                  "partnerNamespace": {
                    "type": "string",
                    "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                  },
                  "alternateName": {
                    "type": "string",
                    "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                  },
                  "role": {
                    "readOnly": true,
                    "type": "string",
                    "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                    "enum": [
                      "Primary",
                      "PrimaryNotReplicating",
                      "Secondary"
                    ],
                    "x-ms-enum": {
                      "name": "RoleDisasterRecovery",
                      "modelAsString": false
                    }
                  }
                },
                "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation"
          },
          "description": "List of Alias(Disaster Recovery configurations)"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)"
        }
      },
      "description": "The result of the List Alias(Disaster Recovery configuration) operation."
    },
    "SBQueueListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Queue Properties",
                "type": "object",
                "properties": {
                  "countDetails": {
                    "readOnly": true,
                    "description": "Message Count Details.",
                    "type": "object",
                    "properties": {
                      "activeMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of active messages in the queue, topic, or subscription."
                      },
                      "deadLetterMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of messages that are dead lettered."
                      },
                      "scheduledMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of scheduled messages."
                      },
                      "transferMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of messages transferred to another queue, topic, or subscription."
                      },
                      "transferDeadLetterMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of messages transferred into dead letters."
                      }
                    }
                  },
                  "createdAt": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "The exact time the message was created."
                  },
                  "updatedAt": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "The exact time the message was updated."
                  },
                  "accessedAt": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "Last time a message was sent, or the last time there was a receive request to this queue."
                  },
                  "sizeInBytes": {
                    "readOnly": true,
                    "format": "int64",
                    "type": "integer",
                    "description": "The size of the queue, in bytes."
                  },
                  "messageCount": {
                    "readOnly": true,
                    "format": "int64",
                    "type": "integer",
                    "description": "The number of messages in the queue."
                  },
                  "lockDuration": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
                  },
                  "maxSizeInMegabytes": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024."
                  },
                  "maxMessageSizeInKilobytes": {
                    "format": "int64",
                    "type": "integer",
                    "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024."
                  },
                  "requiresDuplicateDetection": {
                    "type": "boolean",
                    "description": "A value indicating if this queue requires duplicate detection."
                  },
                  "requiresSession": {
                    "type": "boolean",
                    "description": "A value that indicates whether the queue supports the concept of sessions."
                  },
                  "defaultMessageTimeToLive": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                  },
                  "deadLetteringOnMessageExpiration": {
                    "type": "boolean",
                    "description": "A value that indicates whether this queue has dead letter support when a message expires."
                  },
                  "duplicateDetectionHistoryTimeWindow": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                  },
                  "maxDeliveryCount": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10."
                  },
                  "status": {
                    "description": "Enumerates the possible values for the status of a messaging entity.",
                    "type": "string",
                    "enum": [
                      "Active",
                      "Disabled",
                      "Restoring",
                      "SendDisabled",
                      "ReceiveDisabled",
                      "Creating",
                      "Deleting",
                      "Renaming",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "EntityStatus",
                      "modelAsString": false
                    }
                  },
                  "enableBatchedOperations": {
                    "type": "boolean",
                    "description": "Value that indicates whether server-side batched operations are enabled."
                  },
                  "autoDeleteOnIdle": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
                  },
                  "enablePartitioning": {
                    "type": "boolean",
                    "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers."
                  },
                  "enableExpress": {
                    "type": "boolean",
                    "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
                  },
                  "forwardTo": {
                    "type": "string",
                    "description": "Queue/Topic name to forward the messages"
                  },
                  "forwardDeadLetteredMessagesTo": {
                    "type": "string",
                    "description": "Queue/Topic name to forward the Dead Letter message"
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Description of queue Resource."
          },
          "description": "Result of the List Queues operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of queues."
        }
      },
      "description": "The response to the List Queues operation."
    },
    "SBQueue": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Queue Properties",
          "type": "object",
          "properties": {
            "countDetails": {
              "readOnly": true,
              "description": "Message Count Details.",
              "type": "object",
              "properties": {
                "activeMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of active messages in the queue, topic, or subscription."
                },
                "deadLetterMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of messages that are dead lettered."
                },
                "scheduledMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of scheduled messages."
                },
                "transferMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of messages transferred to another queue, topic, or subscription."
                },
                "transferDeadLetterMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of messages transferred into dead letters."
                }
              }
            },
            "createdAt": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "The exact time the message was created."
            },
            "updatedAt": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "The exact time the message was updated."
            },
            "accessedAt": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Last time a message was sent, or the last time there was a receive request to this queue."
            },
            "sizeInBytes": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "The size of the queue, in bytes."
            },
            "messageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "The number of messages in the queue."
            },
            "lockDuration": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
            },
            "maxSizeInMegabytes": {
              "format": "int32",
              "type": "integer",
              "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024."
            },
            "maxMessageSizeInKilobytes": {
              "format": "int64",
              "type": "integer",
              "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024."
            },
            "requiresDuplicateDetection": {
              "type": "boolean",
              "description": "A value indicating if this queue requires duplicate detection."
            },
            "requiresSession": {
              "type": "boolean",
              "description": "A value that indicates whether the queue supports the concept of sessions."
            },
            "defaultMessageTimeToLive": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
            },
            "deadLetteringOnMessageExpiration": {
              "type": "boolean",
              "description": "A value that indicates whether this queue has dead letter support when a message expires."
            },
            "duplicateDetectionHistoryTimeWindow": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
            },
            "maxDeliveryCount": {
              "format": "int32",
              "type": "integer",
              "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10."
            },
            "status": {
              "description": "Enumerates the possible values for the status of a messaging entity.",
              "type": "string",
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "EntityStatus",
                "modelAsString": false
              }
            },
            "enableBatchedOperations": {
              "type": "boolean",
              "description": "Value that indicates whether server-side batched operations are enabled."
            },
            "autoDeleteOnIdle": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
            },
            "enablePartitioning": {
              "type": "boolean",
              "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers."
            },
            "enableExpress": {
              "type": "boolean",
              "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
            },
            "forwardTo": {
              "type": "string",
              "description": "Queue/Topic name to forward the messages"
            },
            "forwardDeadLetteredMessagesTo": {
              "type": "string",
              "description": "Queue/Topic name to forward the Dead Letter message"
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Description of queue Resource."
    },
    "SBQueueProperties": {
      "type": "object",
      "properties": {
        "countDetails": {
          "readOnly": true,
          "description": "Message Count Details.",
          "type": "object",
          "properties": {
            "activeMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of active messages in the queue, topic, or subscription."
            },
            "deadLetterMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages that are dead lettered."
            },
            "scheduledMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of scheduled messages."
            },
            "transferMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages transferred to another queue, topic, or subscription."
            },
            "transferDeadLetterMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages transferred into dead letters."
            }
          }
        },
        "createdAt": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was created."
        },
        "updatedAt": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was updated."
        },
        "accessedAt": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Last time a message was sent, or the last time there was a receive request to this queue."
        },
        "sizeInBytes": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "The size of the queue, in bytes."
        },
        "messageCount": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "The number of messages in the queue."
        },
        "lockDuration": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
        },
        "maxSizeInMegabytes": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024."
        },
        "maxMessageSizeInKilobytes": {
          "format": "int64",
          "type": "integer",
          "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024."
        },
        "requiresDuplicateDetection": {
          "type": "boolean",
          "description": "A value indicating if this queue requires duplicate detection."
        },
        "requiresSession": {
          "type": "boolean",
          "description": "A value that indicates whether the queue supports the concept of sessions."
        },
        "defaultMessageTimeToLive": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "deadLetteringOnMessageExpiration": {
          "type": "boolean",
          "description": "A value that indicates whether this queue has dead letter support when a message expires."
        },
        "duplicateDetectionHistoryTimeWindow": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
        },
        "maxDeliveryCount": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10."
        },
        "status": {
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "type": "string",
          "enum": [
            "Active",
            "Disabled",
            "Restoring",
            "SendDisabled",
            "ReceiveDisabled",
            "Creating",
            "Deleting",
            "Renaming",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EntityStatus",
            "modelAsString": false
          }
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "Value that indicates whether server-side batched operations are enabled."
        },
        "autoDeleteOnIdle": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
        },
        "enablePartitioning": {
          "type": "boolean",
          "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers."
        },
        "enableExpress": {
          "type": "boolean",
          "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
        },
        "forwardTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the messages"
        },
        "forwardDeadLetteredMessagesTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the Dead Letter message"
        }
      },
      "description": "The Queue Properties definition."
    },
    "Rule": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of Rule resource",
          "type": "object",
          "properties": {
            "action": {
              "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
              "type": "object",
              "properties": {
                "sqlExpression": {
                  "type": "string",
                  "description": "SQL expression. e.g. MyProperty='ABC'"
                },
                "compatibilityLevel": {
                  "format": "int32",
                  "type": "integer",
                  "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                },
                "requiresPreprocessing": {
                  "type": "boolean",
                  "default": true,
                  "description": "Value that indicates whether the rule action requires preprocessing."
                }
              }
            },
            "filterType": {
              "description": "Filter type that is evaluated against a BrokeredMessage.",
              "type": "string",
              "enum": [
                "SqlFilter",
                "CorrelationFilter"
              ],
              "x-ms-enum": {
                "name": "FilterType",
                "modelAsString": false
              }
            },
            "sqlFilter": {
              "description": "Properties of sqlFilter",
              "type": "object",
              "properties": {
                "sqlExpression": {
                  "type": "string",
                  "description": "The SQL expression. e.g. MyProperty='ABC'"
                },
                "compatibilityLevel": {
                  "format": "int32",
                  "type": "integer",
                  "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                },
                "requiresPreprocessing": {
                  "type": "boolean",
                  "default": true,
                  "description": "Value that indicates whether the rule action requires preprocessing."
                }
              }
            },
            "correlationFilter": {
              "description": "Properties of correlationFilter",
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "dictionary object for custom filters"
                },
                "correlationId": {
                  "type": "string",
                  "description": "Identifier of the correlation."
                },
                "messageId": {
                  "type": "string",
                  "description": "Identifier of the message."
                },
                "to": {
                  "type": "string",
                  "description": "Address to send to."
                },
                "replyTo": {
                  "type": "string",
                  "description": "Address of the queue to reply to."
                },
                "label": {
                  "type": "string",
                  "description": "Application specific label."
                },
                "sessionId": {
                  "type": "string",
                  "description": "Session identifier."
                },
                "replyToSessionId": {
                  "type": "string",
                  "description": "Session identifier to reply to."
                },
                "contentType": {
                  "type": "string",
                  "description": "Content type of the message."
                },
                "requiresPreprocessing": {
                  "type": "boolean",
                  "default": true,
                  "description": "Value that indicates whether the rule action requires preprocessing."
                }
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Description of Rule Resource."
    },
    "Ruleproperties": {
      "type": "object",
      "properties": {
        "action": {
          "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
          "type": "object",
          "properties": {
            "sqlExpression": {
              "type": "string",
              "description": "SQL expression. e.g. MyProperty='ABC'"
            },
            "compatibilityLevel": {
              "format": "int32",
              "type": "integer",
              "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
            },
            "requiresPreprocessing": {
              "type": "boolean",
              "default": true,
              "description": "Value that indicates whether the rule action requires preprocessing."
            }
          }
        },
        "filterType": {
          "description": "Filter type that is evaluated against a BrokeredMessage.",
          "type": "string",
          "enum": [
            "SqlFilter",
            "CorrelationFilter"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": false
          }
        },
        "sqlFilter": {
          "description": "Properties of sqlFilter",
          "type": "object",
          "properties": {
            "sqlExpression": {
              "type": "string",
              "description": "The SQL expression. e.g. MyProperty='ABC'"
            },
            "compatibilityLevel": {
              "format": "int32",
              "type": "integer",
              "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
            },
            "requiresPreprocessing": {
              "type": "boolean",
              "default": true,
              "description": "Value that indicates whether the rule action requires preprocessing."
            }
          }
        },
        "correlationFilter": {
          "description": "Properties of correlationFilter",
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "dictionary object for custom filters"
            },
            "correlationId": {
              "type": "string",
              "description": "Identifier of the correlation."
            },
            "messageId": {
              "type": "string",
              "description": "Identifier of the message."
            },
            "to": {
              "type": "string",
              "description": "Address to send to."
            },
            "replyTo": {
              "type": "string",
              "description": "Address of the queue to reply to."
            },
            "label": {
              "type": "string",
              "description": "Application specific label."
            },
            "sessionId": {
              "type": "string",
              "description": "Session identifier."
            },
            "replyToSessionId": {
              "type": "string",
              "description": "Session identifier to reply to."
            },
            "contentType": {
              "type": "string",
              "description": "Content type of the message."
            },
            "requiresPreprocessing": {
              "type": "boolean",
              "default": true,
              "description": "Value that indicates whether the rule action requires preprocessing."
            }
          }
        }
      },
      "description": "Description of Rule Resource."
    },
    "RuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of Rule resource",
                "type": "object",
                "properties": {
                  "action": {
                    "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
                    "type": "object",
                    "properties": {
                      "sqlExpression": {
                        "type": "string",
                        "description": "SQL expression. e.g. MyProperty='ABC'"
                      },
                      "compatibilityLevel": {
                        "format": "int32",
                        "type": "integer",
                        "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                      },
                      "requiresPreprocessing": {
                        "type": "boolean",
                        "default": true,
                        "description": "Value that indicates whether the rule action requires preprocessing."
                      }
                    }
                  },
                  "filterType": {
                    "description": "Filter type that is evaluated against a BrokeredMessage.",
                    "type": "string",
                    "enum": [
                      "SqlFilter",
                      "CorrelationFilter"
                    ],
                    "x-ms-enum": {
                      "name": "FilterType",
                      "modelAsString": false
                    }
                  },
                  "sqlFilter": {
                    "description": "Properties of sqlFilter",
                    "type": "object",
                    "properties": {
                      "sqlExpression": {
                        "type": "string",
                        "description": "The SQL expression. e.g. MyProperty='ABC'"
                      },
                      "compatibilityLevel": {
                        "format": "int32",
                        "type": "integer",
                        "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
                      },
                      "requiresPreprocessing": {
                        "type": "boolean",
                        "default": true,
                        "description": "Value that indicates whether the rule action requires preprocessing."
                      }
                    }
                  },
                  "correlationFilter": {
                    "description": "Properties of correlationFilter",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "dictionary object for custom filters"
                      },
                      "correlationId": {
                        "type": "string",
                        "description": "Identifier of the correlation."
                      },
                      "messageId": {
                        "type": "string",
                        "description": "Identifier of the message."
                      },
                      "to": {
                        "type": "string",
                        "description": "Address to send to."
                      },
                      "replyTo": {
                        "type": "string",
                        "description": "Address of the queue to reply to."
                      },
                      "label": {
                        "type": "string",
                        "description": "Application specific label."
                      },
                      "sessionId": {
                        "type": "string",
                        "description": "Session identifier."
                      },
                      "replyToSessionId": {
                        "type": "string",
                        "description": "Session identifier to reply to."
                      },
                      "contentType": {
                        "type": "string",
                        "description": "Content type of the message."
                      },
                      "requiresPreprocessing": {
                        "type": "boolean",
                        "default": true,
                        "description": "Value that indicates whether the rule action requires preprocessing."
                      }
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Description of Rule Resource."
          },
          "description": "Result of the List Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of rules"
        }
      },
      "description": "The response of the List rule operation."
    },
    "FilterType": {
      "type": "string",
      "enum": [
        "SqlFilter",
        "CorrelationFilter"
      ],
      "x-ms-enum": {
        "name": "FilterType",
        "modelAsString": false
      },
      "description": "Rule filter types"
    },
    "SqlFilter": {
      "type": "object",
      "properties": {
        "sqlExpression": {
          "type": "string",
          "description": "The SQL expression. e.g. MyProperty='ABC'"
        },
        "compatibilityLevel": {
          "format": "int32",
          "type": "integer",
          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
        },
        "requiresPreprocessing": {
          "type": "boolean",
          "default": true,
          "description": "Value that indicates whether the rule action requires preprocessing."
        }
      },
      "description": "Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline."
    },
    "CorrelationFilter": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "dictionary object for custom filters"
        },
        "correlationId": {
          "type": "string",
          "description": "Identifier of the correlation."
        },
        "messageId": {
          "type": "string",
          "description": "Identifier of the message."
        },
        "to": {
          "type": "string",
          "description": "Address to send to."
        },
        "replyTo": {
          "type": "string",
          "description": "Address of the queue to reply to."
        },
        "label": {
          "type": "string",
          "description": "Application specific label."
        },
        "sessionId": {
          "type": "string",
          "description": "Session identifier."
        },
        "replyToSessionId": {
          "type": "string",
          "description": "Session identifier to reply to."
        },
        "contentType": {
          "type": "string",
          "description": "Content type of the message."
        },
        "requiresPreprocessing": {
          "type": "boolean",
          "default": true,
          "description": "Value that indicates whether the rule action requires preprocessing."
        }
      },
      "description": "Represents the correlation filter expression."
    },
    "Action": {
      "type": "object",
      "properties": {
        "sqlExpression": {
          "type": "string",
          "description": "SQL expression. e.g. MyProperty='ABC'"
        },
        "compatibilityLevel": {
          "format": "int32",
          "type": "integer",
          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
        },
        "requiresPreprocessing": {
          "type": "boolean",
          "default": true,
          "description": "Value that indicates whether the rule action requires preprocessing."
        }
      },
      "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression."
    },
    "SqlRuleAction": {
      "type": "object",
      "properties": {
        "sqlExpression": {
          "type": "string",
          "description": "SQL expression. e.g. MyProperty='ABC'"
        },
        "compatibilityLevel": {
          "format": "int32",
          "type": "integer",
          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
        },
        "requiresPreprocessing": {
          "type": "boolean",
          "default": true,
          "description": "Value that indicates whether the rule action requires preprocessing."
        }
      },
      "allOf": [
        {
          "type": "object",
          "properties": {
            "sqlExpression": {
              "type": "string",
              "description": "SQL expression. e.g. MyProperty='ABC'"
            },
            "compatibilityLevel": {
              "format": "int32",
              "type": "integer",
              "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
            },
            "requiresPreprocessing": {
              "type": "boolean",
              "default": true,
              "description": "Value that indicates whether the rule action requires preprocessing."
            }
          },
          "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression."
        }
      ],
      "description": "Represents set of actions written in SQL language-based syntax that is performed against a ServiceBus.Messaging.BrokeredMessage "
    },
    "MigrationConfigProperties": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Provisioning state of Migration Configuration "
            },
            "pendingReplicationOperationsCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of entities pending to be replicated."
            },
            "targetNamespace": {
              "type": "string",
              "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration"
            },
            "postMigrationName": {
              "type": "string",
              "description": "Name to access Standard Namespace after migration"
            },
            "migrationState": {
              "readOnly": true,
              "type": "string",
              "description": "State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active"
            }
          },
          "required": [
            "targetNamespace",
            "postMigrationName"
          ],
          "description": "Properties required to the Create Migration Configuration"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Single item in List or Get Migration Config operation"
    },
    "MigrationConfigListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "properties": {
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Provisioning state of Migration Configuration "
                  },
                  "pendingReplicationOperationsCount": {
                    "readOnly": true,
                    "format": "int64",
                    "type": "integer",
                    "description": "Number of entities pending to be replicated."
                  },
                  "targetNamespace": {
                    "type": "string",
                    "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration"
                  },
                  "postMigrationName": {
                    "type": "string",
                    "description": "Name to access Standard Namespace after migration"
                  },
                  "migrationState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active"
                  }
                },
                "required": [
                  "targetNamespace",
                  "postMigrationName"
                ],
                "description": "Properties required to the Create Migration Configuration"
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Single item in List or Get Migration Config operation"
          },
          "description": "List of Migration Configs"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of migrationConfigurations"
        }
      },
      "description": "The result of the List migrationConfigurations operation."
    },
    "ResourceNamespacePatch": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The Resource definition."
    },
    "SBNamespaceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "Resource Id"
              },
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "Resource name"
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "Resource type"
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The Geo-location where the resource lives"
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags"
              },
              "sku": {
                "description": "Properties of SKU",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of this SKU.",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": false
                    }
                  },
                  "tier": {
                    "type": "string",
                    "description": "The billing tier of this particular SKU.",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": false
                    }
                  },
                  "capacity": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "identity": {
                "description": "Properties of BYOK Identity description",
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "ObjectId from the KeyVault",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "TenantId from the KeyVault",
                    "readOnly": true
                  },
                  "type": {
                    "description": "Type of managed service identity.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned",
                      "None"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": false
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "additionalProperties": {
                      "description": "Recognized Dictionary value.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "description": "Principal Id of user assigned identity",
                          "type": "string",
                          "x-ms-client-name": "PrincipalId",
                          "readOnly": true
                        },
                        "clientId": {
                          "description": "Client Id of user assigned identity",
                          "type": "string",
                          "x-ms-client-name": "ClientId",
                          "readOnly": true
                        }
                      }
                    },
                    "description": "Properties for User Assigned Identities"
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of the namespace.",
                "type": "object",
                "properties": {
                  "minimumTlsVersion": {
                    "type": "string",
                    "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
                    "enum": [
                      "1.0",
                      "1.1",
                      "1.2"
                    ],
                    "x-ms-enum": {
                      "name": "TlsVersion",
                      "modelAsString": true
                    }
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Provisioning state of the namespace."
                  },
                  "status": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Status of the namespace."
                  },
                  "createdAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "The time the namespace was created"
                  },
                  "updatedAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "The time the namespace was updated."
                  },
                  "serviceBusEndpoint": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Endpoint you can use to perform Service Bus operations."
                  },
                  "metricId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Identifier for Azure Insights metrics"
                  },
                  "zoneRedundant": {
                    "type": "boolean",
                    "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "encryption": {
                    "description": "Properties of BYOK Encryption description",
                    "type": "object",
                    "x-ms-client-flatten": true,
                    "properties": {
                      "keyVaultProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyName": {
                              "type": "string",
                              "description": "Name of the Key from KeyVault"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "description": "Uri of KeyVault"
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "Version of KeyVault"
                            },
                            "identity": {
                              "type": "object",
                              "x-ms-client-flatten": true,
                              "properties": {
                                "userAssignedIdentity": {
                                  "type": "string",
                                  "description": "ARM ID of user Identity selected for encryption"
                                }
                              }
                            }
                          },
                          "description": "Properties to configure keyVault Properties"
                        },
                        "x-ms-client-name": "KeyVaultProperties",
                        "description": "Properties of KeyVault"
                      },
                      "keySource": {
                        "type": "string",
                        "description": "Enumerates the possible value of keySource for Encryption",
                        "default": "Microsoft.KeyVault",
                        "enum": [
                          "Microsoft.KeyVault"
                        ],
                        "x-ms-enum": {
                          "name": "keySource",
                          "modelAsString": false
                        }
                      },
                      "requireInfrastructureEncryption": {
                        "type": "boolean",
                        "description": "Enable Infrastructure Encryption (Double Encryption)"
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "description": "List of private endpoint connections.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Properties of the PrivateEndpointConnection.",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                        },
                        "location": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The geo-location where the resource lives"
                        },
                        "properties": {
                          "description": "Properties of the PrivateEndpointConnection.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "The Private Endpoint resource for this Connection.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The ARM identifier for Private Endpoint.",
                                  "type": "string"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Details about the state of the connection.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Status of the connection.",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "PrivateLinkConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "description": "Description of the connection state.",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the Private Endpoint Connection.",
                              "enum": [
                                "Creating",
                                "Updating",
                                "Deleting",
                                "Succeeded",
                                "Canceled",
                                "Failed"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "EndPointProvisioningState",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "systemData": {
                          "readOnly": true,
                          "description": "The system meta data relating to this resource.",
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The type of identity that last modified the resource."
                            }
                          }
                        }
                      }
                    }
                  },
                  "disableLocalAuth": {
                    "type": "boolean",
                    "description": "This property disables SAS authentication for the Service Bus namespace."
                  },
                  "alternateName": {
                    "type": "string",
                    "description": "Alternate name for namespace"
                  },
                  "publicNetworkAccess": {
                    "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                    "enum": [
                      "Enabled",
                      "Disabled",
                      "SecuredByPerimeter"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "default": "Enabled"
                  },
                  "premiumMessagingPartitions": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
                  }
                }
              }
            },
            "description": "Description of a namespace resource."
          },
          "description": "Result of the List Namespace operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "SBNamespace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The Geo-location where the resource lives"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags"
        },
        "sku": {
          "description": "Properties of SKU",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of this SKU.",
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false
              }
            },
            "tier": {
              "type": "string",
              "description": "The billing tier of this particular SKU.",
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "capacity": {
              "format": "int32",
              "type": "integer",
              "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
            }
          },
          "required": [
            "name"
          ]
        },
        "identity": {
          "description": "Properties of BYOK Identity description",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "principalId": {
              "type": "string",
              "description": "ObjectId from the KeyVault",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "TenantId from the KeyVault",
              "readOnly": true
            },
            "type": {
              "description": "Type of managed service identity.",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "additionalProperties": {
                "description": "Recognized Dictionary value.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "Principal Id of user assigned identity",
                    "type": "string",
                    "x-ms-client-name": "PrincipalId",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "Client Id of user assigned identity",
                    "type": "string",
                    "x-ms-client-name": "ClientId",
                    "readOnly": true
                  }
                }
              },
              "description": "Properties for User Assigned Identities"
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the namespace.",
          "type": "object",
          "properties": {
            "minimumTlsVersion": {
              "type": "string",
              "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Provisioning state of the namespace."
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "description": "Status of the namespace."
            },
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the namespace was created"
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the namespace was updated."
            },
            "serviceBusEndpoint": {
              "readOnly": true,
              "type": "string",
              "description": "Endpoint you can use to perform Service Bus operations."
            },
            "metricId": {
              "readOnly": true,
              "type": "string",
              "description": "Identifier for Azure Insights metrics"
            },
            "zoneRedundant": {
              "type": "boolean",
              "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "encryption": {
              "description": "Properties of BYOK Encryption description",
              "type": "object",
              "x-ms-client-flatten": true,
              "properties": {
                "keyVaultProperties": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "keyName": {
                        "type": "string",
                        "description": "Name of the Key from KeyVault"
                      },
                      "keyVaultUri": {
                        "type": "string",
                        "description": "Uri of KeyVault"
                      },
                      "keyVersion": {
                        "type": "string",
                        "description": "Version of KeyVault"
                      },
                      "identity": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "ARM ID of user Identity selected for encryption"
                          }
                        }
                      }
                    },
                    "description": "Properties to configure keyVault Properties"
                  },
                  "x-ms-client-name": "KeyVaultProperties",
                  "description": "Properties of KeyVault"
                },
                "keySource": {
                  "type": "string",
                  "description": "Enumerates the possible value of keySource for Encryption",
                  "default": "Microsoft.KeyVault",
                  "enum": [
                    "Microsoft.KeyVault"
                  ],
                  "x-ms-enum": {
                    "name": "keySource",
                    "modelAsString": false
                  }
                },
                "requireInfrastructureEncryption": {
                  "type": "boolean",
                  "description": "Enable Infrastructure Encryption (Double Encryption)"
                }
              }
            },
            "privateEndpointConnections": {
              "description": "List of private endpoint connections.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Properties of the PrivateEndpointConnection.",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                  },
                  "location": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The geo-location where the resource lives"
                  },
                  "properties": {
                    "description": "Properties of the PrivateEndpointConnection.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The Private Endpoint resource for this Connection.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The ARM identifier for Private Endpoint.",
                            "type": "string"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Details about the state of the connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Status of the connection.",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrivateLinkConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "Description of the connection state.",
                            "type": "string"
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the Private Endpoint Connection.",
                        "enum": [
                          "Creating",
                          "Updating",
                          "Deleting",
                          "Succeeded",
                          "Canceled",
                          "Failed"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "EndPointProvisioningState",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "systemData": {
                    "readOnly": true,
                    "description": "The system meta data relating to this resource.",
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The type of identity that last modified the resource."
                      }
                    }
                  }
                }
              }
            },
            "disableLocalAuth": {
              "type": "boolean",
              "description": "This property disables SAS authentication for the Service Bus namespace."
            },
            "alternateName": {
              "type": "string",
              "description": "Alternate name for namespace"
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled.",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "premiumMessagingPartitions": {
              "format": "int32",
              "type": "integer",
              "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
            }
          }
        }
      },
      "description": "Description of a namespace resource."
    },
    "SBNamespaceUpdateParameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "sku": {
          "description": "Properties of SKU",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of this SKU.",
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false
              }
            },
            "tier": {
              "type": "string",
              "description": "The billing tier of this particular SKU.",
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "capacity": {
              "format": "int32",
              "type": "integer",
              "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
            }
          },
          "required": [
            "name"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the namespace.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Provisioning state of the namespace."
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "description": "Status of the namespace."
            },
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the namespace was created"
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the namespace was updated."
            },
            "serviceBusEndpoint": {
              "readOnly": true,
              "type": "string",
              "description": "Endpoint you can use to perform Service Bus operations."
            },
            "metricId": {
              "readOnly": true,
              "type": "string",
              "description": "Identifier for Azure Insights metrics"
            },
            "encryption": {
              "description": "Properties of BYOK Encryption description",
              "type": "object",
              "x-ms-client-flatten": true,
              "properties": {
                "keyVaultProperties": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "keyName": {
                        "type": "string",
                        "description": "Name of the Key from KeyVault"
                      },
                      "keyVaultUri": {
                        "type": "string",
                        "description": "Uri of KeyVault"
                      },
                      "keyVersion": {
                        "type": "string",
                        "description": "Version of KeyVault"
                      },
                      "identity": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "ARM ID of user Identity selected for encryption"
                          }
                        }
                      }
                    },
                    "description": "Properties to configure keyVault Properties"
                  },
                  "x-ms-client-name": "KeyVaultProperties",
                  "description": "Properties of KeyVault"
                },
                "keySource": {
                  "type": "string",
                  "description": "Enumerates the possible value of keySource for Encryption",
                  "default": "Microsoft.KeyVault",
                  "enum": [
                    "Microsoft.KeyVault"
                  ],
                  "x-ms-enum": {
                    "name": "keySource",
                    "modelAsString": false
                  }
                },
                "requireInfrastructureEncryption": {
                  "type": "boolean",
                  "description": "Enable Infrastructure Encryption (Double Encryption)"
                }
              }
            },
            "privateEndpointConnections": {
              "description": "List of private endpoint connections.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Properties of the PrivateEndpointConnection.",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
                  },
                  "location": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The geo-location where the resource lives"
                  },
                  "properties": {
                    "description": "Properties of the PrivateEndpointConnection.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "The Private Endpoint resource for this Connection.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The ARM identifier for Private Endpoint.",
                            "type": "string"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Details about the state of the connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Status of the connection.",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PrivateLinkConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "Description of the connection state.",
                            "type": "string"
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the Private Endpoint Connection.",
                        "enum": [
                          "Creating",
                          "Updating",
                          "Deleting",
                          "Succeeded",
                          "Canceled",
                          "Failed"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "EndPointProvisioningState",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "systemData": {
                    "readOnly": true,
                    "description": "The system meta data relating to this resource.",
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The type of identity that last modified the resource."
                      }
                    }
                  }
                }
              }
            },
            "disableLocalAuth": {
              "type": "boolean",
              "description": "This property disables SAS authentication for the Service Bus namespace."
            },
            "alternateName": {
              "type": "string",
              "description": "Alternate name for namespace"
            }
          }
        },
        "identity": {
          "description": "Properties of BYOK Identity description",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "principalId": {
              "type": "string",
              "description": "ObjectId from the KeyVault",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "TenantId from the KeyVault",
              "readOnly": true
            },
            "type": {
              "description": "Type of managed service identity.",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "additionalProperties": {
                "description": "Recognized Dictionary value.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "Principal Id of user assigned identity",
                    "type": "string",
                    "x-ms-client-name": "PrincipalId",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "Client Id of user assigned identity",
                    "type": "string",
                    "x-ms-client-name": "ClientId",
                    "readOnly": true
                  }
                }
              },
              "description": "Properties for User Assigned Identities"
            }
          }
        }
      },
      "description": "Description of a namespace resource."
    },
    "SBNamespaceProperties": {
      "type": "object",
      "properties": {
        "minimumTlsVersion": {
          "type": "string",
          "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Provisioning state of the namespace."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Status of the namespace."
        },
        "createdAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The time the namespace was created"
        },
        "updatedAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The time the namespace was updated."
        },
        "serviceBusEndpoint": {
          "readOnly": true,
          "type": "string",
          "description": "Endpoint you can use to perform Service Bus operations."
        },
        "metricId": {
          "readOnly": true,
          "type": "string",
          "description": "Identifier for Azure Insights metrics"
        },
        "zoneRedundant": {
          "type": "boolean",
          "description": "This property reflects if zone redundancy has been enabled for namespaces in regions that support availability zones.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "encryption": {
          "description": "Properties of BYOK Encryption description",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "keyVaultProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "keyName": {
                    "type": "string",
                    "description": "Name of the Key from KeyVault"
                  },
                  "keyVaultUri": {
                    "type": "string",
                    "description": "Uri of KeyVault"
                  },
                  "keyVersion": {
                    "type": "string",
                    "description": "Version of KeyVault"
                  },
                  "identity": {
                    "type": "object",
                    "x-ms-client-flatten": true,
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "ARM ID of user Identity selected for encryption"
                      }
                    }
                  }
                },
                "description": "Properties to configure keyVault Properties"
              },
              "x-ms-client-name": "KeyVaultProperties",
              "description": "Properties of KeyVault"
            },
            "keySource": {
              "type": "string",
              "description": "Enumerates the possible value of keySource for Encryption",
              "default": "Microsoft.KeyVault",
              "enum": [
                "Microsoft.KeyVault"
              ],
              "x-ms-enum": {
                "name": "keySource",
                "modelAsString": false
              }
            },
            "requireInfrastructureEncryption": {
              "type": "boolean",
              "description": "Enable Infrastructure Encryption (Double Encryption)"
            }
          }
        },
        "privateEndpointConnections": {
          "description": "List of private endpoint connections.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Properties of the PrivateEndpointConnection.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "Properties of the PrivateEndpointConnection.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The Private Endpoint resource for this Connection.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The ARM identifier for Private Endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Details about the state of the connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of the connection.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PrivateLinkConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "description": "Description of the connection state.",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Private Endpoint Connection.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "EndPointProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            }
          }
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "This property disables SAS authentication for the Service Bus namespace."
        },
        "alternateName": {
          "type": "string",
          "description": "Alternate name for namespace"
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.",
          "enum": [
            "Enabled",
            "Disabled",
            "SecuredByPerimeter"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "premiumMessagingPartitions": {
          "format": "int32",
          "type": "integer",
          "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
        }
      },
      "description": "Properties of the namespace."
    },
    "SBNamespaceUpdateProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Provisioning state of the namespace."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Status of the namespace."
        },
        "createdAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The time the namespace was created"
        },
        "updatedAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The time the namespace was updated."
        },
        "serviceBusEndpoint": {
          "readOnly": true,
          "type": "string",
          "description": "Endpoint you can use to perform Service Bus operations."
        },
        "metricId": {
          "readOnly": true,
          "type": "string",
          "description": "Identifier for Azure Insights metrics"
        },
        "encryption": {
          "description": "Properties of BYOK Encryption description",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "keyVaultProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "keyName": {
                    "type": "string",
                    "description": "Name of the Key from KeyVault"
                  },
                  "keyVaultUri": {
                    "type": "string",
                    "description": "Uri of KeyVault"
                  },
                  "keyVersion": {
                    "type": "string",
                    "description": "Version of KeyVault"
                  },
                  "identity": {
                    "type": "object",
                    "x-ms-client-flatten": true,
                    "properties": {
                      "userAssignedIdentity": {
                        "type": "string",
                        "description": "ARM ID of user Identity selected for encryption"
                      }
                    }
                  }
                },
                "description": "Properties to configure keyVault Properties"
              },
              "x-ms-client-name": "KeyVaultProperties",
              "description": "Properties of KeyVault"
            },
            "keySource": {
              "type": "string",
              "description": "Enumerates the possible value of keySource for Encryption",
              "default": "Microsoft.KeyVault",
              "enum": [
                "Microsoft.KeyVault"
              ],
              "x-ms-enum": {
                "name": "keySource",
                "modelAsString": false
              }
            },
            "requireInfrastructureEncryption": {
              "type": "boolean",
              "description": "Enable Infrastructure Encryption (Double Encryption)"
            }
          }
        },
        "privateEndpointConnections": {
          "description": "List of private endpoint connections.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Properties of the PrivateEndpointConnection.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "Properties of the PrivateEndpointConnection.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The Private Endpoint resource for this Connection.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The ARM identifier for Private Endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Details about the state of the connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of the connection.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PrivateLinkConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "description": "Description of the connection state.",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Private Endpoint Connection.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "EndPointProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            }
          }
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "This property disables SAS authentication for the Service Bus namespace."
        },
        "alternateName": {
          "type": "string",
          "description": "Alternate name for namespace"
        }
      },
      "description": "Properties of the namespace."
    },
    "SBSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false
          }
        },
        "tier": {
          "type": "string",
          "description": "The billing tier of this particular SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          }
        },
        "capacity": {
          "format": "int32",
          "type": "integer",
          "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
        }
      },
      "required": [
        "name"
      ],
      "description": "SKU of the namespace."
    },
    "Identity": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault",
          "readOnly": true
        },
        "type": {
          "description": "Type of managed service identity.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "description": "Recognized Dictionary value.",
            "type": "object",
            "properties": {
              "principalId": {
                "description": "Principal Id of user assigned identity",
                "type": "string",
                "x-ms-client-name": "PrincipalId",
                "readOnly": true
              },
              "clientId": {
                "description": "Client Id of user assigned identity",
                "type": "string",
                "x-ms-client-name": "ClientId",
                "readOnly": true
              }
            }
          },
          "description": "Properties for User Assigned Identities"
        }
      },
      "description": "Properties to configure User Assigned Identities for Bring your Own Keys"
    },
    "UserAssignedIdentity": {
      "description": "Recognized Dictionary value.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Principal Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "PrincipalId",
          "readOnly": true
        },
        "clientId": {
          "description": "Client Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "ClientId",
          "readOnly": true
        }
      }
    },
    "Encryption": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "keyVaultProperties": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "keyName": {
                "type": "string",
                "description": "Name of the Key from KeyVault"
              },
              "keyVaultUri": {
                "type": "string",
                "description": "Uri of KeyVault"
              },
              "keyVersion": {
                "type": "string",
                "description": "Version of KeyVault"
              },
              "identity": {
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "userAssignedIdentity": {
                    "type": "string",
                    "description": "ARM ID of user Identity selected for encryption"
                  }
                }
              }
            },
            "description": "Properties to configure keyVault Properties"
          },
          "x-ms-client-name": "KeyVaultProperties",
          "description": "Properties of KeyVault"
        },
        "keySource": {
          "type": "string",
          "description": "Enumerates the possible value of keySource for Encryption",
          "default": "Microsoft.KeyVault",
          "enum": [
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "keySource",
            "modelAsString": false
          }
        },
        "requireInfrastructureEncryption": {
          "type": "boolean",
          "description": "Enable Infrastructure Encryption (Double Encryption)"
        }
      },
      "description": "Properties to configure Encryption"
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the Key from KeyVault"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of KeyVault"
        },
        "keyVersion": {
          "type": "string",
          "description": "Version of KeyVault"
        },
        "identity": {
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "ARM ID of user Identity selected for encryption"
            }
          }
        }
      },
      "description": "Properties to configure keyVault Properties"
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnection.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "privateEndpoint": {
              "description": "The Private Endpoint resource for this Connection.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ARM identifier for Private Endpoint.",
                  "type": "string"
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "Details about the state of the connection.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of the connection.",
                  "enum": [
                    "Pending",
                    "Approved",
                    "Rejected",
                    "Disconnected"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "PrivateLinkConnectionStatus",
                    "modelAsString": true
                  }
                },
                "description": {
                  "description": "Description of the connection state.",
                  "type": "string"
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the Private Endpoint Connection.",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "EndPointProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "description": "The Private Endpoint resource for this Connection.",
          "type": "object",
          "properties": {
            "id": {
              "description": "The ARM identifier for Private Endpoint.",
              "type": "string"
            }
          }
        },
        "privateLinkServiceConnectionState": {
          "description": "Details about the state of the connection.",
          "type": "object",
          "properties": {
            "status": {
              "description": "Status of the connection.",
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PrivateLinkConnectionStatus",
                "modelAsString": true
              }
            },
            "description": {
              "description": "Description of the connection state.",
              "type": "string"
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndPointProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      }
    },
    "ConnectionState": {
      "type": "object",
      "description": "ConnectionState information.",
      "properties": {
        "status": {
          "description": "Status of the connection.",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrivateLinkConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "Result of the list of all private endpoint connections operation.",
      "properties": {
        "value": {
          "description": "A collection of private endpoint connection resources.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Properties of the PrivateEndpointConnection.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "Properties of the PrivateEndpointConnection.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "The Private Endpoint resource for this Connection.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The ARM identifier for Private Endpoint.",
                        "type": "string"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Details about the state of the connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of the connection.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "PrivateLinkConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "description": "Description of the connection state.",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Private Endpoint Connection.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Canceled",
                      "Failed"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "EndPointProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of private endpoint connection resources.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "Information of the private link resource.",
      "properties": {
        "properties": {
          "description": "Properties of the private link resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "groupId": {
              "type": "string"
            },
            "requiredMembers": {
              "type": "array",
              "description": "Required Members",
              "items": {
                "type": "string"
              }
            },
            "requiredZoneNames": {
              "type": "array",
              "description": "Required Zone Names",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource",
          "type": "string"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of PrivateLinkResource",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "description": "Required Members",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "Required Zone Names",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "type": "object",
      "description": "Result of the List private link resources operation.",
      "properties": {
        "value": {
          "description": "A collection of private link resources",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Information of the private link resource.",
            "properties": {
              "properties": {
                "description": "Properties of the private link resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string"
                  },
                  "requiredMembers": {
                    "type": "array",
                    "description": "Required Members",
                    "items": {
                      "type": "string"
                    }
                  },
                  "requiredZoneNames": {
                    "type": "array",
                    "description": "Required Zone Names",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "id": {
                "description": "Fully qualified identifier of the resource.",
                "type": "string"
              },
              "name": {
                "description": "Name of the resource",
                "type": "string"
              },
              "type": {
                "description": "Type of the resource",
                "type": "string"
              }
            }
          }
        },
        "nextLink": {
          "description": "A link for the next page of private link resources.",
          "type": "string"
        }
      }
    },
    "userAssignedIdentityProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "ARM ID of user Identity selected for encryption"
        }
      }
    },
    "NWRuleSetIpRules": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "ipMask": {
          "type": "string",
          "description": "IP Mask"
        },
        "action": {
          "type": "string",
          "description": "The IP Filter Action",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleIPAction",
            "modelAsString": true
          },
          "default": "Allow"
        }
      },
      "description": "Description of NetWorkRuleSet - IpRules resource."
    },
    "Subnet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of Virtual Network Subnet"
        }
      },
      "required": [
        "id"
      ],
      "description": "Properties supplied for Subnet"
    },
    "NWRuleSetVirtualNetworkRules": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "subnet": {
          "description": "Subnet properties",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Resource ID of Virtual Network Subnet"
            }
          },
          "required": [
            "id"
          ]
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Value that indicates whether to ignore missing VNet Service Endpoint"
        }
      },
      "description": "Description of VirtualNetworkRules - NetworkRules resource."
    },
    "NetworkRuleSet": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "NetworkRuleSet properties",
          "x-ms-client-flatten": true,
          "properties": {
            "trustedServiceAccessEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Trusted Service Access is Enabled or not."
            },
            "defaultAction": {
              "type": "string",
              "description": "Default Action for Network Rule Set",
              "enum": [
                "Allow",
                "Deny"
              ],
              "x-ms-enum": {
                "name": "DefaultAction",
                "modelAsString": true
              }
            },
            "virtualNetworkRules": {
              "type": "array",
              "items": {
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "subnet": {
                    "description": "Subnet properties",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource ID of Virtual Network Subnet"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "ignoreMissingVnetServiceEndpoint": {
                    "type": "boolean",
                    "description": "Value that indicates whether to ignore missing VNet Service Endpoint"
                  }
                },
                "description": "Description of VirtualNetworkRules - NetworkRules resource."
              },
              "description": "List VirtualNetwork Rules"
            },
            "ipRules": {
              "type": "array",
              "items": {
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "ipMask": {
                    "type": "string",
                    "description": "IP Mask"
                  },
                  "action": {
                    "type": "string",
                    "description": "The IP Filter Action",
                    "enum": [
                      "Allow"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkRuleIPAction",
                      "modelAsString": true
                    },
                    "default": "Allow"
                  }
                },
                "description": "Description of NetWorkRuleSet - IpRules resource."
              },
              "description": "List of IpRules"
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccessFlag",
                "modelAsString": true
              },
              "default": "Enabled"
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Description of NetworkRuleSet resource."
    },
    "NetworkRuleSetListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "NetworkRuleSet properties",
                "x-ms-client-flatten": true,
                "properties": {
                  "trustedServiceAccessEnabled": {
                    "type": "boolean",
                    "description": "Value that indicates whether Trusted Service Access is Enabled or not."
                  },
                  "defaultAction": {
                    "type": "string",
                    "description": "Default Action for Network Rule Set",
                    "enum": [
                      "Allow",
                      "Deny"
                    ],
                    "x-ms-enum": {
                      "name": "DefaultAction",
                      "modelAsString": true
                    }
                  },
                  "virtualNetworkRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "subnet": {
                          "description": "Subnet properties",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Resource ID of Virtual Network Subnet"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "ignoreMissingVnetServiceEndpoint": {
                          "type": "boolean",
                          "description": "Value that indicates whether to ignore missing VNet Service Endpoint"
                        }
                      },
                      "description": "Description of VirtualNetworkRules - NetworkRules resource."
                    },
                    "description": "List VirtualNetwork Rules"
                  },
                  "ipRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "ipMask": {
                          "type": "string",
                          "description": "IP Mask"
                        },
                        "action": {
                          "type": "string",
                          "description": "The IP Filter Action",
                          "enum": [
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "NetworkRuleIPAction",
                            "modelAsString": true
                          },
                          "default": "Allow"
                        }
                      },
                      "description": "Description of NetWorkRuleSet - IpRules resource."
                    },
                    "description": "List of IpRules"
                  },
                  "publicNetworkAccess": {
                    "description": "This determines if traffic is allowed over public network. By default it is enabled.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccessFlag",
                      "modelAsString": true
                    },
                    "default": "Enabled"
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Description of NetworkRuleSet resource."
          },
          "description": "Result of the List NetworkRuleSet operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet."
        }
      },
      "description": "The response of the List NetworkRuleSet operation."
    },
    "OperationListResult": {
      "type": "object",
      "description": "Result of the request to list ServiceBus operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "description": "List of ServiceBus operations supported by the Microsoft.ServiceBus resource provider.",
          "items": {
            "description": "A Service Bus REST API operation",
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "Operation name: {provider}/{resource}/{operation}"
              },
              "isDataAction": {
                "description": "Indicates whether the operation is a data action",
                "type": "boolean"
              },
              "display": {
                "description": "Display of the operation",
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Resource provider of the operation",
                    "type": "string",
                    "readOnly": true
                  },
                  "resource": {
                    "description": "Resource of the operation",
                    "type": "string",
                    "readOnly": true
                  },
                  "operation": {
                    "description": "Localized friendly name for the operation",
                    "type": "string",
                    "readOnly": true
                  },
                  "description": {
                    "description": "Localized friendly description for the operation",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "origin": {
                "description": "Origin of the operation",
                "type": "string"
              },
              "properties": {
                "description": "Properties of the operation",
                "type": "object",
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "description": "A Service Bus REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "description": "Display of the operation",
          "type": "object",
          "properties": {
            "provider": {
              "description": "Resource provider of the operation",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Resource of the operation",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Localized friendly name for the operation",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Localized friendly description for the operation",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the operation",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display payload",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Resource provider of the operation",
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "description": "Resource of the operation",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "Localized friendly name for the operation",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Localized friendly description for the operation",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SBSubscriptionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of subscriptions resource.",
                "type": "object",
                "properties": {
                  "messageCount": {
                    "readOnly": true,
                    "format": "int64",
                    "type": "integer",
                    "description": "Number of messages."
                  },
                  "createdAt": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "Exact time the message was created."
                  },
                  "accessedAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "Last time there was a receive request to this subscription."
                  },
                  "updatedAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "The exact time the message was updated."
                  },
                  "countDetails": {
                    "readOnly": true,
                    "description": "Message count details",
                    "type": "object",
                    "properties": {
                      "activeMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of active messages in the queue, topic, or subscription."
                      },
                      "deadLetterMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of messages that are dead lettered."
                      },
                      "scheduledMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of scheduled messages."
                      },
                      "transferMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of messages transferred to another queue, topic, or subscription."
                      },
                      "transferDeadLetterMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of messages transferred into dead letters."
                      }
                    }
                  },
                  "lockDuration": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute."
                  },
                  "requiresSession": {
                    "type": "boolean",
                    "description": "Value indicating if a subscription supports the concept of sessions."
                  },
                  "defaultMessageTimeToLive": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                  },
                  "deadLetteringOnFilterEvaluationExceptions": {
                    "type": "boolean",
                    "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
                  },
                  "deadLetteringOnMessageExpiration": {
                    "type": "boolean",
                    "description": "Value that indicates whether a subscription has dead letter support when a message expires."
                  },
                  "duplicateDetectionHistoryTimeWindow": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                  },
                  "maxDeliveryCount": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Number of maximum deliveries."
                  },
                  "status": {
                    "description": "Enumerates the possible values for the status of a messaging entity.",
                    "type": "string",
                    "enum": [
                      "Active",
                      "Disabled",
                      "Restoring",
                      "SendDisabled",
                      "ReceiveDisabled",
                      "Creating",
                      "Deleting",
                      "Renaming",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "EntityStatus",
                      "modelAsString": false
                    }
                  },
                  "enableBatchedOperations": {
                    "type": "boolean",
                    "description": "Value that indicates whether server-side batched operations are enabled."
                  },
                  "autoDeleteOnIdle": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                  },
                  "forwardTo": {
                    "type": "string",
                    "description": "Queue/Topic name to forward the messages"
                  },
                  "forwardDeadLetteredMessagesTo": {
                    "type": "string",
                    "description": "Queue/Topic name to forward the Dead Letter message"
                  },
                  "isClientAffine": {
                    "type": "boolean",
                    "description": "Value that indicates whether the subscription has an affinity to the client id."
                  },
                  "clientAffineProperties": {
                    "description": "Properties specific to client affine subscriptions.",
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "Indicates the Client ID of the application that created the client-affine subscription."
                      },
                      "isDurable": {
                        "type": "boolean",
                        "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not."
                      },
                      "isShared": {
                        "type": "boolean",
                        "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not."
                      }
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Description of subscription resource."
          },
          "description": "Result of the List Subscriptions operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of subscriptions."
        }
      },
      "description": "The response to the List Subscriptions operation."
    },
    "SBSubscription": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of subscriptions resource.",
          "type": "object",
          "properties": {
            "messageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages."
            },
            "createdAt": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Exact time the message was created."
            },
            "accessedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "Last time there was a receive request to this subscription."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The exact time the message was updated."
            },
            "countDetails": {
              "readOnly": true,
              "description": "Message count details",
              "type": "object",
              "properties": {
                "activeMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of active messages in the queue, topic, or subscription."
                },
                "deadLetterMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of messages that are dead lettered."
                },
                "scheduledMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of scheduled messages."
                },
                "transferMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of messages transferred to another queue, topic, or subscription."
                },
                "transferDeadLetterMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of messages transferred into dead letters."
                }
              }
            },
            "lockDuration": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute."
            },
            "requiresSession": {
              "type": "boolean",
              "description": "Value indicating if a subscription supports the concept of sessions."
            },
            "defaultMessageTimeToLive": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
            },
            "deadLetteringOnFilterEvaluationExceptions": {
              "type": "boolean",
              "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
            },
            "deadLetteringOnMessageExpiration": {
              "type": "boolean",
              "description": "Value that indicates whether a subscription has dead letter support when a message expires."
            },
            "duplicateDetectionHistoryTimeWindow": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
            },
            "maxDeliveryCount": {
              "format": "int32",
              "type": "integer",
              "description": "Number of maximum deliveries."
            },
            "status": {
              "description": "Enumerates the possible values for the status of a messaging entity.",
              "type": "string",
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "EntityStatus",
                "modelAsString": false
              }
            },
            "enableBatchedOperations": {
              "type": "boolean",
              "description": "Value that indicates whether server-side batched operations are enabled."
            },
            "autoDeleteOnIdle": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
            },
            "forwardTo": {
              "type": "string",
              "description": "Queue/Topic name to forward the messages"
            },
            "forwardDeadLetteredMessagesTo": {
              "type": "string",
              "description": "Queue/Topic name to forward the Dead Letter message"
            },
            "isClientAffine": {
              "type": "boolean",
              "description": "Value that indicates whether the subscription has an affinity to the client id."
            },
            "clientAffineProperties": {
              "description": "Properties specific to client affine subscriptions.",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "Indicates the Client ID of the application that created the client-affine subscription."
                },
                "isDurable": {
                  "type": "boolean",
                  "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not."
                },
                "isShared": {
                  "type": "boolean",
                  "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not."
                }
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Description of subscription resource."
    },
    "SBSubscriptionProperties": {
      "type": "object",
      "properties": {
        "messageCount": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "Number of messages."
        },
        "createdAt": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Exact time the message was created."
        },
        "accessedAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "Last time there was a receive request to this subscription."
        },
        "updatedAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The exact time the message was updated."
        },
        "countDetails": {
          "readOnly": true,
          "description": "Message count details",
          "type": "object",
          "properties": {
            "activeMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of active messages in the queue, topic, or subscription."
            },
            "deadLetterMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages that are dead lettered."
            },
            "scheduledMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of scheduled messages."
            },
            "transferMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages transferred to another queue, topic, or subscription."
            },
            "transferDeadLetterMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages transferred into dead letters."
            }
          }
        },
        "lockDuration": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute."
        },
        "requiresSession": {
          "type": "boolean",
          "description": "Value indicating if a subscription supports the concept of sessions."
        },
        "defaultMessageTimeToLive": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "deadLetteringOnFilterEvaluationExceptions": {
          "type": "boolean",
          "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
        },
        "deadLetteringOnMessageExpiration": {
          "type": "boolean",
          "description": "Value that indicates whether a subscription has dead letter support when a message expires."
        },
        "duplicateDetectionHistoryTimeWindow": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
        },
        "maxDeliveryCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of maximum deliveries."
        },
        "status": {
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "type": "string",
          "enum": [
            "Active",
            "Disabled",
            "Restoring",
            "SendDisabled",
            "ReceiveDisabled",
            "Creating",
            "Deleting",
            "Renaming",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EntityStatus",
            "modelAsString": false
          }
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "Value that indicates whether server-side batched operations are enabled."
        },
        "autoDeleteOnIdle": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
        },
        "forwardTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the messages"
        },
        "forwardDeadLetteredMessagesTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the Dead Letter message"
        },
        "isClientAffine": {
          "type": "boolean",
          "description": "Value that indicates whether the subscription has an affinity to the client id."
        },
        "clientAffineProperties": {
          "description": "Properties specific to client affine subscriptions.",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Indicates the Client ID of the application that created the client-affine subscription."
            },
            "isDurable": {
              "type": "boolean",
              "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not."
            },
            "isShared": {
              "type": "boolean",
              "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not."
            }
          }
        }
      },
      "description": "Description of Subscription Resource."
    },
    "SBClientAffineProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Indicates the Client ID of the application that created the client-affine subscription."
        },
        "isDurable": {
          "type": "boolean",
          "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not."
        },
        "isShared": {
          "type": "boolean",
          "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not."
        }
      },
      "description": "Properties specific to client affine subscriptions."
    },
    "SBTopicListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
              },
              "location": {
                "type": "string",
                "readOnly": true,
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of topic resource.",
                "type": "object",
                "properties": {
                  "sizeInBytes": {
                    "readOnly": true,
                    "format": "int64",
                    "type": "integer",
                    "description": "Size of the topic, in bytes."
                  },
                  "createdAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "Exact time the message was created."
                  },
                  "updatedAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "The exact time the message was updated."
                  },
                  "accessedAt": {
                    "readOnly": true,
                    "format": "date-time",
                    "type": "string",
                    "description": "Last time the message was sent, or a request was received, for this topic."
                  },
                  "subscriptionCount": {
                    "readOnly": true,
                    "format": "int32",
                    "type": "integer",
                    "description": "Number of subscriptions."
                  },
                  "countDetails": {
                    "readOnly": true,
                    "description": "Message count details",
                    "type": "object",
                    "properties": {
                      "activeMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of active messages in the queue, topic, or subscription."
                      },
                      "deadLetterMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of messages that are dead lettered."
                      },
                      "scheduledMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of scheduled messages."
                      },
                      "transferMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of messages transferred to another queue, topic, or subscription."
                      },
                      "transferDeadLetterMessageCount": {
                        "readOnly": true,
                        "format": "int64",
                        "type": "integer",
                        "description": "Number of messages transferred into dead letters."
                      }
                    }
                  },
                  "defaultMessageTimeToLive": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
                  },
                  "maxSizeInMegabytes": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."
                  },
                  "maxMessageSizeInKilobytes": {
                    "format": "int64",
                    "type": "integer",
                    "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."
                  },
                  "requiresDuplicateDetection": {
                    "type": "boolean",
                    "description": "Value indicating if this topic requires duplicate detection."
                  },
                  "duplicateDetectionHistoryTimeWindow": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
                  },
                  "enableBatchedOperations": {
                    "type": "boolean",
                    "description": "Value that indicates whether server-side batched operations are enabled."
                  },
                  "status": {
                    "description": "Enumerates the possible values for the status of a messaging entity.",
                    "type": "string",
                    "enum": [
                      "Active",
                      "Disabled",
                      "Restoring",
                      "SendDisabled",
                      "ReceiveDisabled",
                      "Creating",
                      "Deleting",
                      "Renaming",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "EntityStatus",
                      "modelAsString": false
                    }
                  },
                  "supportOrdering": {
                    "type": "boolean",
                    "description": "Value that indicates whether the topic supports ordering."
                  },
                  "autoDeleteOnIdle": {
                    "format": "duration",
                    "type": "string",
                    "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
                  },
                  "enablePartitioning": {
                    "type": "boolean",
                    "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."
                  },
                  "enableExpress": {
                    "type": "boolean",
                    "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The type of identity that last modified the resource."
                  }
                }
              }
            },
            "description": "Description of topic resource."
          },
          "description": "Result of the List Topics operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of topics."
        }
      },
      "description": "The response to the List Topics operation."
    },
    "SBTopic": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.EventHub/Namespaces\" or \"Microsoft.EventHub/Namespaces/EventHubs\""
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of topic resource.",
          "type": "object",
          "properties": {
            "sizeInBytes": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Size of the topic, in bytes."
            },
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "Exact time the message was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The exact time the message was updated."
            },
            "accessedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "Last time the message was sent, or a request was received, for this topic."
            },
            "subscriptionCount": {
              "readOnly": true,
              "format": "int32",
              "type": "integer",
              "description": "Number of subscriptions."
            },
            "countDetails": {
              "readOnly": true,
              "description": "Message count details",
              "type": "object",
              "properties": {
                "activeMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of active messages in the queue, topic, or subscription."
                },
                "deadLetterMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of messages that are dead lettered."
                },
                "scheduledMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of scheduled messages."
                },
                "transferMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of messages transferred to another queue, topic, or subscription."
                },
                "transferDeadLetterMessageCount": {
                  "readOnly": true,
                  "format": "int64",
                  "type": "integer",
                  "description": "Number of messages transferred into dead letters."
                }
              }
            },
            "defaultMessageTimeToLive": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
            },
            "maxSizeInMegabytes": {
              "format": "int32",
              "type": "integer",
              "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."
            },
            "maxMessageSizeInKilobytes": {
              "format": "int64",
              "type": "integer",
              "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."
            },
            "requiresDuplicateDetection": {
              "type": "boolean",
              "description": "Value indicating if this topic requires duplicate detection."
            },
            "duplicateDetectionHistoryTimeWindow": {
              "format": "duration",
              "type": "string",
              "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
            },
            "enableBatchedOperations": {
              "type": "boolean",
              "description": "Value that indicates whether server-side batched operations are enabled."
            },
            "status": {
              "description": "Enumerates the possible values for the status of a messaging entity.",
              "type": "string",
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "EntityStatus",
                "modelAsString": false
              }
            },
            "supportOrdering": {
              "type": "boolean",
              "description": "Value that indicates whether the topic supports ordering."
            },
            "autoDeleteOnIdle": {
              "format": "duration",
              "type": "string",
              "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
            },
            "enablePartitioning": {
              "type": "boolean",
              "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."
            },
            "enableExpress": {
              "type": "boolean",
              "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The type of identity that last modified the resource."
            }
          }
        }
      },
      "description": "Description of topic resource."
    },
    "SBTopicProperties": {
      "type": "object",
      "properties": {
        "sizeInBytes": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "Size of the topic, in bytes."
        },
        "createdAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "Exact time the message was created."
        },
        "updatedAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The exact time the message was updated."
        },
        "accessedAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "Last time the message was sent, or a request was received, for this topic."
        },
        "subscriptionCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Number of subscriptions."
        },
        "countDetails": {
          "readOnly": true,
          "description": "Message count details",
          "type": "object",
          "properties": {
            "activeMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of active messages in the queue, topic, or subscription."
            },
            "deadLetterMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages that are dead lettered."
            },
            "scheduledMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of scheduled messages."
            },
            "transferMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages transferred to another queue, topic, or subscription."
            },
            "transferDeadLetterMessageCount": {
              "readOnly": true,
              "format": "int64",
              "type": "integer",
              "description": "Number of messages transferred into dead letters."
            }
          }
        },
        "defaultMessageTimeToLive": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "maxSizeInMegabytes": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."
        },
        "maxMessageSizeInKilobytes": {
          "format": "int64",
          "type": "integer",
          "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."
        },
        "requiresDuplicateDetection": {
          "type": "boolean",
          "description": "Value indicating if this topic requires duplicate detection."
        },
        "duplicateDetectionHistoryTimeWindow": {
          "format": "duration",
          "type": "string",
          "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "Value that indicates whether server-side batched operations are enabled."
        },
        "status": {
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "type": "string",
          "enum": [
            "Active",
            "Disabled",
            "Restoring",
            "SendDisabled",
            "ReceiveDisabled",
            "Creating",
            "Deleting",
            "Renaming",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EntityStatus",
            "modelAsString": false
          }
        },
        "supportOrdering": {
          "type": "boolean",
          "description": "Value that indicates whether the topic supports ordering."
        },
        "autoDeleteOnIdle": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
        },
        "enablePartitioning": {
          "type": "boolean",
          "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."
        },
        "enableExpress": {
          "type": "boolean",
          "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."
        }
      },
      "description": "The Topic Properties definition."
    }
  },
  "parameters": {}
}